{"version":3,"file":"App-8b2140c6.js","sources":["../../src/components/HuntLib/TeamListDisplay.tsx","../../src/components/HuntLib/SelectFactionDisplay.tsx","../../src/components/HuntLib/TeamPage.tsx","../../src/images/error.png","../../src/components/Error.tsx","../../src/App.util.ts","../../src/components/BattleBackground.tsx","../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../node_modules/memoize-one/dist/memoize-one.esm.js","../../node_modules/react-window/dist/index.esm.js","../../src/components/PrepDisplay/PvPLobbyDisplay.tsx","../../src/components/CutsceneDialogBox.tsx","../../src/components/MapDisplay/utils.ts","../../src/components/PrepDisplay/PrepDisplay.tsx","../../src/components/FactionScoreTotalsDisplay.tsx","../../src/components/SpeedrunLeaderboardSummary.tsx","../../src/components/Tabs.tsx","../../src/components/PrepDisplay/BattleControl.tsx","../../src/components/PrepDisplay/BattleStatus.tsx","../../src/components/DeckCollection/DeckCardDisplay.tsx","../../src/components/DeckCollection/CollectionDisplay.tsx","../../src/components/DeckCollection/DeckStats.tsx","../../src/components/DeckCollection/PriorityCard.tsx","../../src/components/DeckCollection/DeckDisplay.tsx","../../src/components/ZoomedCardDisplay.tsx","../../src/stores/DeckbuildingStore.ts","../../src/components/DeckCollection/DeckSidebar.tsx","../../src/components/PrepDisplay/DeckSelection.tsx","../../src/components/PrepDisplay/Friends.tsx","../../src/components/PrepDisplay/PrepFactionDisplay.tsx","../../src/components/MasteriesExplorer.tsx","../../src/components/PrepDisplay/PrepMasteries.tsx","../../src/components/PrepDisplay/SubpuzzleSelection.tsx","../../src/components/PrepDisplay/PrepRight.tsx","../../src/pages/PrepPage.tsx","../../src/stores/UserLogStore.ts","../../src/components/KeroFishyAnim.tsx","../../src/components/KerodosAnim.tsx","../../src/components/AIBattlerDisplay.tsx","../../src/components/CutsceneUI.tsx","../../src/components/GameHotkeys.ts","../../src/components/StepButton.tsx","../../src/components/HandDisplay/DeckInfo.tsx","../../src/components/HandDisplay/HandCardsDisplay.tsx","../../src/components/HandDisplay/HandDisplay.tsx","../../src/components/Keyframe/Mask.tsx","../../src/components/Keyframe/MessagePopover.tsx","../../src/components/Keyframe/Keyframe.tsx","../../../interactive/src/engine/types/presence.ts","../../src/components/Presence/utils.ts","../../src/components/Presence/Cursor.tsx","../../src/components/Presence/CursorClick.tsx","../../src/components/Presence/useMouseMove.ts","../../src/components/Presence/Presence.tsx","../../src/components/SideFieldDisplay/CardActionsDisplay.tsx","../../src/components/SideFieldDisplay/GameLog.tsx","../../src/components/SideFieldDisplay/GameMenu.tsx","../../src/components/SideFieldDisplay/GameSettings.tsx","../../src/components/SideFieldDisplay/LeftOfFieldDisplay.tsx","../../src/components/SideFieldDisplay/SpeedrunTimer.tsx","../../src/components/SideFieldDisplay/FieldTeamDataDisplay.tsx","../../src/components/SideFieldDisplay/RightOfFieldDisplay.tsx","../../src/components/SolvedModal.tsx","../../src/pages/GamePageUtil/useGameEnd.ts","../../src/pages/GamePageUtil/useUpdatesQueue.ts","../../src/pages/GamePageUtil/useGameUpdates.ts","../../src/pages/GamePageUtil/useInitSendStep.ts","../../src/pages/GamePageUtil/useTutorialKeyframes.ts","../../src/pages/GamePage.tsx","../../src/audio/rock-lobster.mp3","../../src/audio/sfx.mp3","../../node_modules/howler/dist/howler.js","../../src/pages/GamePageUtil/useAudioEffect.ts","../../src/pages/StartPrepPage.tsx","../../src/pages/StartBattlePage.tsx","../../src/pages/StartVictoryPage.tsx","../../src/pages/DeckCollectionPage.tsx","../../src/stores/MasteryTreeStore.ts","../../src/components/SidebarFactionDisplay.tsx","../../src/pages/MasteryTreePage.tsx","../../src/components/MapDisplay/Clickable.tsx","../../src/components/MapDisplay/ClickableSmall.tsx","../../src/components/MapDisplay/MapDisplay.tsx","../../src/components/MapDisplay/ParallaxBackground.tsx","../../src/pages/MapPage.tsx","../../src/pages/AdminPage.tsx","../../src/pages/BigBoardPage.tsx","../../src/images/keros-notes.png","../../src/pages/KerosNotesPage.tsx","../../src/pages/UnlockPage.tsx","../../src/App.tsx"],"sourcesContent":["import { useEffect, useMemo } from \"react\";\nimport { Spinner } from \"components/Loading\";\nimport Tooltip from \"components/Tooltip\";\nimport TeamDisplayNameDisplay from \"components/TeamDisplayNameDisplay\";\nimport FactionIcon from \"components/FactionIcon\";\nimport { speedrunTimeToString } from \"game-server/global-updates\";\nimport { TeamSummaryState } from \"game-server/monitoring\";\nimport { SYMBOL_INFO } from \"engine/types/card-data\";\nimport { Faction, factionToColor } from \"engine/types/factions\";\nimport {\n  FACTIONS_MASTERY_ID,\n  SPEEDRUN_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { Link, Navigate, useParams, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\nimport settings from \"settings\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport {\n  useIsAdmin,\n  useServerInteractionStore,\n} from \"stores/ServerInteractionStore\";\nimport \"./TeamListDisplay.css\";\n\nfunction teamToSortKey(\n  team: TeamSummaryState,\n  isFaction: boolean,\n  isSpeedrun: boolean\n): number[] {\n  const {\n    completionTime = Infinity,\n    factionScoreContribution,\n    lastSolveTime = Infinity,\n    numSolves,\n    speedrunInfo: { totalTime, numTimes },\n    teamId,\n  } = team;\n  return [\n    -(isFaction ? factionScoreContribution : 0),\n    -(isSpeedrun ? numTimes : 0),\n    isSpeedrun ? totalTime : 0,\n    completionTime,\n    -numSolves,\n    lastSolveTime,\n    isNaN(+teamId) ? 0 : +teamId,\n  ];\n}\n\nexport function useSortedTeams(\n  faction: Faction | null,\n  isSpeedrun: boolean,\n  includeHidden?: boolean,\n  freezeAfterHuntEnd?: boolean\n) {\n  const liveTeams = useClientGlobalStateStore(\n    (state) => state.globalState.teams\n  );\n\n  return useMemo(() => {\n    const teams =\n      ((freezeAfterHuntEnd ?? false) || settings.isPosthunt) &&\n      Object.keys(settings.teamsSnapshot).length > 0\n        ? settings.teamsSnapshot\n        : liveTeams;\n    return Object.values(teams)\n      .filter((team) => {\n        if (team.isHidden && !(includeHidden ?? false)) return false;\n        if (faction !== null)\n          return team.faction === faction && team.factionScoreContribution > 0;\n        if (isSpeedrun) return team.speedrunInfo.numTimes > 0;\n        return true;\n      })\n      .sort((a, b) => {\n        const aKey = teamToSortKey(a, faction !== null, isSpeedrun);\n        const bKey = teamToSortKey(b, faction !== null, isSpeedrun);\n        for (let i = 0; i < aKey.length; i++) {\n          if (aKey[i] !== bKey[i]) return aKey[i] - bKey[i];\n        }\n        return a.displayName.localeCompare(b.displayName);\n      });\n  }, [liveTeams, faction, isSpeedrun, includeHidden, freezeAfterHuntEnd]);\n}\n\nexport function SpeedrunNote({ headerText }: { headerText: string }) {\n  // TODO: improve this message?\n  return (\n    <Tooltip text=\"Not all subpuzzles count toward the total time.\">\n      <Twemoji>{headerText} 🛈</Twemoji>\n    </Tooltip>\n  );\n}\n\nconst TeamListDisplay = () => {\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const serverInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  )();\n  const teamId =\n    serverInterfaceController === null\n      ? null\n      : serverInterfaceController.getTeamId();\n  const { setNeedAdmin, setNeedTeamList } = useGlobalSubscriptionStore();\n  const isAdmin = useIsAdmin() ?? false;\n  const subscribedTeam = useSubscribedTeam();\n  const { mode } = useParams();\n  const isFaction = mode && Object.values<string>(Faction).includes(mode);\n  const isSpeedrun = mode === \"speedrun\";\n  const faction: Faction | null = isFaction ? (mode as Faction) : null;\n  const sortedTeams = useSortedTeams(faction, isSpeedrun, false, true);\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (!isAdmin) return;\n    setNeedAdmin(true);\n  }, [isAdmin, setNeedAdmin]);\n\n  useEffect(() => {\n    setNeedTeamList(true);\n    // Don't unset on unmount to prevent extraneous OVERRIDE_STATEs.\n    // We don't have unsubscribe anyway so unsetting is strictly worse.\n  }, [setNeedTeamList]);\n\n  if (subscribedTeam === null) return <Spinner size={48} />;\n  const { masteries, factionScores: factionTotals } = subscribedTeam;\n  const factionsEnabled =\n    settings.isPublicAccess || masteries[FACTIONS_MASTERY_ID].isEnabled;\n  const speedrunsEnabled =\n    settings.isPublicAccess || masteries[SPEEDRUN_MASTERY_ID].isEnabled;\n  if (\n    (isFaction && !factionsEnabled) ||\n    (isSpeedrun && !speedrunsEnabled) ||\n    (mode && !isFaction && !isSpeedrun)\n  ) {\n    return <Navigate to=\"/teams\" replace={true} />;\n  }\n\n  const timeOpts = {\n    hourCycle: \"h23\",\n    timeZoneName: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  } as const;\n\n  const factionColor = (faction: Faction, level: number) =>\n    SYMBOL_INFO[factionToColor(faction)].color(level);\n\n  const tabsDom = [];\n\n  if (factionsEnabled || speedrunsEnabled)\n    tabsDom.push(\n      <Link\n        key=\"solves\"\n        to={{ pathname: \"/teams\", search: searchParams.toString() }}\n        replace={true}\n      >\n        <h2 className={isFaction || isSpeedrun ? \"\" : \"highlight\"}>Solves</h2>\n      </Link>\n    );\n\n  if (speedrunsEnabled)\n    tabsDom.push(\n      <Link\n        key=\"speed\"\n        to={{ pathname: \"/teams/speedrun\", search: searchParams.toString() }}\n        replace={true}\n      >\n        <h2 className={isSpeedrun ? \"highlight\" : \"\"}>Speed</h2>\n      </Link>\n    );\n\n  if (factionsEnabled)\n    tabsDom.push(\n      ...Object.values(Faction)\n        .sort((fac1, fac2) => factionTotals[fac2] - factionTotals[fac1])\n        .map((fac) => (\n          <Link\n            key={fac}\n            to={{\n              pathname: fac === faction ? \"/teams\" : `/teams/${fac}`,\n              search: searchParams.toString(),\n            }}\n            className=\"teams-faction\"\n            replace={true}\n          >\n            <h2\n              className={fac === faction ? \"highlight\" : \"\"}\n              style={{ backgroundColor: factionColor(fac, 600) }}\n            >\n              <FactionIcon faction={fac} />\n            </h2>\n          </Link>\n        ))\n    );\n\n  const teamsDom = sortedTeams.map((team, i) => {\n    const {\n      numSolves,\n      completionTime,\n      factionScoreContribution,\n      speedrunInfo: { numTimes, totalTime },\n    } = team;\n    const score = (() => {\n      if (isFaction) return factionScoreContribution;\n      if (isSpeedrun) return speedrunTimeToString(totalTime);\n      if (!completionTime) return null;\n      return new Date(completionTime).toLocaleString([], timeOpts);\n    })();\n    return (\n      <tr\n        className={`${\n          teamId !== null && team.teamId === teamId ? \"current-team\" : \"\"\n        }`}\n        key={team.teamId}\n      >\n        <td>\n          {completionTime === undefined ? null : (\n            <Twemoji tag=\"span\">✈️ </Twemoji>\n          )}\n          {i + 1}\n        </td>\n        <td>\n          <TeamDisplayNameDisplay teamData={team} />\n          {(() => {\n            // If impersonating, we need to stop impersonating\n            // first, otherwise the impersonate button doesn't work.\n            if (!isAdmin || settings.isImpersonate) return null;\n            const adminData = teamAdminData[team.teamId];\n            if (adminData === undefined) return null;\n            return (\n              <>\n                {\" \"}\n                (\n                <a\n                  href={`${settings.djangoBaseUrl}impersonate/${adminData.userId}`}\n                >\n                  impersonate\n                </a>\n                )\n              </>\n            );\n          })()}\n        </td>\n        <td>{isSpeedrun ? numTimes : numSolves}</td>\n        <td>{score}</td>\n      </tr>\n    );\n  });\n\n  const thStyle = {\n    backgroundColor: faction ? factionColor(faction, 900) : undefined,\n  };\n  return (\n    <>\n      <div className=\"top-more-actions\" />\n      <h1>Team Scoreboard</h1>\n      <main>\n        {tabsDom.length === 0 ? null : (\n          <div className=\"teams-faction-display\">{tabsDom}</div>\n        )}\n        <table className=\"list-table\">\n          <colgroup>\n            <col style={{ width: \"10%\" }} />\n            <col style={{ width: \"60%\" }} />\n            <col style={{ width: \"10%\" }} />\n            <col style={{ width: \"20%\" }} />\n          </colgroup>\n          <tbody>\n            <tr>\n              <th style={thStyle}>Rank</th>\n              <th style={thStyle}>Team</th>\n              <th style={thStyle}>Solves</th>\n              <th style={thStyle}>\n                {faction ? (\n                  <>\n                    {factionTotals[faction]} <FactionIcon faction={faction} />\n                  </>\n                ) : isSpeedrun ? (\n                  <SpeedrunNote headerText=\"Total time\" />\n                ) : (\n                  \"Finish time\"\n                )}\n              </th>\n            </tr>\n            {teamsDom}\n          </tbody>\n        </table>\n      </main>\n    </>\n  );\n};\n\nexport default TeamListDisplay;\n","import { useState } from \"react\";\nimport Twemoji from \"react-twemoji\";\n\nimport {\n  Faction,\n  capitalize,\n  FACTION_RANK_THRESHOLDS,\n  getFactionRank,\n  factionToColor,\n} from \"engine/types/factions\";\nimport { SYMBOL_INFO } from \"engine/types/card-data\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { WSReqType } from \"game-server/ws\";\nimport { TeamSummaryState } from \"game-server/monitoring\";\n\nimport { useServerInteractionStore } from \"stores/ServerInteractionStore\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport FactionIcon from \"components/FactionIcon\";\nimport { FactionRankDisplay } from \"components/TeamDisplayNameDisplay\";\nimport { Spinner } from \"components/Loading\";\n\nimport \"./SelectFactionDisplay.css\";\n\nfunction SelectFactionDisplay({ teamData }: { teamData: TeamSummaryState }) {\n  const subscribedTeam = useSubscribedTeam();\n  const serverInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  )();\n  const [userSelectedFaction, setSelectedFaction] = useState<Faction | null>(\n    null\n  );\n\n  if (subscribedTeam === null || serverInterfaceController === null)\n    return <Spinner inline={true} />;\n\n  const {\n    faction: teamFaction,\n    factionScoreContributions,\n    masteries,\n  } = subscribedTeam;\n\n  if (!masteries[FACTIONS_MASTERY_ID].isEnabled) return null;\n\n  const isMyTeam = teamData.teamId === subscribedTeam.teamId;\n  const selectedFaction = isMyTeam\n    ? userSelectedFaction ?? teamFaction\n    : teamData.faction;\n  const selectedFactionScore = isMyTeam\n    ? selectedFaction === null\n      ? 0\n      : factionScoreContributions[selectedFaction]\n    : teamData.factionScoreContribution;\n  const selectedFactionRank = getFactionRank(selectedFactionScore);\n  const nextRankThreshold =\n    FACTION_RANK_THRESHOLDS[selectedFactionRank] ?? null;\n  const factionColor = (faction: Faction, level: number) =>\n    SYMBOL_INFO[factionToColor(faction)].color(level);\n\n  const factionsDom = Object.values(Faction).map((faction) => {\n    const isSelected = selectedFaction === faction;\n    return (\n      <h2\n        key={faction}\n        className={`select-faction-faction${isSelected ? \" highlight\" : \"\"}${\n          isMyTeam ? \" selectable\" : \"\"\n        }`}\n        onClick={\n          isMyTeam\n            ? () =>\n                setSelectedFaction(faction === selectedFaction ? null : faction)\n            : undefined\n        }\n        style={{ backgroundColor: factionColor(faction, 600) }}\n      >\n        <FactionIcon faction={faction} />\n        {capitalize(faction)}\n      </h2>\n    );\n  });\n  const factionDetailsDom = (() => {\n    if (selectedFaction === null)\n      return (\n        <>\n          <p>\n            You can align with a faction. When you do, any points you earn from\n            battle also get added to your faction&apos;s points. The more points\n            you earn for your faction, the higher your faction rank, and the\n            higher your rank, the more icons appear next to your team name!\n          </p>\n          <p>\n            (You can change your faction any time you have the Spark of\n            Inspiration mastery activated, but points you gain for one faction\n            don&apos;t carry over to another.)\n          </p>\n        </>\n      );\n    switch (selectedFaction) {\n      case Faction.BOARS:\n        return (\n          <>\n            <p>\n              Dryads? Dinos? RUBBISH! All those BACKWARDS TOP-DWELLERS do is SIT\n              on their BUMS all day and take up precious CAVE-SPACE instead of\n              PUTTING &apos;em LAND to WORK! Now down here, we do things RIGHT!\n              Geyser pumps at every corner, hydroboarnics UP to the CEILING,\n              AUTOMATION EVERYWHERE because we KNOW what MATTERS and that&apos;s\n              EFFICIENCY! And BOARRIES!\n            </p>\n            <p>\n              So what&apos;s there to CHOOSE? STEAM &apos;em PUMPS, CRANK\n              &apos;em GEARS, DEFEND our BOARDER from those dastardly BEES\n              because the CAVE needs BOAR and BOAR needs YOU!\n            </p>\n          </>\n        );\n      case Faction.COWS:\n        return (\n          <>\n            <p>\n              The Cow Faction has little need for outsiders, of course, but in\n              times like these we&apos;re willing to make some exceptions. See,\n              word has come by that a sinister force threatens the safety of\n              this cave. Naturally, this cave must be protected, yet on whom\n              else but us Cows would this duty befall?\n            </p>\n            <p>\n              Obviously, the other paltry inhabitants of this cave remain\n              ignorant of this threat. Not that they would make much of a\n              difference, clearly, but they do like to get in our way. Aid us,\n              and perhaps you might be worth enough to join us for\n              cheese-tasting someday.\n            </p>\n            <p style={{ textAlign: \"right\" }}>\n              — Signed, Grand Secretariat of the Bovine Folk, Head Production\n              Manager of the Western and Southern Creameries, Founder of the\n              Diplomatic Association of Pasture Enlargement and Other\n              Cave-Related Matters, Director of the Critically Acclaimed Moovie\n              &ldquo;Herd: A Cattle Story&rdquo; and Ambassador to the Royal Cow\n              Academy, Butterton Moo.\n            </p>\n          </>\n        );\n      case Faction.BEES:\n        return (\n          <>\n            <p>\n              Hey, thanks for buzzzzing by! Here at the hive, we&apos;re all\n              about the A Bee Cs and the 1 2 Trees! Yes, T, R, E, E, S! You\n              won&apos;t beelieve how much H, O, N, E, Y drips off the trees\n              every day, it&apos;s a struggle buggle to collect &apos;em all!\n              Anyway, I gotta zip off, there&apos;s just so much H, O, N, E, Y\n              to collect! Hope to seeya around!\n            </p>\n            <p>\n              What, flowers? Oh, you&apos;ll wanna ask the D, R, Y, A, Ds for\n              that. We don&apos;t care much for flowers around here!\n            </p>\n          </>\n        );\n      case Faction.DINOSAURS:\n        return (\n          <>\n            <p>\n              I&apos;ll have you know that this cave ain&apos;t what it used to\n              be! Back in the day, when we still called the shots, things made a\n              mite more sense. We&apos;d divvy up the Foods &apos;mongst the\n              Factions, and, if you can picture it, we had more Pie to go around\n              than you could shake a stick at!\n            </p>\n            <p>\n              But those days have gone the way of the dodo, and now all them\n              young bucks know how to do is bicker and squabble, and them cows,\n              oh my stars! Struttin&apos; round like it ain&apos;t nobody&apos;s\n              business, not a lick of respect for us Dinosaurs who busted our\n              tails to build this place up. If you fancy yourselves any better,\n              join us and help get this cave back up to its former glory!\n            </p>\n          </>\n        );\n      case Faction.DRYADS:\n        return (\n          <>\n            <Twemoji tag=\"p\">\n              ...shrieks, cries... ...corruption spreads... 🍂 ...the flowers\n              see... 🌼 ...the trees whisper...\n            </Twemoji>\n            <Twemoji tag=\"p\">\n              ...an ancient evil... ...a last stand... 🌵 ...death,\n              destruction... ...our children, slaves... 🥀\n            </Twemoji>\n            <Twemoji tag=\"p\">\n              ...must... ...resist... 🌺 ...help accepted...\n            </Twemoji>\n          </>\n        );\n    }\n  })();\n  const factionActionDom = (() => {\n    if (!isMyTeam) {\n      if (selectedFaction === null)\n        return \"This team is not aligned with a faction yet.\";\n      return `This team is currently aligned with the ${capitalize(\n        selectedFaction\n      )}.`;\n    }\n    if (selectedFaction !== null && selectedFaction !== teamFaction)\n      return (\n        <a\n          className=\"btn\"\n          href=\"#\"\n          onClick={(evt) => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.SET_FACTION,\n              faction: selectedFaction,\n            });\n            evt.preventDefault();\n          }}\n        >\n          Align with the {capitalize(selectedFaction)}\n        </a>\n      );\n    if (teamFaction === null)\n      return \"You’re not aligned with a faction yet. Select a faction to learn more!\";\n    return `You are currently aligned with the ${capitalize(teamFaction)}.`;\n  })();\n  const factionScoreDom = (() => {\n    if (selectedFaction === null || selectedFactionScore === 0) return null;\n    return (\n      <>\n        <div>\n          <b>Score</b>\n          {selectedFactionScore} <FactionIcon faction={selectedFaction} />\n        </div>\n        <div>\n          <b>Rank</b>\n          {selectedFactionRank === 0 ? (\n            \"None\"\n          ) : (\n            <FactionRankDisplay\n              faction={selectedFaction}\n              factionRank={selectedFactionRank}\n            />\n          )}\n        </div>\n        <div>\n          <b>Next rank</b>\n          {nextRankThreshold === null ? (\n            \"(MAX!)\"\n          ) : (\n            <>\n              {nextRankThreshold} <FactionIcon faction={selectedFaction} />\n            </>\n          )}\n        </div>\n      </>\n    );\n  })();\n\n  return (\n    <div className=\"select-faction-display\">\n      <div>\n        <h2>Faction</h2>\n        {factionsDom}\n      </div>\n      <div>\n        <div className=\"select-faction-actions\">\n          <div>{factionActionDom}</div>\n          {factionScoreDom}\n        </div>\n        <div\n          className=\"select-faction-blurb\"\n          style={{\n            backgroundColor:\n              selectedFaction === null\n                ? \"var(--tray-bg-color)\"\n                : factionColor(selectedFaction, 900),\n          }}\n        >\n          {factionDetailsDom}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectFactionDisplay;\n","import { GlobalUpdatesScopeType } from \"game-server/global-updates\";\nimport settings from \"settings\";\nimport TeamDisplayNameDisplay from \"components/TeamDisplayNameDisplay\";\nimport { PuzzleLink } from \"components/Link\";\nimport { Spinner, LargeSpinner } from \"components/Loading\";\nimport { SPEEDRUN_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  isUsedForGlobalSpeedrunTime,\n} from \"engine/puzzles/puzzle-data\";\nimport Globals from \"Globals\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n  useSubscribedTeamMembers,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInteractionStore } from \"stores/ServerInteractionStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { useUserPreferencesStore } from \"stores/UserPreferencesStore\";\nimport SelectFactionDisplay from \"./SelectFactionDisplay\";\nimport { SpeedrunNote } from \"./TeamListDisplay\";\nimport \"./TeamPage.css\";\n\nfunction TeamPage() {\n  const { djangoBaseUrl } = settings;\n  const liveTeams = useClientGlobalStateStore(\n    (state) => state.globalState.teams\n  );\n  const teams =\n    settings.isPosthunt && Object.keys(settings.teamsSnapshot).length > 0\n      ? settings.teamsSnapshot\n      : liveTeams;\n  const { setNeedTeamList } = useGlobalSubscriptionStore();\n  const subscribedTeam = useSubscribedTeam();\n  const { teamName } = useParams();\n  const team =\n    Object.values(teams).find((team) => team.displayName == teamName) ??\n    Object.values(liveTeams).find((team) => team.displayName == teamName) ??\n    null;\n  const teamId = team?.teamId ?? null;\n  const subscribedTeamMembers = useSubscribedTeamMembers(teamId);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const serverInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  )();\n  const areTeamsLoaded = Object.keys(liveTeams).length > 0;\n  const showSubpuzzles = useUserPreferencesStore(\n    (state) => state.showSubpuzzles\n  );\n  const setShowSubpuzzles = useUserPreferencesStore(\n    (state) => state.setShowSubpuzzles\n  );\n\n  useEffect(() => {\n    setNeedTeamList(true);\n    // Don't unset on unmount to prevent extraneous OVERRIDE_STATEs.\n    // We don't have unsubscribe anyway so unsetting is strictly worse.\n  }, [setNeedTeamList]);\n\n  useEffect(() => {\n    // In posthunt, we use members from a snapshot.\n    if (settings.isPosthunt) return;\n    if (serverInterfaceController === null) return;\n    if (teamId === null) return;\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.TEAM_MEMBERS,\n      teamId,\n    });\n  }, [serverInterfaceController, teamId]);\n\n  useEffect(() => {\n    if (!areTeamsLoaded) return;\n    if (team !== null) return;\n    Globals.toastr.error(`Team “${teamName}” not found.`);\n    navigate({\n      pathname: \"../teams\",\n      search: searchParams.toString(),\n    });\n  }, [areTeamsLoaded, team, teamName, navigate, searchParams]);\n\n  if (!areTeamsLoaded) return <LargeSpinner />;\n  if (team === null) return null;\n\n  const timeOpts = {\n    hourCycle: \"h23\",\n    timeZoneName: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  } as const;\n\n  const duration = (secs: number) => {\n    secs = Math.max(Math.floor(secs / 1000), 0);\n    const hours = Math.floor(secs / (60 * 60));\n    secs -= hours * 60 * 60;\n    const mins = Math.floor(secs / 60);\n    secs -= mins * 60;\n    if (hours > 0) return `${hours}h${mins}m`;\n    if (mins > 0) return `${mins}m${secs}s`;\n    return `${secs}s`;\n  };\n\n  const solves = (() => {\n    // We don't have information about cross-team solves yet...\n    if (!subscribedTeam || subscribedTeam.teamId !== team.teamId) return null;\n    const { puzzles, battleGroups, masteries } = subscribedTeam;\n    const speedrunsEnabled = masteries[SPEEDRUN_MASTERY_ID].isEnabled;\n    const solveRow = (\n      puzName: string,\n      displayName: string,\n      speedrunTime: number,\n      subpuzzle?: boolean,\n      unused?: boolean\n    ) => {\n      const unlockTime = puzzles[puzName].unlockTime ?? 0;\n      const solveTime = puzzles[puzName].solveTime ?? 0;\n      const hasAnswer = puzzles[puzName].hasAnswer ?? false;\n      const className = [\n        subpuzzle ? \"team-solves-subpuzzle\" : [],\n        speedrunsEnabled && unused ? \"team-solves-unused\" : [],\n      ];\n      const speedrunText = (() => {\n        if (speedrunTime === 0) return null;\n        const text = duration(speedrunTime);\n        if (unused) return `(${text})`;\n        return text;\n      })();\n      return (\n        <tr key={puzName} className={className.flat().join(\" \")}>\n          <td>\n            <PuzzleLink battleGroupName={puzName} hasAnswer={hasAnswer}>\n              {displayName}\n            </PuzzleLink>\n          </td>\n          {speedrunsEnabled ? <td>{speedrunText}</td> : null}\n          <td>{new Date(unlockTime).toLocaleString([], timeOpts)}</td>\n          <td>{duration(solveTime - unlockTime)}</td>\n          <td>{new Date(solveTime).toLocaleString([], timeOpts)}</td>\n        </tr>\n      );\n    };\n    const rows = Object.keys(battleGroups)\n      .filter((puzName) => !battleGroups[puzName].isCutscene)\n      .filter((puzName) => puzzles[puzName]?.solveTime)\n      .sort(\n        (p1, p2) => (puzzles[p1].solveTime ?? 0) - (puzzles[p2].solveTime ?? 0)\n      )\n      .flatMap((puzName) => {\n        const subpuzzles = [PUZ_NAME_MASTERY_TREE].includes(puzName)\n          ? []\n          : Object.values(puzzles)\n              .filter(\n                (puzzle) =>\n                  puzzle.battleGroupName === puzName &&\n                  puzzle.puzName !== puzName\n              )\n              .sort(({ order: order1 }, { order: order2 }) => order1 - order2);\n        let speedrunTotal = 0;\n        if (subpuzzles.length === 0)\n          speedrunTotal = puzzles[puzName].speedrunTime ?? 0;\n        const rows = subpuzzles.map(\n          ({ puzName, battleGroupName, speedrunTime, solveTime }, i) => {\n            if (solveTime === undefined) return null;\n            const used = isUsedForGlobalSpeedrunTime(\n              puzName,\n              battleGroupName,\n              false\n            );\n            if (used) speedrunTotal += speedrunTime ?? 0;\n            if (!showSubpuzzles) return null;\n            return solveRow(\n              puzName,\n              `#${i + 1}`,\n              speedrunTime ?? 0,\n              true,\n              !used\n            );\n          }\n        );\n        rows.unshift(\n          solveRow(puzName, battleGroups[puzName].displayName, speedrunTotal)\n        );\n        return rows;\n      });\n    if (rows.length === 0) return null;\n    return (\n      <table className=\"list-table team-solves-table\">\n        <thead>\n          <tr>\n            <th>\n              <h2>Solves</h2>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => setShowSubpuzzles(e.target.checked)}\n                  checked={showSubpuzzles}\n                />{\" \"}\n                Show subpuzzles\n              </label>\n            </th>\n            {speedrunsEnabled ? (\n              <th>{<SpeedrunNote headerText=\"Best time\" />}</th>\n            ) : null}\n            <th>Unlock time</th>\n            <th>Time to solve</th>\n            <th>Solve time</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  })();\n  const actions =\n    !settings.isPosthunt &&\n    subscribedTeam &&\n    subscribedTeam.teamId === team.teamId ? (\n      <>\n        <a href={`${djangoBaseUrl}edit-team`} className=\"btn\">\n          Edit team members\n        </a>{\" \"}\n        <a href={`${djangoBaseUrl}password-change`} className=\"btn\">\n          Change password\n        </a>\n      </>\n    ) : null;\n\n  return (\n    <>\n      <div className=\"top-more-actions\">{actions}</div>\n      <h1>\n        <TeamDisplayNameDisplay teamData={team} noLink={true} />\n      </h1>\n      <main style={{ display: \"flex\", gap: \"2.5em\", flexDirection: \"column\" }}>\n        {subscribedTeamMembers === null ? (\n          <Spinner inline={true} />\n        ) : (\n          subscribedTeamMembers.members?.join(\", \")\n        )}\n        <SelectFactionDisplay teamData={team} />\n        {solves}\n      </main>\n    </>\n  );\n}\n\nexport default TeamPage;\n","export default \"__VITE_ASSET__365e533b__\"","import settings from \"settings\";\nimport errorPng from \"images/error.png\";\nimport { useRouteError, isRouteErrorResponse } from \"react-router-dom\";\n\nexport function Error() {\n  const error = useRouteError();\n  const is404 = isRouteErrorResponse(error) && error.status === 404;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"24px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        position: \"fixed\",\n        inset: \"0\",\n      }}\n    >\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `\n.errorthing { animation: errorthing 5s ease-in-out infinite; }\n\n@keyframes errorthing {\n0% { filter: sepia(0.25) saturate(0); }\n10% { filter: sepia(0.75) saturate(0.25); }\n25% { filter: sepia(0.25) saturate(0.75); }\n50% { filter: sepia(0) saturate(0.5); }\n100% { filter: sepia(0.25) saturate(0); }\n}\n        `,\n        }}\n      />\n      <h1>{is404 ? \"Page not found\" : \"Something went wrong\"}</h1>\n      <a href={`${settings.djangoBaseUrl}puzzles`}>\n        <img src={errorPng} className=\"errorthing\" />\n      </a>\n      <h4 style={{ border: \"none\" }}>\n        You are in a maze of twisty little passages, all alike.\n      </h4>\n      {is404 ? (\n        <div>(This is not a puzzle. Click above to go back.)</div>\n      ) : (\n        <div>\n          (This is not a puzzle. Try refreshing, or{\" \"}\n          <a href=\"mailto:contact@galacticpuzzlehunt.com\">contact us</a>.)\n        </div>\n      )}\n    </div>\n  );\n}\n","import settings from \"settings\";\nimport { Player, DevKnobs, makeInitGameState } from \"engine/types/game-state\";\nimport { Role } from \"engine/types/updates\";\nimport { getClientGameSpec } from \"engine/all-client-game-specs\";\nimport { Inspector } from \"engine/Inspector\";\nimport { AutoPrepOpts } from \"game-server/server-interface/ServerInterfaceController\";\nimport { EnterRoomParams } from \"game-server/Room\";\nimport { MasteryTree } from \"game-server/masteries\";\nimport { getAllClientSpecs } from \"stores/ClientGameStore\";\n\nconst cardListToCardDict = (\n  cardList: ReadonlyArray<string>\n): { [cardName: string]: number } => {\n  const cardDict: { [cardName: string]: number } = {};\n  for (const cardName of cardList) {\n    if (cardDict[cardName] === undefined) {\n      cardDict[cardName] = 0;\n    }\n    cardDict[cardName]++;\n  }\n  return cardDict;\n};\n\nexport const getDevKnobs = (): DevKnobs => {\n  return settings.devKnobs;\n};\n\n/**\n * Generate autoprep opts for the initial room join.\n * Autoprep is a dev-only feature used to \"fast-forward\" to a\n * useful state for testing or testsolving.\n */\nexport const getInitAutoPrepOpts = (\n  teamId: string,\n  params: EnterRoomParams\n): AutoPrepOpts => {\n  const overrideMasteryTrees: { [teamId: string]: MasteryTree[] } = {\n    [teamId]: [],\n  };\n  const timeNow = new Date().getTime();\n  const requestedDeck =\n    settings.deck === null\n      ? undefined\n      : {\n          id: \"__urlparams_deck\",\n          displayName: \"deck from url params\",\n          cards: cardListToCardDict(settings.deck),\n        };\n  const requestedOppDeck =\n    settings.oppDeck === null\n      ? undefined\n      : {\n          id: \"__urlparams_oppdeck\",\n          displayName: \"deck from url params\",\n          cards: cardListToCardDict(settings.oppDeck),\n        };\n  if (settings.masteries !== null)\n    overrideMasteryTrees[teamId].push({\n      placements: {},\n      connectedAnswers: [],\n      masteriesListOverride: [...settings.masteries],\n    });\n  if (settings.oppMasteries !== null)\n    overrideMasteryTrees[teamId].push({\n      placements: {},\n      connectedAnswers: [],\n      masteriesListOverride: [...settings.oppMasteries],\n    });\n\n  const { role, puzName } = params;\n\n  const gameState = makeInitGameState(puzName, getClientGameSpec(puzName));\n  const allSpecs = getAllClientSpecs(puzName);\n  const gameSpec = allSpecs[1];\n  const inspector = new Inspector(gameSpec, allSpecs, {}, {}, gameState);\n  const hasAI = inspector.hasAI();\n  const p1HasDeckOverride =\n    inspector.isAllCardsAvailable() ||\n    inspector.getDeckOverride(Player.P1) !== null;\n  const p2HasDeckOverride =\n    inspector.isAllCardsAvailable() ||\n    inspector.getDeckOverride(Player.P2) !== null;\n\n  return {\n    readyForBattlePuzName: settings.skipBattlePrep ? puzName : undefined,\n    role,\n    devKnobs: getDevKnobs(),\n    decks: {\n      [Player.P1]:\n        role !== undefined && role === Role.P2\n          ? requestedOppDeck\n          : requestedDeck,\n      [Player.P2]:\n        role !== undefined && role === Role.P2\n          ? requestedDeck\n          : requestedOppDeck,\n    },\n    masteryTrees: {\n      [Player.P1]: \"default\",\n      [Player.P2]: \"default\",\n    },\n  };\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./BattleBackground.css\";\nimport { getMapBgSliceArtPaths } from \"images\";\n\nimport Image from \"components/Image\";\nimport { usePuzNameIfExists } from \"stores/NavStore\";\nimport {\n  useSubscribedTeam,\n  useSelectedPuzName,\n} from \"stores/ClientGlobalStateStore\";\n\ninterface BattleBackgroundProps {\n  puzName?: string;\n  mapYOffset?: number;\n}\n\nfunction BattleBackground(props: BattleBackgroundProps) {\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState<number>(window.innerHeight);\n  const bgElemRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (bgElemRef.current === null) return;\n    const fixHeight = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n    const resizeObserver = new ResizeObserver(fixHeight);\n    resizeObserver.observe(bgElemRef.current);\n    fixHeight();\n    return () => resizeObserver.disconnect();\n  });\n\n  const { puzName: puzNameOpt, mapYOffset = 0 } = props;\n  const selectedPuzName = useSelectedPuzName();\n  const pagePuzName = usePuzNameIfExists();\n  const puzName = puzNameOpt ?? selectedPuzName ?? pagePuzName;\n  const subscribedTeam = useSubscribedTeam();\n\n  if (subscribedTeam === null) return null;\n\n  const { puzzles, battleGroups } = subscribedTeam;\n  const sliceBg = (() => {\n    if (puzName === null) return null;\n    const { battleGroupName } = puzzles[puzName] ?? {};\n    const { mapPos } = battleGroups[battleGroupName] ?? {};\n    if (mapPos === undefined) return null;\n    return (path: string) => {\n      const screenTop = mapPos.y + mapYOffset - 20;\n      const screenBottom = screenTop + (100 * windowHeight) / windowWidth;\n      const sliceHeight = 50; // slices have a 2:1 ratio\n      const firstSlice = Math.floor(screenTop / sliceHeight);\n      return getMapBgSliceArtPaths(path)\n        .slice(firstSlice, Math.ceil(screenBottom / sliceHeight))\n        .map((src, i) => (\n          <Image\n            className=\"layer\"\n            src={src}\n            key={i}\n            style={{\n              position: \"absolute\",\n              top: (firstSlice + i) * sliceHeight - screenTop + \"vw\",\n            }}\n          />\n        ));\n    };\n  })();\n\n  return (\n    <>\n      <div className=\"battle-bg\" style={{ background: \"black\" }} />\n      {sliceBg === null ? (\n        <div\n          className=\"battle-bg\"\n          style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\n        />\n      ) : (\n        <div className=\"battle-bg\" ref={bgElemRef}>\n          {sliceBg(\"2-cave-full\")}\n          {sliceBg(\"islands\")}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default BattleBackground;\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","import { CSSProperties, useEffect, useState } from \"react\";\nimport { FixedSizeList } from \"react-window\";\nimport Twemoji from \"react-twemoji\";\n\nimport { PVP_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { Player } from \"engine/types/game-state\";\nimport { LargeSpinner } from \"components/Loading\";\n\nimport \"./PvPLobbyDisplay.css\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n  useSubscribedTeamPvP,\n  useSubscribedBattleStatus,\n  useSelectedDeckData,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport {\n  useServerInterfaceController,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport { usePuzName } from \"stores/NavStore\";\nimport {\n  PvPLobbyTab,\n  useUserPreferencesStore,\n} from \"stores/UserPreferencesStore\";\nimport { WSReqType } from \"game-server/ws\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalStateBattleRoomStatus,\n} from \"game-server/global-updates\";\nimport { PvPRequest } from \"game-server/server-controllers\";\nimport { TeamSummaryState } from \"game-server/monitoring\";\nimport { getDevKnobs } from \"App.util\";\nimport TeamDisplayNameDisplay from \"components/TeamDisplayNameDisplay\";\nimport { useSortedTeams } from \"components/HuntLib/TeamListDisplay\";\nimport Tooltip from \"components/Tooltip\";\nimport settings from \"settings\";\n\nenum TargetTeamInvalidReason {\n  SELF = \"self\",\n  NO_PVP = \"no_pvp\",\n  GAME_ACTIVE = \"game_active\",\n  BLOCKED = \"blocked\",\n  BLOCKED_BY = \"blocked_by\",\n}\n\nconst validateTargetTeam = (\n  teamId: string,\n  { teamId: targetTeamId, hasPvP, isPvPGameActive }: TeamSummaryState,\n  isBlocked: boolean,\n  isBlockedBy: boolean\n): TargetTeamInvalidReason | null => {\n  if (teamId === targetTeamId) return TargetTeamInvalidReason.SELF;\n  if (!(hasPvP ?? false)) return TargetTeamInvalidReason.NO_PVP;\n  if (isPvPGameActive ?? false) return TargetTeamInvalidReason.GAME_ACTIVE;\n  if (isBlocked) return TargetTeamInvalidReason.BLOCKED;\n  if (isBlockedBy) return TargetTeamInvalidReason.BLOCKED_BY;\n  return null;\n};\n\ninterface PvPTeamDisplayProps {\n  teamData: TeamSummaryState;\n  incomingRequest?: PvPRequest;\n  outgoingRequest?: PvPRequest;\n  isBlocked: boolean;\n  isBlockedBy: boolean;\n  style?: CSSProperties;\n}\n\nfunction PvPTeamDisplay(props: PvPTeamDisplayProps) {\n  const {\n    teamData,\n    incomingRequest: incomingRequestOpt,\n    outgoingRequest: outgoingRequestOpt,\n    isBlocked,\n    isBlockedBy,\n    style,\n  } = props;\n  const { teamId: targetTeamId } = teamData;\n  const [timeRemaining, setTimeRemaining] = useState<number>(0);\n  const [incomingRequest, setIncomingRequest] = useState<PvPRequest | null>(\n    null\n  );\n  const [outgoingRequest, setOutgoingRequest] = useState<PvPRequest | null>(\n    null\n  );\n  const serverInterfaceController = useServerInterfaceController();\n  const teamId = useTeamId();\n  const puzName = usePuzName();\n  const battleStatus = useSubscribedBattleStatus(puzName);\n  const isBattleActive =\n    battleStatus === null\n      ? null\n      : battleStatus === GlobalStateBattleRoomStatus.ACTIVE;\n  const invalidReason =\n    teamId === null\n      ? null\n      : validateTargetTeam(teamId, teamData, isBlocked, isBlockedBy);\n  const selectedDeckData = useSelectedDeckData(Player.P1);\n\n  useEffect(() => {\n    let activeTimeout: number | null = null;\n    const getTimeToNextSecond = () => {\n      const timeNowSeconds = new Date().getTime() / 1000;\n      return (Math.floor(timeNowSeconds + 1) - timeNowSeconds) * 1000;\n    };\n    const perSecondHandler = () => {\n      const timeNow = new Date().getTime();\n      if (\n        incomingRequestOpt !== undefined &&\n        incomingRequestOpt.expiryTime > timeNow\n      ) {\n        setIncomingRequest(incomingRequestOpt);\n        setOutgoingRequest(null);\n        setTimeRemaining(incomingRequestOpt.expiryTime - timeNow);\n      } else if (\n        outgoingRequestOpt !== undefined &&\n        outgoingRequestOpt.expiryTime > timeNow\n      ) {\n        setIncomingRequest(null);\n        setOutgoingRequest(outgoingRequestOpt);\n        setTimeRemaining(outgoingRequestOpt.expiryTime - timeNow);\n      } else {\n        setIncomingRequest(null);\n        setOutgoingRequest(null);\n        setTimeRemaining(0);\n      }\n      activeTimeout = window.setTimeout(\n        perSecondHandler,\n        getTimeToNextSecond()\n      );\n    };\n    perSecondHandler();\n    return () => {\n      if (activeTimeout !== null) clearTimeout(activeTimeout);\n    };\n  }, [\n    setOutgoingRequest,\n    setIncomingRequest,\n    setTimeRemaining,\n    outgoingRequestOpt,\n    incomingRequestOpt,\n  ]);\n\n  if (isBattleActive === null || selectedDeckData === null) return null;\n\n  const { selectedDeckSlot, isSelectedDeckValid = false } = selectedDeckData;\n  // TODO: Probably better to cover the entire lobby interface\n  // if the deck is invalid, rather than hiding the reason\n  // behind a tooltip.\n  const deckInvalidReasonText = (() => {\n    if (selectedDeckSlot === null) return \"You have no deck selected.\";\n    if (!isSelectedDeckValid) return \"Your deck is invalid.\";\n    return null;\n  })();\n\n  const buttonText = (() => {\n    if (outgoingRequest !== null) return \"Cancel\";\n    if (incomingRequest !== null) return \"Accept\";\n    return \"Challenge\";\n  })();\n\n  const invalidReasonText = ((): string | null => {\n    if (invalidReason === null) return null;\n    switch (invalidReason) {\n      case TargetTeamInvalidReason.SELF:\n        return \"Yourself\";\n      case TargetTeamInvalidReason.NO_PVP:\n        return \"PvP not enabled\";\n      case TargetTeamInvalidReason.GAME_ACTIVE:\n        return \"Battle in progress\";\n      case TargetTeamInvalidReason.BLOCKED:\n        return \"Blocked\";\n      case TargetTeamInvalidReason.BLOCKED_BY:\n        return \"Blocked by them\";\n    }\n  })();\n\n  const numMinutes = Math.floor(timeRemaining / 1000 / 60);\n  const numSeconds = Math.floor(timeRemaining / 1000) % 60;\n  return (\n    <div\n      className={`pvp-lobby-team${isBlocked || isBlockedBy ? \" blocked\" : \"\"}`}\n      style={style}\n    >\n      <div className=\"pvp-lobby-team-label\">\n        <div className=\"pvp-lobby-team-name\">\n          <TeamDisplayNameDisplay\n            teamData={teamData}\n            invalid={invalidReason !== null}\n          />\n        </div>\n        {invalidReasonText === null ? null : (\n          <div className=\"pvp-lobby-invalid-reason\">({invalidReasonText})</div>\n        )}\n        {timeRemaining === 0 ? null : (\n          <div className=\"pvp-lobby-countdown\">\n            {numMinutes.toString().padStart(2, \"0\")}:\n            {numSeconds.toString().padStart(2, \"0\")}\n          </div>\n        )}\n      </div>\n      <div>\n        <Tooltip\n          text={\n            deckInvalidReasonText !== null ? deckInvalidReasonText : undefined\n          }\n        >\n          <button\n            className=\"pvp-lobby-btn-challenge\"\n            disabled={\n              invalidReason !== null ||\n              isBattleActive ||\n              deckInvalidReasonText !== null\n            }\n            onClick={() => {\n              if (outgoingRequest !== null) {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.PVP_CANCEL_REQUEST,\n                  targetTeamId,\n                });\n              } else if (incomingRequest !== null) {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.PVP_ACCEPT_REQUEST,\n                  targetTeamId,\n                  devKnobs: getDevKnobs(),\n                });\n              } else {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.PVP_MAKE_REQUEST,\n                  targetTeamId,\n                  autoAccept: settings.pvpAutoAccept ? true : undefined,\n                });\n              }\n            }}\n          >\n            {buttonText}\n          </button>\n        </Tooltip>\n      </div>\n      <div>\n        <button\n          disabled={teamId === null || teamId === targetTeamId}\n          className=\"pvp-lobby-btn-block\"\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.PVP_SET_IS_BLOCKED,\n              targetTeamId,\n              isBlocked: !isBlocked,\n            });\n          }}\n        >\n          {isBlocked ? \"Unblock\" : \"Block\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\ninterface PvPLobbyTabButtonProps {\n  tab: PvPLobbyTab;\n  refTimeNow?: number;\n}\n\nfunction PvPLobbyTabButton(props: PvPLobbyTabButtonProps) {\n  const { tab, refTimeNow } = props;\n\n  const pvpLobbyTab = useUserPreferencesStore((state) => state.pvpLobbyTab);\n  const setPvPLobbyTab = useUserPreferencesStore(\n    (state) => state.setPvPLobbyTab\n  );\n  const { incomingRequests = {} } = useSubscribedTeamPvP() ?? {};\n  const hasIncoming =\n    Object.values(incomingRequests).filter(\n      ({ expiryTime }) => refTimeNow && expiryTime > refTimeNow\n    ).length > 0;\n\n  const buttonText = ((): string => {\n    switch (tab) {\n      case PvPLobbyTab.ALL:\n        return \"👋\";\n      case PvPLobbyTab.OUTGOING:\n        return \"📤\";\n      case PvPLobbyTab.INCOMING:\n        return \"📥\";\n      case PvPLobbyTab.BLOCKED:\n        return \"🚫\";\n      case PvPLobbyTab.RING:\n        return \"🤼\";\n    }\n  })();\n\n  const tooltipText = ((): string => {\n    switch (tab) {\n      case PvPLobbyTab.ALL:\n        return \"Show all teams.\";\n      case PvPLobbyTab.OUTGOING:\n        return \"Show teams you’ve sent challenges to.\";\n      case PvPLobbyTab.INCOMING:\n        return \"Show teams who’ve sent challenges to you.\";\n      case PvPLobbyTab.BLOCKED:\n        return \"Show teams you’ve blocked. Blocked teams can’t send you challenges.\";\n      case PvPLobbyTab.RING:\n        return \"Show teams who are in the ring. Entering the ring sends a challenge to every team in it.\";\n    }\n  })();\n\n  return (\n    <Tooltip text={tooltipText}>\n      <button\n        className={`pvp-lobby-menu-btn${\n          pvpLobbyTab === tab ? \" highlight\" : \"\"\n        }${\n          tab === PvPLobbyTab.INCOMING && hasIncoming ? \" extra-highlight\" : \"\"\n        }`}\n        onClick={() => {\n          setPvPLobbyTab(tab);\n        }}\n      >\n        <Twemoji>{buttonText}</Twemoji>\n      </button>\n    </Tooltip>\n  );\n}\n\nfunction PvPLobbyDisplay() {\n  const serverInterfaceController = useServerInterfaceController();\n  const teamId = useTeamId();\n\n  const subscribedTeam = useSubscribedTeam();\n  const subscribedTeamPvP = useSubscribedTeamPvP();\n  const setNeedTeamList = useGlobalSubscriptionStore(\n    (state) => state.setNeedTeamList\n  );\n  const teams = useClientGlobalStateStore((state) => state.globalState.teams);\n  const pvp = useClientGlobalStateStore((state) => state.globalState.pvp);\n  const pvpLobbyTab = useUserPreferencesStore((state) => state.pvpLobbyTab);\n  const setPvPLobbyTab = useUserPreferencesStore(\n    (state) => state.setPvPLobbyTab\n  );\n  const hideInvalid = useUserPreferencesStore((state) => state.hideInvalid);\n  const setHideInvalid = useUserPreferencesStore(\n    (state) => state.setHideInvalid\n  );\n  const [teamsList, setTeamsList] = useState<TeamSummaryState[]>([]);\n  /** The reference timeNow to compute the visible teams. */\n  const [refTimeNow, setRefTimeNow] = useState<number>(new Date().getTime());\n  const [teamsFilter, setTeamsFilter] = useState<string>(\"\");\n  const fullTeamsList = useSortedTeams(null, false, true);\n\n  useEffect(() => {\n    setNeedTeamList(true);\n  }, [setNeedTeamList]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.TEAM_PVP,\n      teamId,\n    });\n  }, [serverInterfaceController, teamId]);\n\n  useEffect(() => {\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.PVP,\n    });\n  }, [serverInterfaceController]);\n\n  useEffect(() => {\n    if (subscribedTeamPvP === null) return;\n    if (pvp === null) return;\n    if (teams === null) return;\n    const { outgoingRequests, incomingRequests, blockedTeams, blockedByTeams } =\n      subscribedTeamPvP;\n    const { ring } = pvp;\n    setTeamsList(\n      ((): TeamSummaryState[] => {\n        switch (pvpLobbyTab) {\n          case PvPLobbyTab.ALL:\n            return fullTeamsList.filter(({ isHidden }) => !isHidden);\n          case PvPLobbyTab.OUTGOING:\n            return fullTeamsList.filter(\n              ({ teamId }) =>\n                outgoingRequests[teamId] !== undefined &&\n                outgoingRequests[teamId].expiryTime > refTimeNow\n            );\n          case PvPLobbyTab.INCOMING:\n            return fullTeamsList.filter(\n              ({ teamId }) =>\n                incomingRequests[teamId] !== undefined &&\n                incomingRequests[teamId].expiryTime > refTimeNow\n            );\n          case PvPLobbyTab.BLOCKED:\n            return fullTeamsList.filter(\n              ({ teamId }) => blockedTeams[teamId] ?? false\n            );\n          case PvPLobbyTab.RING:\n            return ring.map((teamId) => teams[teamId]);\n        }\n      })().filter((teamData) => {\n        if (!teamData.displayName.toLowerCase().includes(teamsFilter))\n          return false;\n        if (!hideInvalid) return true;\n        return (\n          teamId !== null &&\n          validateTargetTeam(\n            teamId,\n            teamData,\n            blockedTeams[teamData.teamId] ?? false,\n            blockedByTeams[teamData.teamId] ?? false\n          ) === null\n        );\n      })\n    );\n    const allRequests = [\n      ...Object.values(incomingRequests),\n      ...Object.values(outgoingRequests),\n    ].filter(({ expiryTime }) => expiryTime > refTimeNow);\n    if (allRequests.length > 0) {\n      const nextUpdateTime = Math.min(\n        ...allRequests.map(({ expiryTime }) => expiryTime)\n      );\n      const activeTimeout = window.setTimeout(() => {\n        setRefTimeNow(new Date().getTime());\n      }, nextUpdateTime - refTimeNow);\n      return () => {\n        window.clearTimeout(activeTimeout);\n      };\n    }\n  }, [\n    pvpLobbyTab,\n    hideInvalid,\n    teamId,\n    refTimeNow,\n    subscribedTeamPvP,\n    pvp,\n    teams,\n    fullTeamsList,\n    teamsFilter,\n  ]);\n\n  if (\n    teamId === null ||\n    pvp === null ||\n    subscribedTeam === null ||\n    subscribedTeamPvP === null ||\n    teams === null\n  )\n    return <LargeSpinner inline={true} />;\n\n  const { outgoingRequests, incomingRequests, blockedTeams, blockedByTeams } =\n    subscribedTeamPvP;\n  const { ring } = pvp;\n  const isInRing = ring.includes(teamId);\n  const pvpEnabled = subscribedTeam.masteries[PVP_MASTERY_ID].isEnabled;\n\n  return (\n    <>\n      {pvpEnabled ? (\n        <div className=\"pvp-lobby-root\">\n          <div className=\"pvp-lobby-menu\">\n            <div className=\"pvp-lobby-menu-top\">\n              <PvPLobbyTabButton tab={PvPLobbyTab.ALL} />\n              <PvPLobbyTabButton tab={PvPLobbyTab.OUTGOING} />\n              <PvPLobbyTabButton\n                tab={PvPLobbyTab.INCOMING}\n                refTimeNow={refTimeNow}\n              />\n              <PvPLobbyTabButton tab={PvPLobbyTab.BLOCKED} />\n              <PvPLobbyTabButton tab={PvPLobbyTab.RING} />\n              <Tooltip text=\"Hide teams you can't challenge.\">\n                <label className=\"pvp-hide-invalid\">\n                  <input\n                    type=\"checkbox\"\n                    checked={hideInvalid}\n                    onChange={() => {\n                      setHideInvalid(!hideInvalid);\n                    }}\n                  />{\" \"}\n                  Hide invalid\n                </label>\n              </Tooltip>\n            </div>\n            <div className=\"pvp-lobby-menu-bottom\">\n              <Tooltip\n                text={\n                  isInRing\n                    ? \"Resend a challenge to everyone in the ring.\"\n                    : \"Enter the ring, and send a challenge to everyone in it.\"\n                }\n              >\n                <button\n                  className=\"pvp-lobby-menu-btn\"\n                  onClick={() => {\n                    serverInterfaceController.sendReq({\n                      type: WSReqType.PVP_ENTER_RING,\n                    });\n                    setPvPLobbyTab(PvPLobbyTab.RING);\n                  }}\n                >\n                  <Twemoji>{isInRing ? \"⏩🤼\" : \"▶️🤼\"}</Twemoji>\n                </button>\n              </Tooltip>\n              <Tooltip text=\"Leave the ring. You'll stop getting challenged by teams entering the ring.\">\n                <button\n                  className=\"pvp-lobby-menu-btn\"\n                  disabled={!isInRing}\n                  onClick={() => {\n                    serverInterfaceController.sendReq({\n                      type: WSReqType.PVP_LEAVE_RING,\n                    });\n                  }}\n                >\n                  <Twemoji>⏹️🤼</Twemoji>\n                </button>\n              </Tooltip>\n            </div>\n          </div>\n          <FixedSizeList\n            height={500}\n            itemCount={teamsList.length}\n            itemSize={38}\n            width=\"100%\"\n          >\n            {({ index, style }) => {\n              const teamData = teamsList[index];\n              const { teamId } = teamData;\n              const isBlocked = blockedTeams[teamId] ?? false;\n              const isBlockedBy = blockedByTeams[teamId] ?? false;\n              return (\n                <PvPTeamDisplay\n                  key={teamId}\n                  teamData={teamData}\n                  outgoingRequest={outgoingRequests[teamId]}\n                  incomingRequest={incomingRequests[teamId]}\n                  isBlocked={isBlocked}\n                  isBlockedBy={isBlockedBy}\n                  style={{\n                    ...style,\n                    background:\n                      index % 2 === 0\n                        ? isBlocked || isBlockedBy\n                          ? \"#644\"\n                          : \"#444\"\n                        : isBlocked || isBlockedBy\n                        ? \"#422\"\n                        : \"#222\",\n                  }}\n                />\n              );\n            }}\n          </FixedSizeList>\n          <div className=\"pvp-team-search\">\n            <Twemoji>🔍</Twemoji>{\" \"}\n            <input\n              placeholder=\"Search for a team...\"\n              onChange={(e) =>\n                setTeamsFilter(e.target.value.toLowerCase().trim())\n              }\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"pvp-disabled\">\n          <h4>PvP is disabled!</h4>\n          Your team will be unable to participate until you activate it (but you\n          can continue a match if you already have one going).\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default PvPLobbyDisplay;\n","import { StepType } from \"engine/types/steps\";\nimport { Speaker, Keyframe } from \"engine/types/keyframes\";\nimport { getKeroLayers } from \"engine/cards/card-effects-shared\";\nimport {\n  useClientGameStore,\n  useInspector,\n  useIsLockedBesidesKeyframe,\n} from \"stores/ClientGameStore\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { getCutsceneArtPath } from \"images\";\nimport FormattedText from \"components/FormattedText\";\nimport \"./CutsceneDialogBox.css\";\nimport Image, { KeroImage } from \"./Image\";\nimport \"overlayscrollbars/overlayscrollbars.css\";\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\nimport { defaultOverlayScrollbarsOptions } from \"HuntLib\";\nimport { useEffect, useState } from \"react\";\n\nconst CutsceneDialogOption = ({\n  content,\n  onClick,\n  disabled,\n}: {\n  content: string;\n  onClick: () => void;\n  disabled: boolean;\n}) => {\n  const [delayed, setDelayed] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setDelayed(false), 300);\n  }, []);\n\n  return (\n    <div\n      className={`cutscene-dialog-option`}\n      onClick={delayed || disabled ? undefined : onClick}\n      style={delayed || disabled ? { cursor: \"wait\" } : {}}\n    >\n      <div>{content}</div>\n      <div>▶</div>\n    </div>\n  );\n};\n\ninterface StoryDialogBoxProps {\n  dialogue?: string;\n  speaker: Speaker | null;\n  preventScroll?: boolean;\n  /** If not specified, don't show dialog options. */\n  dialogOptionsConfig?: {\n    keyframeId: string;\n    dialogOptions: string[];\n  };\n}\n\nexport const StoryDialogBox = (props: StoryDialogBoxProps) => {\n  const {\n    dialogue,\n    speaker,\n    preventScroll = false,\n    dialogOptionsConfig,\n  } = props;\n\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const subscribedTeam = useSubscribedTeam();\n  const isLocked = useIsLockedBesidesKeyframe();\n\n  if (subscribedTeam === null) return null;\n\n  const { cardUnlocks } = subscribedTeam;\n\n  const keroLayers = getKeroLayers(Object.keys(cardUnlocks), 0);\n\n  const speakerImage = ((): string | null => {\n    if (speaker === null) return null;\n    switch (speaker) {\n      case Speaker.NARRATOR:\n      case Speaker.ENEMY:\n      case Speaker.KERO_DOS:\n        return null;\n      case Speaker.KERO:\n        return \"kero.png\";\n      case Speaker.ANGRY_KERO:\n        return \"angry-kero.png\";\n      case Speaker.DINO:\n        return \"generic-dino.png\";\n      case Speaker.CAPTAIN_PI:\n        return \"captain-pi.png\";\n    }\n  })();\n\n  return (\n    <div className=\"cutscene-dialog-box\">\n      {speaker === Speaker.KERO_DOS ? (\n        <KeroImage className=\"cutscene-speaker\" keroLayers={keroLayers} />\n      ) : speaker === null || speakerImage === null ? null : (\n        <div className=\"cutscene-speaker\">\n          <Image\n            className={\n              [Speaker.CAPTAIN_PI].includes(speaker)\n                ? \"cutscene-speaker-img-limit-width\"\n                : \"cutscene-speaker-img-limit-height\"\n            }\n            src={getCutsceneArtPath(speakerImage)}\n          />\n        </div>\n      )}\n      <div className=\"cutscene-dialog-main\">\n        <OverlayScrollbarsComponent\n          options={{\n            ...defaultOverlayScrollbarsOptions,\n            overflow: { y: preventScroll ? \"visible\" : \"scroll\" },\n          }}\n          defer\n          className=\"cutscene-dialogue\"\n          style={preventScroll ? { overflowY: \"initial\" } : undefined}\n        >\n          {dialogue === undefined ? null : (\n            <FormattedText\n              text={dialogue}\n              opts={{\n                ignoreKeywords: true,\n                lineGap: \"0\",\n              }}\n            />\n          )}\n        </OverlayScrollbarsComponent>\n        {dialogOptionsConfig !== undefined ? (\n          <div className=\"cutscene-dialog-options\">\n            {dialogOptionsConfig.dialogOptions.map(\n              (dialogOption, dialogOptionIndex) => (\n                <CutsceneDialogOption\n                  key={dialogOption}\n                  onClick={() => {\n                    sendStep?.({\n                      type: StepType.ADVANCE_KEYFRAME,\n                      keyframeId: dialogOptionsConfig.keyframeId,\n                      dialogOptionIndex,\n                    });\n                  }}\n                  content={dialogOption}\n                  disabled={isLocked}\n                />\n              )\n            )}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\ninterface CutsceneDialogBoxProps {\n  keyframe: Keyframe;\n}\n\nconst CutsceneDialogBox = (props: CutsceneDialogBoxProps) => {\n  const { keyframe } = props;\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const inspector = useInspector();\n  const isGameActive = inspector.isGameActive();\n\n  const {\n    id: keyframeId,\n    speaker = null,\n    dialogue,\n    showNext = false,\n    dialogOptions = [\"...\"],\n  } = keyframe;\n\n  // Manually prevent scroll for keyframes with kaomoji at\n  // the end that causes weird element sizing overflow issues.\n  const preventScroll = [\n    \"tutorial6-start-no-deck\",\n    \"post-final-battle-start\",\n  ].includes(keyframeId);\n\n  return (\n    <StoryDialogBox\n      dialogue={dialogue}\n      speaker={speaker}\n      preventScroll={preventScroll}\n      dialogOptionsConfig={\n        showNext && isGameActive\n          ? {\n              keyframeId,\n              dialogOptions,\n            }\n          : undefined\n      }\n    />\n  );\n};\n\nexport default CutsceneDialogBox;\n","import { getPuzzleMapIcon } from \"engine/puzzles/puzzle-data\";\nimport {\n  ClientBattleGroupGlobalState,\n  ClientPuzzleGlobalState,\n} from \"game-server/global-updates\";\n\nexport const scrollToPromise = (top: number) => {\n  const promise = new Promise<void>((resolve) => {\n    const handler = () => {\n      const maxScrollIsh = document.body.scrollHeight - window.innerHeight - 10;\n      if (\n        Math.abs(window.scrollY - top) <= 10 ||\n        (top > maxScrollIsh && window.scrollY > maxScrollIsh)\n      ) {\n        window.removeEventListener(\"scroll\", handler);\n        resolve();\n      }\n    };\n    handler();\n    window.addEventListener(\"scroll\", handler, { passive: true });\n  });\n\n  window.scrollTo({ top, behavior: \"smooth\" });\n\n  return promise;\n};\n\nexport const getIcon = (\n  puzData: ClientPuzzleGlobalState,\n  battleGroup: ClientBattleGroupGlobalState\n) => {\n  const { hasAnswer = false } = puzData;\n  const {\n    battleGroupName,\n    isCutscene = false,\n    isLegendary = false,\n  } = battleGroup;\n  return getPuzzleMapIcon(hasAnswer, battleGroupName, isCutscene, isLegendary);\n};\n","import settings from \"settings\";\nimport Twemoji from \"react-twemoji\";\nimport \"./PrepDisplay.css\";\nimport { Player } from \"engine/types/game-state\";\nimport { Speaker } from \"engine/types/keyframes\";\nimport { Role } from \"engine/types/updates\";\nimport { PUZ_NAME_PVP, isInstanceable } from \"engine/puzzles/puzzle-data\";\nimport { WSReqType } from \"game-server/ws\";\nimport {\n  ClientBattleGroupGlobalState,\n  GlobalStateBattleRoomStatus,\n  getCompletionVerb,\n} from \"game-server/global-updates\";\n\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport {\n  useBattleGroup,\n  usePuzzlesInBattleGroup,\n  useSelectedBattleGroup,\n  usePuzzlesInSelectedBattleGroup,\n  useIsInstancer,\n  useSubscribedTeam,\n  useSubscribedTeamBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport { useNavStore, usePuzName } from \"stores/NavStore\";\nimport BattlerImage from \"components/BattlerImage\";\nimport PvPLobbyDisplay from \"./PvPLobbyDisplay\";\nimport { StoryDialogBox } from \"components/CutsceneDialogBox\";\nimport { useMemo } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport Tooltip from \"components/Tooltip\";\nimport { getIcon } from \"components/MapDisplay/utils\";\nimport FormattedText from \"components/FormattedText\";\nimport { Spinner } from \"components/Loading\";\n\nfunction PreBattleDialogueDisplay() {\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useSelectedBattleGroup();\n\n  if (battleGroup === null || subscribedTeam === null) return null;\n\n  const { cardUnlocks } = subscribedTeam;\n  const { preBattleDialogue } = battleGroup;\n\n  if (preBattleDialogue === undefined) return null;\n\n  const lines = preBattleDialogue.trim().split(\"\\n\");\n  const dialogBoxesDom = lines.map((line, i) => {\n    const isSpeakerKero = line.startsWith(\"kero:\");\n    const isSpeakerDino = line.startsWith(\"dino:\");\n    const isSpeakerCaptainPi = line.startsWith(\"captain pi:\");\n    const dialogue = (() => {\n      if (isSpeakerKero) return line.slice(line.indexOf(\":\") + 1).trim();\n      if (isSpeakerDino) return line.slice(line.indexOf(\":\") + 1).trim();\n      if (isSpeakerCaptainPi) return line.slice(line.indexOf(\":\") + 1).trim();\n      return line;\n    })();\n    return (\n      <div\n        key={i}\n        className=\"prep-dialogue-line\"\n        style={{\n          alignSelf:\n            isSpeakerKero || isSpeakerCaptainPi ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        <StoryDialogBox\n          dialogue={dialogue}\n          speaker={\n            isSpeakerKero\n              ? Speaker.KERO_DOS\n              : isSpeakerDino\n              ? Speaker.DINO\n              : isSpeakerCaptainPi\n              ? Speaker.CAPTAIN_PI\n              : Speaker.NARRATOR\n          }\n        />\n      </div>\n    );\n  });\n\n  return <div className=\"prep-dialogue\">{dialogBoxesDom}</div>;\n}\n\nfunction PrepPuzzleSelectionDisplay() {\n  const puzName = usePuzName();\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useBattleGroup();\n  const puzzlesInBattleGroup = usePuzzlesInBattleGroup();\n  const selectedBattleGroup = useSelectedBattleGroup();\n  const puzzlesInSelectedBattleGroup = usePuzzlesInSelectedBattleGroup();\n  const subscribedTeamBattle = useSubscribedTeamBattle();\n  const serverInterfaceController = useServerInterfaceController();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const instanceablePuzzles = useMemo(() => {\n    const instanceablePuzzles: {\n      puzName: string;\n      battleGroup: ClientBattleGroupGlobalState;\n      icon?: string;\n    }[] = [];\n\n    if (subscribedTeam === null) return instanceablePuzzles;\n    const { puzzles, battleGroups } = subscribedTeam;\n\n    const numPuzzlesPerBattleGroup: { [battleGroupName: string]: number } = {};\n    for (const puzData of Object.values(puzzles).sort(\n      (puzData1, puzData2) => puzData1.order - puzData2.order\n    )) {\n      const { puzName, battleGroupName, hasAnswer = false } = puzData;\n      const battleGroup = battleGroups[battleGroupName];\n      const icon = getIcon(puzData, battleGroup);\n      if (\n        !isInstanceable(\n          hasAnswer ?? false,\n          puzName,\n          battleGroupName,\n          battleGroup.numPuzzles\n        )\n      )\n        continue;\n      const stageNum = numPuzzlesPerBattleGroup[battleGroupName] ?? 0;\n      numPuzzlesPerBattleGroup[battleGroupName] = stageNum + 1;\n      if (stageNum === 0) {\n        // Only the first of each battle group.\n        instanceablePuzzles.push({\n          puzName,\n          battleGroup,\n          icon,\n        });\n      }\n    }\n\n    return instanceablePuzzles;\n  }, [subscribedTeam]);\n\n  if (subscribedTeam === null || battleGroup === null) return null;\n  const selectedPuzName = subscribedTeamBattle?.selectedPuzName ?? null;\n  const { roomStatus } = subscribedTeam.puzzles[puzName];\n  const isRoomActive = roomStatus === GlobalStateBattleRoomStatus.ACTIVE;\n\n  return (\n    <>\n      <div className=\"prep-instancer-room-selection\">\n        {(puzzlesInBattleGroup ?? []).map(\n          ({ puzName: selectionPuzName }, i) => (\n            <button\n              className={`prep-puz-selection-row-btn${\n                puzName === selectionPuzName ? \" highlight\" : \"\"\n              }`}\n              key={i}\n              onClick={() =>\n                navigate(\n                  {\n                    pathname: `../prep/${selectionPuzName}`,\n                    search: searchParams.toString(),\n                  },\n                  { replace: true }\n                )\n              }\n            >\n              Room {i + 1}\n            </button>\n          )\n        )}\n      </div>\n\n      <select\n        id=\"prep-instancer-select\"\n        value={puzzlesInSelectedBattleGroup?.[0].puzName ?? \"\"}\n        disabled={isRoomActive}\n        onChange={(e) => {\n          const newSelectedPuzName = e.target.value;\n          if (newSelectedPuzName === \"\") return;\n          // Put this check here to still render the selection even\n          // when switching between instancer rooms.\n          if (puzName === null) return;\n          serverInterfaceController.sendReq({\n            type: WSReqType.SELECT_PUZZLE,\n            hostPuzName: puzName,\n            selectedPuzName: newSelectedPuzName,\n          });\n        }}\n      >\n        <option disabled hidden key={\"\"} value={\"\"}></option>\n        {instanceablePuzzles.map(({ puzName, battleGroup, icon }) => (\n          <option key={puzName} value={puzName}>\n            {`${icon} ${battleGroup.displayName}`}\n          </option>\n        ))}\n      </select>\n\n      {subscribedTeamBattle === null ? (\n        <Spinner size={48} inline={true} />\n      ) : (\n        <>\n          <BattlerImage\n            battleGroupName={\n              (selectedBattleGroup === null ? battleGroup : selectedBattleGroup)\n                .battleGroupName\n            }\n          />\n          <PreBattleDialogueDisplay />\n        </>\n      )}\n    </>\n  );\n}\n\ninterface PrepDisplayProps {\n  role: Role;\n  player: Player;\n}\n\nfunction PrepDisplay(props: PrepDisplayProps) {\n  const puzName = usePuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useBattleGroup();\n  const selectedBattleGroup = useSelectedBattleGroup();\n  const setIsInstancerModalOpen = useNavStore(\n    (state) => state.setIsInstancerModalOpen\n  );\n  const setIsPvPModalOpen = useNavStore((state) => state.setIsPvPModalOpen);\n  const isInstancer = useIsInstancer() ?? false;\n  const subscribedTeamBattle = useSubscribedTeamBattle();\n\n  if (battleGroup === null || subscribedTeam === null)\n    return <Spinner size={48} inline={true} />;\n\n  const { battleGroupName, displayName } = battleGroup;\n  const { puzzles } = subscribedTeam;\n  const isBattleGroupSolved = puzzles[battleGroupName].solveTime !== undefined;\n\n  const timeOpts = {\n    hour12: true,\n    timeZoneName: \"short\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  } as const;\n  const errata = Object.values(subscribedTeamBattle?.errata ?? {})\n    .sort((e1, e2) => e1.timestamp - e2.timestamp)\n    .map((erratum) => (\n      <div key={erratum.erratumId}>\n        {erratum.published ? null : (\n          <strong>\n            [\n            <a\n              href={`${settings.djangoBaseUrl}admin/puzzles/erratum/${erratum.erratumId}/change/`}\n            >\n              UNPUBLISHED\n            </a>\n            ]\n          </strong>\n        )}{\" \"}\n        On {new Date(erratum.timestamp).toLocaleString([], timeOpts)},{\" \"}\n        <span dangerouslySetInnerHTML={{ __html: erratum.text }}></span>\n      </div>\n    ));\n\n  return isPvP ? (\n    <>\n      <h2 className=\"prep-header\">\n        {displayName}\n        <Tooltip text=\"Click for more info\">\n          <div\n            className=\"prep-help-btn\"\n            onClick={() => {\n              setIsPvPModalOpen(true);\n            }}\n          >\n            <Twemoji>🛈</Twemoji>\n          </div>\n        </Tooltip>\n      </h2>\n      <PvPLobbyDisplay />\n    </>\n  ) : (\n    <div\n      className={`prep-left${isInstancer ? \" prep-left-instancer\" : \"\"}`}\n      style={{\n        alignSelf: isPvP ? \"start\" : undefined,\n        maxHeight: isPvP ? \"100vh\" : undefined,\n      }}\n    >\n      <h2 className=\"prep-header\">\n        {displayName}\n        {isInstancer ? (\n          <Tooltip text=\"Click for more info\">\n            <div\n              className=\"prep-help-btn\"\n              onClick={() => {\n                setIsInstancerModalOpen(true);\n              }}\n            >\n              <Twemoji>🛈</Twemoji>\n            </div>\n          </Tooltip>\n        ) : null}\n        {isBattleGroupSolved ? (\n          <div className=\"solved-title-marker\">\n            {getCompletionVerb(battleGroup)}!\n          </div>\n        ) : null}\n      </h2>\n      {errata.length ? <div className=\"puzzle-erratum\">{errata}</div> : null}\n      <div className=\"prep-main\">\n        <>\n          {isInstancer ? (\n            <PrepPuzzleSelectionDisplay />\n          ) : selectedBattleGroup !== null ? (\n            <>\n              <BattlerImage\n                battleGroupName={selectedBattleGroup.battleGroupName}\n              />\n              <PreBattleDialogueDisplay />\n            </>\n          ) : null}\n        </>\n      </div>\n    </div>\n  );\n}\n\nexport function InstancerNotice() {\n  return (\n    <div>\n      The Instancer is a web of parallel timelines maintained by a group of\n      spiders known as the Overworked Web Operatives! It comes with three rooms\n      that you can use to create additional instances of battles or cutscenes at\n      any time. These instances behave exactly like their <q>real</q>{\" \"}\n      counterparts — and if you win in an instance, you win in real life!\n    </div>\n  );\n}\n\nexport function PvPNotice() {\n  return (\n    <div className=\"prep-pvp-modal-content\">\n      <p>\n        The PvP Arena is a place where you can challenge other teams to battle!\n      </p>\n      <b>Challenging teams:</b>\n      <ul>\n        <li>\n          To challenge a team, select a deck, then find the team in the list and\n          click Challenge. You can challenge any team that has the PvP mastery,\n          isn’t already in a PvP battle, and hasn’t blocked you.\n        </li>\n        <li>\n          To accept a challenge, select a deck, find the team that sent you the\n          challenge in the incoming challenges tab (the tab labeled{\" \"}\n          <Twemoji tag=\"span\">📥</Twemoji>), then click Accept. You have one\n          minute to accept a challenge before it expires.\n        </li>\n        <li>\n          To find teams to challenge, check out the ring (the tab labeled{\" \"}\n          <Twemoji tag=\"span\">🤼</Twemoji>). You can enter the ring by clicking{\" \"}\n          <Twemoji tag=\"span\">▶️🤼</Twemoji>. If you’ve selected a deck, this\n          also sends a challenge to every team in the ring.\n        </li>\n      </ul>\n      <b>Battle changes:</b>\n      <ul>\n        <li>You get 5× more faction points.</li>\n        <li>Legendary cards aren’t allowed.</li>\n        <li>\n          The first player starts with <FormattedText text=\"{?}\" /> on their\n          first turn, rather than <FormattedText text=\"{???}\" />.\n        </li>\n        {/* update this if PVP_TURN_TIME_LIMIT changes: */}\n        <li>\n          Each player has a 3-minute time limit for each turn, shown next to the\n          board by their team name. If a player runs out of time, their opponent\n          can claim a win on time.\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default PrepDisplay;\n","import { useEffect, useState } from \"react\";\nimport { SYMBOL_INFO } from \"engine/types/card-data\";\nimport { Faction, factionToColor, capitalize } from \"engine/types/factions\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport {\n  useSubscribedTeam,\n  useClientGlobalStateStore,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\n\nimport \"./FactionScoreTotalsDisplay.css\";\nimport FactionIcon from \"components/FactionIcon\";\n\nconst GRAPH_BUCKETS = 24; // Each bucket is one hour\n\nfunction FactionScoreTotalsDisplay() {\n  const subscribedTeam = useSubscribedTeam();\n  const factionHistory = useClientGlobalStateStore(\n    (state) => state.globalState.factionHistory\n  );\n  const { setNeedFactionHistory } = useGlobalSubscriptionStore();\n  useEffect(() => {\n    setNeedFactionHistory(true);\n    // Don't unsubscribe from faction history on unmount to prevent\n    // needing to resync the full state every time.\n  }, [setNeedFactionHistory]);\n  const [hoverFaction, setHoverFaction] = useState<string | null>(null);\n\n  if (subscribedTeam === null) return null;\n  const { faction: teamFaction, factionScores, masteries } = subscribedTeam;\n\n  if (!masteries[FACTIONS_MASTERY_ID].isEnabled || teamFaction === null)\n    return null;\n\n  const orderedFactions = Object.entries(factionScores).sort(\n    ([faction1, score1], [faction2, score2]) => score2 - score1\n  );\n  const epoch = Math.floor(Date.now() / 1000 / 60 / 60) - GRAPH_BUCKETS;\n  const graphPoints = Object.fromEntries(\n    Object.values(Faction).map((faction) => [\n      faction,\n      [] as { time: number; score: number }[],\n    ])\n  );\n  for (const [key, value] of Object.entries(factionHistory).sort()) {\n    const [faction, timeBucket] = key.split(\".\");\n    graphPoints[faction].push({ time: +timeBucket - epoch, score: value });\n  }\n  let maxScore = 1;\n  const graphLines = orderedFactions.map(([faction]) => {\n    const line = [];\n    let total = 0;\n    for (const { time, score } of [\n      ...graphPoints[faction],\n      { time: Infinity, score: 0 },\n    ]) {\n      while (line.length < time && line.length <= GRAPH_BUCKETS)\n        line.push(total);\n      total += score;\n    }\n    maxScore = Math.max(maxScore, total);\n    return { faction, line };\n  });\n  const scoreGraphDom = graphLines.map(({ faction, line }) => (\n    <path\n      key={faction}\n      onMouseEnter={() => setHoverFaction(faction)}\n      onMouseLeave={() => setHoverFaction(null)}\n      fill=\"none\"\n      stroke={SYMBOL_INFO[factionToColor(faction as Faction)].color(400)}\n      style={{ strokeDasharray: faction === hoverFaction ? \"1 1\" : undefined }}\n      d={line\n        .map(\n          (score, i) =>\n            `${i ? \"L\" : \"M\"} ${i} ${\n              (1 - score / (maxScore * 1.2)) * GRAPH_BUCKETS * 0.75\n            }`\n        )\n        .join(\" \")}\n    >\n      <title>{capitalize(faction)}</title>\n    </path>\n  ));\n  const scoreTotalsDom = orderedFactions.map(([faction, score]) => (\n    <div\n      className={`faction-score-totals-row${\n        faction === teamFaction ? \" highlight\" : \"\"\n      }`}\n      onMouseEnter={() => setHoverFaction(faction)}\n      onMouseLeave={() => setHoverFaction(null)}\n      style={{\n        backgroundColor:\n          faction === hoverFaction ? \"rgba(255,255,255,0.5)\" : undefined,\n      }}\n      key={faction}\n    >\n      <FactionIcon faction={faction as Faction} />\n      <div className=\"faction-score-totals-score\">{score}</div>\n    </div>\n  ));\n\n  return (\n    <div className=\"faction-score-totals-display\">\n      <div>\n        <h4>Global faction scores</h4>\n      </div>\n      <div className=\"faction-score-totals-main\">\n        <svg\n          className=\"faction-score-totals-graph\"\n          viewBox={`0 0 ${GRAPH_BUCKETS} ${GRAPH_BUCKETS * 0.75}`}\n          preserveAspectRatio=\"none\"\n        >\n          {scoreGraphDom}\n        </svg>\n        <div className=\"faction-score-totals-list\">{scoreTotalsDom}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default FactionScoreTotalsDisplay;\n","import { useEffect } from \"react\";\nimport { SPEEDRUN_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport {\n  GlobalUpdatesScopeType,\n  ClientSpeedrunTimeRecord,\n  speedrunTimeToString,\n  SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH,\n} from \"game-server/global-updates\";\n\nimport {\n  useServerInterfaceController,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport {\n  useSubscribedTeam,\n  useSubscribedTeamSpeedrunLeaderboardSummary,\n} from \"stores/ClientGlobalStateStore\";\nimport TeamDisplayNameDisplay, {\n  clientTeamGlobalStateToTeamNameDisplayData,\n} from \"components/TeamDisplayNameDisplay\";\nimport \"./SpeedrunLeaderboardSummary.css\";\n\n// TODO: Take in the speedrun info as props so that we don't lose\n// data when the selected puzzle is changed in instancer while the\n// solved modal is open.\nfunction SpeedrunLeaderboardSummary({ puzName }: { puzName: string | null }) {\n  const serverInterfaceController = useServerInterfaceController();\n  const teamId = useTeamId();\n  const subscribedTeam = useSubscribedTeam();\n  const subscribedTeamSpeedrunLeaderboardSummary =\n    useSubscribedTeamSpeedrunLeaderboardSummary(puzName);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    if (puzName === null) return;\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY,\n      teamId,\n      puzName,\n    });\n  }, [serverInterfaceController, teamId, puzName]);\n\n  if (\n    subscribedTeam === null ||\n    subscribedTeamSpeedrunLeaderboardSummary === null ||\n    puzName === null\n  )\n    return null;\n\n  const { masteries } = subscribedTeam;\n  const { speedrunLeaderboardSummary, speedrunRank } =\n    subscribedTeamSpeedrunLeaderboardSummary;\n  const speedrunTime = subscribedTeam.puzzles[puzName]?.speedrunTime;\n\n  if (\n    !masteries[SPEEDRUN_MASTERY_ID].isEnabled ||\n    speedrunLeaderboardSummary === undefined ||\n    speedrunLeaderboardSummary.length <= 0 ||\n    speedrunRank === undefined ||\n    speedrunTime === undefined\n  )\n    return null;\n\n  const makeSpeedrunRecordRow = (\n    rank: number,\n    record: ClientSpeedrunTimeRecord\n  ) => (\n    <div key={record.teamData.teamId} className=\"prep-speedrun-record\">\n      <div className=\"prep-speedrun-rank-cell\">{rank}</div>\n      <div className=\"prep-speedrun-name-cell\">\n        <TeamDisplayNameDisplay teamData={record.teamData} />\n      </div>\n      <div>{speedrunTimeToString(record.speedrunTime)}</div>\n    </div>\n  );\n\n  const leaderboardDom = speedrunLeaderboardSummary\n    .slice(0, SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH)\n    .map((record, i) => makeSpeedrunRecordRow(i + 1, record));\n\n  const selfRankDom =\n    speedrunRank < SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH ? null : (\n      <>\n        {speedrunRank > SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH ? (\n          <div>⋮</div>\n        ) : null}\n        {makeSpeedrunRecordRow(speedrunRank + 1, {\n          teamData: clientTeamGlobalStateToTeamNameDisplayData(subscribedTeam),\n          speedrunTime,\n        })}\n      </>\n    );\n\n  return (\n    <div className=\"prep-speedrun\">\n      <div>\n        <h4>Top runs</h4>\n      </div>\n      {leaderboardDom}\n      {speedrunRank >= SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH ? selfRankDom : null}\n    </div>\n  );\n}\n\nexport default SpeedrunLeaderboardSummary;\n","import Tooltip from \"components/Tooltip\";\nimport {\n  createContext,\n  HTMLProps,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\nimport Twemoji from \"react-twemoji\";\nimport \"./Tabs.css\";\n\ntype Tab = {\n  label: string;\n  tooltip?: ReactNode;\n  content: ReactNode;\n  isDisabled?: boolean;\n};\n\ninterface TabsProps {\n  className?: string;\n  emptyContent?: ReactNode;\n  index?: number;\n  setIndex?: (index: number) => void;\n  items: Tab[];\n}\n\nconst TabContext = createContext<Required<TabsProps> & { allowEmpty: boolean }>(\n  {\n    allowEmpty: false,\n    className: \"tabs\",\n    emptyContent: null,\n    index: -1,\n    setIndex: () => {\n      // nothing\n    },\n    items: [],\n  }\n);\n\nfunction Container(\n  props: TabsProps & Omit<HTMLProps<HTMLDivElement>, \"onSelect\">\n) {\n  const {\n    emptyContent,\n    className = \"tabs\",\n    index: indexProp,\n    setIndex: setIndexProp,\n    items,\n    children,\n    ...rest\n  } = props;\n  const [index_, setIndex_] = useState(emptyContent ? -1 : 0);\n  const isControlled = indexProp !== undefined && setIndexProp !== undefined;\n\n  const index = isControlled ? indexProp : index_;\n  const setIndex = useCallback(\n    (index: number) => {\n      (isControlled ? setIndexProp : setIndex_)(index);\n    },\n    [isControlled, setIndexProp]\n  );\n\n  return (\n    <TabContext.Provider\n      value={{\n        allowEmpty: !!emptyContent,\n        className,\n        emptyContent: emptyContent ?? null,\n        index,\n        setIndex,\n        items,\n      }}\n    >\n      <div className={`${className}-tabbed`} {...rest}>\n        {children}\n      </div>\n    </TabContext.Provider>\n  );\n}\n\nfunction ButtonList(props: HTMLProps<HTMLDivElement>) {\n  const { className } = useContext(TabContext);\n\n  return (\n    <div\n      {...props}\n      className={`${className}-tabs tabs-tabs ${props.className}`}\n    />\n  );\n}\n\nfunction Buttons({\n  makeProps,\n  overridden,\n}: {\n  makeProps?: (index: number) => Omit<HTMLProps<HTMLButtonElement>, \"type\">;\n  overridden?: boolean;\n}) {\n  const { allowEmpty, className, index, setIndex, items } =\n    useContext(TabContext);\n\n  const renderButtons = useCallback(\n    (selected: number) => {\n      const makeButton = (item: Tab, index: number) => {\n        const isActive = !overridden && index === selected;\n        return (\n          <Tooltip\n            key={item.label}\n            text={item.tooltip}\n            directRef={(tooltipProps) => (\n              <button\n                {...makeProps?.(index)}\n                key={item.label}\n                className={`${className}-tab tabs-tab ${\n                  isActive ? \"active\" : \"inactive\"\n                }`}\n                onClick={() => setIndex(isActive ? -1 : index)}\n                disabled={item.isDisabled || (allowEmpty ? false : isActive)}\n                {...tooltipProps}\n              >\n                <Twemoji>{item.label}</Twemoji>\n              </button>\n            )}\n          />\n        );\n      };\n      return <>{items.map(makeButton)}</>;\n    },\n    [allowEmpty, className, items, makeProps, setIndex, overridden]\n  );\n\n  return <>{renderButtons(index)}</>;\n}\n\nfunction Content() {\n  const { emptyContent, index, items } = useContext(TabContext);\n  const elt =\n    0 <= index && index < items.length ? items[index].content : emptyContent;\n  return <>{elt}</>;\n}\n\nfunction Tabbed(\n  props: TabsProps & Omit<HTMLProps<HTMLDivElement>, \"onSelect\">\n) {\n  return (\n    <Container {...props}>\n      <ButtonList>\n        <Buttons />\n      </ButtonList>\n      <div className={`${props.className}-content`}>\n        <Content />\n      </div>\n    </Container>\n  );\n}\n\nconst Tabs = {\n  Buttons,\n  ButtonList,\n  Container,\n  Content,\n  Tabbed,\n};\n\nexport default Tabs;\n","import \"./BattleControl.css\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nimport { Player } from \"engine/types/game-state\";\nimport { getFailText } from \"engine/types/action-validation\";\nimport {\n  PUZ_NAME_PVP,\n  PUZ_NAME_POST_FINAL_BATTLE,\n} from \"engine/puzzles/puzzle-data\";\nimport { GlobalStateBattleRoomStatus } from \"game-server/global-updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport {\n  useSubscribedTeam,\n  useSubscribedBattleStatus,\n  useSelectedDeckData,\n  useSelectedPuzName,\n  useSelectedBattleGroup,\n} from \"stores/ClientGlobalStateStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\nimport { usePuzName } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport Tooltip from \"components/Tooltip\";\nimport { useState } from \"react\";\nimport { ConfirmModal } from \"components/Modal\";\nimport settings from \"settings\";\nimport Twemoji from \"react-twemoji\";\n\ninterface BattleControlProps {\n  player: Player;\n}\n\nfunction BattleControl(props: BattleControlProps) {\n  const { player } = props;\n  const serverInterfaceController = useServerInterfaceController();\n  const navigate = useNavigate();\n\n  const puzName = usePuzName();\n  const selectedPuzName = useSelectedPuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useSelectedBattleGroup();\n  const battleStatus = useSubscribedBattleStatus(puzName);\n  const selectedDeckData = useSelectedDeckData(player);\n\n  const [searchParams] = useSearchParams();\n  const [showEndConfirm, setShowEndConfirm] = useState(false);\n\n  if (battleGroup === null || subscribedTeam === null) return null;\n\n  const { selectedDeckFailedChecks, isDeckLocked } = selectedDeckData;\n  const { isCutscene = false } = battleGroup;\n  const { puzzles } = subscribedTeam;\n  const isSolved =\n    selectedPuzName !== null &&\n    puzzles[selectedPuzName].solveTime !== undefined;\n\n  const isBattle = !isCutscene && !isPvP;\n\n  const onJoin = () => {\n    if (puzName === null) return;\n    navigate({\n      pathname: `../${isCutscene ? \"cutscene\" : \"battle\"}/${puzName}`,\n      search: searchParams.toString(),\n    });\n  };\n\n  const onStart = () => {\n    if (puzName === null) return;\n    navigate({\n      pathname: `../${isCutscene ? \"cutscene\" : \"battle\"}/${puzName}/start`,\n      search: searchParams.toString(),\n    });\n  };\n\n  const onEnd = () => {\n    if (puzName === null) return;\n    serverInterfaceController.sendReq({\n      type: WSReqType.RESIGN,\n      player,\n      puzName,\n    });\n  };\n\n  const onPvpUnlock = () =>\n    serverInterfaceController.sendReq({\n      type: WSReqType.PVP_UNLOCK_DECK,\n    });\n\n  // text, onClick, label\n  const buttons: [string, (() => void) | undefined, string][] = [];\n\n  if (battleStatus === GlobalStateBattleRoomStatus.ACTIVE) {\n    buttons.push([\n      `Join your teammates in the ${isCutscene ? \"cutscene\" : \"battle\"}!`,\n      onJoin,\n      `Join ${isCutscene ? \"cutscene\" : \"battle\"}`,\n    ]);\n    if (!isPvP) {\n      buttons.push([\n        `End the ${isCutscene ? \"cutscene\" : \"battle\"}.`,\n        () => setShowEndConfirm(true),\n        \"End\",\n      ]);\n    }\n  }\n  if (battleStatus !== GlobalStateBattleRoomStatus.ACTIVE) {\n    if (isPvP && isDeckLocked) {\n      buttons.push([\n        \"Unlock your deck. This cancels any outgoing requests.\",\n        onPvpUnlock,\n        \"Unlock deck\",\n      ]);\n    }\n    if (!isPvP && !isSpectating) {\n      const failText = getFailText(selectedDeckFailedChecks);\n      const text =\n        selectedPuzName === null\n          ? `Select a battle/cutscene.`\n          : failText\n          ? `${failText} Pick a valid deck.`\n          : isSolved\n          ? `You’ve already completed this ${\n              isCutscene ? \"cutscene\" : \"battle\"\n            }, but you may ${isCutscene ? \"watch\" : \"play\"} it again.`\n          : `${isCutscene ? \"Watch the cutscene!\" : \"Start the battle!\"}`;\n      const label = `${isSolved ? \"Replay\" : isCutscene ? \"Watch\" : \"Start\"} ${\n        isCutscene ? \"cutscene\" : \"battle\"\n      }!`;\n      buttons.push([text, failText ? undefined : onStart, label]);\n    }\n    if (isCutscene) {\n      buttons.push([\"\", undefined, \"End\"]);\n    }\n  }\n  if (isBattle) {\n    switch (battleStatus) {\n      case GlobalStateBattleRoomStatus.INACTIVE: {\n        buttons.push([\"View the final field.\", onJoin, \"View\"]);\n        break;\n      }\n      case GlobalStateBattleRoomStatus.NONE: {\n        buttons.push([\"\", undefined, \"End\"]);\n        break;\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"prep-battle-control\">\n        {selectedPuzName === PUZ_NAME_POST_FINAL_BATTLE && isSolved ? (\n          <Tooltip\n            text=\"Skip to end.\"\n            directRef={(props) => (\n              <a href={`${settings.djangoBaseUrl}victory`} {...props}>\n                <button>\n                  <Twemoji style={{ fontSize: \"2em\" }}>🥧️</Twemoji>\n                </button>\n              </a>\n            )}\n          />\n        ) : null}\n        {buttons.map(([text, onClick, label]) => (\n          <Tooltip\n            key={label}\n            text={text}\n            directRef={(props) => (\n              <button onClick={onClick} disabled={!onClick} {...props}>\n                {label}\n              </button>\n            )}\n          ></Tooltip>\n        ))}\n      </div>\n      <ConfirmModal\n        title=\"Are you sure?\"\n        isOpen={showEndConfirm}\n        onClose={() => setShowEndConfirm(false)}\n        onConfirm={onEnd}\n        confirmLabel=\"End\"\n      >\n        Are you sure you want to end this {isCutscene ? \"cutscene\" : \"battle\"}?\n      </ConfirmModal>\n    </>\n  );\n}\n\nexport default BattleControl;\n","import Twemoji from \"react-twemoji\";\nimport \"./BattleStatus.css\";\n\nimport Tooltip from \"components/Tooltip\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_PVP,\n} from \"engine/puzzles/puzzle-data\";\nimport { GlobalStateBattleRoomStatus } from \"game-server/global-updates\";\nimport settings from \"settings\";\nimport {\n  useSelectedBattleGroup,\n  useSubscribedBattleStatus,\n  useSubscribedTeam,\n  useIsAdminOrHuntOver,\n} from \"stores/ClientGlobalStateStore\";\nimport { usePuzName } from \"stores/NavStore\";\n\nfunction BattleStatus() {\n  const { djangoBaseUrl } = settings;\n\n  const puzName = usePuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const selectedBattleGroup = useSelectedBattleGroup();\n  const subscribedTeam = useSubscribedTeam();\n  const battleStatus = useSubscribedBattleStatus(puzName);\n  const isAdminOrHuntOver = useIsAdminOrHuntOver();\n\n  if (\n    subscribedTeam === null ||\n    selectedBattleGroup === null ||\n    isAdminOrHuntOver === null\n  )\n    return null;\n\n  const { battleGroupName, isCutscene = false } = selectedBattleGroup;\n  const { puzzles, masteries, hintsInfo } = subscribedTeam;\n  const { numHintsUsed, numHintsTotal } = hintsInfo;\n  const numHintsRemaining = numHintsTotal - numHintsUsed;\n  const isBattleGroupSolved = puzzles[battleGroupName].solveTime !== undefined;\n\n  const hasMasteries = puzzles[PUZ_NAME_MASTERY_TREE] !== undefined;\n  const hasFactions = masteries[FACTIONS_MASTERY_ID].isEnabled !== undefined;\n  const choicesText = (() => {\n    const choices = [\n      hasFactions ? \"faction\" : undefined,\n      \"deck\",\n      hasMasteries ? \"masteries\" : undefined,\n    ].filter((s): s is string => !!s);\n\n    if (choices.length > 1) {\n      choices[choices.length - 1] = `and ${choices[choices.length - 1]}`;\n    }\n    return choices.join(choices.length > 2 ? \", \" : \" \");\n  })();\n\n  return (\n    <div className=\"battle-status\">\n      <div className=\"battle-status-message\">\n        {!isCutscene && battleStatus === GlobalStateBattleRoomStatus.ACTIVE ? (\n          <Tooltip\n            text={`The ${choicesText} for the battle are locked. Changes to them won't affect the current battle.`}\n          >\n            <Twemoji>⚠️ Battle is ongoing!</Twemoji>\n          </Tooltip>\n        ) : null}\n      </div>\n      <div className=\"battle-status-buttons\">\n        {!isCutscene && !isPvP && (settings.isPosthunt || isAdminOrHuntOver) ? (\n          <>\n            <a href={`${djangoBaseUrl}solution/${battleGroupName}`}>\n              <button>Solution</button>\n            </a>\n            <a href={`${djangoBaseUrl}stats/${battleGroupName}`}>\n              <button>Stats</button>\n            </a>\n          </>\n        ) : null}\n        {!settings.isPosthunt && !isCutscene && isBattleGroupSolved ? (\n          <a href={`${djangoBaseUrl}solve/${battleGroupName}`}>\n            <button>Leave feedback</button>\n          </a>\n        ) : null}\n        {numHintsTotal && !isCutscene && !isPvP && !isBattleGroupSolved ? (\n          <a href={`${djangoBaseUrl}hints/${battleGroupName}`}>\n            <button>\n              {numHintsRemaining ? \"Get a hint\" : \"View hints\"} (\n              {numHintsRemaining}\n              <Twemoji tag=\"span\">💡</Twemoji>)\n            </button>\n          </a>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default BattleStatus;\n","import \"./DeckCardDisplay.css\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport { DeckUpdate, getDeckCardCount } from \"engine/types/decks\";\nimport { Player } from \"engine/types/game-state\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport {\n  useSubscribedTeam,\n  useSubscribedDeck,\n} from \"stores/ClientGlobalStateStore\";\nimport { useSelectedCardData } from \"stores/TurnStore\";\nimport { useSlot } from \"stores/NavStore\";\nimport { WSReqType } from \"game-server/ws\";\nimport { isCardLegendary, isDeckUpdateValid } from \"game-server/deckbuilding\";\nimport { useRef, useEffect } from \"react\";\nimport { useUserPreferencesStore } from \"stores/UserPreferencesStore\";\nimport {\n  useResetSelectedCard,\n  useSelectCardHandAllCardsAvailable,\n} from \"stores/UserGameActionHandlers\";\nimport { Spinner } from \"components/Loading\";\n\ninterface DeckCardDisplayProps {\n  name: string;\n  size: CardSize;\n  isEditingPriority?: boolean;\n  resetIsEditingPriority?: () => void;\n}\n\nfunction DeckCardDisplay(props: DeckCardDisplayProps) {\n  const { name, size, isEditingPriority, resetIsEditingPriority } = props;\n  const serverInterfaceController = useServerInterfaceController();\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const subscribedTeam = useSubscribedTeam();\n  const slot = useSlot();\n  const deck = useSubscribedDeck(slot);\n\n  // TODO: should we be using this store?\n  const { name: selectedName } = useSelectedCardData() ?? { name: null };\n  const setSelected = useSelectCardHandAllCardsAvailable();\n  const resetSelected = useResetSelectedCard();\n\n  const showAnimate = useUserPreferencesStore(\n    (state) => state.showDeckbuildingAnimation\n  );\n\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const isMouseOver = (mouseX: number, mouseY: number, rect: DOMRect) => {\n    return (\n      mouseX >= rect.left &&\n      mouseX <= rect.right &&\n      mouseY >= rect.top &&\n      mouseY <= rect.bottom\n    );\n  };\n\n  const isSelected = selectedName === name;\n  const toggleSelected = () =>\n    isSelected ? resetSelected() : setSelected(Player.P1, name);\n\n  // WE ARE SO BACK\n  const BALATRO_DAMPEN = 10;\n  const BALATRO_SHINY_OPACITY = 0.4;\n\n  // lerp a value from ranges x to ranges y\n  function interpolate(input: number, x: number[], y: number[]): number {\n    if (x.length !== y.length) {\n      throw new Error(\"Input and output arrays must have the same length\");\n    }\n\n    if (input <= x[0]) {\n      return y[0];\n    }\n\n    if (input >= x[x.length - 1]) {\n      return y[y.length - 1];\n    }\n\n    let startIndex = 0;\n    while (input > x[startIndex + 1]) {\n      startIndex++;\n    }\n\n    const endIndex = startIndex + 1;\n\n    const x0 = x[startIndex];\n    const x1 = x[endIndex];\n    const y0 = y[startIndex];\n    const y1 = y[endIndex];\n\n    const interpolatedValue = y0 + ((input - x0) / (x1 - x0)) * (y1 - y0);\n\n    return interpolatedValue;\n  }\n\n  // setup BALATRO listener\n  useEffect(() => {\n    if (!cardRef.current) return;\n    if (size !== CardSize.LARGE) return;\n\n    const card = cardRef.current;\n\n    const resetStyle = () => {\n      card.style.backgroundImage = \"\";\n      card.style.transform = \"rotateX(0deg) rotateY(0deg)\";\n    };\n    resetStyle();\n\n    if (!showAnimate || isSelected) {\n      resetStyle();\n      return;\n    }\n\n    // BALATRO animation\n    const handleMouseMove = (e: MouseEvent) => {\n      const rect = card.getBoundingClientRect();\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n\n      if (!isMouseOver(mouseX, mouseY, rect)) {\n        resetStyle();\n        return;\n      }\n\n      const rotateX = -(mouseY - rect.top - rect.height / 2) / BALATRO_DAMPEN;\n      const rotateY = (mouseX - rect.left - rect.width / 2) / BALATRO_DAMPEN;\n      const diagonalMovement = rotateX + rotateY;\n\n      const sheenPosition = interpolate(diagonalMovement, [-5, 5], [-100, 200]);\n      const sheenOpacity = interpolate(\n        sheenPosition,\n        [-100, 49, 50, 51, 200],\n        [0, BALATRO_SHINY_OPACITY, 0, BALATRO_SHINY_OPACITY, 0]\n      );\n      // const sheenOpacity = BALATRO_SHINY_OPACITY;\n\n      const sheenPosition1 = sheenPosition - 50;\n      const sheenPosition2 = sheenPosition - 30;\n      const sheenPosition3 = sheenPosition - 10;\n      const sheenPosition4 = sheenPosition + 10;\n      const sheenPosition5 = sheenPosition + 30;\n      const sheenPosition6 = sheenPosition + 50;\n      const sheenGradient = `linear-gradient(55deg, transparent, rgba(255, 100, 100, ${sheenOpacity}) ${sheenPosition1}%, rgba(255, 255, 100, ${sheenOpacity}) ${sheenPosition2}%, rgba(100, 255, 100, ${sheenOpacity}) ${sheenPosition3}%, rgba(100, 255, 255, ${sheenOpacity}) ${sheenPosition}%, rgba(100, 100, 255, ${sheenOpacity}) ${sheenPosition4}%, rgba(255, 100, 255, ${sheenOpacity}) ${sheenPosition5}%, rgba(255, 100, 100, ${sheenOpacity}) ${sheenPosition6}%, transparent)`;\n      card.style.backgroundImage = isCardLegendary(name) ? sheenGradient : \"\";\n      card.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [showAnimate, name, size, isSelected]);\n\n  if (subscribedTeam === null || deck === null)\n    return <Spinner size={48} inline={true} />;\n\n  const cardUnlocks = new Set(Object.keys(subscribedTeam.cardUnlocks));\n  const count = getDeckCardCount(deck, name);\n\n  const increaseCountStep: DeckUpdate = {\n    cards: {\n      [name]: count + 1,\n    },\n  };\n  const decreaseCountStep: DeckUpdate = {\n    cards: {\n      [name]: count - 1,\n    },\n  };\n  const increaseCount = () => {\n    serverInterfaceController.sendReq({\n      type: WSReqType.DECKBUILDING_STEP,\n      slot,\n      deckUpd: increaseCountStep,\n    });\n  };\n  const decreaseCount = () => {\n    serverInterfaceController.sendReq({\n      type: WSReqType.DECKBUILDING_STEP,\n      slot,\n      deckUpd: decreaseCountStep,\n    });\n  };\n  const setPriority = () => {\n    serverInterfaceController.sendReq({\n      type: WSReqType.DECKBUILDING_STEP,\n      slot,\n      deckUpd: { priorityCard: name },\n    });\n    resetIsEditingPriority?.();\n  };\n\n  const renderQuantity = () => {\n    if (isEditingPriority) {\n      return <button onClick={setPriority}>Choose</button>;\n    }\n\n    return (\n      <>\n        <button\n          disabled={\n            !isDeckUpdateValid(decreaseCountStep, deck, cardUnlocks, cardsDB)\n          }\n          onClick={decreaseCount}\n        >\n          ◀\n        </button>\n        <div className=\"deck-card-quantity-value\">{count}×</div>\n        <button\n          disabled={\n            !isDeckUpdateValid(increaseCountStep, deck, cardUnlocks, cardsDB)\n          }\n          onClick={increaseCount}\n        >\n          ▶\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"deck-card-display\">\n      <div className=\"deck-card-quantity\">{renderQuantity()}</div>\n      <div className=\"deck-card-motion\" ref={cardRef}>\n        <div className=\"deck-card\" onClick={toggleSelected}>\n          <CardDisplay\n            highlighted={isSelected}\n            size={size}\n            cardName={name}\n            disableScroll={!isSelected}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckCardDisplay;\n","import \"./CollectionDisplay.css\";\nimport { useState } from \"react\";\nimport { CardSize } from \"components/CardDisplay\";\nimport ALL_CARDS from \"engine/cards/all-cards-client\";\nimport DeckCardDisplay from \"./DeckCardDisplay\";\nimport { isCardValidForDeckbuilding } from \"game-server/deckbuilding\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { CardData, ColorSymbol } from \"engine/types/card-data\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  CollectionSort,\n  useUserPreferencesStore,\n} from \"stores/UserPreferencesStore\";\nimport { Spinner } from \"components/Loading\";\n\nenum CollectionFilter {\n  ALL = \"all\",\n  LEGENDARIES = \"legendaries\",\n  NON_LEGENDARIES = \"non-legendaries\",\n  RED = \"R\",\n  YELLOW = \"Y\",\n  GREEN = \"G\",\n  PURPLE = \"P\",\n  WHITEBLACK = \"W/B\",\n}\n\nfunction colorValue(card: CardData) {\n  switch (card.color) {\n    case ColorSymbol.RED:\n      return 0;\n    case ColorSymbol.YELLOW:\n      return 1;\n    case ColorSymbol.GREEN:\n      return 2;\n    case ColorSymbol.PURPLE:\n      return 3;\n    case ColorSymbol.WHITE:\n      return 4;\n    case ColorSymbol.BLACK:\n      return 5;\n    case ColorSymbol.WHITEBLACK:\n      return 6;\n    default:\n      return 7;\n  }\n}\n\nfunction nameCompare(a: CardData, b: CardData): number {\n  return a.name.localeCompare(b.name);\n}\n\nfunction costCompare(a: CardData, b: CardData): number {\n  const aCost = a.cost.length;\n  const bCost = b.cost.length;\n  if (aCost !== bCost) {\n    return aCost - bCost;\n  }\n  return nameCompare(a, b);\n}\n\nfunction colorCompare(a: CardData, b: CardData): number {\n  const aVal = colorValue(a);\n  const bVal = colorValue(b);\n  if (aVal !== bVal) {\n    return aVal - bVal;\n  }\n  return costCompare(a, b);\n}\n\nfunction CollectionDisplay() {\n  const showAnimate = useUserPreferencesStore(\n    (state) => state.showDeckbuildingAnimation\n  );\n  const setShowAnimate = useUserPreferencesStore(\n    (state) => state.setShowDeckbuildingAnimation\n  );\n  const size = useUserPreferencesStore((state) => state.cardSize);\n  const setSize = useUserPreferencesStore((state) => state.setCardSize);\n  const sort = useUserPreferencesStore((state) => state.collectionSort);\n  const setSort = useUserPreferencesStore((state) => state.setCollectionSort);\n  const [filter, setFilter] = useState(CollectionFilter.ALL);\n\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const subscribedTeam = useSubscribedTeam();\n  const inspector = useStaticInspector();\n  // TODO: don't filter all cards\n  // TODO: sorting\n\n  if (subscribedTeam === null) return <Spinner size={128} inline={true} />;\n\n  const cardUnlocks = new Set(Object.keys(subscribedTeam.cardUnlocks));\n  const hasLegendary = !!Object.values(subscribedTeam.cardUnlocks).find(\n    ({ cardName }) => inspector.isLegendary(cardName)\n  );\n\n  const currentSort =\n    sort === CollectionSort.ALPHABETICAL\n      ? nameCompare\n      : sort === CollectionSort.COLOR\n      ? colorCompare\n      : costCompare;\n\n  return (\n    <div className=\"collection-display\">\n      <div className=\"collection-header\">\n        <div className=\"collection-options\">\n          <label htmlFor=\"sort-filter\">\n            Filter:{\" \"}\n            <select\n              name=\"sort-filter\"\n              value={filter}\n              onChange={(e) => setFilter(e.target.value as CollectionFilter)}\n            >\n              <option value={CollectionFilter.ALL}>All</option>\n              {hasLegendary ? (\n                <>\n                  <option value={CollectionFilter.LEGENDARIES}>\n                    Legendaries\n                  </option>\n                  <option value={CollectionFilter.NON_LEGENDARIES}>\n                    Non-legendaries\n                  </option>\n                </>\n              ) : null}\n              <option value={CollectionFilter.RED}>Boars</option>\n              <option value={CollectionFilter.YELLOW}>Bees</option>\n              <option value={CollectionFilter.GREEN}>Dinosaurs</option>\n              <option value={CollectionFilter.PURPLE}>Dryads</option>\n              <option value={CollectionFilter.WHITEBLACK}>Cows</option>\n            </select>\n          </label>\n          <label htmlFor=\"sort-select\">\n            Sort:{\" \"}\n            <select\n              name=\"sort-select\"\n              value={sort}\n              onChange={(e) => setSort(e.target.value as CollectionSort)}\n            >\n              <option value={CollectionSort.ALPHABETICAL}>Alphabetical</option>\n              <option value={CollectionSort.COST}>Cost</option>\n              <option value={CollectionSort.COLOR}>Faction</option>\n            </select>\n          </label>\n          <label htmlFor=\"size-select\">\n            Size:{\" \"}\n            <select\n              name=\"size-select\"\n              value={size}\n              onChange={(e) => setSize(e.target.value as CardSize)}\n            >\n              <option value={CardSize.LARGE}>Large</option>\n              <option value={CardSize.NORMAL}>Medium</option>\n              <option value={CardSize.SMALL_FIELD}>Small</option>\n            </select>\n          </label>\n          <label htmlFor=\"toggle-animate\">\n            Animate:{\" \"}\n            <input\n              type=\"checkbox\"\n              name=\"toggle-animate\"\n              checked={showAnimate}\n              onChange={() => setShowAnimate(!showAnimate)}\n            />\n          </label>\n        </div>\n      </div>\n      <div className={`collection-cards ${size}`}>\n        {ALL_CARDS.filter((cardData) =>\n          isCardValidForDeckbuilding(cardData.name, cardUnlocks, cardsDB)\n        )\n          .filter(\n            (cardData) =>\n              filter === CollectionFilter.ALL ||\n              (filter === CollectionFilter.LEGENDARIES &&\n                inspector.isLegendary(cardData)) ||\n              (filter === CollectionFilter.NON_LEGENDARIES &&\n                !inspector.isLegendary(cardData)) ||\n              // @ts-expect-error: enum strings manually match\n              filter === cardData.color ||\n              (filter === CollectionFilter.WHITEBLACK &&\n                (cardData.color === ColorSymbol.WHITE ||\n                  cardData.color === ColorSymbol.BLACK))\n          )\n          .sort(currentSort)\n          .map(({ name }) => (\n            <DeckCardDisplay key={name} name={name} size={size} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CollectionDisplay;\n","import Tooltip from \"components/Tooltip\";\nimport { Check, FailedChecks } from \"engine/types/action-validation\";\nimport { getDeckSize } from \"engine/types/decks\";\nimport { Player } from \"engine/types/game-state\";\nimport { getDeckUniqueLegendaries } from \"game-server/deckbuilding\";\nimport Twemoji from \"react-twemoji\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useSubscribedDeck,\n  useSubscribedTeam,\n} from \"stores/ClientGlobalStateStore\";\nimport { useSlot } from \"stores/NavStore\";\nimport \"./DeckStats.css\";\n\nfunction DeckStats() {\n  const slot = useSlot();\n  const deck = useSubscribedDeck(slot);\n  const inspector = useStaticInspector();\n  const subscribedTeam = useSubscribedTeam();\n\n  if (!deck || !subscribedTeam) return null;\n\n  const numCards = getDeckSize(deck);\n  const maxNumCards = inspector.getMaxNumCards();\n\n  const { cardUnlocks } = subscribedTeam;\n  const numLegendariesBefriended = Object.values(cardUnlocks).filter(\n    ({ cardName }) => inspector.isLegendary(cardName)\n  ).length;\n  const hasLegendariesUnlocked = numLegendariesBefriended > 0;\n  const numLegendaries = getDeckUniqueLegendaries(deck);\n  const maxNumLegendaries = inspector.getMaxNumLegendaries();\n\n  const failedChecks: FailedChecks = new Set();\n  // No harm always using P1, since this is symmetric the only place\n  // where this matters (PvP)\n  inspector.validateDeck(failedChecks, Player.P1, deck);\n  // Show failed checks in order.\n  const failedChecksStr = [\n    Check.DECK_TOO_SMALL,\n    Check.DECK_TOO_LARGE,\n    Check.DECK_TOO_MANY_LEGENDARIES,\n  ]\n    .filter((failedCheck) => failedChecks.has(failedCheck))\n    .map((failedCheck) => {\n      switch (failedCheck) {\n        case Check.DECK_TOO_SMALL:\n          return \"Too few cards.\";\n        case Check.DECK_TOO_LARGE:\n          return \"Too many cards.\";\n        case Check.DECK_TOO_MANY_LEGENDARIES:\n          return \"Too many Legendaries.\";\n      }\n      throw new Error(\"unrecognized deckbuilding failed check\");\n    })\n    .join(\"\\n\");\n\n  return (\n    <div className=\"deck-stats\">\n      <div>\n        <span\n          className={\n            numCards === 0 || numCards > maxNumCards\n              ? \"deck-sidebar-text-invalid\"\n              : numCards === maxNumCards\n              ? \"deck-sidebar-text-full\"\n              : undefined\n          }\n        >\n          <b>{numCards}</b> / {maxNumCards}\n        </span>{\" \"}\n        cards\n      </div>\n      {hasLegendariesUnlocked ? (\n        <div>\n          <span\n            className={\n              numLegendaries > maxNumLegendaries\n                ? \"deck-sidebar-text-invalid\"\n                : numLegendaries === maxNumLegendaries\n                ? \"deck-sidebar-text-full\"\n                : undefined\n            }\n          >\n            <b>{numLegendaries}</b> / {maxNumLegendaries}\n          </span>{\" \"}\n          unique Legendary cards\n        </div>\n      ) : null}\n      {failedChecksStr ? (\n        <Tooltip className=\"failed-checks\" text={failedChecksStr}>\n          <Twemoji>❌</Twemoji>\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n}\n\nexport default DeckStats;\n","import \"./PriorityCard.css\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport Tooltip from \"components/Tooltip\";\n\ninterface PriorityCardProps {\n  priorityCard?: string;\n  isEditingPriority?: boolean;\n  startEditingPriority?: () => void;\n  resetPriorityCard?: () => void;\n}\n\nfunction PriorityCard(props: PriorityCardProps) {\n  const {\n    priorityCard,\n    isEditingPriority = false,\n    startEditingPriority,\n    resetPriorityCard,\n  } = props;\n\n  return (\n    <div\n      className={`deck-priority-display ${\n        startEditingPriority ? \"can-edit\" : \"\"\n      }`}\n    >\n      <Tooltip\n        text=\"The Priority Card is moved to the top of the draw pile at the start of each battle.\"\n        style={{ height: \"unset\", gridColumn: \"2 / 3\" }}\n      >\n        <b>Priority Card:</b>\n        {!priorityCard && !isEditingPriority ? \" None.\" : null}\n      </Tooltip>\n      {!priorityCard && !isEditingPriority && startEditingPriority ? (\n        <button onClick={startEditingPriority} style={{ gridColumn: \"2 / 3\" }}>\n          Choose Priority Card\n        </button>\n      ) : null}\n      {!priorityCard && isEditingPriority ? (\n        <button onClick={resetPriorityCard} style={{ gridColumn: \"2 / 3\" }}>\n          Cancel\n        </button>\n      ) : null}\n      {priorityCard && !isEditingPriority ? (\n        <>\n          {startEditingPriority ? (\n            <div className=\"deck-card-quantity\" style={{ gridColumn: \"1 / 2\" }}>\n              <button onClick={startEditingPriority}>Change</button>\n            </div>\n          ) : null}\n          <div className=\"deck-card\" style={{ gridColumn: \"2 / 3\" }}>\n            <CardDisplay size={CardSize.SMALL} cardName={priorityCard} />\n          </div>\n        </>\n      ) : null}\n      {priorityCard && isEditingPriority ? (\n        <button onClick={resetPriorityCard} style={{ gridColumn: \"2 /3\" }}>\n          Remove Priority Card\n        </button>\n      ) : null}\n    </div>\n  );\n}\n\nexport default PriorityCard;\n","import { CardSize } from \"components/CardDisplay\";\nimport { Spinner } from \"components/Loading\";\nimport Tooltip from \"components/Tooltip\";\nimport { PRIORITY_CARD_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useState } from \"react\";\nimport Twemoji from \"react-twemoji\";\nimport {\n  useSubscribedDeck,\n  useSubscribedTeam,\n  useSubscribedTeamBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport { useSlot } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport DeckCardDisplay from \"./DeckCardDisplay\";\nimport \"./DeckDisplay.css\";\nimport DeckStats from \"./DeckStats\";\nimport PriorityCard from \"./PriorityCard\";\n\nfunction DeckDisplay() {\n  const [isEditingPriority, setIsEditingPriority] = useState(false);\n  const serverInterfaceController = useServerInterfaceController();\n  const slot = useSlot();\n  const subscribedTeam = useSubscribedTeam();\n  const deck = useSubscribedDeck(slot);\n  const { lockedDeckSelection = null } = useSubscribedTeamBattle() ?? {};\n\n  if (subscribedTeam === null || deck === null)\n    return <Spinner size={48} inline={true} />;\n\n  const { masteries } = subscribedTeam;\n  const isPriorityCardEnabled = masteries[PRIORITY_CARD_MASTERY_ID].isEnabled;\n\n  const resetPriorityCard = () => {\n    serverInterfaceController.sendReq({\n      type: WSReqType.DECKBUILDING_STEP,\n      slot,\n      deckUpd: { deletePriorityCard: true },\n    });\n    setIsEditingPriority(false);\n  };\n\n  return (\n    <div className=\"deck-display\">\n      <div className=\"deck-display-header\">\n        <h2>\n          Deck{\" \"}\n          {lockedDeckSelection !== null && lockedDeckSelection.slot === slot ? (\n            <Tooltip text=\"This deck is locked; changes below won't affect the ongoing battle.\">\n              <Twemoji>🔒</Twemoji>\n            </Tooltip>\n          ) : null}\n        </h2>\n        <button\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.DECKBUILDING_STEP,\n              slot,\n              deckUpd: {\n                clear: true,\n              },\n            });\n          }}\n        >\n          Clear deck\n        </button>\n      </div>\n      {isPriorityCardEnabled ? (\n        <PriorityCard\n          priorityCard={deck.priorityCard}\n          isEditingPriority={isEditingPriority}\n          startEditingPriority={() => setIsEditingPriority(true)}\n          resetPriorityCard={resetPriorityCard}\n        />\n      ) : null}\n      <div className=\"deck-cards\">\n        {Object.keys(deck.cards)\n          .sort()\n          .map((name) => (\n            <DeckCardDisplay\n              key={name}\n              name={name}\n              size={CardSize.SMALL}\n              isEditingPriority={isEditingPriority}\n              resetIsEditingPriority={() => setIsEditingPriority(false)}\n            />\n          ))}\n      </div>\n      <DeckStats />\n    </div>\n  );\n}\n\nexport default DeckDisplay;\n","import { useZoomedCard } from \"stores/ZoomCardStore\";\nimport { useInspector, usePlayerPerspective } from \"stores/ClientGameStore\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\n\nfunction ZoomedCardDisplay() {\n  const card = useZoomedCard();\n  const inspector = useInspector();\n  const playerPerspective = usePlayerPerspective();\n  if (!card) {\n    return <CardDisplay size={CardSize.LARGE} faceDown={false} />;\n  }\n\n  const { cardName, permanentId } = card;\n  // The permanentId may refer to a stale permanent, so resolve\n  // it first before passing into CardDisplay.\n  const permanent =\n    permanentId === undefined\n      ? null\n      : inspector.getPermanentIfExists(permanentId);\n\n  return (\n    <CardDisplay\n      isOwner={permanent !== null && permanent.owner === playerPerspective}\n      size={CardSize.LARGE}\n      cardName={cardName}\n      permanent={permanent ?? undefined}\n      disableHoverZoom={true}\n    />\n  );\n}\n\nexport default ZoomedCardDisplay;\n","import { create } from \"zustand\";\n\nexport interface DeckbuildingStoreState {\n  displayNameInput: string | null;\n  setDisplayNameInput: (displayNameInput: string | null) => void;\n}\n\nexport const useDeckbuildingStore = create<DeckbuildingStoreState>(\n  (set, get) => ({\n    displayNameInput: null,\n    setDisplayNameInput: (displayNameInput) => {\n      set({ displayNameInput });\n    },\n  })\n);\n","import { PuzzleLink } from \"components/Link\";\nimport { ConfirmModal } from \"components/Modal\";\nimport Tooltip from \"components/Tooltip\";\nimport ZoomedCardDisplay from \"components/ZoomedCardDisplay\";\nimport { DeckList } from \"components/PrepDisplay/DeckSelection\";\nimport { PUZ_NAME_PVP } from \"engine/puzzles/puzzle-data\";\nimport { Check, FailedChecks } from \"engine/types/action-validation\";\nimport { Player } from \"engine/types/game-state\";\nimport { GlobalStateBattleRoomStatus } from \"game-server/global-updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useSubscribedBattleStatus,\n  useSubscribedDeck,\n  useSubscribedTeam,\n  useSelectedDeckData,\n} from \"stores/ClientGlobalStateStore\";\nimport { useDeckbuildingStore } from \"stores/DeckbuildingStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\nimport { usePuzName, useSlot } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useZoomedCard } from \"stores/ZoomCardStore\";\nimport \"./DeckSidebar.css\";\n\nfunction CardSource() {\n  const card = useZoomedCard();\n  const subscribedTeam = useSubscribedTeam();\n  const empty = <div>&nbsp;</div>;\n  if (!card || !subscribedTeam) return empty;\n  const { cardName } = card;\n  const { battleGroups, cardUnlocks, puzzles } = subscribedTeam;\n  const puzName = cardUnlocks[cardName]?.puzName;\n  if (!puzName) return empty;\n  // Special case to ignore card unlock attributions if the\n  // puzzle is locked or unsolved.\n  if (puzzles[puzName]?.solveTime === undefined) return empty;\n  const battleGroupName = puzzles[puzName]?.battleGroupName;\n  if (!battleGroupName) return empty;\n  const displayName = battleGroups[battleGroupName]?.displayName;\n  if (!displayName) return empty;\n  return (\n    <div className=\"card-source\">\n      from{\" \"}\n      <PuzzleLink\n        battleGroupName={battleGroupName}\n        hasAnswer={puzzles[puzName].hasAnswer ?? false}\n      >\n        {displayName}\n      </PuzzleLink>\n    </div>\n  );\n}\n\nfunction DeckSidebar() {\n  const { displayNameInput, setDisplayNameInput } = useDeckbuildingStore();\n  const navigate = useNavigate();\n  const slot = useSlot();\n  const deck = useSubscribedDeck(slot);\n  const serverInterfaceController = useServerInterfaceController();\n  const [searchParams] = useSearchParams();\n  const inspector = useStaticInspector();\n  const puzName = usePuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const battleStatus = useSubscribedBattleStatus(puzName);\n  const [showEndConfirm, setShowEndConfirm] = useState(false);\n  const isBattleActive =\n    battleStatus === null\n      ? false\n      : battleStatus === GlobalStateBattleRoomStatus.ACTIVE;\n  const { selectedDeckSlot = null } = useSelectedDeckData(Player.P1);\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n\n  const displayName = deck === null ? null : deck.displayName;\n\n  const onStart = () => {\n    navigate({\n      pathname: `../battle/${puzName}/start/${slot}`,\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    if (displayName === null) return;\n    // Keep the display name input in sync if the display name\n    // changes due to external sources.\n    setDisplayNameInput(displayName);\n  }, [displayName, setDisplayNameInput]);\n\n  if (deck === null) return null;\n\n  const failedChecks: FailedChecks = new Set();\n  inspector.validateDeck(failedChecks, Player.P1, deck);\n  const failedChecksStr = [\n    Check.DECK_TOO_SMALL,\n    Check.DECK_TOO_LARGE,\n    Check.DECK_TOO_MANY_LEGENDARIES,\n  ]\n    .filter((failedCheck) => failedChecks.has(failedCheck))\n    .map((failedCheck) => {\n      switch (failedCheck) {\n        case Check.DECK_TOO_SMALL:\n          return \"Too few cards.\";\n        case Check.DECK_TOO_LARGE:\n          return \"Too many cards.\";\n        case Check.DECK_TOO_MANY_LEGENDARIES:\n          return \"Too many Legendaries.\";\n      }\n      throw new Error(\"unrecognized deckbuilding failed check\");\n    })\n    .join(\"\\n\");\n\n  return (\n    <div className=\"deck-sidebar\">\n      <ZoomedCardDisplay />\n      <CardSource />\n      <div className=\"deck-sidebar-buttons\">\n        {displayNameInput === null ? null : (\n          <input\n            className=\"deck-sidebar-input\"\n            type=\"text\"\n            value={displayNameInput}\n            onChange={(e) => {\n              setDisplayNameInput(e.target.value);\n            }}\n            onBlur={() => {\n              if (displayNameInput !== deck.displayName) {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.DECKBUILDING_STEP,\n                  slot,\n                  deckUpd: {\n                    displayName: displayNameInput,\n                  },\n                });\n              }\n            }}\n          />\n        )}\n        <Link\n          to={{\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          }}\n        >\n          <button>Back</button>\n        </Link>\n        {isBattleActive ? (\n          <>\n            <div className=\"battle-status\">\n              <Twemoji>⚠️ Battle is ongoing!</Twemoji>\n            </div>\n            <Link\n              to={{\n                pathname: `../battle/${puzName}`,\n                search: searchParams.toString(),\n              }}\n            >\n              <button className=\"battle-button\">Join battle</button>\n            </Link>\n            {isPvP || isSpectating ? null : (\n              <Tooltip text={failedChecksStr}>\n                <button\n                  onClick={() => setShowEndConfirm(true)}\n                  disabled={failedChecks.size > 0}\n                >\n                  Restart with this deck\n                </button>\n              </Tooltip>\n            )}\n          </>\n        ) : isPvP || isSpectating ? null : (\n          <Tooltip text={failedChecksStr}>\n            <button\n              className=\"battle-button\"\n              onClick={() => onStart()}\n              disabled={failedChecks.size > 0}\n            >\n              Start battle!\n            </button>\n          </Tooltip>\n        )}\n      </div>\n      <DeckList\n        player={Player.P1}\n        disabledExcept={null}\n        highlightedDeckSlot={slot}\n        secondaryHighlightedDeckSlot={selectedDeckSlot}\n        lockedDeckSlot={null}\n        context=\"collection\"\n      />\n      <ConfirmModal\n        title=\"Are you sure?\"\n        isOpen={showEndConfirm}\n        onClose={() => setShowEndConfirm(false)}\n        onConfirm={() => {\n          navigate({\n            pathname: `../battle/${puzName}/restart/${slot}`,\n            search: searchParams.toString(),\n          });\n        }}\n        confirmLabel=\"Restart\"\n      >\n        This will end the current battle.\n      </ConfirmModal>\n    </div>\n  );\n}\n\nexport default DeckSidebar;\n","import \"./DeckSelection.css\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\n\nimport { createNewDeck, Deck } from \"engine/types/decks\";\nimport { Player } from \"engine/types/game-state\";\nimport {\n  Check,\n  FailedChecks,\n  getFailText,\n} from \"engine/types/action-validation\";\nimport { Role } from \"engine/types/updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useSelectedPuzName,\n  useSelectedDeckData,\n  useSubscribedTeam,\n  useSubscribedTeamBattle,\n  useSubscribedBattleStatus,\n} from \"stores/ClientGlobalStateStore\";\nimport { useNavStore, usePuzName } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useCallback, useMemo } from \"react\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport { PriorityCard } from \"components/DeckCollection\";\nimport Tooltip from \"components/Tooltip\";\nimport { PRIORITY_CARD_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport {\n  PUZ_NAME_PVP,\n  PUZ_NAME_TUTORIAL_DECKBUILDING,\n} from \"engine/puzzles/puzzle-data\";\nimport { GlobalStateBattleRoomStatus } from \"game-server/global-updates\";\n\ninterface DeckListDeckProps {\n  player: Player;\n  deck: Deck;\n  slot: number;\n  isLocked: boolean;\n  isDisabled: boolean;\n  secondaryHighlight: boolean;\n  highlight: boolean;\n  context: string;\n}\n\nfunction DeckListDeck(props: DeckListDeckProps) {\n  const {\n    deck,\n    slot,\n    player,\n    isLocked,\n    isDisabled,\n    secondaryHighlight,\n    highlight,\n    context,\n  } = props;\n\n  const [searchParams] = useSearchParams();\n  const inspector = useStaticInspector();\n  const navigate = useNavigate();\n  const puzName = usePuzName();\n  const selectedPuzName = useSelectedPuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const serverInterfaceController = useServerInterfaceController();\n  const setHoveredDeck = useNavStore((state) => state.setHoveredDeck);\n\n  const isEmpty = useMemo(() => Object.keys(deck.cards).length === 0, [deck]);\n\n  const failText = useMemo(() => {\n    const failedChecks: FailedChecks = new Set();\n    inspector.validateDeck(failedChecks, player, deck);\n    const text = getFailText(failedChecks);\n    if (\n      isPvP &&\n      text === getFailText(new Set([Check.DECK_TOO_MANY_LEGENDARIES]))\n    ) {\n      return \"Legendary cards aren’t allowed in PvP.\";\n    }\n    return text;\n  }, [deck, inspector, isPvP, player]);\n\n  const onSelect = useCallback(() => {\n    if (puzName === null) return null;\n    serverInterfaceController.sendReq({\n      type: WSReqType.SELECT_DECK_FOR_BATTLE,\n      puzName,\n      slot,\n    });\n  }, [puzName, serverInterfaceController, slot]);\n\n  const className = `deck-list-deck\n    ${highlight ? \"highlight\" : secondaryHighlight ? \"secondary-highlight\" : \"\"}\n    ${isEmpty ? \"empty\" : \"\"}\n    ${failText ? \"invalid\" : \"\"}`;\n\n  const onEdit = useCallback(() => {\n    setHoveredDeck(null);\n    navigate({\n      pathname: `../deck/${slot}/${puzName}`,\n      search: searchParams.toString(),\n    });\n  }, [navigate, puzName, searchParams, setHoveredDeck, slot]);\n\n  // Don't display a deck selection if no puzzle is selected in\n  // the instancer.\n  if (selectedPuzName === null) return null;\n\n  return (\n    <div\n      className={className}\n      onMouseEnter={() => setHoveredDeck(deck)}\n      onMouseLeave={() => setHoveredDeck(null)}\n    >\n      <button\n        className=\"deck-list-deck-btn\"\n        disabled={isDisabled}\n        onClick={context == \"prep\" ? onSelect : onEdit}\n      >\n        {deck.displayName}\n      </button>\n      {!isLocked ? null : (\n        <Tooltip text=\"Deck is locked; changes won't affect the current battle.\">\n          <button className=\"no-click\" disabled>\n            <Twemoji>🔒</Twemoji>\n          </button>\n        </Tooltip>\n      )}\n      {!failText || isEmpty ? null : (\n        <Tooltip text={failText}>\n          <button className=\"no-click\" disabled>\n            <Twemoji>❌</Twemoji>\n          </button>\n        </Tooltip>\n      )}\n      {!isEmpty ? null : (\n        <Tooltip text=\"Deck is empty.\">\n          <button className=\"no-click\" disabled>\n            <Twemoji>📭</Twemoji>\n          </button>\n        </Tooltip>\n      )}\n      {context != \"prep\" ? null : (\n        <Tooltip text=\"Edit deck.\">\n          <button className=\"deck-list-deck-edit\" onClick={onEdit}>\n            <Twemoji>✏️</Twemoji>\n          </button>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\ninterface DisplayedDeckProps {\n  player: Player;\n  canSelectDeck: boolean;\n  showPriorityCard: boolean;\n}\n\nfunction DisplayedDeck(props: DisplayedDeckProps) {\n  const { player, showPriorityCard } = props;\n  const { selectedDeck = null } = useSelectedDeckData(player) ?? {};\n  const hoveredDeck = useNavStore((state) => state.hoveredDeck);\n\n  const displayedDeck = hoveredDeck ?? selectedDeck;\n\n  return (\n    <div className=\"prep-cards\">\n      {displayedDeck === null ? (\n        \"No deck selected.\"\n      ) : (\n        <>\n          {showPriorityCard ? (\n            <PriorityCard priorityCard={displayedDeck?.priorityCard} />\n          ) : null}\n          {[...Object.keys(displayedDeck.cards)].sort().map((cardName) => {\n            return (\n              <div key={cardName} className=\"prep-card-display\">\n                <div className=\"prep-card-display-quantity\">\n                  {displayedDeck.cards[cardName]}×\n                </div>\n                <CardDisplay size={CardSize.SMALL} cardName={cardName} />\n              </div>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n}\n\ninterface DeckListProps {\n  player: Player;\n  disabledExcept: number | null;\n  lockedDeckSlot: number | null;\n  highlightedDeckSlot: number | null;\n  secondaryHighlightedDeckSlot: number | null;\n  context: string;\n}\n\nexport function DeckList(props: DeckListProps) {\n  const {\n    player,\n    disabledExcept,\n    highlightedDeckSlot,\n    secondaryHighlightedDeckSlot,\n    lockedDeckSlot,\n    context,\n  } = props;\n  const { decks } = useSelectedDeckData(player) ?? {};\n\n  return (\n    <div className=\"deck-list\">\n      {decks\n        ? decks.map((optDeck, slot) => {\n            const deck = optDeck ?? createNewDeck(slot);\n            return (\n              <DeckListDeck\n                key={slot}\n                player={player}\n                deck={deck}\n                slot={slot}\n                isDisabled={disabledExcept !== null && disabledExcept !== slot}\n                isLocked={lockedDeckSlot !== null && lockedDeckSlot === slot}\n                highlight={\n                  highlightedDeckSlot !== null && highlightedDeckSlot === slot\n                }\n                secondaryHighlight={\n                  secondaryHighlightedDeckSlot !== null &&\n                  secondaryHighlightedDeckSlot === slot\n                }\n                context={context}\n              />\n            );\n          })\n        : \"Decks loading...\"}\n    </div>\n  );\n}\n\ninterface DeckSelectionProps {\n  role: Role;\n  player: Player;\n}\n\nfunction DeckSelection(props: DeckSelectionProps) {\n  const { role, player } = props;\n  const selectedPuzName = useSelectedPuzName();\n  const subscribedTeam = useSubscribedTeam();\n  const subscribedTeamBattle = useSubscribedTeamBattle();\n  const {\n    canSelectDeck = false,\n    selectedDeckSlot = null,\n    isDeckLocked = false,\n  } = useSelectedDeckData(player) ?? {};\n  const puzName = usePuzName();\n  const battleStatus = useSubscribedBattleStatus(puzName);\n\n  const { activeGame } = subscribedTeamBattle ?? {};\n  const showPriorityCard = activeGame\n    ? activeGame.enabledMasteries[PRIORITY_CARD_MASTERY_ID] ?? false\n    : subscribedTeam?.masteries[PRIORITY_CARD_MASTERY_ID].isEnabled ?? false;\n\n  // Don't display a deck selection if no puzzle is selected in\n  // the instancer.\n  if (selectedPuzName === null) return null;\n  if (!canSelectDeck) return null;\n\n  return (\n    <>\n      <DisplayedDeck\n        player={player}\n        canSelectDeck={canSelectDeck}\n        showPriorityCard={showPriorityCard}\n      />\n      <DeckList\n        player={player}\n        disabledExcept={\n          isDeckLocked\n            ? selectedDeckSlot\n            : // HACK: The deckbuilding tutorial accepts no deck, so\n            // it needs to disable all decks even though none of\n            // them are locked.\n            battleStatus === GlobalStateBattleRoomStatus.ACTIVE &&\n              selectedPuzName === PUZ_NAME_TUTORIAL_DECKBUILDING\n            ? -1\n            : null\n        }\n        highlightedDeckSlot={selectedDeckSlot}\n        secondaryHighlightedDeckSlot={null}\n        lockedDeckSlot={isDeckLocked ? selectedDeckSlot : null}\n        context=\"prep\"\n      />\n    </>\n  );\n}\n\nexport default DeckSelection;\n","import CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport Tooltip from \"components/Tooltip\";\nimport { useCardUnlocksForSelectedPuzzle } from \"stores/ClientGlobalStateStore\";\nimport \"./Friends.css\";\n\nfunction Friends() {\n  const cardUnlocksForPuzzle = useCardUnlocksForSelectedPuzzle();\n\n  if (!cardUnlocksForPuzzle) return null;\n  if (cardUnlocksForPuzzle.length === 0) return null;\n\n  const cardUnlocksDom = cardUnlocksForPuzzle.map((cardName) => {\n    return (\n      <Tooltip\n        key={cardName}\n        placement=\"right\"\n        into={true}\n        noWrap={true}\n        text={\n          <CardDisplay\n            cardName={cardName}\n            size={CardSize.LARGE}\n            canZoom={false}\n          />\n        }\n      >\n        <CardDisplay\n          cardName={cardName}\n          size={CardSize.SMALL}\n          canZoom={false}\n        />\n      </Tooltip>\n    );\n  });\n\n  return (\n    <div className=\"friends-found\">\n      <h4>Friends found</h4>\n      <div className=\"friends-found-cards\">{cardUnlocksDom}</div>\n    </div>\n  );\n}\n\nexport default Friends;\n","import FactionIcon from \"components/FactionIcon\";\nimport Tooltip from \"components/Tooltip\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { capitalize } from \"engine/types/factions\";\nimport Twemoji from \"react-twemoji\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport {\n  useSubscribedTeam,\n  useSubscribedTeamBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport \"./PrepFactionDisplay.css\";\n\nfunction PrepFactionDisplay() {\n  const subscribedTeam = useSubscribedTeam();\n  const { activeGame } = useSubscribedTeamBattle() ?? {};\n  const { faction: teamFaction, masteries } = subscribedTeam ?? {};\n  const isFactionsEnabled =\n    masteries?.[FACTIONS_MASTERY_ID]?.isEnabled ?? false;\n  const [searchParams] = useSearchParams();\n\n  if (!isFactionsEnabled) return null;\n\n  const faction = activeGame?.faction ?? teamFaction;\n\n  const lock = activeGame ? (\n    <Tooltip\n      className=\"faction-lock\"\n      text=\"Faction is locked; changes won't affect the current battle.\"\n    >\n      <Twemoji>🔒</Twemoji>\n    </Tooltip>\n  ) : null;\n\n  return (\n    <>\n      {faction ? (\n        <div className=\"faction-display\">\n          {lock}\n          <b>Faction:</b> <FactionIcon faction={faction} />{\" \"}\n          {capitalize(faction)} <FactionIcon faction={faction} />\n        </div>\n      ) : (\n        <div className=\"no-faction-display\">\n          {lock} <Twemoji>⚠️</Twemoji> You don’t have a faction yet!\n        </div>\n      )}\n      <Link\n        className=\"change-faction-btn\"\n        to={{\n          pathname: `/team/${encodeURIComponent(\n            encodeURIComponent(subscribedTeam?.displayName ?? \"\")\n          )}`,\n          search: searchParams.toString(),\n        }}\n      >\n        <button className=\"secondary\">\n          {faction === null ? \"Choose a faction\" : \"Change faction\"}\n        </button>\n      </Link>\n    </>\n  );\n}\n\nexport default PrepFactionDisplay;\n","import { useEffect } from \"react\";\nimport Twemoji from \"react-twemoji\";\nimport \"./MasteriesExplorer.css\";\n\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport { MASTERY_GRID_WIDTH, MASTERY_GRID_HEIGHT } from \"game-server/masteries\";\nimport FormattedText from \"components/FormattedText\";\n\ninterface MasteriesExplorerProps {\n  enabledMasteries?: { [masteryId: string]: boolean };\n}\n\nfunction MasteriesExplorer(props: MasteriesExplorerProps) {\n  const { enabledMasteries } = props;\n  const selectedMasteryId = useNavStore((state) => state.selectedMasteryId);\n  const setSelectedMasteryId = useNavStore(\n    (state) => state.setSelectedMasteryId\n  );\n  const hoveredMasteryId = useNavStore((state) => state.hoveredMasteryId);\n  const setHoveredMasteryId = useNavStore((state) => state.setHoveredMasteryId);\n\n  const subscribedTeam = useSubscribedTeam();\n\n  useEffect(() => {\n    return () => {\n      setSelectedMasteryId(null);\n      setHoveredMasteryId(null);\n    };\n  }, [setSelectedMasteryId, setHoveredMasteryId]);\n\n  if (subscribedTeam === null) return null;\n\n  const { masteries } = subscribedTeam;\n\n  const selectMasteryDom = Object.values(masteries)\n    .sort(\n      ({ x: x1, y: y1 }, { x: x2, y: y2 }) =>\n        y1 * MASTERY_GRID_WIDTH + x1 - (y2 * MASTERY_GRID_HEIGHT + x2)\n    )\n    .map(({ masteryId, isEnabled }) => {\n      const isSelected =\n        selectedMasteryId !== null && masteryId === selectedMasteryId;\n      return (\n        <div\n          key={masteryId}\n          className={`select-mastery-button-highlight-wrapper${\n            isSelected ? \" highlight\" : \"\"\n          }`}\n        >\n          <div\n            className={`select-mastery-button-wrapper${\n              (enabledMasteries ? enabledMasteries[masteryId] : isEnabled)\n                ? \" mastery-enabled\"\n                : \"\"\n            }`}\n          >\n            <div\n              className={`select-mastery-button ${\n                isSelected ? \"selected\" : \"\"\n              }`}\n              onClick={() => {\n                if (!isSelected) {\n                  setSelectedMasteryId(masteryId);\n                } else {\n                  setSelectedMasteryId(null);\n                }\n              }}\n              onMouseEnter={() => {\n                setHoveredMasteryId(masteryId);\n              }}\n              onMouseLeave={() => {\n                setHoveredMasteryId(null);\n              }}\n            >\n              <Twemoji>🃏</Twemoji>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n  const displayedMasteryId = hoveredMasteryId ?? selectedMasteryId;\n  const isDisplayedMasteryEnabled =\n    displayedMasteryId !== null && masteries[displayedMasteryId].isEnabled;\n  const displayName =\n    displayedMasteryId === null\n      ? \"\"\n      : masteries[displayedMasteryId].displayName ?? \"???\";\n  const effectText =\n    displayedMasteryId === null\n      ? \"\"\n      : masteries[displayedMasteryId].effectText ?? \"???\";\n\n  return (\n    <div className=\"mastery-explorer\">\n      <div\n        className={`mastery-details${\n          displayedMasteryId === null ? \" blank\" : \"\"\n        }`}\n      >\n        <div className=\"mastery-title\">{displayName}</div>\n        <div className=\"mastery-text\">\n          <FormattedText\n            text={effectText}\n            opts={{\n              ignoreKeywords: true,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"select-mastery-buttons\">{selectMasteryDom}</div>\n    </div>\n  );\n}\n\nexport default MasteriesExplorer;\n","import MasteriesExplorer from \"components/MasteriesExplorer\";\nimport Tooltip from \"components/Tooltip\";\nimport { PUZ_NAME_MASTERY_TREE } from \"engine/puzzles/puzzle-data\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\nimport {\n  useSubscribedTeam,\n  useSubscribedTeamBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport { usePuzName } from \"stores/NavStore\";\nimport \"./PrepMasteries.css\";\n\nfunction PrepMasteries() {\n  const puzName = usePuzName();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const subscribedTeam = useSubscribedTeam();\n  const { activeGame } = useSubscribedTeamBattle() ?? {};\n\n  const { puzzles } = subscribedTeam ?? {};\n  const isMasteryTreeEnabled = puzzles?.[PUZ_NAME_MASTERY_TREE] !== undefined;\n\n  const toMasteries = () =>\n    navigate({\n      pathname: `../mastery/${puzName}`,\n      search: searchParams.toString(),\n    });\n\n  if (!isMasteryTreeEnabled) return null;\n\n  const lock = activeGame ? (\n    <Tooltip\n      text=\"Masteries are locked; changes won't affect the current battle.\"\n      directRef={(props) => (\n        <div {...props} className=\"masteries-lock\">\n          <Twemoji>🔒</Twemoji>\n        </div>\n      )}\n    />\n  ) : null;\n\n  return (\n    <>\n      <div className=\"prep-masteries\">\n        <MasteriesExplorer enabledMasteries={activeGame?.enabledMasteries} />\n        {lock}\n      </div>\n      <button className=\"prep-masteries-btn secondary\" onClick={toMasteries}>\n        Select masteries\n      </button>\n    </>\n  );\n}\n\nexport default PrepMasteries;\n","import { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\n\nimport {\n  BATTLE_GROUP_NAME_MOONICK,\n  MOONICK_UNLOCK_GROUPING,\n  MOONICK_UNLOCK_THRESHOLDS,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  ClientPuzzleGlobalState,\n  GlobalStateBattleRoomStatus,\n} from \"game-server/global-updates\";\n\nimport Tooltip from \"components/Tooltip\";\nimport {\n  useSubscribedTeam,\n  useSelectedPuzName,\n  useSelectedBattleGroup,\n  useIsInstancer,\n  usePuzzlesInSelectedBattleGroup,\n} from \"stores/ClientGlobalStateStore\";\nimport { usePuzName } from \"stores/NavStore\";\n\nimport \"./SubpuzzleSelection.css\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { WSReqType } from \"game-server/ws\";\n\ninterface SubpuzzleButtonProps {\n  puzData: ClientPuzzleGlobalState;\n  puzIndex: number;\n}\n\nfunction SubpuzzleButton(props: SubpuzzleButtonProps) {\n  const { puzData, puzIndex } = props;\n\n  const pagePuzName = usePuzName();\n  const selectedPuzName = useSelectedPuzName();\n  const isInstancer = useIsInstancer() ?? false;\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const serverInterfaceController = useServerInterfaceController();\n  const subscribedTeam = useSubscribedTeam();\n\n  const { puzName, solveTime, roomStatus, isNew } = puzData ?? {};\n\n  const isSelected = selectedPuzName === puzData?.puzName;\n  const isSolved = solveTime !== undefined;\n  const className = `prep-puz-selection-btn ${isSelected ? \"highlight\" : \"\"} ${\n    isSolved ? \"solve-highlight\" : \"\"\n  }`;\n  const isInstancerRoomActive =\n    isInstancer &&\n    subscribedTeam !== null &&\n    subscribedTeam.puzzles[pagePuzName].roomStatus ===\n      GlobalStateBattleRoomStatus.ACTIVE;\n\n  const goToPuzzle = isInstancer\n    ? () => {\n        if (isInstancerRoomActive) return;\n        serverInterfaceController.sendReq({\n          type: WSReqType.SELECT_PUZZLE,\n          hostPuzName: pagePuzName,\n          selectedPuzName: puzData.puzName,\n        });\n      }\n    : () =>\n        navigate(\n          {\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          },\n          { replace: true }\n        );\n\n  const {\n    text,\n    disabled = false,\n    label,\n  } = (() => {\n    if (puzName === undefined) {\n      return {\n        text: \"Locked.\",\n        disabled: true,\n        label: `${puzIndex}🔒`,\n      };\n    }\n\n    if (\n      isInstancer\n        ? isInstancerRoomActive && puzName === selectedPuzName\n        : roomStatus === GlobalStateBattleRoomStatus.ACTIVE\n    ) {\n      return {\n        text: \"Battle in progress.\",\n        label: `${puzIndex}⚔️`,\n        disabled: isInstancerRoomActive,\n      };\n    }\n\n    if (isNew) {\n      return {\n        text: \"New battle!\",\n        label: `${puzIndex}✨`,\n        disabled: isInstancerRoomActive,\n      };\n    }\n\n    if (isSolved) {\n      return {\n        text: \"Done!\",\n        label: `${puzIndex}`,\n        disabled: isInstancerRoomActive,\n      };\n    }\n\n    return {\n      text: undefined,\n      label: `${puzIndex}`,\n      disabled: isInstancerRoomActive,\n    };\n  })();\n\n  return (\n    <div className=\"prep-puz-selection-btn-wrapper\">\n      <Tooltip text={text}>\n        <button className={className} disabled={disabled} onClick={goToPuzzle}>\n          <Twemoji className=\"prep-puz-selection-btn-content\">{label}</Twemoji>\n        </button>\n      </Tooltip>\n    </div>\n  );\n}\n\nfunction SubpuzzleSelection() {\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useSelectedBattleGroup();\n  const puzzlesInBattleGroup = usePuzzlesInSelectedBattleGroup();\n  const selectedPuzName = useSelectedPuzName();\n\n  const { battleGroupName = null, numPuzzles = 1 } = battleGroup ?? {};\n  const isMoonick =\n    battleGroupName !== null && battleGroupName === BATTLE_GROUP_NAME_MOONICK;\n  const unlockGrouping = useMemo(\n    () => (isMoonick ? MOONICK_UNLOCK_GROUPING : [numPuzzles]),\n    [isMoonick, numPuzzles]\n  );\n  const puzIndex =\n    puzzlesInBattleGroup === null\n      ? null\n      : puzzlesInBattleGroup.findIndex(\n          (puzData) => puzData.puzName === selectedPuzName\n        );\n\n  const [activeRow, setActiveRow] = useState(0);\n\n  useEffect(() => {\n    if (puzIndex === null) return;\n    if (battleGroupName === null) return;\n    if (puzIndex === null) return;\n    let curRow = 0;\n    let rowStartIndex = 0;\n    while (puzIndex >= rowStartIndex + unlockGrouping[curRow]) {\n      rowStartIndex += unlockGrouping[curRow];\n      curRow++;\n    }\n    setActiveRow(curRow);\n  }, [puzIndex, battleGroupName, setActiveRow, unlockGrouping]);\n\n  if (\n    subscribedTeam === null ||\n    battleGroup === null ||\n    puzzlesInBattleGroup === null\n  )\n    return null;\n\n  if (numPuzzles === 1) return null;\n\n  const firstPuz = unlockGrouping\n    .slice(0, activeRow)\n    .reduce((acc, cur) => acc + cur, 0);\n  const puzzlesToShow = puzzlesInBattleGroup\n    .concat(Array(numPuzzles).fill(undefined))\n    .slice(firstPuz, firstPuz + unlockGrouping[activeRow]);\n\n  const rowDom = puzzlesToShow.map((data, idx) => (\n    <SubpuzzleButton\n      key={firstPuz + idx}\n      puzData={data}\n      puzIndex={firstPuz + idx + 1}\n    />\n  ));\n\n  const nextTooltip = !isMoonick\n    ? undefined\n    : activeRow >= 3\n    ? undefined\n    : puzzlesInBattleGroup.length <=\n      MOONICK_UNLOCK_GROUPING.slice(0, activeRow + 1).reduce(\n        (acc, cur) => acc + cur,\n        0\n      )\n    ? `Solve ${MOONICK_UNLOCK_THRESHOLDS[activeRow]} of ${MOONICK_UNLOCK_GROUPING[activeRow]} to unlock the next phase.`\n    : undefined;\n\n  return (\n    <div className=\"prep-puz-selection\">\n      {activeRow > 0 ? (\n        <button\n          className=\"prep-puz-selection-row-btn\"\n          onClick={() => setActiveRow(activeRow - 1)}\n        >\n          «\n        </button>\n      ) : null}\n      <div className=\"prep-puz-selection-row\">{rowDom}</div>\n      {activeRow < unlockGrouping.length - 1 ? (\n        <Tooltip\n          text={nextTooltip}\n          directRef={(props) => (\n            <button\n              className=\"prep-puz-selection-row-btn\"\n              onClick={() => setActiveRow(activeRow + 1)}\n              {...props}\n            >\n              »\n            </button>\n          )}\n        ></Tooltip>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SubpuzzleSelection;\n","import { useEffect, useState } from \"react\";\nimport \"./PrepRight.css\";\n\nimport FactionScoreTotalsDisplay from \"components/FactionScoreTotalsDisplay\";\nimport SpeedrunLeaderboardSummary from \"components/SpeedrunLeaderboardSummary\";\nimport Tabs from \"components/Tabs\";\nimport {\n  FACTIONS_MASTERY_ID,\n  SPEEDRUN_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { Player } from \"engine/types/game-state\";\nimport { Role } from \"engine/types/updates\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useSelectedBattleGroup,\n  useSelectedPuzName,\n  useSubscribedTeam,\n  useSelectedDeckData,\n  useCardUnlocksForSelectedPuzzle,\n} from \"stores/ClientGlobalStateStore\";\nimport BattleControl from \"./BattleControl\";\nimport BattleStatus from \"./BattleStatus\";\nimport DeckSelection from \"./DeckSelection\";\nimport Friends from \"./Friends\";\nimport PrepFactionDisplay from \"./PrepFactionDisplay\";\nimport PrepMasteries from \"./PrepMasteries\";\nimport SubpuzzleSelection from \"./SubpuzzleSelection\";\n\nconst useWindowDimensions = () => {\n  const [height, setHeight] = useState(window.innerHeight);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const onResize = () => {\n      setHeight(window.innerHeight);\n      setWidth(window.innerWidth);\n    };\n    onResize();\n    window.addEventListener(\"resize\", onResize, { passive: true });\n    return () => window.removeEventListener(\"resize\", onResize);\n  });\n\n  return { height, width };\n};\n\ninterface PrepRightProps {\n  role: Role;\n  player: Player;\n}\n\nfunction PrepRight(props: PrepRightProps) {\n  const { role, player } = props;\n  const inspector = useStaticInspector();\n\n  const selectedPuzName = useSelectedPuzName();\n  const battleGroup = useSelectedBattleGroup();\n  const { isCutscene = false } = battleGroup ?? {};\n\n  const subscribedTeam = useSubscribedTeam();\n  const { faction, masteries, puzzles } = subscribedTeam ?? {};\n  const cardUnlocksForPuzzle = useCardUnlocksForSelectedPuzzle();\n\n  const isFactionsEnabled =\n    masteries?.[FACTIONS_MASTERY_ID]?.isEnabled ?? false;\n  const isSpeedrunEnabled =\n    masteries?.[SPEEDRUN_MASTERY_ID]?.isEnabled ?? false;\n  const hasStats =\n    (isFactionsEnabled && faction !== null) ||\n    (isSpeedrunEnabled &&\n      selectedPuzName !== null &&\n      (puzzles ?? {})[selectedPuzName]?.solveTime !== undefined) ||\n    (cardUnlocksForPuzzle !== null && cardUnlocksForPuzzle.length > 0);\n\n  const { canSelectDeck = false } = useSelectedDeckData(player);\n\n  const { height } = useWindowDimensions();\n  const isTall = (height: number) => {\n    return height > 880;\n  };\n  const [activeTab, setActiveTab] = useState(isTall(height) ? -1 : 0);\n\n  useEffect(() => {\n    if (isTall(height)) {\n      if (activeTab !== -1) setActiveTab(-1);\n    } else {\n      if (activeTab === -1) setActiveTab(0);\n    }\n  }, [activeTab, height]);\n\n  const tabItems = [\n    {\n      label: \"Battle\",\n      content: (\n        <>\n          <PrepFactionDisplay />\n          <DeckSelection role={role} player={player} />\n          <PrepMasteries />\n        </>\n      ),\n    },\n    {\n      label: \"Stats\",\n      content: (\n        <>\n          <FactionScoreTotalsDisplay />\n          <SpeedrunLeaderboardSummary puzName={selectedPuzName} />\n          <Friends />\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"prep-right\">\n      <SubpuzzleSelection />\n      {!isCutscene && activeTab !== -1 && hasStats ? (\n        <Tabs.Tabbed\n          className=\"prep\"\n          index={activeTab}\n          setIndex={(index) => setActiveTab(index)}\n          style={{\n            minHeight: canSelectDeck\n              ? `calc(12 * var(--deck-row-height) + 5.25em)`\n              : `12em`,\n          }}\n          items={tabItems}\n        />\n      ) : (\n        <div\n          className=\"prep-tabbed prep-content\"\n          style={{\n            minHeight: canSelectDeck\n              ? `calc(12 * var(--deck-row-height) + 5.25em)`\n              : `12em`,\n          }}\n        >\n          {isCutscene ? null : <PrepFactionDisplay />}\n          <DeckSelection role={role} player={player} />\n          {isCutscene ? null : <PrepMasteries />}\n          {isCutscene ? null : <FactionScoreTotalsDisplay />}\n          {isCutscene ? null : (\n            <SpeedrunLeaderboardSummary puzName={selectedPuzName} />\n          )}\n          <Friends />\n        </div>\n      )}\n      <BattleStatus />\n      <BattleControl player={player} />\n    </div>\n  );\n}\n\nexport default PrepRight;\n","import { Player } from \"engine/types/game-state\";\nimport { Role } from \"engine/types/updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useClientGlobalStateStore,\n  useSelectedPuzName,\n  useBattleGroup,\n  useIsInstancer,\n  useSubscribedTeam,\n  usePuzzlesInBattleGroup,\n  useIsValidBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { useNavStore, usePuzName } from \"stores/NavStore\";\nimport {\n  useServerInteractionStore,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport {\n  useUserPreferencesStore,\n  useIsAdminEnabledStore,\n} from \"stores/UserPreferencesStore\";\nimport \"./PrepPage.css\";\n\nimport { getInitAutoPrepOpts } from \"App.util\";\nimport BattleBackground from \"components/BattleBackground\";\nimport PrepDisplay from \"components/PrepDisplay\";\nimport { InstancerNotice, PvPNotice } from \"components/PrepDisplay/PrepDisplay\";\nimport PrepRight from \"components/PrepDisplay/PrepRight\";\nimport Modal from \"components/Modal\";\nimport { LargeSpinner } from \"components/Loading\";\nimport { getUnlockableCards } from \"engine/types/card-data\";\nimport {\n  PUZ_NAME_PVP,\n  BATTLE_GROUP_NAME_INSTANCER,\n  PUZ_NAME_FINAL_BATTLE,\n  NUM_LEGENDARIES,\n} from \"engine/puzzles/puzzle-data\";\nimport { toastr } from \"Globals\";\nimport settings from \"settings\";\n\nfunction PrepPage() {\n  const [isUnmounted, setIsUnmounted] = useState(false);\n  // Don't use useRole here as that only gets updated in game once\n  // the role is received from the server.\n  const role = settings.role ?? Role.P1;\n  const player = role === Role.P2 ? Player.P2 : Player.P1;\n\n  const setSubscribedTeamBattle = useGlobalSubscriptionStore(\n    (state) => state.setSubscribedTeamBattle\n  );\n  const subscribedTeamBattle = useClientGlobalStateStore(\n    (state) => state.globalState.subscribedTeamBattle\n  );\n  const serverInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  )();\n  const teamId = useTeamId();\n  const puzName = usePuzName();\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const selectedPuzName = useSelectedPuzName();\n  const setHoveredMasteryId = useNavStore((state) => state.setHoveredMasteryId);\n  const setSelectedMasteryId = useNavStore(\n    (state) => state.setSelectedMasteryId\n  );\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n\n  const subscribedTeam = useSubscribedTeam();\n  const setSubscribedTeamDecksTeamId = useGlobalSubscriptionStore(\n    (state) => state.setSubscribedTeamDecksTeamId\n  );\n  const setNeedAdmin = useGlobalSubscriptionStore(\n    (state) => state.setNeedAdmin\n  );\n\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const inspector = useStaticInspector();\n  const battleGroup = useBattleGroup();\n  const isInstancer = useIsInstancer() ?? false;\n  const isInstancerModalOpen = useNavStore(\n    (state) => state.isInstancerModalOpen\n  );\n  const setIsInstancerModalOpen = useNavStore(\n    (state) => state.setIsInstancerModalOpen\n  );\n  const hasClosedInstancerModal = useUserPreferencesStore(\n    (state) => state.hasClosedInstancerModal\n  );\n  const setHasClosedInstancerModal = useUserPreferencesStore(\n    (state) => state.setHasClosedInstancerModal\n  );\n  const lastInstancerRoom = useUserPreferencesStore(\n    (state) => state.lastInstancerRoom\n  );\n  const setLastInstancerRoom = useUserPreferencesStore(\n    (state) => state.setLastInstancerRoom\n  );\n  const isPvPModalOpen = useNavStore((state) => state.isPvPModalOpen);\n  const setIsPvPModalOpen = useNavStore((state) => state.setIsPvPModalOpen);\n  const hasClosedPvPModal = useUserPreferencesStore(\n    (state) => state.hasClosedPvPModal\n  );\n  const setHasClosedPvPModal = useUserPreferencesStore(\n    (state) => state.setHasClosedPvPModal\n  );\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n\n  // Only used in posthunt, where we have access to all puzzles.\n  // Detect if we are in an sub-battle that is not unlocked,\n  // and if so, redirect to the origin battle group, if unlocked.\n  const allPuzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const battleGroupName = allPuzzles[puzName]?.battleGroupName ?? null;\n  const puzzlesInBattleGroup = usePuzzlesInBattleGroup();\n  const isDummy =\n    battleGroup === null\n      ? null\n      : (battleGroup.numPuzzles ?? 1) > 1 && puzName === battleGroupName;\n  const isStageLocked = !settings.isPosthunt\n    ? false\n    : subscribedTeam === null ||\n      subscribedTeamBattle === null ||\n      Object.keys(allPuzzles).length === 0\n    ? null\n    : selectedPuzName !== null &&\n      allPuzzles[selectedPuzName] !== undefined &&\n      subscribedTeam.puzzles[selectedPuzName] === undefined &&\n      subscribedTeam.puzzles[allPuzzles[selectedPuzName].battleGroupName] !==\n        undefined;\n\n  const isUnknownBattle =\n    Object.keys(allPuzzles).length !== 0 &&\n    subscribedTeam !== null &&\n    (battleGroupName === null ||\n      subscribedTeam.puzzles[battleGroupName] === undefined ||\n      subscribedTeam.puzzles[battleGroupName].hasAnswer);\n  const isValidBattle = useIsValidBattle();\n\n  useEffect(() => {\n    if (!settings.isPosthunt) return;\n    setNeedAdmin(true);\n  }, [setNeedAdmin]);\n\n  useEffect(() => {\n    if (!hasClosedInstancerModal) setIsInstancerModalOpen(isInstancer);\n    return () => {\n      setIsInstancerModalOpen(false);\n    };\n  }, [isInstancer, hasClosedInstancerModal, setIsInstancerModalOpen]);\n\n  useEffect(() => {\n    if (!hasClosedPvPModal) setIsPvPModalOpen(isPvP);\n    return () => {\n      setIsPvPModalOpen(false);\n    };\n  }, [hasClosedPvPModal, setIsPvPModalOpen, isPvP]);\n\n  useEffect(() => {\n    if (!isInstancer) return;\n    if (puzName === null) return;\n    if (puzName === BATTLE_GROUP_NAME_INSTANCER) return;\n    setLastInstancerRoom(puzName);\n  }, [isInstancer, puzName, setLastInstancerRoom]);\n\n  // For dummy puzzles, direct the user to the first unsolved battle in\n  // the group, otherwise the last solved puzzle.\n  const redirectPuzName = ((): string | null => {\n    if (subscribedTeam === null || isUnknownBattle) return null;\n\n    const { puzzles } = subscribedTeam;\n\n    if (isStageLocked !== null && isStageLocked) {\n      if (selectedPuzName === null)\n        throw new Error(\n          \"selectedPuzName should be non-null if isStageLocked is set\"\n        );\n      return allPuzzles[selectedPuzName].battleGroupName;\n    }\n\n    if (isDummy === null || !isDummy || puzzlesInBattleGroup === null)\n      return null;\n\n    if (puzzlesInBattleGroup.length <= 0)\n      throw new Error(\"expect puzzles in battle group if battle is known\");\n    if (\n      battleGroupName !== null &&\n      battleGroupName === BATTLE_GROUP_NAME_INSTANCER &&\n      lastInstancerRoom !== null\n    )\n      return lastInstancerRoom;\n\n    const unsolvedPuzzles = puzzlesInBattleGroup.filter(\n      ({ puzName: otherPuzName }) =>\n        puzzles[otherPuzName].solveTime === undefined\n    );\n    return (\n      unsolvedPuzzles.length > 0 ? unsolvedPuzzles[0] : puzzlesInBattleGroup[0]\n    ).puzName;\n  })();\n\n  const navigateToBattlePage = useCallback(() => {\n    navigate({\n      pathname: `../battle/${puzName}`,\n      search: searchParams.toString(),\n    });\n  }, [puzName, searchParams, navigate]);\n\n  useEffect(() => {\n    if (isUnknownBattle) {\n      toastr.error(`Invalid battle \"${puzName}\".`);\n      navigate(\n        {\n          pathname: `../map`,\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n    }\n    if (redirectPuzName !== null) {\n      navigate(\n        {\n          pathname: `../prep/${redirectPuzName}`,\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n      return;\n    }\n  }, [isUnknownBattle, navigate, puzName, redirectPuzName, searchParams]);\n\n  useEffect(() => {\n    if (serverInterfaceController === null) return;\n    if (teamId === null) return;\n    if (isValidBattle === null || !isValidBattle) return;\n    return serverInterfaceController.addAuthEffect(() => {\n      let isCanceled = false;\n      (async () => {\n        const autoPrepOpts = getInitAutoPrepOpts(teamId, {\n          puzName,\n          role,\n        });\n        const res = await serverInterfaceController.autoPrepAsync(autoPrepOpts);\n        if (isUnmounted || !res || isCanceled) return;\n        if (autoPrepOpts.readyForBattlePuzName !== undefined)\n          navigateToBattlePage();\n      })();\n      return () => {\n        isCanceled = true;\n      };\n    });\n  }, [\n    serverInterfaceController,\n    teamId,\n    puzName,\n    role,\n    isUnmounted,\n    navigateToBattlePage,\n    isValidBattle,\n  ]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    setSubscribedTeamDecksTeamId(teamId);\n  }, [teamId, setSubscribedTeamDecksTeamId]);\n\n  useEffect(() => {\n    if (serverInterfaceController === null) return;\n    if (isValidBattle === null || !isValidBattle) return;\n    if (isSpectating) return;\n    if (selectedPuzName === null) return;\n    return serverInterfaceController.addAuthEffect(() => {\n      serverInterfaceController.sendReq({\n        type: WSReqType.VIEW_PUZZLE,\n        puzName: selectedPuzName,\n      });\n    });\n  }, [selectedPuzName, isValidBattle, serverInterfaceController, isSpectating]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    if (puzName === null) return;\n    if (isValidBattle === null || !isValidBattle) return;\n    setSubscribedTeamBattle({\n      teamId,\n      puzName,\n    });\n  }, [setSubscribedTeamBattle, teamId, puzName, isValidBattle]);\n\n  useEffect(() => {\n    setIsUnmounted(false);\n    return () => setIsUnmounted(true);\n  }, []);\n\n  if (settings.isPublicAccess) {\n    const { djangoBaseUrl } = settings;\n    return (\n      <div className=\"below-nav public-access-not-supported\">\n        <h2>{battleGroup?.displayName}</h2>\n        <div className=\"public-access-not-supported-message\">\n          Battles and cutscenes are not yet supported in public access. You may\n          still access solutions and stats pages. Please create or use an\n          existing account to gain access to puzzle content.\n        </div>\n        {!(battleGroup?.isCutscene ?? false) && !isPvP && !isInstancer ? (\n          <>\n            <div className=\"public-access-not-supported-buttons\">\n              <a href={`${djangoBaseUrl}solution/${battleGroupName}`}>\n                <button>Solution</button>\n              </a>\n              <a href={`${djangoBaseUrl}stats/${battleGroupName}`}>\n                <button>Stats</button>\n              </a>\n            </div>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n\n  if (settings.isPosthunt && isPvP) {\n    return (\n      <div className=\"below-nav public-access-not-supported\">\n        <h2>{battleGroup?.displayName}</h2>\n        <div className=\"public-access-not-supported-message\">\n          Unfortunately, the PvP arena is not supported at this time. The PvP\n          arena does not have any impact on hunt progress, and is not required\n          to solve any puzzles.\n        </div>\n      </div>\n    );\n  }\n\n  if (\n    serverInterfaceController === null ||\n    subscribedTeam === null ||\n    subscribedTeamBattle === null ||\n    battleGroup === null ||\n    !isValidBattle ||\n    teamId === null\n  )\n    return <LargeSpinner />;\n  const { puzzles, cardUnlocks } = subscribedTeam;\n  // Show the interface in the transition period when we're switching\n  // between battles in the same battle group, but not when we're\n  // entering a new battle group.\n  if (\n    puzzles[subscribedTeamBattle.puzName]?.battleGroupName !==\n    battleGroup.battleGroupName\n  )\n    return <LargeSpinner />;\n\n  return (\n    <>\n      <BattleBackground />\n      <div className=\"below-nav\">\n        <div\n          className={`prep-root${isPvP ? \" prep-root-pvp\" : \"\"}${\n            isInstancerModalOpen ? \" unfocused\" : \"\"\n          }`}\n          onClickCapture={(e) => {\n            if (e.target instanceof HTMLElement) {\n              const parent = e.target.parentElement;\n              const grandparent = parent?.parentElement;\n              if (\n                grandparent &&\n                grandparent.classList.contains(\"select-mastery-button\") &&\n                grandparent.classList.contains(\"selected\")\n              ) {\n                setSelectedMasteryId(null);\n                setHoveredMasteryId(null);\n                e.stopPropagation();\n                return;\n              }\n              if (parent && parent.classList.contains(\"mastery-details\")) {\n                return;\n              }\n              setSelectedMasteryId(null);\n            }\n          }}\n        >\n          <div className=\"prep-left-wrapper\">\n            <PrepDisplay role={role} player={player} />\n          </div>\n          <div className=\"prep-right-wrapper\">\n            {selectedPuzName === PUZ_NAME_FINAL_BATTLE &&\n            Object.keys(cardUnlocks).filter((cardName) =>\n              inspector.isLegendary(cardName)\n            ).length < NUM_LEGENDARIES ? (\n              <div className=\"prep-final-battle-notice\">\n                <div>\n                  During the hunt, this battle would not unlock until all\n                  legendaries have been unlocked. As a postsolver, you may use\n                  the button below to unlock all legendaries and proceed with\n                  this battle.\n                </div>\n                <div>\n                  We recommend watching the “Entering the Water” cutscene before\n                  attempting this battle.\n                </div>\n                <button\n                  onClick={() => {\n                    serverInterfaceController.sendReq({\n                      type: WSReqType.ADMIN_MODIFY,\n                      teams: {\n                        [teamId]: {\n                          overrideCardUnlocked: Object.fromEntries(\n                            getUnlockableCards(cardsDB)\n                              .filter((cardName) =>\n                                inspector.isLegendary(cardName)\n                              )\n                              .map((cardName) => [cardName, true])\n                          ),\n                        },\n                      },\n                    });\n                  }}\n                >\n                  Unlock all legendaries\n                </button>\n              </div>\n            ) : (\n              <PrepRight role={role} player={player} />\n            )}\n          </div>\n        </div>\n      </div>\n      <Modal title=\"The Instancer\" isOpen={isInstancerModalOpen}>\n        <div className=\"prep-instancer-modal-notice\">\n          <InstancerNotice />\n          <div>\n            <button\n              onClick={() => {\n                setIsInstancerModalOpen(false);\n                setHasClosedInstancerModal();\n              }}\n            >\n              Okay!\n            </button>\n          </div>\n        </div>\n      </Modal>\n      <Modal title=\"PvP Arena\" isOpen={isPvPModalOpen}>\n        <div className=\"prep-pvp-modal-notice\">\n          <PvPNotice />\n          <div>\n            <button\n              onClick={() => {\n                setIsPvPModalOpen(false);\n                setHasClosedPvPModal();\n              }}\n            >\n              Okay!\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default PrepPage;\n","import { create } from \"zustand\";\n\nexport interface UserLogState {\n  userLog: string;\n  addToUserLog: (msg: string) => void;\n  clearLog: () => void;\n}\n\nexport const useUserLogStore = create<UserLogState>((set) => ({\n  userLog: \"\",\n  addToUserLog: (msg) =>\n    set((state) => ({\n      userLog: state.userLog + \"\\n\" + msg,\n    })),\n  clearLog: () => set({ userLog: \"\" }),\n}));\n","export const DeleteTags = {\n  TUSK1: \"tusk1\",\n  TUSK2: \"tusk2\",\n  ANTLERS: \"antlers\",\n  WINGS: \"wing\",\n  BLACK_LEG1: \"blackLeg1\",\n  BLACK_LEG2: \"blackLeg2\",\n  BLACK_LEG3: \"blackLeg3\",\n  BLACK_LEG4: \"blackLeg4\",\n  BLACK_LEG5: \"blackLeg5\",\n  UDDERS: \"udders\",\n  WHITE_LEG1: \"whiteLeg1\",\n  WHITE_LEG2: \"whiteLeg2\",\n  WHITE_LEG3: \"whiteLeg3\",\n  WHITE_LEG4: \"whiteLeg4\",\n  DINO_TAIL: \"dinoTail\",\n};\n\nconst IMAGE_PATH = \"/static/kerodos/\";\n\ninterface BodyPart {\n  name: string;\n  zIncr?: number;\n  tag?: string;\n  isU?: boolean;\n  isW?: boolean;\n}\n\ntype BodyParts = BodyPart[];\n\nconst bodySingle: BodyParts = [{ name: \"bodysingle.png\" }];\n\nconst bodySegment: BodyParts = [\n  { name: \"body1.png\" },\n  { name: \"body2.png\" },\n  { name: \"body3.png\" },\n  { name: \"body4.png\" },\n  { name: \"body5.png\" },\n  { name: \"body6.png\" },\n  { name: \"body7.png\" },\n  { name: \"body8.png\" },\n  { name: \"body9.png\" },\n  { name: \"body10.png\" },\n];\n\nconst head: BodyParts = [\n  { name: \"head1.png\", zIncr: 1 },\n  { name: \"w.png\", zIncr: 0, isW: true },\n  { name: \"tusk1.png\", zIncr: 0, tag: DeleteTags.TUSK1 },\n  { name: \"tusk2.png\", zIncr: 0, tag: DeleteTags.TUSK2 },\n  { name: \"head2.png\", zIncr: 1 },\n  { name: \"head3.png\", zIncr: 1 },\n  { name: \"u.png\", zIncr: 0, isU: true },\n  { name: \"head4.png\", zIncr: 1 },\n  { name: \"head5.png\", zIncr: 1 },\n  { name: \"head6.png\", zIncr: 1 },\n  { name: \"antler1.png\", zIncr: 0, tag: DeleteTags.ANTLERS },\n  { name: \"antler2.png\", zIncr: 0, tag: DeleteTags.ANTLERS },\n  { name: \"head7.png\", zIncr: 1 },\n  { name: \"head8.png\", zIncr: 1 },\n  { name: \"head9.png\", zIncr: 1 },\n  { name: \"head10.png\", zIncr: 1 },\n];\n\nconst frontWing: BodyParts = [\n  { name: \"body1.png\" },\n  { name: \"body2.png\" },\n  { name: \"body3.png\" },\n  { name: \"body4.png\" },\n  { name: \"body5.png\" },\n  { name: \"leftwing1.png\", zIncr: 0 },\n  { name: \"rightwing1.png\", zIncr: 0 },\n];\n\nconst backWing: BodyParts = [\n  { name: \"leftwing2.png\", zIncr: 0 },\n  { name: \"rightwing2.png\", zIncr: 0 },\n  { name: \"body6.png\" },\n  { name: \"body7.png\" },\n  { name: \"body8.png\" },\n  { name: \"body9.png\" },\n  { name: \"body10.png\" },\n];\n\nconst udders: BodyParts = [{ name: \"udders.png\", zIncr: 0 }];\n\nconst blackLeg: BodyParts = [{ name: \"leg1.png\", zIncr: 0 }];\nconst whiteLeg: BodyParts = [{ name: \"leg2.png\", zIncr: 0 }];\n\nconst fishTail: BodyParts = [\n  { name: \"tail1.png\", zIncr: 1 },\n  { name: \"tail2.png\", zIncr: 1 },\n  { name: \"tail3.png\", zIncr: 1 },\n  { name: \"tail4.png\", zIncr: 1 },\n  { name: \"tail5.png\", zIncr: 1 },\n  { name: \"tail6.png\", zIncr: 1 },\n];\n\nconst fps = 60,\n  speed = 1 / 500,\n  circleWidth = 360,\n  circleHeight = 120,\n  // Negative half the part image width to center.\n  keroX = -111,\n  keroY = 200;\n\ninterface KeroPartExtraInfo {\n  fadeCounter?: number;\n  fadeEnable?: boolean;\n  zCounter?: number;\n  z?: number;\n  zIncr?: number;\n  deleteTag?: string;\n  zDecrement?: number;\n}\n\nexport class KeroFishyAnim {\n  private hasInited = false;\n  private internalTime = 0;\n  private lastFrameTime = 0;\n  private recoilCounter = 0;\n  private z = 0;\n  private isSadFishy = false;\n  private isDed = false;\n  private mustStopLoop = false;\n  private parent: HTMLDivElement | undefined = undefined;\n  private imgElement: HTMLImageElement | undefined = undefined;\n  private fishyElement: HTMLDivElement | undefined = undefined;\n  private pendingAnimationFrame: number | undefined = undefined;\n  private phase = 0;\n  private parts: (HTMLImageElement & KeroPartExtraInfo)[] = [];\n  private partsLeft = Object.values(DeleteTags);\n\n  init(parentParam: HTMLDivElement, fishyElement: HTMLDivElement, phase = 1) {\n    if (this.hasInited) return;\n    this.phase = phase;\n    this.hasInited = true;\n    this.parent = parentParam;\n    this.fishyElement = fishyElement;\n    this.z = 0;\n\n    this.addPart(head, \"head\");\n    if (phase <= 4) {\n      this.addPart(bodySegment, DeleteTags.BLACK_LEG1);\n      this.addPart(blackLeg, DeleteTags.BLACK_LEG1);\n      this.addPart(whiteLeg, DeleteTags.WHITE_LEG1);\n      this.addPart(bodySegment, DeleteTags.WHITE_LEG1);\n    }\n    if (phase <= 5) {\n      this.addPart(frontWing, DeleteTags.WINGS);\n    }\n    this.addPart(bodySingle, \"body\");\n    if (phase <= 5) {\n      this.addPart(backWing, DeleteTags.WINGS);\n    }\n    if (phase <= 4) {\n      this.addPart(bodySegment, DeleteTags.BLACK_LEG2);\n      this.addPart(blackLeg, DeleteTags.BLACK_LEG2);\n      this.addPart(whiteLeg, DeleteTags.WHITE_LEG2);\n      this.addPart(bodySegment, DeleteTags.WHITE_LEG2);\n      this.addPart(bodySegment, DeleteTags.UDDERS);\n      this.addPart(udders, DeleteTags.UDDERS);\n      this.addPart(bodySegment, DeleteTags.UDDERS);\n      this.addPart(bodySegment, DeleteTags.BLACK_LEG3);\n      this.addPart(blackLeg, DeleteTags.BLACK_LEG3);\n      this.addPart(whiteLeg, DeleteTags.WHITE_LEG3);\n      this.addPart(bodySegment, DeleteTags.WHITE_LEG3);\n      this.addPart(bodySegment, DeleteTags.BLACK_LEG4);\n      this.addPart(blackLeg, DeleteTags.BLACK_LEG4);\n      this.addPart(whiteLeg, DeleteTags.WHITE_LEG4);\n      this.addPart(bodySegment, DeleteTags.WHITE_LEG4);\n      this.addPart(bodySegment, DeleteTags.BLACK_LEG5);\n      this.addPart(blackLeg, DeleteTags.BLACK_LEG5);\n    }\n    if (phase <= 1) {\n      this.addDinoTail();\n    }\n    this.addPart(fishTail, \"fishTail\");\n\n    this.internalTime = Date.now();\n\n    this.pendingAnimationFrame = requestAnimationFrame(() => this.loop());\n    if (phase >= 6) {\n      this.partsLeft = [];\n      this.turnIntoSadFishy();\n    }\n    if (phase >= 7) {\n      this.turnIntoDedFishy();\n    }\n  }\n\n  calculatePosition(index: number) {\n    const recoil = this.piecewiseFn(this.recoilCounter);\n    const x =\n      Math.cos(\n        ((this.internalTime - ((index + recoil) * 1000) / fps) * speed) / 2 +\n          Math.PI / 4\n      ) *\n        circleWidth +\n      keroX;\n    const y =\n      Math.cos((this.internalTime - ((index + recoil) * 1000) / fps) * speed) *\n        circleHeight +\n      keroY;\n    return { x: x, y: y };\n  }\n\n  reInit(phase: number) {\n    this.hasInited = false;\n    if (this.pendingAnimationFrame)\n      cancelAnimationFrame(this.pendingAnimationFrame);\n    this.imgElement = undefined;\n    this.internalTime = 0;\n    this.lastFrameTime = 0;\n    this.recoilCounter = 0;\n    this.z = 0;\n    this.isSadFishy = false;\n    this.isDed = false;\n    this.mustStopLoop = false;\n    this.parts = [];\n    this.partsLeft = Object.values(DeleteTags);\n    if (this.parent && this.fishyElement) {\n      while (this.parent.lastChild) {\n        this.parent.removeChild(this.parent.lastChild);\n      }\n      while (this.fishyElement.lastChild) {\n        this.fishyElement.removeChild(this.fishyElement.lastChild);\n      }\n      this.init(this.parent, this.fishyElement, phase);\n    }\n  }\n\n  addPart(part: BodyParts, tag: string, scale = 1) {\n    if (!this.parent) return;\n    for (const subpart of part) {\n      const img = document.createElement(\"img\") as HTMLImageElement &\n        KeroPartExtraInfo;\n      if (subpart.zIncr !== undefined) {\n        this.z += subpart.zIncr;\n        img.zIncr = subpart.zIncr;\n      } else {\n        this.z += 2;\n      }\n      img.z = this.z;\n      img.classList.add(\"kerodos-anim-kero-part\");\n      img.style.zIndex = `${-this.parts.length}`;\n      if (scale != 1) {\n        img.style.transform = `scale(${scale})`;\n      }\n      img.src = IMAGE_PATH + subpart.name;\n      this.parent.appendChild(img);\n      if (subpart.tag) {\n        img.deleteTag = subpart.tag;\n      } else {\n        img.deleteTag = tag;\n      }\n\n      const isU = subpart.isU ?? false;\n      const isW = subpart.isW ?? false;\n      if (isU) {\n        img.id = \"kerodos-anim-u\";\n      } else if (isW) {\n        img.id = \"kerodos-anim-w\";\n      }\n      if (isU || isW) {\n        img.classList.add(\"kerodos-anim-come-in-hot\");\n      } else {\n        img.classList.add(\"kerodos-anim-slow-fade-in\");\n      }\n      this.parts.push(img);\n    }\n  }\n\n  addDinoTail() {\n    for (let i = 1; i > 0; i -= 0.025) {\n      this.addPart(bodySingle, DeleteTags.DINO_TAIL, i);\n    }\n  }\n\n  recoilFn(x: number) {\n    return (\n      30 *\n      (Math.sin(x / 20 - (Math.PI * 3) / 8) -\n        x / (20 * Math.PI) -\n        Math.sin((-Math.PI * 3) / 8))\n    );\n  }\n\n  piecewiseFn(x: number) {\n    if (x < 49) {\n      return this.recoilFn(x);\n    }\n    if (x < 69) {\n      // pause at the back of the recoil for dramatic effect\n      return this.recoilFn(49.5);\n    }\n    if (x < 100) {\n      return this.recoilFn(x - 20);\n    }\n    return 0;\n  }\n\n  loop() {\n    this.pendingAnimationFrame = undefined;\n    if (!this.parent?.isConnected) return;\n    if (!this.mustStopLoop) {\n      this.pendingAnimationFrame = requestAnimationFrame(() => this.loop());\n    }\n    const now = Date.now();\n    if (now - this.lastFrameTime < 1000 / fps) return;\n    this.lastFrameTime = now;\n\n    if (this.recoilCounter > 0) {\n      // Don't move forward when recoiling\n      this.recoilCounter--;\n      if (this.recoilCounter == 0) {\n        this.endRecoil();\n      }\n    } else {\n      // Stop internal time during recoil to prevent going forwards\n      this.internalTime += 1000 / fps;\n    }\n\n    for (let i = 0; i < this.parts.length; i++) {\n      // When we delete a part, we keep it moving for a while so we can fade\n      // it out and prevent a jarring transition. We also gradually shift the\n      // following parts forward to fill the gap. There's probably a better\n      // way to do this.\n      if (this.parts[i].fadeCounter) {\n        this.parts[i].fadeCounter = (this.parts[i].fadeCounter ?? 0) - 1;\n        this.parts[i].style.opacity = `${\n          (this.parts[i].fadeCounter ?? 0) / 100\n        }`;\n        if (this.parts[i].fadeCounter == 0) this.parts[i].remove();\n      }\n      if (this.parts[i].zCounter) {\n        this.parts[i].z =\n          (this.parts[i].z ?? 0) -\n          (this.parts[i].zDecrement ?? 0) / (this.parts[i].zCounter ?? 1);\n        this.parts[i].zDecrement =\n          (this.parts[i].zDecrement ?? 0) -\n          (this.parts[i].zDecrement ?? 0) / (this.parts[i].zCounter ?? 1);\n        this.parts[i].zCounter = (this.parts[i].zCounter ?? 1) - 1;\n      }\n      const index = Math.max(0, Math.round(this.parts[i].z ?? 0));\n      const position = this.calculatePosition(index);\n      this.parts[i].style.left = `${position.x}px`;\n      this.parts[i].style.top = `${position.y}px`;\n    }\n  }\n\n  startRecoil() {\n    this.recoilCounter = 100;\n    const u = document.getElementById(\"kerodos-anim-u\") as HTMLImageElement;\n    const w = document.getElementById(\"kerodos-anim-w\") as HTMLImageElement;\n    if (u) u.src = IMAGE_PATH + \"hurt-u.png\";\n    if (w) w.src = IMAGE_PATH + \"hurt-w.png\";\n  }\n\n  endRecoil() {\n    const u = document.getElementById(\"kerodos-anim-u\") as HTMLImageElement;\n    const w = document.getElementById(\"kerodos-anim-w\") as HTMLImageElement;\n    if (u) u.src = IMAGE_PATH + \"u.png\";\n    if (w) w.src = IMAGE_PATH + \"w.png\";\n  }\n\n  /**\n   * When Kero Dos loses all his extra powers, he turns back into kero uno.\n   */\n  turnIntoSadFishy() {\n    this.isSadFishy = true;\n    // remove all remaining parts\n    for (let i = 0; i < this.parts.length; i++) {\n      if (this.parts[i].fadeEnable == true) continue;\n      this.parts[i].fadeEnable = true;\n      this.parts[i].fadeCounter = 100;\n    }\n    // Add sad fishy\n    this.imgElement = document.createElement(\"img\");\n    this.imgElement.classList.add(\"kerodos-anim-kero-part\");\n    this.imgElement.classList.add(\"kerodos-anim-fade-in\");\n    this.imgElement.src = IMAGE_PATH + \"sadfishy.gif\";\n    if (this.fishyElement) this.fishyElement.appendChild(this.imgElement);\n  }\n\n  /**\n   * Only works on sad fishy. Whem sad fishy dies Kero Dos vanishes without a tres.\n   */\n  turnIntoDedFishy() {\n    if (!this.isSadFishy || this.isDed) return;\n    this.isDed = true;\n    if (this.imgElement) {\n      this.imgElement.src = IMAGE_PATH + \"ded.png\";\n      this.imgElement.classList.remove(\"kerodos-anim-fade-in\");\n      this.imgElement.classList.add(\"kerodos-anim-fade-out\");\n    }\n  }\n\n  deletePart(tag: string) {\n    this.startRecoil();\n    let counter = 0;\n    for (let i = 0; i < this.parts.length; i++) {\n      if (this.parts[i].deleteTag != tag || this.parts[i].fadeEnable == true)\n        continue;\n      let z: number | undefined = 2;\n      if (this.parts[i].zIncr !== undefined) z = this.parts[i].zIncr;\n      this.parts[i].fadeEnable = true;\n      this.parts[i].style.rotate = `${Math.floor(Math.random() * 360)}deg`;\n      this.parts[i].classList.remove(\"kerodos-anim-slow-fade-in\");\n      if (this.parts[i].src.includes(\"body\")) {\n        this.parts[i].classList.add(\"kerodos-anim-splody\");\n        this.parts[i].style.animationDelay = `${counter++ * 50}ms`;\n      } else {\n        this.parts[i].classList.add(\"kerodos-anim-spinny\");\n      }\n      this.parts[i].fadeCounter = 100;\n      for (let j = i; j < this.parts.length; j++) {\n        this.parts[j].zDecrement = (this.parts[j].zDecrement || 0) + (z ?? 0);\n        this.parts[j].zCounter = 100;\n      }\n    }\n  }\n\n  updateState(state: { parts: Set<string>; phase: number }) {\n    const { parts, phase } = state;\n    if (phase < this.phase) {\n      // moved backwards in time\n      // (restart or checkpoint);\n      this.reInit(phase);\n      return;\n    }\n\n    this.phase = phase;\n\n    if (this.isSadFishy && parts.size == 0) {\n      this.turnIntoDedFishy();\n      return;\n    }\n\n    for (let i = 0; i < this.partsLeft.length; i++) {\n      if (!parts.has(this.partsLeft[i])) {\n        this.deletePart(this.partsLeft[i]);\n        this.partsLeft.splice(i, 1);\n        i--;\n      }\n      if (this.partsLeft.length == 0) this.turnIntoSadFishy();\n    }\n  }\n}\n","import { useEffect, useMemo, useRef, memo } from \"react\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { getKeroLayersForFinalBattle } from \"engine/cards/card-effects-shared\";\nimport { Puzzle76SharedExtraState } from \"engine/game-specs/puzzle-76-shared\";\nimport \"/static/kerodos/kerodosAnim.css\";\nimport { KeroFishyAnim } from \"./KeroFishyAnim\";\n\nconst KerodosAnimInternal = () => {\n  const gameState = useClientGameStore((state) => state.gameState);\n  const subscribedTeam = useSubscribedTeam();\n\n  const keroPhase =\n    // There shouldn't be race conditions but put in contingencies\n    // just to be safe...\n    (gameState.sharedExtraState as Puzzle76SharedExtraState)?.keroPhase ?? 0;\n\n  const keroLayers = useMemo(\n    () => getKeroLayersForFinalBattle(keroPhase),\n    [keroPhase]\n  );\n\n  const fishyAnimRef = useRef(new KeroFishyAnim());\n\n  useEffect(() => {\n    fishyAnimRef.current.init(\n      document.getElementById(\"kerodos-anim\") as HTMLDivElement,\n      document.getElementById(\"kerodos-fishy\") as HTMLDivElement\n    );\n  }, []);\n\n  useEffect(() => {\n    fishyAnimRef.current.updateState(keroLayers);\n  }, [keroLayers]);\n\n  if (subscribedTeam === null) return null;\n\n  return (\n    <>\n      <div id=\"kerodos-fishy\" />\n      <div id=\"kerodos-anim-bg\">\n        <div id=\"kerodos-anim-clip\">\n          <div id=\"kerodos-anim\"></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst KerodosAnim = memo(KerodosAnimInternal);\n\nexport default KerodosAnim;\n","import { PUZ_NAME_FINAL_BATTLE } from \"engine/puzzles/puzzle-data\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport { useRoomBattleGroupName } from \"stores/ClientGlobalStateStore\";\nimport BattlerImage from \"components/BattlerImage\";\nimport KerodosAnim from \"components/KerodosAnim\";\nimport CutsceneDialogBox from \"components/CutsceneDialogBox\";\nimport \"./AIBattlerDisplay.css\";\nimport { cssIdFor, Speaker, UIElement } from \"engine/types/keyframes\";\nimport { useUserPreferencesStore } from \"stores/UserPreferencesStore\";\n\n/**\n * AI battlers:\n * display image of enemy, chat with flavortext, etc.\n */\nconst AIBattler = () => {\n  const gameState = useClientGameStore((state) => state.gameState);\n  const animKeroDos = useUserPreferencesStore((state) => state.animKeroDos);\n\n  const battleGroupName = useRoomBattleGroupName();\n  if (battleGroupName === null) return null;\n\n  const { keyframe } = gameState;\n  const {\n    id: keyframeId,\n    dialogue,\n    speaker,\n    hideBattler = false,\n  } = keyframe ?? {};\n  const chat =\n    speaker !== undefined &&\n    [Speaker.ENEMY, Speaker.NARRATOR].includes(speaker) &&\n    dialogue;\n  const isFinalBattle = battleGroupName === PUZ_NAME_FINAL_BATTLE;\n\n  return (\n    <div className={`enemy-battler${chat ? \" talking\" : \"\"}`}>\n      {hideBattler && keyframe !== undefined ? (\n        <CutsceneDialogBox keyframe={keyframe} />\n      ) : (\n        <div\n          className=\"enemy-battler-image-wrapper\"\n          id={cssIdFor.element(UIElement.AI_BATTLER)}\n        >\n          {isFinalBattle && animKeroDos ? (\n            <KerodosAnim />\n          ) : (\n            <BattlerImage battleGroupName={battleGroupName} isInBattle={true} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIBattler;\n","import { useSearchParams, Link } from \"react-router-dom\";\nimport \"./CutsceneUI.css\";\nimport { getCutsceneArtPath } from \"images\";\nimport { getKeroLayers } from \"engine/cards/card-effects-shared\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport {\n  useSubscribedTeam,\n  useRoomBattleGroupNameFromGameState,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { usePuzName } from \"stores/NavStore\";\n\nimport CutsceneDialogBox from \"components/CutsceneDialogBox\";\nimport { getDevKnobs } from \"App.util\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport Image, { KeroImage } from \"components/Image\";\n\nfunction CutsceneUI() {\n  const [searchParams] = useSearchParams();\n  const puzName = usePuzName();\n  const serverInterfaceController = useServerInterfaceController();\n  const keyframe = useClientGameStore((state) => state.gameState.keyframe);\n  const subscribedTeam = useSubscribedTeam();\n  const roomBattleGroupName = useRoomBattleGroupNameFromGameState();\n\n  if (subscribedTeam === null || roomBattleGroupName === null) return null;\n\n  const { battleGroups, cardUnlocks } = subscribedTeam;\n  const { isCutscene = false } = battleGroups[roomBattleGroupName];\n\n  const { id: keyframeId, image } = keyframe ?? {};\n\n  const imageChildren = (() => {\n    switch (keyframeId) {\n      case \"tutorial1-card\": {\n        return <CardDisplay size={CardSize.LARGE} cardName={\"new-boarn\"} />;\n      }\n    }\n    return null;\n  })();\n\n  const keroLayers = getKeroLayers(Object.keys(cardUnlocks), 0);\n\n  return (\n    <>\n      <div className=\"game-cutscene-ui-img-wrapper\">\n        {image === \"kero dos\" ? (\n          <KeroImage\n            className=\"game-cutscene-ui-picture\"\n            keroLayers={keroLayers}\n          />\n        ) : null}\n        {image !== undefined &&\n        image !== \"kero dos\" &&\n        imageChildren === null ? (\n          <Image\n            className=\"game-cutscene-ui-img\"\n            pictureClassName=\"game-cutscene-ui-picture\"\n            src={getCutsceneArtPath(image)}\n          />\n        ) : null}\n        {imageChildren}\n      </div>\n      {keyframe !== undefined ? (\n        <div\n          id=\"game-cutscene-ui-dialog-box\"\n          className=\"game-cutscene-ui-dialog-box\"\n        >\n          <CutsceneDialogBox keyframe={keyframe} />\n        </div>\n      ) : null}\n      <div className=\"game-cutscene-ui-menu\">\n        {isCutscene ? (\n          <button\n            onClick={() => {\n              serverInterfaceController.startAIBattleAsync(puzName, {\n                restart: true,\n                reuseDeck: true,\n                devKnobs: getDevKnobs(),\n              });\n            }}\n          >\n            Restart\n          </button>\n        ) : null}\n        <Link\n          to={{\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          }}\n        >\n          <button>Exit {isCutscene ? \"cutscene\" : \"battle\"}</button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default CutsceneUI;\n","import { AbilityType, EffectOpt, EffectOptType } from \"engine/types/effects\";\nimport { Step } from \"engine/types/steps\";\nimport { StepMaker } from \"engine/StepMaker\";\nimport { useEffect, useRef } from \"react\";\nimport { useHotkeys, isHotkeyPressed } from \"react-hotkeys-hook\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport {\n  makeInspector,\n  useClientGameStore,\n  useIsLockedBesidesKeyframe,\n} from \"stores/ClientGameStore\";\nimport {\n  DirectionKey,\n  ExternalMutationType,\n  InspectorInfo,\n  KeyboardCursorMode,\n  KeyboardCursorState,\n  MutationResult,\n  computeFieldCard,\n  computeHandCard,\n  computeResultsCancelKey,\n  computeResultsCreate1Key,\n  computeResultsCreate2Key,\n  computeResultsDirectionKey,\n  computeResultsDrawKey,\n  computeResultsEndTurnKey,\n  computeResultsFlexKey,\n  computeResultsFocusFieldKey,\n  computeResultsFocusHandKey,\n  computeResultsSelectKey,\n  computeResultsSpecialKey,\n  computeResultsHelpKey,\n  useKeyboardCursorStore,\n  computeResultsSelectHandCardKey,\n} from \"stores/KeyboardCursorStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport {\n  SelectedCardType,\n  isEffectOptValid,\n  useTurnStore,\n} from \"stores/TurnStore\";\nimport { ZoomedCardDetails, useZoomCardStore } from \"stores/ZoomCardStore\";\n\nexport function useGameHotkeys() {\n  const keyboardCursorRef = useRef(useKeyboardCursorStore.getState());\n  const enabled = useKeyboardCursorStore((state) => state.enabled);\n  useEffect(\n    () =>\n      useKeyboardCursorStore.subscribe(\n        (state) => (keyboardCursorRef.current = state)\n      ),\n    []\n  );\n  const inOneChoice = useKeyboardCursorStore(\n    (state) => state.cursorMode === KeyboardCursorMode.EFFECT_OPT_ONE_CHOICE\n  );\n\n  // Update zoom state based off of where cursor is.\n  const keyboardState = useKeyboardCursorStore();\n  useEffect(() => {\n    const {\n      enabled,\n      fieldCursorLocation,\n      handCursorIndex,\n      handPlayer,\n      subcursorLocation,\n      cursorMode,\n    } = keyboardState;\n    if (!enabled) {\n      useZoomCardStore.getState().resetKeyboardZoomedCard();\n      return;\n    }\n    const { inspector } = getCurrentInspectorInfo();\n    let cardDetails = null as ZoomedCardDetails | null;\n    switch (cursorMode) {\n      case KeyboardCursorMode.FIELD:\n        cardDetails = computeFieldCard(fieldCursorLocation, inspector);\n        break;\n      case KeyboardCursorMode.HAND:\n        cardDetails = computeHandCard(handPlayer, handCursorIndex, inspector);\n        break;\n      case KeyboardCursorMode.FIELD_SELECTED:\n      case KeyboardCursorMode.EFFECT_OPT_SLOT:\n      case KeyboardCursorMode.EFFECT_OPT_PERMANENT:\n        cardDetails = computeFieldCard(\n          subcursorLocation ?? fieldCursorLocation,\n          inspector\n        );\n        break;\n      case KeyboardCursorMode.HAND_SELECTED:\n        if (subcursorLocation) {\n          cardDetails = computeFieldCard(subcursorLocation, inspector);\n        } else {\n          cardDetails = computeHandCard(handPlayer, handCursorIndex, inspector);\n        }\n        break;\n      case KeyboardCursorMode.NOT_VISIBLE:\n        cardDetails = null;\n        break;\n      default:\n        // Do not mutate in unknown cases\n        return;\n    }\n    if (cardDetails === null) {\n      useZoomCardStore.getState().resetKeyboardZoomedCard();\n    } else {\n      useZoomCardStore\n        .getState()\n        .setKeyboardZoomedCard(cardDetails.cardName, cardDetails.permanentId);\n    }\n  }, [keyboardState]);\n\n  // Update our lock based off of other locks.\n  const isLockedBesidesKeyframe = useIsLockedBesidesKeyframe();\n  const setLocked = useKeyboardCursorStore((state) => state.setLocked);\n  useEffect(() => {\n    setLocked(isLockedBesidesKeyframe);\n  }, [isLockedBesidesKeyframe, setLocked]);\n\n  useHotkeys(\n    [\"w\", \"up\"],\n    () => {\n      processDirectionKey(keyboardCursorRef.current, DirectionKey.UP);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      preventDefault: () => true,\n    },\n    []\n  );\n  useHotkeys(\n    [\"a\", \"left\"],\n    () => {\n      processDirectionKey(keyboardCursorRef.current, DirectionKey.LEFT);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      preventDefault: () => true,\n    },\n    []\n  );\n  useHotkeys(\n    [\"s\", \"down\"],\n    () => {\n      processDirectionKey(keyboardCursorRef.current, DirectionKey.DOWN);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      preventDefault: () => true,\n    },\n    []\n  );\n  useHotkeys(\n    [\"d\", \"right\"],\n    () => {\n      processDirectionKey(keyboardCursorRef.current, DirectionKey.RIGHT);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      preventDefault: () => true,\n    },\n    []\n  );\n  useHotkeys(\n    [\"esc\"],\n    () => {\n      processEscapeKey(keyboardCursorRef.current);\n    },\n    // still enabled while in ONE_CHOICE effectopt\n    { enabled: enabled },\n    []\n  );\n  useHotkeys(\n    [\"enter\", \"space\"],\n    () => {\n      processSelectKey(keyboardCursorRef.current);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      preventDefault: (_, hotkeys) =>\n        (hotkeys.keys || []).join(\"\").toLowerCase() === \"space\",\n    },\n    []\n  );\n  useHotkeys(\n    [\"e\"],\n    () => {\n      processEndTurnKey(keyboardCursorRef.current);\n    },\n    {\n      enabled: enabled && !inOneChoice,\n      ignoreEventWhen: (_) => {\n        return isHotkeyPressed(\"1,2,3,4,5,6,7,8,9,0\");\n      },\n    },\n    []\n  );\n  useHotkeys(\n    [\"p\"],\n    () => {\n      processDrawKey(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"z\"],\n    () => {\n      processSpecialKey(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"x\"],\n    () => {\n      processFlexKey(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"c\"],\n    () => {\n      processCreate1Key(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"v\"],\n    () => {\n      processCreate2Key(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"f\"],\n    () => {\n      processFocusFieldKey(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"h\"],\n    () => {\n      processFocusHandKey(keyboardCursorRef.current);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    \"1,2,3,4,5,6,7,8,9,0\",\n    (_, handler) => {\n      let key = Number((handler.keys || [])[0] || \"\");\n      if (key == 0) {\n        key = 10;\n      }\n      processSelectHandCardKey(keyboardCursorRef.current, key);\n    },\n    { enabled: enabled && !inOneChoice },\n    []\n  );\n  useHotkeys(\n    [\"/\"],\n    () => {\n      processHelpKey(keyboardCursorRef.current);\n    },\n    // still enabled while in ONE_CHOICE effectopt\n    {\n      enabled: enabled,\n      preventDefault: () => true,\n    },\n    []\n  );\n  // The special ONE_CHOICE handler.\n  useHotkeys(\n    \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\",\n    (_, handler) => {\n      const state = keyboardCursorRef.current;\n      if (!state.isResponsive()) {\n        return;\n      }\n\n      const inspectorInfo = getCurrentInspectorInfo();\n      const { inspector, stepMaker } = inspectorInfo;\n      const currentEffectOpts = useTurnStore.getState().effectOpts;\n      const pendingEffect = useTurnStore.getState().pendingEffect;\n      const pendingForm = useTurnStore.getState().pendingForms[0];\n      const selectedCard = useTurnStore.getState().selectedCard;\n      const selectedPermanent =\n        selectedCard !== null &&\n        selectedCard.type === SelectedCardType.PERMANENT\n          ? // Don't assert. When the server removes the permanent from play,\n            // the selected card state is not immediately updated.\n            inspector.getPermanentIfExists(selectedCard.permanentId)\n          : null;\n      if (\n        !selectedPermanent ||\n        !pendingEffect ||\n        !pendingForm ||\n        pendingForm.type !== EffectOptType.ONE_CHOICE\n      ) {\n        return;\n      }\n      const letter = ((handler.keys || [])[0] || \"\").toLowerCase();\n      if (!letter) {\n        return;\n      }\n      const choice = pendingForm.choices.find((c) =>\n        c.toLowerCase().startsWith(letter)\n      );\n      if (!choice) {\n        return;\n      }\n      const effectOpt = {\n        type: EffectOptType.ONE_CHOICE,\n        choice,\n      } as EffectOpt;\n      const isValid = isEffectOptValid(\n        effectOpt,\n        currentEffectOpts,\n        pendingForm,\n        selectedPermanent,\n        inspector\n      );\n      if (!isValid) {\n        return;\n      }\n      const effectOpts = useTurnStore\n        .getState()\n        .selectEffectOptAndResetIfDone(effectOpt);\n      if (effectOpts) {\n        sendStepIfValid(\n          stepMaker.activateAbility(\n            selectedPermanent,\n            pendingEffect,\n            effectOpts\n          ),\n          inspectorInfo\n        );\n      } else {\n        const pendingForms = useTurnStore.getState().pendingForms;\n        useKeyboardCursorStore\n          .getState()\n          .syncToPendingEffectOpt(pendingForms[0]);\n      }\n    },\n    { enabled: enabled && inOneChoice },\n    []\n  );\n}\n\n// Warning: only call this within the event handler! If you call it and\n// bind it to a variable in a handler, it will be stuck with the old reference.\nfunction getCurrentInspectorInfo(): InspectorInfo {\n  const { cardsDB } = useCardsDBStore.getState();\n  const { gameState, role } = useClientGameStore.getState();\n  const inspector = makeInspector(cardsDB, gameState);\n  const stepMaker = new StepMaker(inspector, undefined, role);\n  return {\n    inspector,\n    stepMaker,\n    role,\n  };\n}\n\nfunction processDirectionKey(\n  state: KeyboardCursorState,\n  direction: DirectionKey\n) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsDirectionKey(state, direction, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processEscapeKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsCancelKey(state);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processSelectKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsSelectKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processEndTurnKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsEndTurnKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processDrawKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsDrawKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processSpecialKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsSpecialKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processFlexKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsFlexKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processCreate1Key(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsCreate1Key(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processCreate2Key(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsCreate2Key(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processFocusFieldKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsFocusFieldKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processFocusHandKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsFocusHandKey(state, inspectorInfo);\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processSelectHandCardKey(state: KeyboardCursorState, key: number) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsSelectHandCardKey(\n    state,\n    key - 1,\n    inspectorInfo\n  );\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction processHelpKey(state: KeyboardCursorState) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  const inspectorInfo = getCurrentInspectorInfo();\n  const results = computeResultsHelpKey();\n  applyMutations(state, results, inspectorInfo);\n}\n\nfunction applyMutations(\n  state: KeyboardCursorState,\n  mutations: MutationResult,\n  inspectorInfo: InspectorInfo\n) {\n  if (!state.isResponsive()) {\n    return;\n  }\n  state.applyMutations(mutations.keyboardCursorMutations ?? {});\n\n  const { inspector, stepMaker } = inspectorInfo;\n  const pendingEffect = useTurnStore.getState().pendingEffect;\n  const selectedCard = useTurnStore.getState().selectedCard;\n  const selectedPermanent =\n    selectedCard !== null && selectedCard.type === SelectedCardType.PERMANENT\n      ? // Don't assert. When the server removes the permanent from play,\n        // the selected card state is not immediately updated.\n        inspector.getPermanentIfExists(selectedCard.permanentId)\n      : null;\n  const selectedHandCard =\n    selectedCard !== null && selectedCard.type === SelectedCardType.HAND\n      ? selectedCard\n      : null;\n\n  for (const mutation of mutations.externalMutations ?? []) {\n    switch (mutation.type) {\n      case ExternalMutationType.SET_SELECTED_CARD_HAND: {\n        const { player, handCardId } = mutation;\n        useTurnStore.getState().setSelectedCardHand(player, handCardId);\n        break;\n      }\n      case ExternalMutationType.SET_SELECTED_CARD_HAND_ALL_CARDS_AVAIALBLE: {\n        const { player, name } = mutation;\n        useTurnStore\n          .getState()\n          .setSelectedCardHandAllCardsAvailable(player, name);\n        break;\n      }\n      case ExternalMutationType.SET_SELECTED_CARD_PERMANENT: {\n        const { permanentId } = mutation;\n        useTurnStore.getState().setSelectedCardPermanent(permanentId);\n        break;\n      }\n      case ExternalMutationType.RESET_SELECTED_CARD: {\n        useTurnStore.getState().resetSelectedCard();\n        break;\n      }\n      case ExternalMutationType.PICK_EFFECT_OPT_SLOT: {\n        if (!pendingEffect || !selectedPermanent) break;\n        const { slot } = mutation;\n        const currentEffectOpts = useTurnStore.getState().effectOpts;\n        const pendingForm = useTurnStore.getState().pendingForms[0] ?? null;\n        const effectOpt = {\n          type: EffectOptType.SLOT,\n          slot,\n        } as EffectOpt;\n        const isValid = isEffectOptValid(\n          effectOpt,\n          currentEffectOpts,\n          pendingForm,\n          selectedPermanent,\n          inspector\n        );\n        if (!isValid) {\n          break;\n        }\n        const effectOpts = useTurnStore\n          .getState()\n          .selectEffectOptAndResetIfDone(effectOpt);\n        if (effectOpts) {\n          sendStepIfValid(\n            stepMaker.activateAbility(\n              selectedPermanent,\n              pendingEffect,\n              effectOpts\n            ),\n            inspectorInfo\n          );\n        } else {\n          const pendingForms = useTurnStore.getState().pendingForms;\n          useKeyboardCursorStore\n            .getState()\n            .syncToPendingEffectOpt(pendingForms[0]);\n        }\n        break;\n      }\n      case ExternalMutationType.PICK_EFFECT_OPT_PERMANENT: {\n        if (!pendingEffect || !selectedPermanent) break;\n        const { permanentId } = mutation;\n        const currentEffectOpts = useTurnStore.getState().effectOpts;\n        const pendingForm = useTurnStore.getState().pendingForms[0] ?? null;\n        const effectOpt = {\n          type: EffectOptType.PERMANENT,\n          permanentId,\n        } as EffectOpt;\n        const isValid = isEffectOptValid(\n          effectOpt,\n          currentEffectOpts,\n          pendingForm,\n          selectedPermanent,\n          inspector\n        );\n        if (!isValid) {\n          break;\n        }\n        const effectOpts = useTurnStore\n          .getState()\n          .selectEffectOptAndResetIfDone(effectOpt);\n        if (effectOpts) {\n          sendStepIfValid(\n            stepMaker.activateAbility(\n              selectedPermanent,\n              pendingEffect,\n              effectOpts\n            ),\n            inspectorInfo\n          );\n        } else {\n          const pendingForms = useTurnStore.getState().pendingForms;\n          useKeyboardCursorStore\n            .getState()\n            .syncToPendingEffectOpt(pendingForms[0]);\n        }\n        break;\n      }\n      case ExternalMutationType.PICK_EFFECT_OPT_ONE_CHOICE: {\n        if (!pendingEffect || !selectedPermanent) break;\n        const { choice } = mutation;\n        const effectOpts = useTurnStore\n          .getState()\n          .selectEffectOptAndResetIfDone({\n            type: EffectOptType.ONE_CHOICE,\n            choice,\n          });\n        if (effectOpts) {\n          sendStepIfValid(\n            stepMaker.activateAbility(\n              selectedPermanent,\n              pendingEffect,\n              effectOpts\n            ),\n            inspectorInfo\n          );\n        } else {\n          const pendingForms = useTurnStore.getState().pendingForms;\n          useKeyboardCursorStore\n            .getState()\n            .syncToPendingEffectOpt(pendingForms[0]);\n        }\n        break;\n      }\n      case ExternalMutationType.RESET_EFFECT_OPTS: {\n        useTurnStore.getState().resetEffectOpts();\n        break;\n      }\n      case ExternalMutationType.ATTACK: {\n        if (!selectedPermanent) break;\n        const { defenderId } = mutation;\n        const defender = inspector.getPermanentIfExists(defenderId);\n        if (defender === null) break;\n        sendStepIfValid(\n          stepMaker.attack(selectedPermanent, defender),\n          inspectorInfo\n        );\n        break;\n      }\n      case ExternalMutationType.MOVE: {\n        if (!selectedPermanent) break;\n        const { slot } = mutation;\n        sendStepIfValid(stepMaker.move(selectedPermanent, slot), inspectorInfo);\n        break;\n      }\n      case ExternalMutationType.SUMMON: {\n        if (!selectedHandCard) break;\n        const { slot } = mutation;\n        sendStepIfValid(\n          stepMaker.summonOrSpawn({\n            player: selectedHandCard.player,\n            handCardId: selectedHandCard.handCardId,\n            cardName: selectedHandCard.name,\n            slot,\n          }),\n          inspectorInfo\n        );\n        break;\n      }\n      case ExternalMutationType.END_TURN: {\n        const { player } = mutation;\n        sendStepIfValid(stepMaker.endTurn(player), inspectorInfo);\n        break;\n      }\n      case ExternalMutationType.DRAW: {\n        const { player } = mutation;\n        sendStepIfValid(stepMaker.draw(player), inspectorInfo);\n        break;\n      }\n      case ExternalMutationType.SPECIAL: {\n        if (!selectedPermanent) break;\n        const effects = inspector.getSharedEffects(selectedPermanent);\n        const effectForms = effects.specialForms;\n        const abilityType = AbilityType.SPECIAL;\n        if (effectForms && effectForms.length > 0) {\n          useTurnStore.getState().startEffect(abilityType, effectForms);\n          useKeyboardCursorStore\n            .getState()\n            .syncToPendingEffectOpt(effectForms[0]);\n        } else {\n          sendStepIfValid(\n            stepMaker.activateAbility(selectedPermanent, abilityType, []),\n            inspectorInfo\n          );\n        }\n        break;\n      }\n      case ExternalMutationType.FLEX: {\n        if (!selectedPermanent) break;\n        const effects = inspector.getSharedEffects(selectedPermanent);\n        const effectForms = effects.flexForms;\n        const abilityType = AbilityType.FLEX;\n        if (effectForms && effectForms.length > 0) {\n          useTurnStore.getState().startEffect(abilityType, effectForms);\n          useKeyboardCursorStore\n            .getState()\n            .syncToPendingEffectOpt(effectForms[0]);\n        } else {\n          sendStepIfValid(\n            stepMaker.activateAbility(selectedPermanent, abilityType, []),\n            inspectorInfo\n          );\n        }\n        break;\n      }\n      case ExternalMutationType.CREATE1: {\n        if (!selectedPermanent) break;\n        const combos = inspector.getCreateGemsColors(selectedPermanent);\n        if (!combos[0]) break;\n        sendStepIfValid(\n          stepMaker.create(selectedPermanent, combos[0]),\n          inspectorInfo\n        );\n        break;\n      }\n      case ExternalMutationType.CREATE2: {\n        if (!selectedPermanent) break;\n        const combos = inspector.getCreateGemsColors(selectedPermanent);\n        if (!combos[1]) break;\n        sendStepIfValid(\n          stepMaker.create(selectedPermanent, combos[1]),\n          inspectorInfo\n        );\n        break;\n      }\n      case ExternalMutationType.HELP: {\n        const { isHotkeyModalOpen, setIsHotkeyModalOpen } =\n          useNavStore.getState();\n        setIsHotkeyModalOpen(!isHotkeyModalOpen);\n        break;\n      }\n    }\n  }\n}\n\nfunction sendStepIfValid(step: Step, inspectorInfo: InspectorInfo) {\n  const { inspector, role } = inspectorInfo;\n\n  const { isValid } = inspector.resolveAndValidate(step, role);\n  if (isValid) {\n    const sendStep = useClientGameStore.getState().sendStep;\n    sendStep?.(step);\n  }\n}\n// shortcuts\n// DIRECTIONS = arrow keys or wasd\n// [tab or shift+tab]: cursor to next friendly ready permanent\n//                     (forces field select)\n\n// [f or h] : cursor to hand or field?\n// effect opts:\n//   cursor for slot/unit?\n//   TODO: think about \"one choice\"?\n//\n// hotkeys that are binded:\n// [space or enter] : select on cursor\n// [esc]: unselect\n// [DIRECTIONS]: move cursor\n// [e]: end turn\n// [p]: pay 2 mana to draw a card\n// while selected:\n//   [z]: special\n//   [x]: flex\n//   [c]: create\n//   [v]: create2\n//   [DIRECTIONS]: move subcursor\n// [1-0]: select 1st thru 10th card from hand\n","import \"./StepButton.css\";\nimport { PropsWithChildren, useEffect, useState } from \"react\";\n\nimport { describeStep } from \"components/BattleHelpText\";\nimport HoverNotifier from \"components/HoverNotifier\";\nimport {\n  stepToGain,\n  stepToName,\n  stepToPayment,\n  Step,\n  StepType,\n} from \"engine/types/steps\";\nimport {\n  Check,\n  getFailText,\n  isPassthrough,\n} from \"engine/types/action-validation\";\nimport {\n  useInspector,\n  useStepMaker,\n  useRole,\n  useClientGameStore,\n  usePlayerPerspective,\n  useIsLockedBesidesKeyframe,\n} from \"stores/ClientGameStore\";\nimport { AbilityType } from \"engine/types/effects\";\nimport { useEffectOpts } from \"stores/TurnStore\";\nimport { GemType, GemsDisplay, GemProp } from \"components/GemDisplay\";\nimport { useStartEffect } from \"stores/UserGameActionHandlers\";\n\ninterface StepButtonProps {\n  id?: string;\n  shortcut?: string;\n  step: Step;\n}\n\n/**\n * Wraps children, so when clicked, a step happens. If there are no children,\n * it makes a generic button. There are three states:\n *\n * - .step-valid: We change the cursor, and, if true, show an overlayIcon. On\n * hover, we do the HoverNotifier thing. On click, the step will be sent.\n * - .step-preview: We change the cursor, and, if true, show an overlayIcon. On\n * hover, we do the HoverNotifier thing. On click, nothing will happen.\n * - passthrough: nothing! at all! we just pass it on\n */\nfunction StepButton(props: PropsWithChildren<StepButtonProps>) {\n  const { id, children, step, shortcut } = props;\n  const startEffect = useStartEffect();\n  const { pendingForm } = useEffectOpts();\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const role = useRole();\n  const inspector = useInspector();\n  const stepMaker = useStepMaker();\n  const playerPerspective = usePlayerPerspective();\n  const { keyframe } = inspector.gameState;\n  const isLockedBesidesKeyframe = useIsLockedBesidesKeyframe();\n\n  const { resolved, failedChecks } = inspector.resolveAndValidate(step, role);\n\n  // Visually disable the UI if the UI is locked.\n  if (isLockedBesidesKeyframe) failedChecks.add(Check.UI_LOCKED);\n  // Ignore NUM_OPTS for effects:\n  failedChecks.delete(Check.NUM_OPTS);\n  const isValid = failedChecks.size === 0;\n\n  const payment = stepToPayment(resolved);\n  const gain = stepToGain(resolved);\n\n  const helpText = stepToName(step);\n  const gemsDisplay =\n    payment.length === 0 && gain.length === 0 ? null : (\n      <GemsDisplay\n        gems={new Array<GemProp>()\n          .concat(payment.map((c) => ({ color: c, type: GemType.CROSSED })))\n          .concat(gain.map((c) => ({ color: c, type: GemType.SOLID })))}\n        inline={true}\n      />\n    );\n\n  const failText = getFailText(failedChecks);\n\n  const passthrough = pendingForm || isPassthrough(failedChecks, step.type);\n\n  const [delayed, setDelayed] = useState(step.type === StepType.END_TURN);\n\n  useEffect(() => {\n    setTimeout(() => setDelayed(false), 300);\n  }, []);\n\n  const isEndingTurn =\n    step.type === StepType.END_TURN &&\n    inspector.isTurnPending(playerPerspective);\n  const hasActionsLeft = ((): boolean => {\n    if (!isEndingTurn) return false;\n    for (const permanent of inspector.getAllPermanents())\n      if (inspector.hasActions(permanent)) return true;\n    const draw = inspector.resolveAndValidate(\n      stepMaker.draw(playerPerspective),\n      role\n    );\n    if (draw.isValid) return true;\n    for (const card of inspector.getHandForUI(playerPerspective))\n      for (const slot of inspector.getAllSlots()) {\n        const summon = inspector.resolveAndValidate(\n          stepMaker.summonOrSpawn({\n            player: playerPerspective,\n            slot,\n            handCardId: card.id,\n            cardName: card.card.name,\n          }),\n          role\n        );\n        if (summon.isValid) return true;\n      }\n    return false;\n  })();\n  const helpTooltip =\n    step.type === StepType.END_TURN && failedChecks.has(Check.UI_LOCKED)\n      ? \"\"\n      : failText ??\n        (isEndingTurn && hasActionsLeft\n          ? \"There are still actions you can take!\"\n          : describeStep(inspector, step, resolved));\n\n  // TODO: replace with better text maybe\n  const defaultButton = passthrough ? null : (\n    <button\n      className={`default-step-button${\n        isEndingTurn && failedChecks.size === 0 && !hasActionsLeft\n          ? \" important-step-button\"\n          : \"\"\n      }`}\n      disabled={!isValid || delayed}\n      style={delayed ? { cursor: \"wait\" } : {}}\n    >\n      {helpText}\n      {shortcut ? ` (${shortcut})` : null}\n      {gemsDisplay === null ? null : <> {gemsDisplay}</>}\n    </button>\n  );\n\n  return passthrough ? (\n    <>{children}</>\n  ) : (\n    <div\n      id={id}\n      className={`step-button ${isValid ? \"step-valid\" : \"step-preview\"}`}\n      onClick={(e) => {\n        if (isValid) {\n          e.stopPropagation();\n\n          // If the server is down, don't accept creating new steps.\n          // However, still mark inputs as clickable so that the click\n          // handler doesn't propagate to the parent and cause a deselect.\n          if (!sendStep) return;\n\n          // ACTIVATE_ABILITY might need EffectOpts to be determined.\n          if (step.type === StepType.ACTIVATE_ABILITY) {\n            const permanent = inspector.getPermanent(step.permanentId);\n            const effects = inspector.getSharedEffects(permanent);\n            const effectForms =\n              step.abilityType === AbilityType.FLEX\n                ? effects.flexForms\n                : effects.specialForms;\n\n            if (effectForms && effectForms.length > 0) {\n              startEffect(step.abilityType, effectForms);\n              return;\n            }\n          }\n\n          sendStep(step);\n        }\n      }}\n    >\n      <HoverNotifier payment={payment} gain={gain} help={helpTooltip}>\n        {children ?? defaultButton}\n      </HoverNotifier>\n    </div>\n  );\n}\n\nexport default StepButton;\n","import Icon, { IconType } from \"components/Icon\";\nimport StepButton from \"components/StepButton\";\nimport Tooltip from \"components/Tooltip\";\nimport { DRAW_CARD_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { Player } from \"engine/types/game-state\";\nimport { cssIdFor, UIElement } from \"engine/types/keyframes\";\nimport { useInspector, useStepMaker } from \"stores/ClientGameStore\";\nimport { useZoomCardStore } from \"stores/ZoomCardStore\";\nimport \"./DeckInfo.css\";\n\ninterface DeckInfoProps {\n  player: Player;\n}\n\nfunction DeckInfo(props: DeckInfoProps) {\n  const { player } = props;\n\n  const inspector = useInspector();\n  const stepMaker = useStepMaker();\n  const playerState = inspector.gameState[player];\n  const mouseZoomedCard = useZoomCardStore((state) => state.mouseZoomedCard);\n  const setZoomedCard = useZoomCardStore((state) => state.setMouseZoomedCard);\n  const resetZoomedCard = useZoomCardStore(\n    (state) => state.resetMouseZoomedCard\n  );\n\n  const hasDrawCardMastery = inspector.doesPlayerHaveMastery(\n    player,\n    DRAW_CARD_MASTERY_ID\n  );\n  const drawStep = stepMaker.draw(player);\n\n  const { drawPile, topCard } = playerState;\n  const topCardResolved = (() => {\n    if (topCard !== undefined && topCard !== null) return topCard;\n    if (drawPile !== undefined && drawPile.length > 0)\n      return drawPile[drawPile.length - 1];\n    return null;\n  })();\n\n  const isScrying =\n    topCardResolved?.name !== undefined &&\n    mouseZoomedCard?.cardName === topCardResolved?.name;\n\n  const onScry = () => {\n    if (topCardResolved !== null && topCardResolved.name !== undefined) {\n      setZoomedCard(topCardResolved.name);\n    }\n  };\n\n  const onUnscry = () => {\n    resetZoomedCard();\n  };\n\n  const size = playerState.drawPileSize ?? playerState.drawPile?.length ?? 0;\n\n  return (\n    <div className=\"hand-deck-info\">\n      <Tooltip\n        text={\n          topCardResolved\n            ? \"Preview top card of draw pile\"\n            : \"Number of cards in draw pile\"\n        }\n      >\n        <button\n          className={`draw-pile-size ${topCardResolved ? \"clickable\" : \"\"} ${\n            isScrying ? \"selected\" : \"\"\n          }`}\n          onClick={() => (isScrying ? onUnscry() : onScry())}\n          onMouseEnter={onScry}\n          onMouseLeave={onUnscry}\n        >\n          <Icon icon={IconType.DECK} />\n          {size}\n        </button>\n      </Tooltip>\n      {hasDrawCardMastery && size > 0 ? (\n        <StepButton id={cssIdFor.element(UIElement.DRAW)} step={drawStep}>\n          <button className={`deck-button ${hasDrawCardMastery ? \"draw\" : \"\"}`}>\n            <Icon icon={IconType.DRAW} />\n          </button>\n        </StepButton>\n      ) : null}\n    </div>\n  );\n}\n\nexport default DeckInfo;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useState, useEffect, memo, MouseEventHandler } from \"react\";\n\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport { HandCard, Player } from \"engine/types/game-state\";\nimport { cssIdFor } from \"engine/types/keyframes\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport { SelectedCardType, useTurnStore } from \"stores/TurnStore\";\nimport {\n  useResetEffectOpts,\n  useResetSelectedCard,\n  useSelectCardHand,\n  useSelectCardHandAllCardsAvailable,\n} from \"stores/UserGameActionHandlers\";\nimport \"./HandCardsDisplay.css\";\nimport { useAnimationSpeed } from \"stores/AnimationStore\";\n\nexport const NORMAL_CARD_LIMIT = 10;\n\ninterface HandCardsProps {\n  player: Player;\n  isAllCardsAvailable: boolean;\n  cards: ReadonlyArray<HandCard>;\n  isSmall: boolean;\n  isTurnPending: boolean;\n}\n\nconst HandCardsDisplay = memo((props: HandCardsProps) => {\n  const { player, isAllCardsAvailable, cards, isSmall, isTurnPending } = props;\n  const selectedCard = useTurnStore((state) => state.selectedCard);\n  const resetSelectedCard = useResetSelectedCard();\n\n  const resetEffectOpts = useResetEffectOpts();\n  const setSelectedCardHand = useSelectCardHand();\n  const setSelectedCardHandAllCardsAvailable =\n    useSelectCardHandAllCardsAvailable();\n  const roomId = useClientGameStore((state) => state.roomId);\n  const focusHandCardInfo = useKeyboardCursorStore((state) =>\n    state.getHandCardWithFocus()\n  );\n  const speed = useAnimationSpeed();\n  const [cssWidth, setCssWidth] = useState<string | null>(null);\n\n  const isSelected = (handCard: HandCard) =>\n    selectedCard !== null &&\n    selectedCard.type == SelectedCardType.HAND &&\n    selectedCard.player == player &&\n    ((selectedCard.handCardId !== undefined &&\n      selectedCard.handCardId === handCard.id) ||\n      (selectedCard.name !== undefined &&\n        selectedCard.name === handCard.card.name));\n\n  const isKeyboardFocused = (idx: number) =>\n    !!focusHandCardInfo &&\n    focusHandCardInfo.player === player &&\n    focusHandCardInfo.index === idx;\n\n  const onClick =\n    (handCard: HandCard): MouseEventHandler<HTMLDivElement> =>\n    (e) => {\n      e.stopPropagation();\n      if (isSelected(handCard)) {\n        resetSelectedCard();\n      } else if (isAllCardsAvailable && handCard.card.name !== undefined) {\n        setSelectedCardHandAllCardsAvailable(player, handCard.card.name);\n      } else {\n        setSelectedCardHand(player, handCard.id);\n      }\n      resetEffectOpts();\n    };\n\n  useEffect(() => {\n    if (isSmall) setCssWidth(\"calc(var(--card-normal-width) * 0.3)\");\n    else {\n      setCssWidth(\n        `calc(var(--card-normal-width) * (${\n          4 + Math.max(cards.length - NORMAL_CARD_LIMIT, 0) * 0.25\n        } / ${Math.max(cards.length - 1, 4)}))`\n      );\n    }\n  }, [cards.length, setCssWidth, isSmall]);\n\n  return (\n    <div\n      className=\"game-hand-center\"\n      style={{\n        flexWrap: isSmall ? \"wrap\" : \"nowrap\",\n      }}\n    >\n      {cssWidth === null ? null : (\n        <AnimatePresence>\n          {cards.map((handCard, i) => {\n            const selected = isSelected(handCard);\n            const keyboardFocused = isKeyboardFocused(i);\n\n            return (\n              <motion.div\n                id={cssIdFor.handCard(handCard)}\n                key={`${roomId ?? \"none\"}_${handCard.id}`}\n                className={`hand-card ${isSmall ? \"hand-card-small\" : \"\"} ${\n                  selected ? \"selected\" : \"\"\n                }`}\n                onClick={onClick(handCard)}\n                animate={{\n                  opacity: 1,\n                  width: cssWidth,\n                  y: isSmall ? 0 : selected ? \"1em\" : \"2em\",\n                }}\n                whileHover={{ y: 0 }}\n                transition={{ duration: speed === 0 ? 0 : 0.3 / speed }}\n              >\n                <CardDisplay\n                  cardName={handCard.card.name}\n                  size={CardSize.NORMAL}\n                  highlighted={selected}\n                  keyboardFocused={keyboardFocused}\n                  isOwnerTurnPending={isTurnPending}\n                />\n              </motion.div>\n            );\n          })}\n        </AnimatePresence>\n      )}\n    </div>\n  );\n});\n\nHandCardsDisplay.displayName = \"HandCardsDisplay\";\n\nexport default HandCardsDisplay;\n","import { useMemo } from \"react\";\n\nimport StepButton from \"components/StepButton\";\nimport { Player } from \"engine/types/game-state\";\nimport { cssIdFor, UIElement } from \"engine/types/keyframes\";\nimport { canRoleControlPlayer } from \"engine/types/updates\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { useInspector, useRole, useStepMaker } from \"stores/ClientGameStore\";\nimport DeckInfo from \"./DeckInfo\";\nimport HandCardsDisplay from \"./HandCardsDisplay\";\nimport \"./HandDisplay.css\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\n\nconst SHORTCUT_END_TURN = \"E\";\ninterface HandProps {\n  player: Player;\n}\n\nfunction HandDisplay(props: HandProps) {\n  const { player } = props;\n  const inspector = useInspector();\n  const stepMaker = useStepMaker();\n  const playerState = inspector.gameState[player];\n  const isAllCardsAvailable = inspector.isAllCardsAvailable();\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const hotkeysEnabled = useKeyboardCursorStore((state) => state.enabled);\n  const allCardsHand = useMemo(() => {\n    const allCardNames = Object.keys(cardsDB);\n    allCardNames.sort();\n    return allCardNames.map((name, i) => ({\n      id: `${i}`,\n      card: { name },\n    }));\n  }, [cardsDB]);\n  const role = useRole();\n  const cards = isAllCardsAvailable ? allCardsHand : playerState.hand;\n\n  const endTurnStep = stepMaker.endTurn(player);\n  const isSmall = isAllCardsAvailable;\n  const disable = !canRoleControlPlayer(role, player);\n\n  return (\n    <div\n      className={`game-cards-hand ${isSmall ? \"small-cards\" : \"\"} ${\n        disable ? \"disable\" : \"\"\n      }`}\n    >\n      <DeckInfo player={player} />\n      <HandCardsDisplay\n        player={player}\n        isAllCardsAvailable={isAllCardsAvailable}\n        cards={cards}\n        isSmall={isSmall}\n        isTurnPending={inspector.isTurnPending(player)}\n      />\n      <div className=\"end-turn-button\">\n        <StepButton\n          key={inspector.gameState.turnNumber}\n          shortcut={hotkeysEnabled ? SHORTCUT_END_TURN : undefined}\n          id={cssIdFor.element(UIElement.END_TURN)}\n          step={endTurnStep}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default HandDisplay;\n","import { useEffect, useState, useCallback } from \"react\";\nimport \"./Mask.css\";\n\nimport { useMutationObserver } from \"stores/NavStore\";\n\nconst useSize = (elt: Element | null) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (!elt) return;\n\n    const observer = new ResizeObserver(() => {\n      setWidth(elt.scrollWidth);\n      setHeight(elt.scrollHeight);\n    });\n\n    observer.observe(elt);\n    return () => observer.disconnect();\n  }, [elt]);\n\n  return { width, height };\n};\n\ninterface UnmaskRectProps {\n  unmaskSelector: string;\n}\n\nconst UNMASK_PADDING = 10;\n\nconst UnmaskRect = (props: UnmaskRectProps) => {\n  const { unmaskSelector } = props;\n  const [maskElt, setMaskElt] = useState<HTMLElement | null>(null);\n  const [elt, setElt] = useState<HTMLElement | null>(null);\n  const [x, setX] = useState<number>(0);\n  const [y, setY] = useState<number>(0);\n\n  useMutationObserver(unmaskSelector, setElt);\n  useMutationObserver(\"#keyframe-mask-img\", setMaskElt);\n\n  const updateOffset = useCallback(() => {\n    if (maskElt === null) return;\n    if (elt === null) return;\n    const { top: maskTop, left: maskLeft } = maskElt.getBoundingClientRect();\n    const { top: eltTop, left: eltLeft } = elt.getBoundingClientRect();\n    setX(eltLeft - maskLeft);\n    setY(eltTop - maskTop);\n  }, [maskElt, elt, setX, setY]);\n\n  useEffect(() => {\n    updateOffset();\n    window.addEventListener(\"resize\", updateOffset, { passive: true });\n    return () => {\n      window.removeEventListener(\"resize\", updateOffset);\n    };\n  }, [updateOffset]);\n\n  const { width, height } = useSize(elt);\n\n  return (\n    <rect\n      x={x - UNMASK_PADDING}\n      y={y - UNMASK_PADDING}\n      width={width + 2 * UNMASK_PADDING}\n      height={height + 2 * UNMASK_PADDING}\n      fill=\"black\"\n    />\n  );\n};\n\ninterface MaskProps {\n  selector?: string;\n  unmaskSelectors?: string[];\n}\n\nconst Mask = (props: MaskProps) => {\n  const { selector, unmaskSelectors } = props;\n  const [elt, setElt] = useState<Element | null>(null);\n  const { width, height } = useSize(elt);\n\n  useMutationObserver(\"#game-page-root-wrapper\", setElt);\n\n  return (\n    <div className=\"keyframe-mask\">\n      <svg\n        id=\"keyframe-mask-img\"\n        className=\"keyframe-mask-img\"\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <mask id=\"keyframe-svg-mask-defn\">\n          {/* white is visible */}\n          <rect x={0} y={0} width={width} height={height} fill=\"white\" />\n          {/* black is invisible */}\n          {selector ? (\n            <UnmaskRect key={selector} unmaskSelector={selector} />\n          ) : null}\n          {(unmaskSelectors ?? []).map((selector) => (\n            <UnmaskRect key={selector} unmaskSelector={selector} />\n          ))}\n        </mask>\n\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"currentColor\"\n          mask=\"url(#keyframe-svg-mask-defn)\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Mask;\n","import { PropsWithChildren, useState } from \"react\";\n\nimport \"./MessagePopover.css\";\nimport {\n  autoUpdate,\n  flip,\n  FloatingFocusManager,\n  offset,\n  shift,\n  limitShift,\n  useFloating,\n  Placement,\n} from \"@floating-ui/react\";\nimport { useMutationObserver } from \"stores/NavStore\";\n\ninterface MessagePopoverProps {\n  selector: string;\n  placement?: string;\n}\n\n/**\n * A popover placed next to an element.\n *\n * Unlike Tooltip, we need to target arbitrary selectors.\n */\nconst MessagePopover = (props: PropsWithChildren<MessagePopoverProps>) => {\n  const { selector, placement = \"right\", children } = props;\n  const [elt, setElt] = useState<HTMLElement | null>(null);\n  const [isPositioned, setIsPositioned] = useState(false);\n  useMutationObserver(selector, setElt);\n\n  const {\n    context,\n    refs,\n    floatingStyles,\n    update: updPos,\n  } = useFloating({\n    elements: { reference: elt ?? undefined },\n    placement: placement as Placement,\n    whileElementsMounted: (refEl, floatingEl, updPos) => {\n      return autoUpdate(refEl, floatingEl, () => {\n        updPos();\n        setIsPositioned(true);\n      });\n    },\n    middleware: [\n      offset(5),\n      flip(),\n      shift({ mainAxis: false, crossAxis: true, limiter: limitShift() }),\n    ],\n  });\n\n  return (\n    <FloatingFocusManager context={context} modal={false}>\n      <div\n        className=\"message-popover\"\n        ref={refs.setFloating}\n        style={floatingStyles}\n      >\n        {isPositioned ? children : null}\n      </div>\n    </FloatingFocusManager>\n  );\n};\n\nexport default MessagePopover;\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport { Player, Slot } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\nimport { UIElement, selectorFor } from \"engine/types/keyframes\";\n\nimport { useClientGameStore, useInspector } from \"stores/ClientGameStore\";\nimport { useMutationObserver } from \"stores/NavStore\";\nimport CutsceneDialogBox from \"components/CutsceneDialogBox\";\nimport Mask from \"./Mask\";\nimport MessagePopover from \"./MessagePopover\";\nimport \"./Keyframe.css\";\n\nconst Keyframe = () => {\n  const keyframe = useClientGameStore((state) => state.gameState.keyframe);\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const inspector = useInspector();\n  const isGameActive = inspector.isGameActive();\n  const [nextElt, setNextElt] = useState<HTMLElement | null>(null);\n\n  const {\n    id: keyframeId,\n    dialogue,\n    speaker,\n    selector: selectorOpt,\n    selectorPermanent,\n    selectorSlot,\n    placement,\n    showNext = false,\n    nextSelector: nextSelectorOpt,\n    nextSelectorPermanent,\n    showMask = false,\n    unmaskSelectors,\n    useCutsceneUI,\n    hideBattler = false,\n  } = keyframe ?? {};\n\n  const resolveSelectorPermanent = (\n    cardName: string,\n    selectorElem?: UIElement\n  ) => {\n    const matches = inspector.getPermanents({\n      name: cardName,\n    });\n    if (matches.length !== 1)\n      throw new Error(\"expect requested selector permanent to exist uniquely\");\n    return selectorFor.permanent(matches[0], selectorElem);\n  };\n  const resolveSelector = (\n    selectorElem?: UIElement,\n    cardName?: string,\n    slot?: Slot\n  ) => {\n    if (slot !== undefined) return selectorFor.slot(slot);\n    if (cardName !== undefined)\n      return resolveSelectorPermanent(cardName, selectorElem);\n    if (selectorElem === undefined) return undefined;\n    // Only support P1 gems for now\n    if (selectorElem === UIElement.GEMS) return selectorFor.gems(Player.P1);\n    return selectorFor.element(selectorElem);\n  };\n\n  const selector = resolveSelector(\n    selectorOpt,\n    selectorPermanent,\n    selectorSlot\n  );\n  const nextSelector =\n    resolveSelector(nextSelectorOpt, nextSelectorPermanent) ?? null;\n\n  const onNext = useCallback(() => {\n    if (keyframeId === undefined) return;\n    sendStep?.({\n      type: StepType.ADVANCE_KEYFRAME,\n      keyframeId,\n    });\n  }, [sendStep, keyframeId]);\n\n  useMutationObserver(nextSelector, setNextElt);\n\n  useEffect(() => {\n    if (!isGameActive) return;\n    if (!nextElt) return;\n\n    const prevPointerEvents = nextElt.style.pointerEvents;\n    nextElt.addEventListener(\"click\", onNext);\n    nextElt.style.pointerEvents = \"auto\";\n    return () => {\n      nextElt.style.pointerEvents = prevPointerEvents;\n      nextElt.removeEventListener(\"click\", onNext);\n    };\n  }, [nextElt, onNext, isGameActive]);\n\n  return (\n    <>\n      <div className=\"keyframe-container\">\n        {selector && dialogue && !hideBattler && keyframe !== undefined ? (\n          <MessagePopover\n            selector={selector}\n            placement={placement}\n            key={keyframeId}\n          >\n            <CutsceneDialogBox keyframe={keyframe} />\n          </MessagePopover>\n        ) : null}\n      </div>\n      {showMask && isGameActive ? (\n        <Mask selector={selector} unmaskSelectors={unmaskSelectors} />\n      ) : null}\n    </>\n  );\n};\n\nexport default Keyframe;\n","import { z } from \"zod\";\n\nexport enum CursorEventType {\n  MOVE = \"move\",\n  REMOVE = \"remove\",\n  CLICK = \"click\",\n}\n\nconst CursorEventMoveZod = z.object({\n  type: z.literal(CursorEventType.MOVE),\n  rX: z.number(),\n  rY: z.number(),\n});\nexport type CursorEventMove = z.infer<typeof CursorEventMoveZod>;\n\nconst CursorEventRemoveZod = z.object({\n  type: z.literal(CursorEventType.REMOVE),\n});\ntype CursorEventRemove = z.infer<typeof CursorEventRemoveZod>;\n\nconst CursorEventClickZod = z.object({\n  type: z.literal(CursorEventType.CLICK),\n  rX: z.number(),\n  rY: z.number(),\n});\ntype CursorEventClick = z.infer<typeof CursorEventClickZod>;\n\nexport const CursorEventZod = z.union([\n  CursorEventMoveZod,\n  CursorEventRemoveZod,\n  CursorEventClickZod,\n]);\nexport type CursorEvent = z.infer<typeof CursorEventZod>;\n\nexport type CursorResp = {\n  connId: string;\n  event: CursorEvent;\n};\n","export const getRootElt = () => {\n  return (\n    document.getElementById(\"game-page-root\") ??\n    document.getElementById(\"mastery-tree-root\") ??\n    document.body\n  );\n};\n\nconst getRefElt = () => {\n  return (\n    document.getElementById(\"game-board\") ??\n    document.getElementById(\"mastery-tree-grid\") ??\n    document.getElementById(\"game-cutscene-ui-dialog-box\")\n  );\n};\n\nexport const posToRatio = ({ x, y }: { x: number; y: number }) => {\n  const rect = getRefElt()?.getBoundingClientRect();\n\n  if (!rect) {\n    return { rX: null, rY: null };\n  }\n\n  const rX = (x - (rect.x + window.scrollX)) / rect.width;\n  const rY = (y - (rect.y + window.scrollY)) / rect.height;\n  return { rX, rY };\n};\n\nexport const ratioToPos = ({ rX, rY }: { rX: number; rY: number }) => {\n  const rect = getRefElt()?.getBoundingClientRect();\n\n  if (!rect) {\n    return { x: null, y: null };\n  }\n\n  const x = rect.width * rX + rect.x + window.scrollX;\n  const y = rect.height * rY + rect.y + window.scrollY;\n  return { x, y };\n};\n\n/* eslint-disable */\nexport function throttle<T extends (...args: any) => any>(\n  func: T,\n  // TODO: change throttle ms based on load testing\n  wait = 200\n): typeof func {\n  let inThrottle: boolean;\n  let lastResult: ReturnType<T>;\n\n  // @ts-expect-error\n  return function (this: any) {\n    const args = arguments as any;\n    const context = this;\n    if (!inThrottle) {\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), wait);\n      lastResult = func.apply(context, args);\n    }\n    return lastResult;\n  };\n}\n/* eslint-enable */\n\nconst murmurhash = (str: string, seed: number) => {\n  let l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n\n  while (l >= 4) {\n    k =\n      (str.charCodeAt(i) & 0xff) |\n      ((str.charCodeAt(++i) & 0xff) << 8) |\n      ((str.charCodeAt(++i) & 0xff) << 16) |\n      ((str.charCodeAt(++i) & 0xff) << 24);\n    k =\n      (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n    k ^= k >>> 24;\n    k =\n      (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n\n    h =\n      ((h & 0xffff) * 0x5bd1e995 +\n        ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^\n      k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3: {\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n        (h & 0xffff) * 0x5bd1e995 +\n        ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n      break;\n    }\n    case 2: {\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n        (h & 0xffff) * 0x5bd1e995 +\n        ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n      break;\n    }\n    case 1: {\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n        (h & 0xffff) * 0x5bd1e995 +\n        ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n      break;\n    }\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n  h ^= h >>> 15;\n\n  return h >>> 0;\n};\n\nexport const colorHash = (str: string, l: number, c: number) => {\n  const h = murmurhash(str, 0x1234abcd) % 359;\n  return `oklch(${l}% ${c} ${h})`;\n};\n","import { motion } from \"framer-motion\";\nimport { useMemo } from \"react\";\nimport { colorHash } from \"./utils\";\n\nfunction Cursor({\n  connId,\n  x,\n  y,\n  animated = false,\n}: {\n  connId: string;\n  x: number;\n  y: number;\n  animated?: boolean;\n}) {\n  const color = colorHash(connId, 75, 0.12);\n  const outline = colorHash(connId, 90, 0.05);\n\n  const cursorSvg = useMemo(() => {\n    return (\n      <svg\n        width={18}\n        height={20}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g filter=\"url(#filter0_d_103_28)\">\n          <path\n            d=\"M2.64616 0.738445C2.56143 0.333479 2.99494 0.0185095 3.35391 0.224235L17.658 8.42208C18.022 8.63067 17.9615 9.17306 17.5606 9.29639L10.618 11.432C10.5105 11.4651 10.418 11.5349 10.3568 11.6292L6.88216 16.9817C6.64914 17.3407 6.0983 17.2377 6.01065 16.8188L2.64616 0.738445Z\"\n            fill={color}\n          />\n          <path\n            d=\"M6.48987 16.6677L3.14491 0.680752L17.3684 8.83239L10.471 10.9541C10.2514 11.0217 10.0625 11.1643 9.93741 11.357L6.48987 16.6677Z\"\n            stroke={outline}\n          />\n        </g>\n        <defs>\n          <filter\n            id=\"filter0_d_103_28\"\n            x=\"0.635422\"\n            y=\"0.15947\"\n            width=\"19.2637\"\n            height=\"21.0409\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"2\" />\n            <feGaussianBlur stdDeviation=\"1\" />\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0\"\n            />\n            <feBlend\n              mode=\"normal\"\n              in2=\"BackgroundImageFix\"\n              result=\"effect1_dropShadow_103_28\"\n            />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_103_28\"\n              result=\"shape\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    );\n  }, [color, outline]);\n\n  return animated ? (\n    <motion.div\n      className=\"presence-cursor\"\n      animate={{ x, y }}\n      transition={{ duration: 0.2 }}\n    >\n      {cursorSvg}\n    </motion.div>\n  ) : (\n    <div\n      className=\"presence-cursor\"\n      style={{ transform: `translateX(${x}px) translateY(${y}px)` }}\n    >\n      {cursorSvg}\n    </div>\n  );\n}\n\nexport default Cursor;\n","import { motion } from \"framer-motion\";\nimport { colorHash } from \"./utils\";\n\nfunction CursorClick({\n  connId,\n  x,\n  y,\n}: {\n  connId: string;\n  x: number;\n  y: number;\n}) {\n  const color = colorHash(connId, 85, 0.08);\n\n  return (\n    <motion.div\n      style={{\n        borderColor: color,\n        transform: `translateX(${x}px) translateY(${y}px)`,\n      }}\n      className=\"presence-cursor-click\"\n      initial={{ opacity: 1, scale: 0, x, y }}\n      exit={{ opacity: 0, scale: 1, x, y }}\n      transition={{ duration: 0.4 }}\n    />\n  );\n}\n\nexport default CursorClick;\n","import { CursorEvent, CursorEventType } from \"engine/types/presence\";\nimport { WSReqType } from \"game-server/ws\";\nimport { MouseEvent, useCallback, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  useServerInterfaceController,\n  useIsAdmin,\n} from \"stores/ServerInteractionStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\nimport { posToRatio, throttle } from \"./utils\";\n\nexport const useMouseMove = () => {\n  const [pos, setPos] = useState({ x: 0, y: 0 });\n  const serverInterfaceController = useServerInterfaceController();\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n  const { spectateTeamId } = useParams();\n  const enableSendEvents =\n    useIsAdmin() === false && spectateTeamId === undefined && !isSpectating;\n\n  // yes these are identical, so we have separate throttles\n  const sendReq = useMemo(() => {\n    const handler = (event: CursorEvent) => {\n      if (!enableSendEvents) return;\n      serverInterfaceController.sendReq({\n        type: WSReqType.CURSOR_EVENT,\n        event,\n      });\n    };\n    return throttle(handler);\n  }, [serverInterfaceController, enableSendEvents]);\n\n  const sendReq2 = useMemo(() => {\n    const handler = (event: CursorEvent) => {\n      if (!enableSendEvents) return;\n      serverInterfaceController.sendReq({\n        type: WSReqType.CURSOR_EVENT,\n        event,\n      });\n    };\n    return throttle(handler);\n  }, [serverInterfaceController, enableSendEvents]);\n\n  const onMouseLeave = useCallback(() => {\n    sendReq({\n      type: CursorEventType.REMOVE,\n    });\n  }, [sendReq]);\n\n  // HACK: Catch numbers that JSON into null. We're being super\n  // careful here since this is a mid-hunt fix.\n  const isJsonNull = (num: number) => JSON.parse(JSON.stringify(num)) === null;\n\n  const onMouseMove = useCallback(\n    (e: MouseEvent) => {\n      const { rX, rY } = posToRatio({ x: e.pageX, y: e.pageY });\n      if (rX !== null && rY !== null && !isJsonNull(rX) && !isJsonNull(rY)) {\n        sendReq({\n          type: CursorEventType.MOVE,\n          rX,\n          rY,\n        });\n      } else {\n        sendReq({\n          type: CursorEventType.REMOVE,\n        });\n      }\n    },\n    [sendReq]\n  );\n\n  const onClickCapture = useCallback(\n    (e: MouseEvent) => {\n      const { rX, rY } = posToRatio({ x: e.clientX, y: e.clientY });\n      if (rX !== null && rY !== null && !isJsonNull(rX) && !isJsonNull(rY)) {\n        sendReq2({\n          type: CursorEventType.CLICK,\n          rX,\n          rY,\n        });\n      }\n    },\n    [sendReq2]\n  );\n\n  return { pos, setPos, onMouseLeave, onMouseMove, onClickCapture };\n};\n","import { CursorEventType } from \"engine/types/presence\";\nimport { WSReqType } from \"game-server/ws\";\nimport { ServerInterfaceType } from \"game-server/server-interface/ServerInterface\";\nimport { AnimatePresence, clamp } from \"framer-motion\";\nimport { PropsWithChildren, useEffect, useState } from \"react\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport Cursor from \"./Cursor\";\nimport CursorClick from \"./CursorClick\";\nimport \"./Presence.css\";\nimport { useMouseMove } from \"./useMouseMove\";\nimport { getRootElt, ratioToPos } from \"./utils\";\n\ntype CursorInfo = {\n  connId: string;\n  x: number;\n  y: number;\n};\n\nlet lastClickId = 0;\ntype ClickInfo = CursorInfo & { id: number };\n\nfunction Presence({\n  children,\n  cursorGroupName,\n  enabled,\n  animated = true,\n}: PropsWithChildren<{\n  cursorGroupName: string;\n  enabled: boolean;\n  animated?: boolean;\n}>) {\n  const { onMouseLeave, onMouseMove, onClickCapture } = useMouseMove();\n\n  const [isCursorGroupReady, setIsCursorGroupReady] = useState(false);\n  const [cursors, setCursors] = useState<{\n    [connId: string]: CursorInfo;\n  }>({});\n  const [clicks, setClicks] = useState<ClickInfo[]>([]);\n\n  const serverInterfaceController = useServerInterfaceController();\n\n  useEffect(() => {\n    if (!isCursorGroupReady) {\n      setCursors({});\n      return;\n    }\n    return serverInterfaceController.onCursorEvent.addListener((e) => {\n      for (const { connId, event } of e.events)\n        switch (event.type) {\n          case CursorEventType.CLICK:\n          case CursorEventType.MOVE: {\n            const { rX, rY } = event;\n            const rawPos = ratioToPos({ rX, rY });\n            if (rawPos.x === null && rawPos.y === null) {\n              break;\n            }\n            const x = clamp(0, getRootElt().clientWidth - 20, rawPos.x);\n            const y = clamp(0, getRootElt().clientHeight + 20, rawPos.y);\n\n            const cursor = { connId, x, y };\n            setCursors((cursors) => ({ ...cursors, [connId]: cursor }));\n\n            if (event.type === CursorEventType.CLICK) {\n              const click = { ...cursor, id: lastClickId++ };\n              setClicks((clicks) => [...clicks, click]);\n            }\n\n            break;\n          }\n          case CursorEventType.REMOVE: {\n            setCursors((value) => {\n              const { [connId]: _, ...rest } = value;\n              return rest;\n            });\n            break;\n          }\n        }\n    });\n  }, [serverInterfaceController, isCursorGroupReady]);\n\n  useEffect(() => {\n    if (clicks.length > 0) {\n      setClicks([]);\n    }\n  }, [clicks]);\n\n  useEffect(() => {\n    if (!enabled) return;\n    return serverInterfaceController.addAuthEffect(() => {\n      const reqId = serverInterfaceController.nextEnterRoomReqId++;\n      const cleanupOnAck =\n        serverInterfaceController.onSetCursorGroupAckEvent.addListener(\n          (ackReqId) => {\n            if (ackReqId !== reqId) return;\n            setIsCursorGroupReady(true);\n          }\n        );\n      serverInterfaceController.sendReq({\n        type: WSReqType.SET_CURSOR_GROUP,\n        cursorGroupName,\n        reqId,\n      });\n      return () => {\n        cleanupOnAck();\n        setIsCursorGroupReady(false);\n        serverInterfaceController.sendReq({\n          type: WSReqType.SET_CURSOR_GROUP,\n          cursorGroupName: null,\n          reqId,\n        });\n      };\n    }, ServerInterfaceType.CURSOR);\n  }, [enabled, serverInterfaceController, cursorGroupName]);\n\n  if (!enabled) {\n    return <div id=\"game-presence\">{children}</div>;\n  }\n\n  return (\n    <div\n      id=\"game-presence\"\n      onClickCapture={onClickCapture}\n      onMouseLeave={onMouseLeave}\n      onMouseMove={onMouseMove}\n    >\n      {Object.values(cursors).map(({ connId, x, y }) => (\n        <Cursor key={connId} connId={connId} x={x} y={y} animated={animated} />\n      ))}\n      <AnimatePresence>\n        {clicks.map(({ id, connId, x, y }) => (\n          <CursorClick key={id} connId={connId} x={x} y={y} />\n        ))}\n      </AnimatePresence>\n      {children}\n    </div>\n  );\n}\n\nexport default Presence;\n","import { describeForm } from \"components/BattleHelpText\";\nimport FormattedText from \"components/FormattedText\";\nimport StepButton from \"components/StepButton\";\nimport { Permanent } from \"engine/types/game-state\";\nimport {\n  AbilityType,\n  EffectOptType,\n  OneChoiceEffectOptForm,\n} from \"engine/types/effects\";\nimport { cssIdFor, UIElement } from \"engine/types/keyframes\";\nimport { StepType, Step } from \"engine/types/steps\";\nimport { ReactNode, useState } from \"react\";\nimport {\n  useClientGameStore,\n  useInspector,\n  useStepMaker,\n  useRole,\n  useIsLockedBesidesKeyframe,\n} from \"stores/ClientGameStore\";\nimport { useSelectedPermanent, useTurnStore } from \"stores/TurnStore\";\nimport { useResetEffectOpts } from \"stores/UserGameActionHandlers\";\nimport \"./CardActionsDisplay.css\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport { Check, isPassthrough } from \"engine/types/action-validation\";\n\nconst SHORTCUT_SPECIAL = \"Z\";\nconst SHORTCUT_FLEX = \"X\";\nconst SHORTCUT_CREATE1 = \"C\";\nconst SHORTCUT_CREATE2 = \"V\";\n\ntype CardActionData = {\n  step: Step;\n  button: ReactNode;\n};\n\nexport const useSelectedPermanentCardActionData = (): CardActionData[] => {\n  const permanent = useSelectedPermanent();\n  const inspector = useInspector();\n  const stepMaker = useStepMaker();\n  const role = useRole();\n  const hotkeysEnabled = useKeyboardCursorStore((state) => state.enabled);\n  const isLockedBesidesKeyframe = useIsLockedBesidesKeyframe();\n  const cardActions: CardActionData[] = [];\n\n  if (permanent === null) return [];\n  const gemColorCombos = inspector.getCreateGemsColors(permanent);\n  for (let i = 0; i < gemColorCombos.length; i++) {\n    const gemColors = gemColorCombos[i];\n    const createStep = stepMaker.create(permanent, gemColors);\n    const shortcut = hotkeysEnabled\n      ? i == 0\n        ? SHORTCUT_CREATE1\n        : i == 1\n        ? SHORTCUT_CREATE2\n        : undefined\n      : undefined;\n    cardActions.push({\n      step: createStep,\n      button: (\n        <StepButton\n          id={cssIdFor.element(UIElement.CREATE_GEMS)}\n          key={`${StepType.CREATE_GEMS}-${gemColors.join(\"-\")}`}\n          shortcut={shortcut}\n          step={createStep}\n        ></StepButton>\n      ),\n    });\n  }\n\n  for (const abilityType of [AbilityType.FLEX, AbilityType.SPECIAL]) {\n    const abilityStep = stepMaker.activateAbility(permanent, abilityType, []);\n    const shortcut = hotkeysEnabled\n      ? abilityType === AbilityType.FLEX\n        ? SHORTCUT_FLEX\n        : SHORTCUT_SPECIAL\n      : undefined;\n    cardActions.push({\n      step: abilityStep,\n      button: (\n        <StepButton\n          id={cssIdFor.element(\n            abilityType === AbilityType.FLEX\n              ? UIElement.FLEX\n              : UIElement.SPECIAL\n          )}\n          key={abilityType}\n          shortcut={shortcut}\n          step={abilityStep}\n        ></StepButton>\n      ),\n    });\n  }\n\n  return cardActions.filter(({ step }) => {\n    const { failedChecks } = inspector.resolveAndValidate(step, role);\n    // Visually disable the UI if the UI is locked.\n    if (isLockedBesidesKeyframe) failedChecks.add(Check.UI_LOCKED);\n    failedChecks.delete(Check.NUM_OPTS);\n    return !isPassthrough(failedChecks, step.type);\n  });\n};\n\nfunction CardActionsDisplay({ fallback = null }: { fallback?: ReactNode }) {\n  const pendingEffect = useTurnStore((state) => state.pendingEffect);\n  const pendingForms = useTurnStore((state) => state.pendingForms);\n  const resetEffectOpts = useResetEffectOpts();\n  const permanent = useSelectedPermanent();\n  const inspector = useInspector();\n  const stepMaker = useStepMaker();\n  const hotkeysEnabled = useKeyboardCursorStore((state) => state.enabled);\n  const selectedPermanentCardActionData = useSelectedPermanentCardActionData();\n\n  if (permanent === null) return null;\n  const permanentId = permanent.id;\n\n  // TODO: userPrompt should be somewhere more central\n  // TODO: cancel should not be here, but in the below zone\n  if (pendingEffect !== null) {\n    const pendingForm = pendingForms[0];\n    if (pendingForm === undefined) {\n      throw new Error(\n        \"effect opts selection should always have at least one pending form\"\n      );\n    }\n    const userPrompt = describeForm(\n      inspector,\n      pendingForm,\n      pendingEffect,\n      permanent.card.name\n    );\n\n    // Handle the case where the user needs to pick an option out of a dropdown in the side menu.\n    const choices = (pendingForm as OneChoiceEffectOptForm).choices;\n    return (\n      <>\n        <FormattedText text={userPrompt} />\n        {choices ? (\n          <DropdownSelectAndSubmit\n            choices={choices}\n            permanent={permanent}\n            pendingEffect={pendingEffect}\n          />\n        ) : (\n          \"\"\n        )}\n        <button\n          key={\"cancel\"}\n          onClick={() => {\n            resetEffectOpts();\n          }}\n        >\n          Cancel\n        </button>\n      </>\n    );\n  }\n\n  return selectedPermanentCardActionData.length === 0 ? (\n    <>{fallback}</>\n  ) : (\n    <div className=\"card-action-buttons\">\n      {selectedPermanentCardActionData.map(({ button }) => button)}\n    </div>\n  );\n}\n\ntype DropdownSelectAndSubmitProps = {\n  choices: string[];\n  permanent: Permanent;\n  pendingEffect: AbilityType;\n};\n\nfunction DropdownSelectAndSubmit(props: DropdownSelectAndSubmitProps) {\n  const { choices, permanent, pendingEffect } = props;\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const stepMaker = useStepMaker();\n  const [selectedOption, setSelectedOption] = useState(choices[0]); // This is the default.\n  return (\n    <>\n      <select\n        value={selectedOption}\n        onChange={(e) => setSelectedOption(e.target.value)}\n      >\n        {choices.map((opt) => (\n          <option key={opt} value={opt}>\n            {opt}\n          </option>\n        ))}\n      </select>\n      <button\n        key={\"option-select\"}\n        onClick={() => {\n          // If nothing has been selected yet, do nothing.\n          if (!selectedOption) return;\n          // If the server is down, don't accept creating new steps.\n          // However, still mark inputs as clickable so that the click\n          // handler doesn't propagate to the parent and cause a deselect.\n          if (!sendStep) return;\n          sendStep(\n            stepMaker.activateAbility(permanent, pendingEffect, [\n              {\n                choice: selectedOption,\n                type: EffectOptType.ONE_CHOICE,\n              },\n            ])\n          );\n        }}\n      >\n        Submit\n      </button>\n    </>\n  );\n}\n\nexport default CardActionsDisplay;\n","import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useUserLogStore } from \"stores/UserLogStore\";\nimport \"./GameLog.css\";\nimport \"overlayscrollbars/overlayscrollbars.css\";\nimport {\n  OverlayScrollbarsComponent,\n  OverlayScrollbarsComponentRef,\n} from \"overlayscrollbars-react\";\nimport { defaultOverlayScrollbarsOptions } from \"HuntLib\";\n\nfunction GameLog() {\n  const { userLog } = useUserLogStore();\n  const [renderedUserLog, setRenderedUserLog] = useState(userLog);\n  const [isFullyScrolled, setIsFullyScrolled] = useState(true);\n  const ref = useRef<OverlayScrollbarsComponentRef>(null);\n\n  useLayoutEffect(() => {\n    const el = ref.current?.osInstance()?.elements()?.viewport;\n    if (el) {\n      if (el.scrollHeight - el.clientHeight - 50 <= el.scrollTop) {\n        setIsFullyScrolled(true);\n      } else {\n        setIsFullyScrolled(false);\n      }\n    }\n    setRenderedUserLog(userLog.trim());\n  }, [userLog]);\n\n  useEffect(() => {\n    if (isFullyScrolled) {\n      const el = ref.current?.osInstance()?.elements()?.viewport;\n      if (el) {\n        el.scrollTop = el.scrollHeight - el.clientHeight;\n      }\n    }\n  }, [isFullyScrolled, renderedUserLog]);\n\n  return (\n    <div className=\"game-console-wrapper\">\n      <OverlayScrollbarsComponent\n        options={defaultOverlayScrollbarsOptions}\n        className=\"game-console\"\n        ref={ref}\n      >\n        {renderedUserLog}\n      </OverlayScrollbarsComponent>\n    </div>\n  );\n}\n\nexport default GameLog;\n","import { getDevKnobs } from \"App.util\";\nimport { ConfirmModal } from \"components/Modal\";\nimport Tooltip from \"components/Tooltip\";\nimport { PUZ_NAME_PVP } from \"engine/puzzles/puzzle-data\";\nimport { GamePhase, Player, MAX_MANUAL_SAVES } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\nimport { Role } from \"engine/types/updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useState } from \"react\";\nimport { Link, useParams, useSearchParams } from \"react-router-dom\";\nimport Twemoji from \"react-twemoji\";\nimport {\n  useClientGameStore,\n  useInspector,\n  usePlayerPerspective,\n  useRole,\n  useIsLockedBesidesKeyframe,\n} from \"stores/ClientGameStore\";\nimport {\n  useSelectedDeckData,\n  useSubscribedTeamBattle,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\nimport \"./GameMenu.css\";\n\nfunction GameMenu() {\n  const serverInterfaceController = useServerInterfaceController();\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const inspector = useInspector();\n  const role = useRole();\n  const playerPerspective = usePlayerPerspective();\n  const { selectedDeckSlot = null } =\n    useSelectedDeckData(playerPerspective) ?? {};\n  const subscribedTeamBattle = useSubscribedTeamBattle();\n  const [searchParams] = useSearchParams();\n  const disableSteps = useIsLockedBesidesKeyframe();\n  const [showRestartModal, setShowRestartModal] = useState(false);\n  const roomId = useClientGameStore((state) => state.roomId);\n  const { spectateTeamId } = useParams();\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n\n  const { puzName } = useParams<{\n    puzName: string;\n  }>();\n  if (puzName === undefined)\n    throw new Error(\"expect puzName parameter to be defined\");\n\n  const statusText = (() => {\n    if (inspector.isGameActive()) {\n      const turnNum = inspector.getTurnNumber();\n      const isOwnTurn = inspector.isTurnPending(playerPerspective);\n      const turnText = `Turn ${Math.floor(turnNum / 2) + 1}`;\n      return `Battle in progress. ${turnText}. ${\n        isOwnTurn ? \"It's your turn!\" : \"Opponent's turn.\"\n      }`;\n    }\n\n    const { winner } = inspector.gameState;\n    const { isSolved } = inspector.gameState[playerPerspective];\n    if (winner === undefined)\n      throw new Error(\"expect winner to be defined when game ends\");\n    const loser = inspector.getOpponentOf(winner);\n\n    if (isSolved ?? false) {\n      if (winner === playerPerspective) return \"You won!\";\n      else return \"You lost successfully!\";\n    }\n\n    if (inspector.hasAI()) {\n      if (winner === playerPerspective)\n        return \"You won, but failed to make any friends.\";\n      else return \"You lost.\";\n    }\n\n    if (role === Role.GOD) {\n      switch (winner) {\n        case Player.P1:\n          return \"Player 1 won.\";\n        case Player.P2:\n          return \"Player 2 won.\";\n      }\n    }\n\n    if (winner === playerPerspective) return \"You won!\";\n    else return \"You lost.\";\n  })();\n\n  const saveLoadDom = (() => {\n    if (!inspector.areCheckpointsAllowed())\n      return \"Saving is not supported for this battle.\";\n    const checkpointSummaries = subscribedTeamBattle?.checkpointSummaries ?? {};\n    const newSlot =\n      Math.max(\n        0,\n        ...Object.keys(checkpointSummaries).map((slot) => Number(slot))\n      ) + 1;\n    return Array.from(new Array(MAX_MANUAL_SAVES + 1), (_, i) => {\n      const checkpointSummary = checkpointSummaries[i];\n      const checkpointSummaryDom = (() => {\n        if (i === newSlot) return \"New save\";\n        if (checkpointSummary === undefined) return null;\n        const {\n          turnNumber,\n          roomId: checkpointRoomId,\n          timestamp,\n        } = checkpointSummary;\n        const isOldRoom = roomId !== null && roomId !== checkpointRoomId;\n        return (\n          <Tooltip text={`Saved at ${new Date(timestamp).toLocaleString()}`}>\n            <div className={`${isOldRoom ? \"save-load-summary-old\" : \"\"}`}>\n              {i === 0\n                ? \"Autosave\"\n                : MAX_MANUAL_SAVES === 1\n                ? \"Save\"\n                : `Save ${i}`}{\" \"}\n              {isOldRoom ? \"(old)\" : null}\n              <div className=\"save-load-turn\">\n                Turn {Math.floor(turnNumber / 2) + 1}\n              </div>\n            </div>\n          </Tooltip>\n        );\n      })();\n      if (checkpointSummaryDom === null) return null;\n      return (\n        <div className=\"save-load-row\" key={i}>\n          <div className=\"save-load-status\">\n            <Twemoji>{checkpointSummaryDom}</Twemoji>\n          </div>\n          <Tooltip text=\"Save\">\n            <button\n              disabled={\n                i === 0 ||\n                disableSteps ||\n                inspector.gameState.phase !== GamePhase.ACTIVE\n              }\n              onClick={() => {\n                if (sendStep) {\n                  sendStep({\n                    type: StepType.CREATE_CHECKPOINT,\n                    slot: i,\n                  });\n                }\n              }}\n            >\n              <Twemoji>💾</Twemoji>\n            </button>\n          </Tooltip>\n          <Tooltip\n            text=\"Load\"\n            key={\n              // Force a re-render on checkpoint restore so that\n              // the tooltip registers as unhovered if the field\n              // size changes and the button moves out from\n              // underneath the mouse.\n              roomId\n            }\n          >\n            <button\n              disabled={i === newSlot || disableSteps}\n              onClick={() => {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.RESTORE_CHECKPOINT,\n                  puzName,\n                  slot: i,\n                });\n              }}\n            >\n              <Twemoji>📤️</Twemoji>\n            </button>\n          </Tooltip>\n        </div>\n      );\n    });\n  })();\n\n  const restartConfirmText =\n    inspector.getTurnNumber() > 1 && inspector.isGameActive()\n      ? \"Are you sure you want to restart?\"\n      : null;\n\n  const onRestart = () => {\n    serverInterfaceController.startAIBattleAsync(puzName, {\n      restart: true,\n      reuseDeck: true,\n      devKnobs: getDevKnobs(),\n    });\n  };\n\n  return (\n    <>\n      {spectateTeamId === undefined && !isSpectating ? (\n        <div className=\"save-load-menu\">{saveLoadDom}</div>\n      ) : null}\n      <div className=\"game-menu\">\n        <div className=\"game-menu-status\">{statusText}</div>\n        {puzName === PUZ_NAME_PVP &&\n        spectateTeamId === undefined &&\n        !isSpectating ? (\n          <div\n            onClick={() => {\n              serverInterfaceController.sendReq({\n                type: WSReqType.RESIGN,\n                player: playerPerspective,\n                puzName,\n              });\n            }}\n          >\n            <button disabled={!inspector.isGameActive()}>Forfeit</button>\n          </div>\n        ) : null}\n        {puzName !== PUZ_NAME_PVP &&\n        spectateTeamId === undefined &&\n        !isSpectating ? (\n          <>\n            {selectedDeckSlot === null ? null : (\n              <div>\n                <Link\n                  to={{\n                    pathname: `../deck/${selectedDeckSlot}/${puzName}`,\n                    search: searchParams.toString(),\n                  }}\n                >\n                  <button>Edit deck</button>\n                </Link>\n              </div>\n            )}\n            <div>\n              <button\n                disabled={disableSteps}\n                onClick={() => {\n                  restartConfirmText ? setShowRestartModal(true) : onRestart();\n                }}\n              >\n                Restart\n              </button>\n            </div>\n          </>\n        ) : null}\n        <div>\n          <Link\n            to={{\n              pathname: `../prep/${puzName}`,\n              search: searchParams.toString(),\n            }}\n          >\n            <button>Exit battle</button>\n          </Link>\n        </div>\n      </div>\n      <ConfirmModal\n        title=\"Are you sure?\"\n        isOpen={showRestartModal}\n        onClose={() => setShowRestartModal(false)}\n        onConfirm={onRestart}\n        confirmLabel=\"Restart\"\n      >\n        {restartConfirmText}\n      </ConfirmModal>\n    </>\n  );\n}\n\nexport default GameMenu;\n","import { useParams, useResolvedPath } from \"react-router-dom\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport {\n  useServerInterfaceController,\n  useTeamId,\n  useIsAdmin,\n} from \"stores/ServerInteractionStore\";\nimport {\n  useHotkeyPreferencesStore,\n  useUserPreferencesStore,\n} from \"stores/UserPreferencesStore\";\nimport \"./GameSettings.css\";\nimport { useNavStore } from \"stores/NavStore\";\nimport { PUZ_NAME_FINAL_BATTLE } from \"engine/puzzles/puzzle-data\";\nimport Tooltip from \"components/Tooltip\";\n\nconst NESTED_TOOLTIP_TEXT = (location: string) =>\n  `When enabled, you can mouse over keywords in tooltips from ${location} to show another tooltip.`;\n\nfunction GameSettings() {\n  const serverInterfaceController = useServerInterfaceController();\n\n  const speed = useUserPreferencesStore((state) => state.speed);\n  const setSpeed = useUserPreferencesStore((state) => state.setSpeed);\n  const recurseFieldTooltips = useUserPreferencesStore(\n    (state) => state.recurseFieldTooltips\n  );\n  const setRecurseFieldTooltips = useUserPreferencesStore(\n    (state) => state.setRecurseFieldTooltips\n  );\n  const recurseActionTooltips = useUserPreferencesStore(\n    (state) => state.recurseActionTooltips\n  );\n  const setRecurseActionTooltips = useUserPreferencesStore(\n    (state) => state.setRecurseActionTooltips\n  );\n  const animKeroDos = useUserPreferencesStore((state) => state.animKeroDos);\n  const setAnimKeroDos = useUserPreferencesStore(\n    (state) => state.setAnimKeroDos\n  );\n  const setIsHotkeyModalOpen = useNavStore(\n    (state) => state.setIsHotkeyModalOpen\n  );\n\n  const isHotkeysEnabled = useKeyboardCursorStore((state) => state.enabled);\n  const isHotkeysEnabledPref = useHotkeyPreferencesStore(\n    (state) => state.isEnabled\n  );\n  const setIsHotkeysEnabledPref = useHotkeyPreferencesStore(\n    (state) => state.setIsEnabled\n  );\n\n  const { puzName } = useParams<{\n    puzName: string;\n  }>();\n  if (puzName === undefined)\n    throw new Error(\"expect puzName parameter to be defined\");\n\n  const teamId = useTeamId();\n  const { spectateTeamId } = useParams();\n  const path = useResolvedPath(\n    `../spectate/${puzName}/${spectateTeamId ?? teamId}`\n  );\n  const isAdmin = useIsAdmin() ?? false;\n  const spectateLink = isAdmin ? (\n    <a href={path.pathname} target=\"_blank\" rel=\"noreferrer\">\n      <button>Spectate link</button>\n    </a>\n  ) : null;\n\n  return (\n    <>\n      <div className=\"game-settings\">\n        <Tooltip\n          text=\"Instant speed might improve performance.\"\n          directRef={(props) => (\n            <div {...props}>\n              <label>Animation speed</label>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <button onClick={() => setSpeed(1)} disabled={speed === 1}>\n                  1×\n                </button>\n                <button onClick={() => setSpeed(2)} disabled={speed === 2}>\n                  2×\n                </button>\n                <button onClick={() => setSpeed(0)} disabled={speed === 0}>\n                  Instant\n                </button>\n              </div>\n            </div>\n          )}\n        />\n        <div className=\"game-settings-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"hotkeys-checkbox\"\n            checked={isHotkeysEnabledPref}\n            onChange={(e) => {\n              const newVal = e.target.checked;\n              setIsHotkeysEnabledPref(newVal);\n            }}\n          />{\" \"}\n          <label htmlFor=\"hotkeys-checkbox\">Enable hotkeys</label>\n        </div>\n        <div\n          onClick={() => setIsHotkeyModalOpen(true)}\n          style={{ marginTop: \"-0.3em\" }}\n        >\n          <button>Hotkeys Help{isHotkeysEnabled ? \" (/)\" : null}</button>\n        </div>\n        <Tooltip\n          text={NESTED_TOOLTIP_TEXT(\"the field\")}\n          directRef={(props) => (\n            <div className=\"game-settings-checkbox\" {...props}>\n              <input\n                type=\"checkbox\"\n                id=\"recurse-field-tooltips-checkbox\"\n                checked={recurseFieldTooltips}\n                onChange={(e) => setRecurseFieldTooltips(e.target.checked)}\n              />{\" \"}\n              <label htmlFor=\"recurse-field-tooltips-checkbox\">\n                Nest field tooltips\n              </label>\n            </div>\n          )}\n        />\n        <Tooltip\n          text={NESTED_TOOLTIP_TEXT(\"card action buttons\")}\n          directRef={(props) => (\n            <div className=\"game-settings-checkbox\" {...props}>\n              <input\n                type=\"checkbox\"\n                id=\"recurse-action-tooltips-checkbox\"\n                checked={recurseActionTooltips}\n                onChange={(e) => setRecurseActionTooltips(e.target.checked)}\n              />{\" \"}\n              <label htmlFor=\"recurse-action-tooltips-checkbox\">\n                Nest action tooltips\n              </label>\n            </div>\n          )}\n        />\n        {puzName === PUZ_NAME_FINAL_BATTLE ? (\n          <Tooltip\n            text=\"Turning off the Kero animation might improve performance.\"\n            directRef={(props) => (\n              <div className=\"game-settings-checkbox\" {...props}>\n                <input\n                  type=\"checkbox\"\n                  id=\"anim-kero-dos-checkbox\"\n                  checked={animKeroDos}\n                  onChange={(e) => setAnimKeroDos(e.target.checked)}\n                />{\" \"}\n                <label htmlFor=\"anim-kero-dos-checkbox\">Animate Kero</label>\n              </div>\n            )}\n          />\n        ) : null}\n        {spectateLink}\n      </div>\n    </>\n  );\n}\n\nexport default GameSettings;\n","import { PlayerGemsDisplay } from \"components/GemDisplay\";\nimport Tabs from \"components/Tabs\";\nimport { opponentOf, PLAYER_SYMBOL } from \"engine/types/game-state\";\nimport { usePlayerPerspective } from \"stores/ClientGameStore\";\nimport { useIsGameSettingsEnabled } from \"stores/ClientGlobalStateStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport { useSelectedPermanent, useTurnStore } from \"stores/TurnStore\";\nimport CardActionsDisplay, {\n  useSelectedPermanentCardActionData,\n} from \"./CardActionsDisplay\";\nimport GameLog from \"./GameLog\";\nimport GameMenu from \"./GameMenu\";\nimport GameSettings from \"./GameSettings\";\nimport \"./LeftOfFieldDisplay.css\";\n\nfunction LeftOfFieldDisplay() {\n  const selectedPermanent = useSelectedPermanent();\n  const index = useNavStore((state) => state.leftTabIndex);\n  const setIndex = useNavStore((state) => state.setLeftTabIndex);\n  const resetCard = useTurnStore((state) => state.resetSelectedCard);\n  const isGameSettingsEnabled = useIsGameSettingsEnabled();\n  const playerUs = usePlayerPerspective();\n  const playerThem = opponentOf(playerUs);\n  const selectedPermanentCardActionData = useSelectedPermanentCardActionData();\n\n  return (\n    <>\n      <Tabs.Container\n        className=\"game-board-left\"\n        index={index}\n        setIndex={(index) => {\n          setIndex(index);\n          resetCard();\n        }}\n        items={[\n          // keep in sync with NavStore.LeftTab\n          {\n            label: \"🎮\",\n            tooltip: \"Menu\",\n            content: <GameMenu />,\n          },\n          isGameSettingsEnabled\n            ? {\n                label: \"⚙\",\n                tooltip: \"Settings\",\n                content: <GameSettings />,\n              }\n            : {\n                label: \"🔒\",\n                tooltip: \"Finish the tutorial to unlock!\",\n                content: null,\n                isDisabled: true,\n              },\n          {\n            label: \"📜\",\n            tooltip: \"Log\",\n            content: <GameLog />,\n          },\n        ]}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"game-board-left-content\">\n          {selectedPermanent ? (\n            <CardActionsDisplay fallback={<Tabs.Content />} />\n          ) : (\n            <Tabs.Content />\n          )}\n        </div>\n        <Tabs.ButtonList className=\"game-board-left-buttons\">\n          <Tabs.Buttons\n            makeProps={() => ({ style: { pointerEvents: \"all\" } })}\n            overridden={selectedPermanentCardActionData.length > 0}\n          />\n        </Tabs.ButtonList>\n      </Tabs.Container>\n      <div className=\"player-gems\">\n        <PlayerGemsDisplay\n          player={playerThem}\n          style={{ flexDirection: \"column-reverse\" }}\n        />\n        {PLAYER_SYMBOL[playerThem].dark}\n        <div\n          style={{ writingMode: \"vertical-rl\", transform: \"rotate(180deg)\" }}\n        >\n          Food\n        </div>\n        {PLAYER_SYMBOL[playerUs].dark}\n        <PlayerGemsDisplay player={playerUs} />\n      </div>\n    </>\n  );\n}\n\nexport default LeftOfFieldDisplay;\n","import Tooltip from \"components/Tooltip\";\nimport { PUZ_NAME_PVP, PVP_TURN_TIME_LIMIT } from \"engine/puzzles/puzzle-data\";\nimport { speedrunTimeToString } from \"game-server/global-updates\";\nimport { WSReqType } from \"game-server/ws\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { usePuzName } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport \"./SpeedrunTimer.css\";\n\n// 3 minutes / 6 = 30 seconds\nconst LOW_TIME_THRESHOLD = PVP_TURN_TIME_LIMIT / 6;\n\ninterface SpeedrunTimerProps {\n  prevTurnsTime: number;\n  startTurnTime: number | null;\n  keepRunningDuringUpdates: boolean;\n  isGameActive: boolean;\n  isOurTimer: boolean;\n}\n\nfunction SpeedrunTimer(props: SpeedrunTimerProps) {\n  const { keepRunningDuringUpdates, isGameActive, isOurTimer } = props;\n  const timerRef = useRef<HTMLDivElement>(null);\n  const isPvP = usePuzName() === PUZ_NAME_PVP;\n  const [outOfTime, setOutOfTime] = useState(false);\n  const serverInterface = useServerInterfaceController();\n  const [timerConfigSnapshot, setTimerConfigSnapshot] = useState<{\n    prevTurnsTime: number;\n    startTurnTime: number;\n  } | null>(null);\n\n  useEffect(() => {\n    if (!isGameActive) {\n      setTimerConfigSnapshot(null);\n      return;\n    }\n    if (!keepRunningDuringUpdates) return;\n    if (props.startTurnTime === null) return;\n    setTimerConfigSnapshot({\n      prevTurnsTime: props.prevTurnsTime,\n      startTurnTime: props.startTurnTime,\n    });\n  }, [\n    keepRunningDuringUpdates,\n    isGameActive,\n    props.prevTurnsTime,\n    props.startTurnTime,\n    setTimerConfigSnapshot,\n  ]);\n\n  useEffect(() => {\n    let animationFrame: number | null = null;\n    const updateTimer = () => {\n      if (timerRef.current !== null) {\n        const {\n          prevTurnsTime = props.prevTurnsTime,\n          startTurnTime = props.startTurnTime,\n        } = timerConfigSnapshot ?? {};\n        const isTimerRunning = startTurnTime !== null;\n        const currTurnTime = isTimerRunning\n          ? new Date().getTime() - startTurnTime\n          : 0;\n        const timeToShow = (() => {\n          if (isPvP) {\n            const timeLeft = Math.max(0, PVP_TURN_TIME_LIMIT - currTurnTime);\n            setOutOfTime(!isOurTimer && timeLeft <= 0);\n            if (!isTimerRunning) return null;\n            return timeLeft;\n          }\n          return prevTurnsTime + currTurnTime;\n        })();\n        timerRef.current.className = !isPvP\n          ? \"\"\n          : `${isTimerRunning ? \"count-down\" : \"\"}\n             ${\n               timeToShow !== null && timeToShow < LOW_TIME_THRESHOLD\n                 ? \"low-time\"\n                 : \"\"\n             }`;\n        timerRef.current.textContent =\n          timeToShow !== null\n            ? speedrunTimeToString(Math.max(0, timeToShow))\n            : \"\";\n      }\n      animationFrame = requestAnimationFrame(updateTimer);\n    };\n    updateTimer();\n    return () => {\n      if (animationFrame !== null) cancelAnimationFrame(animationFrame);\n    };\n  }, [\n    isOurTimer,\n    isPvP,\n    props.prevTurnsTime,\n    props.startTurnTime,\n    timerConfigSnapshot,\n  ]);\n\n  const claimTimeVictory = () => {\n    serverInterface.sendReq({ type: WSReqType.PVP_CLAIM_TIME_VICTORY });\n  };\n\n  return (\n    <div className=\"speedrun-timer\">\n      {isGameActive || !isPvP ? <div ref={timerRef} /> : null}\n      {outOfTime ? (\n        <Tooltip\n          text=\"Claim a win because your opponent ran out of time.\"\n          directRef={(props) => (\n            <button {...props} onClick={claimTimeVictory}>\n              Claim win on time\n            </button>\n          )}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default SpeedrunTimer;\n","import TeamDisplayNameDisplay from \"components/TeamDisplayNameDisplay\";\nimport {\n  SPEEDRUN_MASTERY_ID,\n  REPUTATION_BOOST_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { PUZ_NAME_PVP } from \"engine/puzzles/puzzle-data\";\nimport { Player } from \"engine/types/game-state\";\nimport {\n  useInspector,\n  usePlayerPerspective,\n  useRoomPuzNameFromGameState,\n} from \"stores/ClientGameStore\";\nimport {\n  usePuzzlesInBattleGroup,\n  useIsInstancer,\n  useSubscribedTeam,\n  useRoomSubpuzzleIndexFromGameState,\n  useRoomBattleGroupFromGameState,\n} from \"stores/ClientGlobalStateStore\";\nimport { usePrimaryPuzName } from \"stores/NavStore\";\nimport \"./FieldTeamDataDisplay.css\";\nimport SpeedrunTimer from \"./SpeedrunTimer\";\n\ninterface FieldTeamDataDisplayProps {\n  player: Player;\n}\n\nfunction FieldTeamDataDisplay(props: FieldTeamDataDisplayProps) {\n  const pagePuzName = usePrimaryPuzName();\n  const subscribedTeam = useSubscribedTeam();\n  const playerUs = usePlayerPerspective();\n  const roomPuzName = useRoomPuzNameFromGameState();\n  const isPvP = roomPuzName === PUZ_NAME_PVP;\n  const roomBattleGroup = useRoomBattleGroupFromGameState();\n  const puzzlesInBattleGroup = usePuzzlesInBattleGroup();\n  const roomSubpuzzleIndex = useRoomSubpuzzleIndexFromGameState();\n  const isInstancer = useIsInstancer() ?? false;\n  const { player } = props;\n  const inspector = useInspector();\n  const showSpeedrunTimer = inspector.doesPlayerHaveMastery(\n    player,\n    SPEEDRUN_MASTERY_ID\n  );\n  const { gameState } = inspector;\n  const playerState = gameState[player];\n  const { teamData } = playerState;\n\n  if (\n    roomPuzName === null ||\n    subscribedTeam === null ||\n    roomBattleGroup === null ||\n    puzzlesInBattleGroup === null ||\n    roomSubpuzzleIndex === null\n  )\n    return null;\n  const { puzzles } = subscribedTeam;\n  const { solveTime } = puzzles[roomPuzName];\n  const { displayName, numPuzzles = 1, isLegendary = false } = roomBattleGroup;\n  const instancerIndex = isInstancer\n    ? puzzlesInBattleGroup.findIndex(\n        (puzData) => puzData.puzName === pagePuzName\n      )\n    : null;\n\n  const teamNameDom =\n    teamData === undefined ? (\n      <div>\n        <b>{`${displayName}${\n          numPuzzles === 1 ? \"\" : `, Stage ${roomSubpuzzleIndex + 1}`\n        }`}</b>\n        {solveTime === undefined ? null : (\n          <div className=\"game-puz-complete\">\n            {numPuzzles === 1\n              ? isLegendary\n                ? `(Befriended)`\n                : `(Previously completed)`\n              : \"(Previously completed)\"}\n          </div>\n        )}\n        {instancerIndex === null ? null : (\n          <div className=\"game-instancer-note\">\n            Instancer, Room {instancerIndex + 1}\n          </div>\n        )}\n      </div>\n    ) : (\n      (() => {\n        const {\n          teamId,\n          displayName,\n          faction,\n          factionScoreContribution,\n          enabledMasteries,\n        } = teamData;\n        return (\n          <TeamDisplayNameDisplay\n            teamData={{\n              teamId,\n              displayName,\n              faction,\n              factionScoreContribution,\n              hasReputationBoost:\n                enabledMasteries[REPUTATION_BOOST_MASTERY_ID] ?? false\n                  ? true\n                  : undefined,\n            }}\n            noLink={!isPvP}\n          />\n        );\n      })()\n    );\n  return (\n    <div className=\"game-team-data\">\n      {teamNameDom}\n      {showSpeedrunTimer || isPvP ? (\n        // Speedrun times for single-player games include the time\n        // from both players, so include the AI's time for extra\n        // precision.\n        <SpeedrunTimer\n          prevTurnsTime={\n            playerState.prevTurnsTime +\n            (inspector.hasAI() && player === Player.P1\n              ? gameState[Player.P2].prevTurnsTime\n              : 0)\n          }\n          startTurnTime={playerState.startTurnTime}\n          keepRunningDuringUpdates={inspector.hasAI()}\n          isGameActive={inspector.isGameActive()}\n          isOurTimer={player === playerUs}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default FieldTeamDataDisplay;\n","import StepButton from \"components/StepButton\";\nimport ZoomedCardDisplay from \"components/ZoomedCardDisplay\";\nimport { opponentOf } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\nimport { Role } from \"engine/types/updates\";\nimport { usePlayerPerspective, useRole } from \"stores/ClientGameStore\";\nimport { useZoomedCard } from \"stores/ZoomCardStore\";\nimport FieldTeamDataDisplay from \"./FieldTeamDataDisplay\";\nimport \"./RightOfFieldDisplay.css\";\n\nfunction RightOfFieldDisplay() {\n  const role = useRole();\n  // Use the zoomed card here to show the buttons also on hover.\n  const zoomedCard = useZoomedCard();\n  const permanentId =\n    zoomedCard === null ? null : zoomedCard.permanentId ?? null;\n  const playerUs = usePlayerPerspective();\n  const playerThem = opponentOf(playerUs);\n\n  return (\n    <>\n      <div className=\"game-board-right\">\n        <FieldTeamDataDisplay player={playerThem} />\n        <div\n          className=\"game-zoomed-card-wrapper\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <ZoomedCardDisplay />\n          {permanentId !== null && role === Role.GOD ? (\n            <StepButton\n              step={{\n                type: StepType.REMOVE,\n                permanentId,\n              }}\n            />\n          ) : null}\n        </div>\n        <FieldTeamDataDisplay player={playerUs} />\n      </div>\n    </>\n  );\n}\n\nexport default RightOfFieldDisplay;\n","import { useEffect } from \"react\";\nimport {\n  Link,\n  useNavigate,\n  useSearchParams,\n  useParams,\n} from \"react-router-dom\";\nimport \"./SolvedModal.css\";\n\nimport { Player } from \"engine/types/game-state\";\nimport { FactionScoreConstants, calcFactionScore } from \"engine/types/factions\";\nimport { Speaker } from \"engine/types/keyframes\";\nimport {\n  PUZ_NAME_PVP,\n  BATTLE_GROUP_NAME_TUTORIAL,\n  BATTLE_GROUP_NAME_MOONICK,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  SPEEDRUN_MASTERY_ID,\n  FACTIONS_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { WSReqType } from \"game-server/ws\";\nimport {\n  getCompletionVerb,\n  speedrunTimeToString,\n} from \"game-server/global-updates\";\n\nimport settings from \"settings\";\nimport CardDisplay, { CardSize } from \"components/CardDisplay\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { makeStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useIsInstancer,\n  useSubscribedTeam,\n  getPuzzlesInBattleGroup,\n  useIsAdminOrHuntOver,\n} from \"stores/ClientGlobalStateStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport SpeedrunLeaderboardSummary from \"components/SpeedrunLeaderboardSummary\";\nimport FactionIcon from \"components/FactionIcon\";\nimport FactionScoreTotalsDisplay from \"components/FactionScoreTotalsDisplay\";\nimport { StoryDialogBox } from \"components/CutsceneDialogBox\";\nimport { Spinner } from \"./Loading\";\nimport Modal from \"./Modal\";\nimport { LoseReason } from \"game-server/backend-interface/BackendInterface\";\n\nfunction FactionScoreCalculationDisplay() {\n  const solvedModalState = useNavStore((state) => state.solvedModalState);\n  const subscribedTeam = useSubscribedTeam();\n\n  if (subscribedTeam === null || solvedModalState === null) return null;\n  const { factionScoreContributions } = subscribedTeam;\n  const { puzName, teamData, stats, isWinner } = solvedModalState;\n  const isPvP = puzName === PUZ_NAME_PVP;\n  const { faction } = teamData;\n  if (faction === null)\n    throw new Error(\n      \"should only show score computation when player is part of faction\"\n    );\n\n  // TODO: different DOM for PvP score, which has a multiplicative bonus\n  return (\n    <div>\n      <div className=\"score-calc-row\">\n        <div>{isPvP ? \"Win\" : \"Solve\"} bonus</div>\n        <div>+{FactionScoreConstants.SOLVE_BONUS}</div>\n      </div>\n      <div className=\"score-calc-row\">\n        <div>\n          {stats.summons} {stats.summons === 1 ? \"card\" : \"cards\"} played\n        </div>\n        <div>+{stats.summons * FactionScoreConstants.SUMMONS_MULTIPLIER}</div>\n      </div>\n      {faction !== null ? (\n        <div className=\"score-calc-row\">\n          <div>\n            {stats.factionSummons} <FactionIcon faction={faction} />{\" \"}\n            {stats.factionSummons === 1 ? \"card\" : \"cards\"} played\n          </div>\n          <div>\n            +\n            {stats.factionSummons *\n              FactionScoreConstants.FACTION_SUMMONS_MULTIPLIER}\n          </div>\n        </div>\n      ) : null}\n      <div className=\"score-calc-row\">\n        <div>\n          {stats.destroys} {stats.destroys === 1 ? \"unit\" : \"units\"} destroyed\n        </div>\n        <div>+{stats.destroys * FactionScoreConstants.DESTROYS_MULTIPLIER}</div>\n      </div>\n      <div className=\"score-calc-row\">\n        <div>{stats.damageDealt} total damage dealt</div>\n        <div>\n          +\n          {Math.min(stats.damageDealt, FactionScoreConstants.DAMAGE_DEALT_CAP) *\n            FactionScoreConstants.DAMAGE_DEALT_MULTIPLIER}\n        </div>\n      </div>\n      {isPvP ? (\n        <div className=\"score-calc-row\">\n          <div>PvP bonus</div>\n          <div>×{FactionScoreConstants.PVP_MULTIPLIER}</div>\n        </div>\n      ) : null}\n      <hr className=\"score-calc-sep\" />\n      <div className=\"score-calc-row\">\n        <div>\n          <FactionIcon faction={faction} /> points from this battle\n        </div>\n        <div>+{calcFactionScore(stats, isPvP, isWinner)}</div>\n      </div>\n      <div className=\"score-calc-row\">\n        <div>\n          Total team <FactionIcon faction={faction} /> points\n        </div>\n        <div>{factionScoreContributions[faction]}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction SolvedModal() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const serverInterfaceController = useServerInterfaceController();\n  const isInstancer = useIsInstancer() ?? false;\n  const solvedModalState = useNavStore((state) => state.solvedModalState);\n  const setSolvedModalState = useNavStore((state) => state.setSolvedModalState);\n  const subscribedTeam = useSubscribedTeam();\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const isAdminOrHuntOver = useIsAdminOrHuntOver();\n  const {\n    roomId = null,\n    roomPuzName = null,\n    roomBattleGroupName = null,\n  } = solvedModalState ?? {};\n  const { puzzles = null } = subscribedTeam ?? {};\n  const { spectateTeamId } = useParams();\n\n  // Whether the server has completed registering the solve.\n  const isSolveReady =\n    spectateTeamId !== undefined ||\n    roomPuzName === PUZ_NAME_PVP ||\n    (roomPuzName !== null && puzzles?.[roomPuzName].solveTime !== undefined);\n\n  const numPuzzles =\n    roomBattleGroupName === null\n      ? null\n      : subscribedTeam?.battleGroups[roomBattleGroupName]?.numPuzzles ?? null;\n  const puzzlesInRoomBattleGroup = getPuzzlesInBattleGroup(\n    subscribedTeam,\n    roomBattleGroupName\n  );\n  const roomPuzIndex =\n    puzzlesInRoomBattleGroup === null || roomPuzName === null\n      ? null\n      : puzzlesInRoomBattleGroup.findIndex(\n          (puzData) => puzData.puzName === roomPuzName\n        );\n  const hasNextPuzzle =\n    // Omit the next battle button in Moonick since it isn't a\n    // linear battle.\n    roomBattleGroupName !== BATTLE_GROUP_NAME_MOONICK &&\n    numPuzzles !== null &&\n    roomPuzIndex !== null &&\n    roomPuzIndex !== -1 &&\n    roomPuzIndex + 1 < numPuzzles;\n  const nextPuzzle = !hasNextPuzzle\n    ? null\n    : puzzlesInRoomBattleGroup?.[roomPuzIndex + 1]?.puzName ?? null;\n  const nextPuzzleNeedsDeck =\n    nextPuzzle !== null &&\n    makeStaticInspector(nextPuzzle, cardsDB).getDeckOverride(Player.P1) ===\n      null;\n  const nextPuzzlePath =\n    nextPuzzle === null || roomBattleGroupName === null\n      ? null\n      : nextPuzzleNeedsDeck &&\n        roomBattleGroupName !== BATTLE_GROUP_NAME_TUTORIAL\n      ? `/prep/${nextPuzzle}`\n      : `/battle/${nextPuzzle}/start`;\n\n  useEffect(() => {\n    if (roomId === null) return;\n    if (nextPuzzlePath === null) return;\n    return serverInterfaceController.onNextBattleEvent.addListener(\n      (targetRoomId) => {\n        if (targetRoomId !== roomId) return;\n\n        navigate({\n          pathname: \"..\" + nextPuzzlePath,\n          search: searchParams.toString(),\n        });\n      }\n    );\n  }, [\n    serverInterfaceController,\n    roomId,\n    searchParams,\n    navigate,\n    nextPuzzlePath,\n  ]);\n\n  if (\n    solvedModalState === null ||\n    subscribedTeam === null ||\n    puzzles === null ||\n    roomPuzName === null ||\n    roomBattleGroupName === null ||\n    isAdminOrHuntOver === null\n  )\n    return null;\n\n  // Battle card unlocks may be different from normal card unlocks that\n  // arise directly from the solve. They are not currently used but\n  // may be used for special card unlocks such as gacha-style unlocks.\n  //\n  // These systems are separate as it would take a bit of effort to use\n  // battle card unlocks for normal card unlocking as we only commit\n  // card unlocks until they have been synced to the backend, meaning\n  // that we'll have to deal with race conditions.\n  //\n  // The effect of the current system is that after a battle group is\n  // solved, solving any sub-battle in the battle group will show the\n  // battle group's card unlocks. Similarly, if a solver is on a\n  // sub-battle solved modal and another solver completes the battle\n  // group's solve requirement, the card unlocks will appear in the\n  // first solver's solved modal as well. This should be fine.\n  const {\n    puzName,\n    cardUnlocks: battleCardUnlocks,\n    speedrunTime,\n    teamData,\n    stats,\n    isWinner,\n    loseReason,\n  } = solvedModalState;\n  const { cardUnlocks } = subscribedTeam;\n  const roomBattleGroup = subscribedTeam.battleGroups[roomBattleGroupName];\n  const { displayName, postBattleDialogue } = roomBattleGroup;\n  const { faction, prevBestSpeedrunTime } = teamData;\n  const hasSpeedrunMastery =\n    teamData.enabledMasteries[SPEEDRUN_MASTERY_ID] ?? false;\n  const hasFactionsMastery =\n    teamData.enabledMasteries[FACTIONS_MASTERY_ID] ?? false;\n  const isPvP = puzName === PUZ_NAME_PVP;\n  // TODO: I think we're just assuming we're the winners/solved if we see this, heh\n  const factionScoreFromGame = calcFactionScore(stats, isPvP, isWinner);\n  const hasFactionScore = hasFactionsMastery && faction !== null;\n  const showFactionScore = hasFactionScore && factionScoreFromGame > 0;\n  const allCardUnlocks = [\n    ...Object.keys(cardUnlocks).filter(\n      (cardName) => cardUnlocks[cardName].puzName === roomBattleGroupName\n    ),\n    // If there are sub-battle reward cards, display them after\n    // any battle group reward cards.\n    ...(roomBattleGroupName === roomPuzName\n      ? []\n      : Object.keys(cardUnlocks).filter(\n          (cardName) => cardUnlocks[cardName].puzName === roomPuzName\n        )),\n    ...(battleCardUnlocks ?? []),\n  ];\n  const isBattleGroupSolved =\n    puzzles[roomBattleGroupName].solveTime !== undefined;\n\n  const cardUnlocksDom = allCardUnlocks.map((cardName) => {\n    return (\n      <CardDisplay\n        key={cardName}\n        cardName={cardName}\n        size={allCardUnlocks.length > 3 ? CardSize.NORMAL : CardSize.LARGE}\n        canZoom={false}\n      />\n    );\n  });\n\n  const isSpeedrunNewBest =\n    prevBestSpeedrunTime === undefined || speedrunTime < prevBestSpeedrunTime;\n\n  return (\n    <Modal\n      className=\"game-solved-modal\"\n      title={\n        isPvP\n          ? `You ${isWinner ? \"won!\" : \"lost\"}`\n          : isBattleGroupSolved\n          ? `${displayName} ${getCompletionVerb(roomBattleGroup)}!`\n          : \"Battle complete!\"\n      }\n    >\n      {!isSolveReady ? (\n        <div className=\"game-solved-modal-main\">\n          <Spinner inline={true} />\n        </div>\n      ) : (\n        <>\n          {loseReason === LoseReason.NORMAL ? null : (\n            <div className=\"game-solved-modal-reason\">\n              You {isWinner ? \"won\" : \"lost\"} because{\" \"}\n              {isWinner ? \"your opponent \" : \"you \"}\n              {loseReason === LoseReason.RESIGN\n                ? \"resigned\"\n                : loseReason === LoseReason.TIME\n                ? \"ran out of time\"\n                : \"\"}\n              .\n            </div>\n          )}\n          <div className=\"game-solved-modal-main\">\n            {allCardUnlocks.length === 0 ? null : (\n              <div className=\"game-solved-modal-cards-display\">\n                <div className=\"game-solved-modal-cards\">{cardUnlocksDom}</div>\n              </div>\n            )}\n            {hasSpeedrunMastery && !isPvP ? (\n              <div className=\"game-solved-modal-speedrun\">\n                <div>\n                  <div>\n                    <b>Time</b>: {speedrunTimeToString(speedrunTime)}{\" \"}\n                    {isSpeedrunNewBest ? \"(New team best!)\" : null}\n                  </div>\n                  {prevBestSpeedrunTime === undefined ? null : (\n                    <div>\n                      <b>{isSpeedrunNewBest ? \"Prev. best\" : \"Team best\"}</b>:{\" \"}\n                      {speedrunTimeToString(prevBestSpeedrunTime)}\n                    </div>\n                  )}\n                </div>\n                <SpeedrunLeaderboardSummary puzName={roomPuzName} />\n              </div>\n            ) : null}\n            <div\n              className={`game-solved-modal-score${\n                !showFactionScore ? \" centered\" : \"\"\n              }`}\n            >\n              {showFactionScore ? (\n                <>\n                  <FactionScoreCalculationDisplay />\n                  <FactionScoreTotalsDisplay />\n                </>\n              ) : (\n                <div>\n                  <div>\n                    {stats.summons} {stats.summons === 1 ? \"card\" : \"cards\"}{\" \"}\n                    played\n                  </div>\n                  <div>\n                    {stats.destroys} {stats.destroys === 1 ? \"unit\" : \"units\"}{\" \"}\n                    destroyed\n                  </div>\n                  <div>{stats.damageDealt} damage dealt</div>\n                </div>\n              )}\n            </div>\n          </div>\n          {postBattleDialogue !== undefined ? (\n            <div className=\"game-solved-modal-dialogue\">\n              <div>\n                <StoryDialogBox\n                  speaker={Speaker.KERO_DOS}\n                  dialogue={postBattleDialogue}\n                />\n              </div>\n            </div>\n          ) : null}\n        </>\n      )}\n      <div className=\"game-solved-modal-buttons\">\n        <button\n          onClick={() => {\n            setSolvedModalState(null);\n          }}\n          style={{ marginRight: \"auto\" }}\n        >\n          View board\n        </button>\n        {!settings.isPosthunt &&\n        isBattleGroupSolved &&\n        spectateTeamId === undefined ? (\n          <a href={`${settings.djangoBaseUrl}solve/${roomBattleGroupName}`}>\n            <button>Leave feedback</button>\n          </a>\n        ) : null}\n        {!isPvP && isAdminOrHuntOver ? (\n          <>\n            <a\n              href={`${settings.djangoBaseUrl}solution/${roomBattleGroupName}`}\n            >\n              <button>Solution</button>\n            </a>\n            <a href={`${settings.djangoBaseUrl}stats/${roomBattleGroupName}`}>\n              <button>Stats</button>\n            </a>\n          </>\n        ) : null}\n        {hasNextPuzzle && spectateTeamId === undefined ? (\n          <a\n            href={\n              // Still show the button even if the unlock hasn't arrived.\n              nextPuzzlePath === null\n                ? \"#\"\n                : `${settings.djangoBaseUrl}game${nextPuzzlePath}`\n            }\n            onClick={(e) => {\n              // Don't send NEXT_BATTLE until we're sure the server has\n              // completed unlocking the next puzzle.\n              if (nextPuzzlePath === null) return;\n              serverInterfaceController.sendReq({\n                type: WSReqType.NEXT_BATTLE,\n              });\n              e.preventDefault();\n            }}\n          >\n            <button\n              className={nextPuzzlePath === null ? \"loading\" : \"\"}\n              disabled={nextPuzzlePath === null}\n            >\n              Next battle\n            </button>\n          </a>\n        ) : null}\n        <Link\n          to={{\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          }}\n          style={{ marginLeft: \"auto\" }}\n        >\n          <button>Exit battle</button>\n        </Link>\n      </div>\n    </Modal>\n  );\n}\n\nexport default SolvedModal;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  PUZ_NAME_PVP,\n  PUZ_NAME_FINAL_BATTLE,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  useClientGameStore,\n  useInspector,\n  usePlayerPerspective,\n  useRoomPuzNameFromGameState,\n} from \"stores/ClientGameStore\";\nimport {\n  useRoomBattleGroupNameFromGameState,\n  useRoomBattleGroupFromGameState,\n  usePuzzlesInRoomBattleGroupFromGameState,\n  useRoomSubpuzzleIndexFromGameState,\n} from \"stores/ClientGlobalStateStore\";\n\nimport { usePuzName, useNavStore, LeftTab } from \"stores/NavStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\n\nexport const useGameEnd = () => {\n  /** Rising edge detector to open the menu when the game ends. */\n  const [isGameEndUITriggered, setIsGameEndUITriggered] =\n    useState<boolean>(false);\n  const roomId = useClientGameStore((state) => state.roomId);\n  const isEndCutsceneRedirectHandled = useClientGameStore(\n    (state) => state.isEndCutsceneRedirectHandled\n  );\n  const inspector = useInspector();\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const playerPerspective = usePlayerPerspective();\n  const isPageReady = useNavStore((state) => state.isPageReady);\n  const setLeftTabIndex = useNavStore((state) => state.setLeftTabIndex);\n  const setSolvedModalState = useNavStore((state) => state.setSolvedModalState);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const puzName = usePuzName();\n  const roomPuzName = useRoomPuzNameFromGameState();\n  const roomBattleGroupName = useRoomBattleGroupNameFromGameState();\n  const { numPuzzles = null } = useRoomBattleGroupFromGameState() ?? {};\n  const roomPuzIndex = useRoomSubpuzzleIndexFromGameState();\n  const puzzlesInRoomBattleGroup = usePuzzlesInRoomBattleGroupFromGameState();\n\n  const hasGameEnded = inspector.hasGameEnded();\n  const { gameState } = inspector;\n  const playerState = gameState[playerPerspective];\n  const { loseReason } = gameState;\n  const { teamData, isSolved = false, stats } = playerState;\n  const endCutsceneRedirect = inspector.getEndCutsceneRedirect();\n  const endCutsceneRedirectDjango = inspector.getEndCutsceneRedirectDjango();\n  const speedrunTime = hasGameEnded ? inspector.getSpeedrunTime() : null;\n\n  useEffect(() => {\n    if (!isPageReady) return;\n    if (roomBattleGroupName === null) return;\n    if (hasGameEnded) {\n      if (teamData === undefined)\n        throw new Error(\n          \"expect team data to be defined for player perspective\"\n        );\n\n      // Handle cutscene redirects without opening the solved modal.\n      if (\n        isSolved &&\n        (endCutsceneRedirect !== null || endCutsceneRedirectDjango !== null)\n      ) {\n        // The case where the team runs through the cutscene for the\n        // first time, and the client is present for the cutscene end,\n        // is handled when receiving SET_GAME_RESULT.\n        if (isEndCutsceneRedirectHandled) return;\n\n        // Special-case out the final battle, since we want to show\n        // the solved modal on replay instead of redirecting to the\n        // prep page.\n        if (roomPuzName !== PUZ_NAME_FINAL_BATTLE) {\n          navigate({\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          });\n          return;\n        }\n      }\n\n      if (!isGameEndUITriggered) {\n        setIsGameEndUITriggered(true);\n        setLeftTabIndex(LeftTab.MENU);\n        if (isSolved) {\n          if (speedrunTime === null)\n            throw new Error(\"expect speedrun time to be computed\");\n          if (roomId === null) throw new Error(\"expect roomId to be set\");\n          setSolvedModalState({\n            roomId,\n            puzName,\n            roomPuzName,\n            roomBattleGroupName,\n            cardUnlocks: playerState.cardUnlocks ?? [],\n            speedrunTime,\n            teamData,\n            stats,\n            isWinner: true,\n            loseReason,\n          });\n        }\n        if (puzName === PUZ_NAME_PVP) {\n          if (roomId === null) throw new Error(\"expect roomId to be set\");\n          setSolvedModalState({\n            roomId,\n            puzName,\n            roomPuzName,\n            roomBattleGroupName,\n            cardUnlocks: playerState.cardUnlocks ?? [],\n            speedrunTime: 0,\n            teamData,\n            stats,\n            isWinner: gameState.winner === playerPerspective,\n            loseReason,\n          });\n        }\n      }\n    } else {\n      setIsGameEndUITriggered(false);\n    }\n  }, [\n    isPageReady,\n    hasGameEnded,\n    isGameEndUITriggered,\n    setIsGameEndUITriggered,\n    setSolvedModalState,\n    isSolved,\n    playerState.cardUnlocks,\n    endCutsceneRedirect,\n    endCutsceneRedirectDjango,\n    navigate,\n    searchParams,\n    teamData,\n    puzName,\n    speedrunTime,\n    stats,\n    roomId,\n    setLeftTabIndex,\n    roomPuzName,\n    roomBattleGroupName,\n    gameState.winner,\n    playerPerspective,\n    loseReason,\n    isEndCutsceneRedirectHandled,\n  ]);\n\n  return hasGameEnded;\n};\n","import { makeInitGameState } from \"engine/types/game-state\";\nimport { Update, UpdateType } from \"engine/types/updates\";\nimport { EnterRoomParams } from \"game-server/Room\";\nimport { useEffect } from \"react\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport {\n  useClientGlobalStateStore,\n  getBattleGroup,\n  getIsGameSettingsEnabled,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useUserPreferencesStore } from \"stores/UserPreferencesStore\";\n\n// Process the next update every time we see a new update\n// appear at the front of the pending updates queue. This\n// relies on referential equality.\n//\n// Note that a series of updates should never be applied all\n// at once, or even within a single loop, since updates to\n// state outside the client game state (e.g. to the user log)\n// may depend on the completion of prior state updates.\n// Using useEffect ensures that prior state changes show up in\n// gameState by the time applyUpdate is called.\nexport const useUpdatesQueue = (\n  /** Params to enter the room and associate this updates processor with. */\n  enterRoomParams: EnterRoomParams | null,\n  delays: { [type in UpdateType]?: number } | null,\n  /**\n   * Async function to process and update. The function should use\n   * isStale after every async step to check if it should exit\n   * early.\n   */\n  processUpdateAsync: (upd: Update, isStale: () => boolean) => Promise<void>,\n  /** Process multiple updates at once, synchronously. */\n  processUpdatesSync: (upds: Update[], isStale: () => boolean) => Promise<void>\n) => {\n  const serverInterfaceController = useServerInterfaceController();\n  const setGameState = useClientGameStore((state) => state.setGameState);\n\n  useEffect(() => {\n    if (enterRoomParams === null) return;\n    const cleanup = serverInterfaceController.addEnterRoomEffect(\n      enterRoomParams,\n      (upd, isStale) => {\n        return (async () => {\n          // timer for timeout\n          const { speed: speedPref } = useUserPreferencesStore.getState();\n          const update = processUpdateAsync(upd, isStale);\n\n          const { subscribedTeam, subscribedTeamBattle } =\n            useClientGlobalStateStore.getState().globalState;\n          const roomPuzName = subscribedTeamBattle?.roomPuzName ?? null;\n          const roomBattleGroup = getBattleGroup(subscribedTeam, roomPuzName);\n          const roomBattleGroupName = roomBattleGroup?.battleGroupName ?? null;\n          const isGameSettingsEnabled = getIsGameSettingsEnabled(\n            roomPuzName,\n            roomBattleGroupName\n          );\n          const speed = isGameSettingsEnabled ? speedPref : 1;\n\n          // wait for both timeout and update, unless speed is 0\n          if (speed === 0) {\n            await update;\n          } else {\n            const timeout = (delays?.[upd.type] ?? 0) / speed;\n            const timer = new Promise((res) => setTimeout(res, timeout));\n            await Promise.all([timer, update]);\n          }\n\n          if (isStale()) return;\n          serverInterfaceController.setClientDoneApplyingUpdate();\n        })();\n      },\n      processUpdatesSync\n    );\n    return () => {\n      cleanup();\n      setGameState(makeInitGameState(\"vanilla\", {}));\n    };\n  }, [\n    serverInterfaceController,\n    enterRoomParams,\n    delays,\n    processUpdateAsync,\n    setGameState,\n    processUpdatesSync,\n  ]);\n};\n","import { Update, UpdateType } from \"engine/types/updates\";\nimport { PUZ_NAME_POST_FINAL_BATTLE } from \"engine/puzzles/puzzle-data\";\nimport { LoseReason } from \"game-server/backend-interface/BackendInterface\";\nimport { EnterRoomParams } from \"game-server/Room\";\nimport { ServerInterfaceController } from \"game-server/server-interface/ServerInterfaceController\";\nimport { useMemo } from \"react\";\nimport { useNavigate, useSearchParams, useParams } from \"react-router-dom\";\nimport settings from \"settings\";\nimport { useAnimationStore } from \"stores/AnimationStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport {\n  getPlayerPerspectiveForRole,\n  makeInspector,\n  useClientGameStore,\n} from \"stores/ClientGameStore\";\nimport { useNeedRedirectToPrep } from \"stores/ClientGlobalStateStore\";\nimport { useHoverActionStore } from \"stores/HoverActionStore\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport { useNavStore, usePuzName } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useTurnStore } from \"stores/TurnStore\";\nimport { useUserLogStore } from \"stores/UserLogStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\n\nimport { useUpdatesQueue } from \"./useUpdatesQueue\";\n\n// How much to wait after making each update, in milliseconds.\nconst UPDATE_DELAYS = {\n  [UpdateType.MOVE]: 200,\n  [UpdateType.SWAP]: 200,\n  [UpdateType.DAMAGE_PERMANENT]: 200,\n  [UpdateType.REMOVE_PERMANENT]: 200,\n};\n\n/**\n * Performs all update effects besides modifications to the game\n * state. Game state modification effects should go in the\n * applyUpdate method of Reducer, to ensure that\n * the update takes effect on both the server and client.\n */\nconst triggerUpdateSideEffects = (\n  upd: Update,\n  navigate: ReturnType<typeof useNavigate>,\n  searchParams: URLSearchParams\n) => {\n  const { addToUserLog } = useUserLogStore.getState();\n  const { gameState, setRoomId, setIsEndCutsceneRedirectHandled } =\n    useClientGameStore.getState();\n  const { cardsDB } = useCardsDBStore.getState();\n  const inspector = makeInspector(cardsDB, gameState);\n  const playerPerspective = getPlayerPerspectiveForRole(\n    useClientGameStore.getState().role\n  );\n\n  switch (upd.type) {\n    case UpdateType.OVERRIDE_STATE: {\n      const { roomId } = upd;\n      setRoomId(roomId);\n\n      // Reset the game UI actions state.\n      const { resetSelectedCard: turnResetCard, resetEffectOpts } =\n        useTurnStore.getState();\n      const {\n        resetSelectedCard: keyboardResetCard,\n        resetEffectOpts: keyboardResetEffectOpts,\n      } = useKeyboardCursorStore.getState();\n      const { resetHoverState } = useHoverActionStore.getState();\n      turnResetCard();\n      resetEffectOpts();\n      keyboardResetCard();\n      keyboardResetEffectOpts();\n      resetHoverState();\n      break;\n    }\n    case UpdateType.ANNOUNCE: {\n      addToUserLog(upd.message);\n      break;\n    }\n    case UpdateType.ANNOUNCE_SUMMON_PERMANENT: {\n      addToUserLog(\n        `${upd.player === playerPerspective ? \"You play\" : \"Opponent plays\"} ${\n          upd.cardName\n        }`\n      );\n      break;\n    }\n    case UpdateType.ANNOUNCE_MOVE: {\n      addToUserLog(\n        `${upd.player === playerPerspective ? \"You move\" : \"Opponent moves\"} ${\n          upd.cardName\n        }`\n      );\n      break;\n    }\n    case UpdateType.ANNOUNCE_ATTACK_CARD: {\n      addToUserLog(`${upd.cardName} attacks ${upd.target} for ${upd.damage}`);\n      break;\n    }\n    case UpdateType.DRAW_CARD: {\n      const cardName =\n        upd.card.name === undefined\n          ? \"a card\"\n          : inspector.getCardDisplayName(upd.card);\n      addToUserLog(\n        `${\n          upd.player === playerPerspective ? \"You draw\" : \"Opponent draws\"\n        } ${cardName}`\n      );\n      break;\n    }\n    case UpdateType.DAMAGE_PERMANENT: {\n      const permanent = inspector.getPermanent(upd.permanentId);\n      const displayName = inspector.getCardDisplayName(permanent);\n      addToUserLog(\n        upd.damage < 0\n          ? `${-upd.damage} damage removed from ${displayName}`\n          : `${displayName} suffers ${upd.damage} damage`\n      );\n      break;\n    }\n    case UpdateType.REMOVE_PERMANENT: {\n      const permanent = inspector.getPermanent(upd.permanentId);\n      const cardName = inspector.getCardDisplayName(permanent);\n      addToUserLog(`${cardName} expires`);\n      break;\n    }\n    case UpdateType.START_TURN: {\n      const turnText = upd.player === playerPerspective ? \"Your\" : \"Opponent's\";\n      const turnNum = Math.floor(inspector.getTurnNumber() / 2) + 1;\n      addToUserLog(`— ${turnText} turn ${turnNum}`);\n      break;\n    }\n    case UpdateType.SET_GAME_RESULT: {\n      const { gameState } = inspector;\n      const playerState = gameState[playerPerspective];\n      const { winner, loseReason } = upd;\n      const { teamData } = playerState;\n      if (teamData === undefined)\n        throw new Error(\n          \"expect team data to be defined for player perspective\"\n        );\n      const { isReplay } = teamData;\n      const endCutsceneRedirect = inspector.getEndCutsceneRedirect();\n      const endCutsceneRedirectDjango =\n        inspector.getEndCutsceneRedirectDjango();\n      const endMessage = (() => {\n        const won = winner === playerPerspective;\n        switch (loseReason) {\n          case LoseReason.NORMAL: {\n            return `You ${won ? \"won\" : \"lost\"}.`;\n          }\n          case LoseReason.RESIGN: {\n            return `You ${won ? \"won\" : \"lost\"} because ${\n              won ? \"your opponent\" : \"you\"\n            } resigned.`;\n          }\n          case LoseReason.TIME: {\n            return `You ${won ? \"won\" : \"lost\"} because ${\n              won ? \"your opponent\" : \"you\"\n            } ran out of time.`;\n          }\n        }\n      })();\n      endMessage && addToUserLog(endMessage);\n\n      if (winner === playerPerspective) {\n        if (\n          !isReplay ||\n          // Go to /victory after the final cutscene even on replay.\n          gameState.puzName === PUZ_NAME_POST_FINAL_BATTLE\n        ) {\n          // Handle cutscene redirects without opening the solved modal.\n          // Only redirect to the actual redirect page if this is the\n          // first time the cutscene is played, and the client was around\n          // to see the cutscene end.\n          // If for example the client finishes a cutscene and hits \"back\",\n          // we should redirect to the prep page instead. This is handled\n          // later.\n          if (endCutsceneRedirect !== null) {\n            navigate({\n              pathname: \"..\" + endCutsceneRedirect,\n              search: searchParams.toString(),\n            });\n            setIsEndCutsceneRedirectHandled(true);\n            return;\n          }\n          if (endCutsceneRedirectDjango !== null) {\n            window.location.href = `${settings.djangoBaseUrl}${endCutsceneRedirectDjango}`;\n            setIsEndCutsceneRedirectHandled(true);\n            return;\n          }\n        }\n      }\n      break;\n    }\n  }\n};\n\nconst handleUpdateAsync = async (\n  serverInterfaceController: ServerInterfaceController,\n  navigate: ReturnType<typeof useNavigate>,\n  searchParams: URLSearchParams,\n  upd: Update,\n  isStale: () => boolean\n) => {\n  const { gameState, applyUpdate, setUpdateLock } =\n    useClientGameStore.getState();\n  const { setIsPageReady } = useNavStore.getState();\n  const { animateUpdate } = useAnimationStore.getState();\n\n  setUpdateLock(true);\n  // apply changes outside the client game state\n  triggerUpdateSideEffects(upd, navigate, searchParams);\n\n  try {\n    // trigger animations, wait for it all to finish\n    await animateUpdate(upd, isStale);\n\n    // HACK: This is just used by the final battle to inject\n    // an animation delay.\n    if (upd.type === UpdateType.WAIT_ANIMATE)\n      await new Promise((resolve) => setTimeout(resolve, upd.waitTime));\n  } catch (err) {\n    // animiation failures are non-fatal\n    console.error(err);\n  }\n  if (isStale()) return;\n\n  const { role } = serverInterfaceController;\n  if (role === undefined)\n    throw new Error(\n      \"expect role to be defined once we've been joined to a room\"\n    );\n\n  // apply changes to the client game state\n  applyUpdate(upd, role);\n  setUpdateLock(false);\n  setIsPageReady(true);\n};\n\nconst handleUpdatesSync = async (\n  serverInterfaceController: ServerInterfaceController,\n  navigate: ReturnType<typeof useNavigate>,\n  searchParams: URLSearchParams,\n  upds: Update[],\n  isStale: () => boolean\n) => {\n  const { applyUpdate } = useClientGameStore.getState();\n  const { setIsPageReady } = useNavStore.getState();\n\n  for (const upd of upds) {\n    triggerUpdateSideEffects(upd, navigate, searchParams);\n    const { role } = serverInterfaceController;\n    if (role === undefined)\n      throw new Error(\n        \"expect role to be defined once we've been joined to a room\"\n      );\n\n    // HACK: This is just used by the final battle to inject\n    // an animation delay.\n    if (upd.type === UpdateType.WAIT_ANIMATE) {\n      await new Promise((resolve) => setTimeout(resolve, upd.waitTime));\n      if (isStale()) return;\n    }\n\n    applyUpdate(upd, role);\n  }\n\n  setIsPageReady(true);\n};\n\nexport const useGameUpdates = () => {\n  const serverInterfaceController = useServerInterfaceController();\n  const isAdminEnabled = useIsAdminEnabledStore(\n    (state) => state.isAdminEnabled\n  );\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const puzName = usePuzName();\n  const { spectateTeamId } = useParams();\n  const needRedirectToPrep = useNeedRedirectToPrep();\n\n  const enterRoomParams = useMemo<EnterRoomParams | null>(\n    () =>\n      needRedirectToPrep !== null && !needRedirectToPrep\n        ? {\n            puzName,\n            role: isAdminEnabled ? settings.role : undefined,\n            spectateTeamId,\n          }\n        : null,\n    [puzName, isAdminEnabled, spectateTeamId, needRedirectToPrep]\n  );\n  const processUpdateAsync = useMemo(() => {\n    return async (upd: Update, isStale: () => boolean) => {\n      return await handleUpdateAsync(\n        serverInterfaceController,\n        navigate,\n        searchParams,\n        upd,\n        isStale\n      );\n    };\n  }, [serverInterfaceController, navigate, searchParams]);\n  const processUpdatesSync = useMemo(() => {\n    return async (upds: Update[], isStale: () => boolean) => {\n      return await handleUpdatesSync(\n        serverInterfaceController,\n        navigate,\n        searchParams,\n        upds,\n        isStale\n      );\n    };\n  }, [serverInterfaceController, navigate, searchParams]);\n  useUpdatesQueue(\n    enterRoomParams,\n    UPDATE_DELAYS,\n    processUpdateAsync,\n    processUpdatesSync\n  );\n};\n","import { WSErrorCode } from \"game-server/ws\";\nimport { useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport settings from \"settings\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport { usePuzName } from \"stores/NavStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useResetGameUIActionsState } from \"stores/UserGameActionHandlers\";\n\nexport const useInitSendStep = () => {\n  const setStepLock = useClientGameStore((state) => state.setStepLock);\n  const setSendStep = useClientGameStore((state) => state.setSendStep);\n  const resetGameUIActionsState = useResetGameUIActionsState();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const puzName = usePuzName();\n  const serverInterfaceController = useServerInterfaceController();\n  const resetForSuccessfulStep = useKeyboardCursorStore(\n    (state) => state.resetForSuccessfulStep\n  );\n\n  useEffect(() => {\n    return serverInterfaceController.addAuthEffect(() => {\n      let isCanceled = false;\n      setSendStep((step) => {\n        (async () => {\n          resetGameUIActionsState();\n          // TODO: reset hotkey state?\n\n          // unlocked when we get STEP_ACK\n          setStepLock(true);\n          const err = await serverInterfaceController.sendStepAsync(step);\n          if (isCanceled) return;\n          setStepLock(false);\n\n          if (err !== null) {\n            const { errCode } = err;\n            switch (errCode) {\n              case WSErrorCode.CANCELED_BY_CLIENT: {\n                break;\n              }\n              case WSErrorCode.INVALID_STEP: {\n                // Note that all steps should now be validated on the client\n                // side, so we should not be receiving invalid step errors\n                // except due to race conditions during online mode (which\n                // are okay).\n                if (settings.localMode) {\n                  throw new Error(`unexpected invalid step error`);\n                }\n                break;\n              }\n              default: {\n                throw new Error(`unhandled error \"${errCode}\"`);\n              }\n            }\n          } else {\n            resetForSuccessfulStep();\n          }\n        })();\n      });\n      return () => {\n        isCanceled = true;\n        setSendStep(null);\n      };\n    });\n  }, [\n    serverInterfaceController,\n    setSendStep,\n    resetGameUIActionsState,\n    resetForSuccessfulStep,\n    setStepLock,\n  ]);\n\n  useEffect(() => {\n    return serverInterfaceController.onErrorEvent.addListener((resp) => {\n      // If we received an error, we're most probably not going\n      // to get our step ack.\n      setStepLock(false);\n\n      if (resp.errCode === WSErrorCode.NO_ROOM) {\n        navigate(\n          {\n            pathname: `../prep/${puzName}`,\n            search: searchParams.toString(),\n          },\n          { replace: true }\n        );\n      }\n    });\n  }, [serverInterfaceController, setStepLock, puzName, navigate, searchParams]);\n};\n","import { useEffect } from \"react\";\nimport { useClientGameStore, useInspector } from \"stores/ClientGameStore\";\nimport { SelectedCardType, useTurnStore } from \"stores/TurnStore\";\nimport {\n  useResetSelectedCard,\n  useSelectFieldPermanent,\n} from \"stores/UserGameActionHandlers\";\n\nexport const useTutorialKeyframes = () => {\n  const selectedCard = useTurnStore((state) => state.selectedCard);\n  const isKeyframeSelected = useTurnStore((state) => state.isKeyframeSelected);\n  const setSelectedFieldPermanent = useSelectFieldPermanent();\n  const resetSelectedCard = useResetSelectedCard();\n  const inspector = useInspector();\n  const keyframe = useClientGameStore((state) => state.gameState.keyframe);\n  const { id: keyframeId } = keyframe ?? {};\n\n  // Hacked-in logic for selecting stuff for tutorial.\n  useEffect(() => {\n    const query = (() => {\n      switch (keyframeId) {\n        case \"tutorial1-attack\":\n          return { name: \"yoshisaur-munchakoopas\" };\n        case \"tutorial2-attack-2\":\n          return { name: \"new-boarn\" };\n        case \"tutorial3-after-summon-new-boarn\":\n          return { name: \"new-boarn\" };\n        case \"tutorial3-focus-hog\":\n          return { name: \"hog\" };\n        case \"tutorial4-focus-beeowulf-2\":\n          return { name: \"beeowulf\" };\n        case \"tutorial4-focus-calf-1\":\n        case \"tutorial4-focus-calf-2\":\n          return { name: \"chocolate-calf\" };\n        default:\n          return undefined;\n      }\n    })();\n    if (query === undefined) {\n      if (\n        isKeyframeSelected &&\n        !(\n          keyframeId !== undefined &&\n          [\"tutorial2-free-play\"].includes(keyframeId)\n        )\n      )\n        resetSelectedCard();\n      return;\n    }\n    if (query === null) {\n      resetSelectedCard();\n      return;\n    }\n    const matches = inspector.getPermanents(query);\n    if (matches.length !== 1)\n      throw new Error(\"expect unique permanent when force selecting\");\n    const selectPermanentId = matches[0].id;\n    if (\n      selectedCard !== null &&\n      selectedCard.type === SelectedCardType.PERMANENT &&\n      selectedCard.permanentId === selectPermanentId\n    ) {\n      return;\n    }\n    setSelectedFieldPermanent(selectPermanentId, true);\n  }, [\n    keyframeId,\n    setSelectedFieldPermanent,\n    inspector,\n    selectedCard,\n    isKeyframeSelected,\n    resetSelectedCard,\n  ]);\n};\n","import { useEffect } from \"react\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\n\nimport { opponentOf } from \"engine/types/game-state\";\nimport { DRAW_CARD_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { WSReqType } from \"game-server/ws\";\n\nimport {\n  useClientGameStore,\n  useInspector,\n  useIsLockedBesidesKeyframe,\n  useIsLocked,\n  usePlayerPerspective,\n} from \"stores/ClientGameStore\";\nimport {\n  useSubscribedTeam,\n  useIsValidBattle,\n  useSelectedPuzName,\n  useIsGameSettingsEnabled,\n  useNeedRedirectToPrep,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { useKeyboardCursorStore } from \"stores/KeyboardCursorStore\";\nimport { useNavStore, usePuzName } from \"stores/NavStore\";\nimport {\n  useServerInterfaceController,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport { useResetGameUIActionsState } from \"stores/UserGameActionHandlers\";\nimport { useUserLogStore } from \"stores/UserLogStore\";\nimport {\n  useHotkeyPreferencesStore,\n  useIsAdminEnabledStore,\n} from \"stores/UserPreferencesStore\";\nimport { useAnimationSpeed } from \"stores/AnimationStore\";\n\nimport AIBattler from \"components/AIBattlerDisplay\";\nimport BattleBackground from \"components/BattleBackground\";\nimport CutsceneUI from \"components/CutsceneUI\";\nimport FieldDisplay from \"components/FieldDisplay\";\nimport { useGameHotkeys } from \"components/GameHotkeys\";\nimport HandDisplay from \"components/HandDisplay\";\nimport Keyframe from \"components/Keyframe\";\nimport { Spinner } from \"components/Loading\";\nimport Modal from \"components/Modal\";\nimport Presence from \"components/Presence\";\nimport {\n  LeftOfFieldDisplay,\n  RightOfFieldDisplay,\n} from \"components/SideFieldDisplay\";\nimport SolvedModal from \"components/SolvedModal\";\n\nimport \"./GamePage.css\";\nimport { useGameEnd } from \"./GamePageUtil/useGameEnd\";\nimport { useGameUpdates } from \"./GamePageUtil/useGameUpdates\";\nimport { useInitSendStep } from \"./GamePageUtil/useInitSendStep\";\nimport { useTutorialKeyframes } from \"./GamePageUtil/useTutorialKeyframes\";\n\nfunction GamePage() {\n  const subscribedTeam = useSubscribedTeam();\n  const setSubscribedTeamBattle = useGlobalSubscriptionStore(\n    (state) => state.setSubscribedTeamBattle\n  );\n  const setStepLock = useClientGameStore((state) => state.setStepLock);\n  const setUpdateLock = useClientGameStore((state) => state.setUpdateLock);\n  const isLockedBesidesKeyframe = useIsLockedBesidesKeyframe();\n  const isLocked = useIsLocked();\n  const resetGameUIActionsState = useResetGameUIActionsState();\n  const inspector = useInspector();\n  const isGameActive = inspector.isGameActive();\n  const serverInterfaceController = useServerInterfaceController();\n  const teamId = useTeamId();\n  const playerPerspective = usePlayerPerspective();\n  const isPageReady = useNavStore((state) => state.isPageReady);\n  const setIsPageReady = useNavStore((state) => state.setIsPageReady);\n  const solvedModalState = useNavStore((state) => state.solvedModalState);\n  const setSolvedModalState = useNavStore((state) => state.setSolvedModalState);\n  const isHotkeyModalOpen = useNavStore((state) => state.isHotkeyModalOpen);\n  const setIsHotkeyModalOpen = useNavStore(\n    (state) => state.setIsHotkeyModalOpen\n  );\n  const puzName = usePuzName();\n  const selectedPuzName = useSelectedPuzName();\n  const { spectateTeamId } = useParams();\n  const speed = useAnimationSpeed();\n  const isGameSettingsEnabled = useIsGameSettingsEnabled();\n  const clearLog = useUserLogStore((state) => state.clearLog);\n  const resetKeyboardState = useKeyboardCursorStore(\n    (state) => state.resetState\n  );\n  const setIsHotkeysEnabled = useKeyboardCursorStore(\n    (state) => state.setEnabled\n  );\n  const isHotkeysEnabledPref = useHotkeyPreferencesStore(\n    (state) => state.isEnabled\n  );\n  const setIsEndCutsceneRedirectHandled = useClientGameStore(\n    (state) => state.setIsEndCutsceneRedirectHandled\n  );\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const isValidBattle = useIsValidBattle();\n  const needRedirectToPrep = useNeedRedirectToPrep();\n\n  const keyframe = useClientGameStore((state) => state.gameState.keyframe);\n  const {\n    hideGame = false,\n    useCutsceneUI = false,\n    showMask = false,\n  } = keyframe ?? {};\n\n  useEffect(() => {\n    if (needRedirectToPrep !== null && needRedirectToPrep) {\n      navigate({\n        pathname: `../prep/${puzName}`,\n        search: searchParams.toString(),\n      });\n    }\n  }, [needRedirectToPrep, puzName, navigate, searchParams]);\n\n  useEffect(() => {\n    return () => {\n      // Reset page state.\n      setStepLock(false);\n      setUpdateLock(false);\n      resetGameUIActionsState();\n      setIsPageReady(false);\n      setSolvedModalState(null);\n      setIsHotkeyModalOpen(false);\n      clearLog();\n      resetKeyboardState();\n      setIsEndCutsceneRedirectHandled(false);\n    };\n  }, [\n    setStepLock,\n    setUpdateLock,\n    resetGameUIActionsState,\n    setIsPageReady,\n    setSolvedModalState,\n    setIsHotkeyModalOpen,\n    clearLog,\n    resetKeyboardState,\n    setIsEndCutsceneRedirectHandled,\n  ]);\n\n  useEffect(() => {\n    if (needRedirectToPrep === null || needRedirectToPrep) return;\n    if (isSpectating) return;\n    if (selectedPuzName === null) return;\n    return serverInterfaceController.addAuthEffect(() => {\n      serverInterfaceController.sendReq({\n        type: WSReqType.VIEW_PUZZLE,\n        puzName: selectedPuzName,\n      });\n    });\n  }, [\n    selectedPuzName,\n    serverInterfaceController,\n    isSpectating,\n    needRedirectToPrep,\n  ]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    if (isValidBattle === null || !isValidBattle) return;\n    setSubscribedTeamBattle({\n      teamId: spectateTeamId ?? teamId,\n      puzName,\n    });\n  }, [setSubscribedTeamBattle, puzName, teamId, spectateTeamId, isValidBattle]);\n\n  useTutorialKeyframes();\n  useInitSendStep();\n  useGameUpdates();\n  const hasGameEnded = useGameEnd();\n\n  useGameHotkeys();\n  useEffect(() => {\n    if (hasGameEnded || !isGameSettingsEnabled) {\n      setIsHotkeysEnabled(false);\n      return;\n    }\n    setIsHotkeysEnabled(isHotkeysEnabledPref);\n  }, [\n    hasGameEnded,\n    isGameSettingsEnabled,\n    setIsHotkeysEnabled,\n    isHotkeysEnabledPref,\n  ]);\n\n  useEffect(() => {\n    serverInterfaceController.isFlushToggled = speed === 0;\n  }, [serverInterfaceController, speed]);\n\n  if (!isPageReady || needRedirectToPrep === null || needRedirectToPrep)\n    return <Spinner size={128} />;\n\n  return (\n    <>\n      <BattleBackground />\n      <Presence cursorGroupName={puzName} enabled={true}>\n        <div\n          className={`game-and-keyframe${\n            solvedModalState === null ? \"\" : \" unfocused\"\n          }`}\n        >\n          {hideGame ? null : (\n            <div className=\"below-nav\" id=\"game-page-root-wrapper\">\n              <div\n                id=\"game-page-root\"\n                className={`game-page-root ${\n                  isLocked && showMask ? \"game-lock\" : \"\"\n                }`}\n              >\n                <div\n                  className=\"game-play-area\"\n                  onClick={() => {\n                    resetGameUIActionsState();\n                  }}\n                >\n                  {inspector.hasAI() ? (\n                    <AIBattler />\n                  ) : (\n                    <HandDisplay player={opponentOf(playerPerspective)} />\n                  )}\n                  <div className=\"game-center-area\">\n                    <div className=\"game-left-area\">\n                      <LeftOfFieldDisplay />\n                    </div>\n                    <FieldDisplay />\n                    <div className=\"game-right-area\">\n                      <RightOfFieldDisplay />\n                    </div>\n                  </div>\n                  <HandDisplay player={playerPerspective} />\n                </div>\n              </div>\n            </div>\n          )}\n          <div className={isLockedBesidesKeyframe ? \"game-lock\" : \"\"}>\n            <Keyframe />\n            {useCutsceneUI && !(!hideGame && !isGameActive) ? (\n              <div className=\"below-nav game-cutscene-ui-wrapper\">\n                <CutsceneUI />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </Presence>\n      <Modal title=\"Hotkey Help\" isOpen={isHotkeyModalOpen}>\n        <div className=\"hotkey-help-modal-content\">\n          <kbd>W</kbd>\n          <kbd>A</kbd>\n          <kbd>S</kbd>\n          <kbd>D</kbd> / <kbd>↑</kbd>\n          <kbd>←</kbd>\n          <kbd>↓</kbd>\n          <kbd>→</kbd> Move cursor\n          <br />\n          <kbd>Space</kbd>/<kbd>Enter</kbd> Select\n          <br />\n          <kbd>Esc</kbd> Deselect\n          <br />\n          <kbd>E</kbd> End turn\n          <br />\n          {inspector.doesPlayerHaveMastery(\n            playerPerspective,\n            DRAW_CARD_MASTERY_ID\n          ) ? (\n            <>\n              <kbd>P</kbd> Pay 2 Food to draw a card\n              <br />\n            </>\n          ) : null}\n          <kbd>Z</kbd> Special\n          <br />\n          <kbd>X</kbd> Flex\n          <br />\n          <kbd>C</kbd> Create\n          <br />\n          <kbd>V</kbd> Create2 (if there&apos;s a second create option)\n          <br />\n          <kbd>F</kbd> Focus field\n          <br />\n          <kbd>H</kbd> Focus hand\n          <br />\n          <kbd>1</kbd>-<kbd>0</kbd> Select 1st through 10th card in hand\n          <br />\n          <kbd>/</kbd> Show help\n        </div>\n        <div>\n          <button\n            onClick={() => {\n              setIsHotkeyModalOpen(false);\n            }}\n          >\n            Okay!\n          </button>\n        </div>\n      </Modal>\n      <SolvedModal />\n    </>\n  );\n}\n\nexport default GamePage;\n","export default \"__VITE_ASSET__810d2c12__\"","export default \"__VITE_ASSET__b9d7e6a8__\"","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import rockLobsterUrl from \"audio/rock-lobster.mp3\";\nimport sfxMetadata from \"audio/sfx-metadata.json\";\nimport sfxUrl from \"audio/sfx.mp3\";\nimport { PUZ_NAME_FINAL_BATTLE } from \"engine/puzzles/puzzle-data\";\nimport { UpdateType } from \"engine/types/updates\";\nimport { HuntNotificationType } from \"game-server/notifications\";\nimport { Howl, Howler } from \"howler\";\nimport { useEffect, useRef } from \"react\";\nimport { useAnimationStore } from \"stores/AnimationStore\";\nimport {\n  getPlayerPerspectiveForRole,\n  useClientGameStore,\n} from \"stores/ClientGameStore\";\nimport {\n  useClientGlobalStateStore,\n  useRoomBattleGroupNameFromGameState,\n} from \"stores/ClientGlobalStateStore\";\nimport {\n  AudioLayer,\n  useAudioPreferencesStore,\n} from \"stores/UserPreferencesStore\";\n\n// hacky way to make an enum\ntype SFX = Uppercase<keyof (typeof sfxMetadata)[\"sprite\"]>;\nconst SFX = Object.fromEntries(\n  Object.keys(sfxMetadata[\"sprite\"]).map((k) => [k.toUpperCase(), k])\n) as { [key in SFX]: string };\n\nexport const useAudioEffect = () => {\n  const roomBattleGroupName = useRoomBattleGroupNameFromGameState();\n  const volume = useAudioPreferencesStore((state) => state.volume);\n  const isMuted = useAudioPreferencesStore((state) => state.isMuted);\n  const layers = useAudioPreferencesStore((state) => state.layers);\n  const register = useAnimationStore((state) => state.register);\n  const setPlayAudioNotif = useClientGlobalStateStore(\n    (state) => state.setPlayAudioNotif\n  );\n\n  const players = useRef<Record<AudioLayer, Howl | null>>({\n    [AudioLayer.BGM]: null,\n    [AudioLayer.SFX]: null,\n    [AudioLayer.NOTIF]: null,\n  });\n\n  useEffect(() => {\n    Howler.volume(volume / 100);\n  }, [volume]);\n\n  useEffect(() => {\n    Howler.mute(isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    Object.values(AudioLayer).forEach((key) => {\n      players.current[key]?.volume(layers[key].volume / 100);\n      players.current[key]?.mute(layers[key].isMuted);\n    });\n  }, [layers]);\n\n  // bgm layer\n  useEffect(() => {\n    if (roomBattleGroupName === null) return;\n    if (roomBattleGroupName !== PUZ_NAME_FINAL_BATTLE) return;\n\n    players.current.bgm = new Howl({\n      src: [rockLobsterUrl],\n      html5: true,\n      loop: true,\n      volume: layers.bgm.volume / 100,\n      mute: layers.bgm.isMuted,\n    });\n    const rockLobster = players.current.bgm;\n\n    const playAudio = () => {\n      rockLobster.play();\n      document.body.removeEventListener(\"click\", playAudio);\n    };\n\n    document.body.addEventListener(\"click\", playAudio);\n    return () => {\n      document.body.removeEventListener(\"click\", playAudio);\n      rockLobster.unload();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomBattleGroupName]);\n\n  // step sfx layer (won't overlap, will interrupt previous)\n  useEffect(() => {\n    players.current.sfx = new Howl({\n      src: [sfxUrl],\n      // @ts-expect-error: types aren't quite inferred right\n      sprite: sfxMetadata.sprite,\n      volume: layers.sfx.volume / 100,\n      mute: layers.sfx.isMuted,\n    });\n    const sfx = players.current.sfx;\n    const playerUs = getPlayerPerspectiveForRole(\n      useClientGameStore.getState().role\n    );\n\n    const unregister = register(async (upd) => {\n      switch (upd.type) {\n        case UpdateType.END_TURN: {\n          if (upd.player !== playerUs) {\n            sfx.play(SFX[\"YOUR-TURN\"]);\n          }\n          break;\n        }\n        case UpdateType.CREATE_PERMANENT: {\n          sfx.play(SFX[\"STEP-SUMMON\"]);\n          break;\n        }\n        case UpdateType.ADD_GEMS: {\n          // bad for starting turn\n          sfx.play(SFX[\"STEP-ADD-GEMS\"]);\n          break;\n        }\n        case UpdateType.REMOVE_PERMANENT: {\n          sfx.play(SFX[\"STEP-REMOVE-PERMANENT\"]);\n          break;\n        }\n        case UpdateType.MOVE:\n        case UpdateType.SWAP: {\n          sfx.play(SFX[\"STEP-MOVE\"]);\n          break;\n        }\n        case UpdateType.DAMAGE_PERMANENT: {\n          if (upd.damage > 0) {\n            sfx.play(SFX[\"STEP-DAMAGE-PERMANENT\"]);\n          } else if (upd.damage < 0) {\n            sfx.play(SFX[\"STEP-HEAL\"]);\n          }\n          break;\n        }\n      }\n    });\n\n    return () => {\n      unregister();\n      sfx.unload();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [register]);\n\n  // notif layer\n  useEffect(() => {\n    players.current.notif = new Howl({\n      src: [sfxUrl],\n      // @ts-expect-error: types aren't quite inferred right\n      sprite: sfxMetadata.sprite,\n      volume: layers.notif.volume / 100,\n      mute: layers.notif.isMuted,\n    });\n    const notif = players.current.notif;\n\n    setPlayAudioNotif((upd) => {\n      if (\n        upd.type !== HuntNotificationType.VICTORY &&\n        upd.type !== HuntNotificationType.UNLOCK // unlock overlaps solve\n      ) {\n        notif.stop(); // stop any previous sound\n      }\n      switch (upd.type) {\n        case HuntNotificationType.PVP_REQUEST_ACCEPTED: {\n          notif.play(SFX[\"NOTIF-TRUMPETS-2\"]);\n          break;\n        }\n        case HuntNotificationType.PVP_REQUEST_RECEIVED: {\n          notif.play(SFX[\"NOTIF-TRUMPETS-1\"]);\n          break;\n        }\n        case HuntNotificationType.HINT_ANSWERED: {\n          notif.play(SFX[\"NOTIF-BELLS\"]);\n          break;\n        }\n        case HuntNotificationType.ERRATUM: {\n          notif.play(SFX[\"NOTIF-BELLS\"]);\n          break;\n        }\n        case HuntNotificationType.UNLOCK: {\n          notif.play(SFX[\"NOTIF-CAVE\"]);\n          break;\n        }\n        case HuntNotificationType.SOLVE: {\n          notif.play(SFX[\"NOTIF-CLAPS\"]);\n          break;\n        }\n        case HuntNotificationType.VICTORY: {\n          notif.play(SFX.CHEER);\n          break;\n        }\n      }\n    });\n\n    return () => {\n      setPlayAudioNotif(null);\n      notif.unload();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import { useEffect } from \"react\";\nimport { useParams, useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"./GamePage.css\";\n\nimport { PUZ_NAME_MASTERY_TREE } from \"engine/puzzles/puzzle-data\";\n\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { Spinner } from \"components/Loading\";\n\n/**\n * Landing page after cutscene to wait for the puzzle to get unlocked\n * and then jump into prep.\n */\nfunction StartPrepPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const serverInterfaceController = useServerInterfaceController();\n  const { puzName } = useParams<{\n    puzName: string;\n  }>();\n  if (puzName === undefined)\n    throw new Error(\"expect puzName parameter to be defined\");\n  const subscribedTeam = useSubscribedTeam();\n  const isMasteryTree = puzName === PUZ_NAME_MASTERY_TREE;\n\n  useEffect(() => {\n    if (subscribedTeam === null) return;\n    const puzData = subscribedTeam.puzzles[puzName];\n    // If the puzzle is not unlocked, wait until it is.\n    if (puzData === undefined) return;\n\n    navigate(\n      {\n        pathname: isMasteryTree ? \"../mastery\" : `../prep/${puzName}`,\n        search: searchParams.toString(),\n      },\n      { replace: true }\n    );\n  }, [puzName, subscribedTeam, navigate, searchParams, isMasteryTree]);\n\n  useEffect(() => {\n    return serverInterfaceController.onErrorEvent.addListener((resp) => {\n      navigate(\n        {\n          pathname: \"../\",\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n    });\n  }, [serverInterfaceController, navigate, searchParams]);\n\n  return <Spinner size={128} />;\n}\n\nexport default StartPrepPage;\n","import { useEffect } from \"react\";\nimport { useParams, useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"./GamePage.css\";\n\nimport {\n  useBattleGroup,\n  useSubscribedTeam,\n  useSubscribedBattleStatus,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { GlobalStateBattleRoomStatus } from \"game-server/global-updates\";\n\nimport { getDevKnobs } from \"App.util\";\nimport { Spinner } from \"components/Loading\";\n\nfunction StartBattlePage({ restart }: { restart?: boolean }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const serverInterfaceController = useServerInterfaceController();\n  const { puzName, slot } = useParams<{\n    puzName: string;\n    slot: string;\n  }>();\n  if (puzName === undefined)\n    throw new Error(\"expect puzName parameter to be defined\");\n  const battleStatus = useSubscribedBattleStatus(puzName);\n  const isBattleActive =\n    battleStatus === null\n      ? null\n      : battleStatus === GlobalStateBattleRoomStatus.ACTIVE;\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useBattleGroup();\n  const isUnlocked =\n    subscribedTeam !== null && subscribedTeam.puzzles[puzName] !== undefined;\n\n  useEffect(() => {\n    // If the puzzle is not unlocked, wait until it is.\n    if (!isUnlocked) return;\n\n    return serverInterfaceController.addAuthEffect(() => {\n      serverInterfaceController.startAIBattleAsync(puzName, {\n        slot: slot === undefined ? undefined : parseInt(slot),\n        restart,\n        devKnobs: getDevKnobs(),\n      });\n    });\n  }, [\n    serverInterfaceController,\n    puzName,\n    isUnlocked,\n    navigate,\n    searchParams,\n    slot,\n    restart,\n  ]);\n\n  useEffect(() => {\n    if (isBattleActive === null) return;\n    if (!isBattleActive) return;\n    if (battleGroup === null) return;\n    const { isCutscene = false } = battleGroup;\n    navigate(\n      {\n        pathname: `../${isCutscene ? \"cutscene\" : \"battle\"}/${puzName}`,\n        search: searchParams.toString(),\n      },\n      { replace: true }\n    );\n  }, [isBattleActive, navigate, puzName, searchParams, battleGroup]);\n\n  useEffect(() => {\n    return serverInterfaceController.onErrorEvent.addListener((resp) => {\n      navigate(\n        {\n          pathname: `../prep/${puzName}`,\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n    });\n  }, [serverInterfaceController, navigate, puzName, searchParams]);\n\n  return <Spinner size={128} />;\n}\n\nexport default StartBattlePage;\n","import { useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport \"./GamePage.css\";\n\nimport { PUZ_NAME_POST_FINAL_BATTLE } from \"engine/puzzles/puzzle-data\";\n\nimport settings from \"settings\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { Spinner } from \"components/Loading\";\n\n/**\n * Landing page after cutscene to wait for the solve to get synced\n * and then jump into the victory page.\n */\nfunction StartVictoryPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const serverInterfaceController = useServerInterfaceController();\n  const subscribedTeam = useSubscribedTeam();\n\n  useEffect(() => {\n    if (subscribedTeam === null) return;\n    const puzData = subscribedTeam.puzzles[PUZ_NAME_POST_FINAL_BATTLE];\n    // If the final cutscene is not marked solved, wait until it is.\n    // This indicates that the solve has been synced to backend.\n    if (puzData?.solveTime === undefined) return;\n\n    window.location.href = `${settings.djangoBaseUrl}victory`;\n  }, [subscribedTeam]);\n\n  useEffect(() => {\n    return serverInterfaceController.onErrorEvent.addListener((resp) => {\n      navigate(\n        {\n          pathname: \"../\",\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n    });\n  }, [serverInterfaceController, navigate, searchParams]);\n\n  return <Spinner size={128} />;\n}\n\nexport default StartVictoryPage;\n","import { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { toastr } from \"Globals\";\n\nimport { Player } from \"engine/types/game-state\";\nimport BattleBackground from \"components/BattleBackground\";\nimport {\n  CollectionDisplay,\n  DeckDisplay,\n  DeckSidebar,\n} from \"components/DeckCollection\";\nimport { LargeSpinner } from \"components/Loading\";\nimport { useEffect } from \"react\";\nimport {\n  useSubscribedTeam,\n  useSelectedDeckData,\n  useBattleGroup,\n  useBattleGroupName,\n  useIsValidBattle,\n  useNeedRedirectToPrep,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { usePuzName } from \"stores/NavStore\";\nimport { useTeamId } from \"stores/ServerInteractionStore\";\nimport \"./DeckCollectionPage.css\";\n\nfunction DeckCollectionPage() {\n  const teamId = useTeamId();\n  const setSubscribedTeamDecksTeamId = useGlobalSubscriptionStore(\n    (state) => state.setSubscribedTeamDecksTeamId\n  );\n  const setSubscribedTeamBattle = useGlobalSubscriptionStore(\n    (state) => state.setSubscribedTeamBattle\n  );\n  const puzName = usePuzName();\n  const { canSelectDeck } = useSelectedDeckData(Player.P1);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const subscribedTeam = useSubscribedTeam();\n  const battleGroup = useBattleGroup();\n  const battleGroupName = useBattleGroupName();\n  const isValidBattle = useIsValidBattle();\n  const needRedirectToPrep = useNeedRedirectToPrep();\n\n  useEffect(() => {\n    if (teamId === null) return;\n    setSubscribedTeamDecksTeamId(teamId);\n  }, [teamId, setSubscribedTeamDecksTeamId]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    if (!isValidBattle) return;\n    setSubscribedTeamBattle({\n      teamId,\n      puzName,\n    });\n  }, [setSubscribedTeamBattle, puzName, teamId, isValidBattle]);\n\n  useEffect(() => {\n    if (needRedirectToPrep === null || canSelectDeck === null) return;\n    if (needRedirectToPrep || !canSelectDeck) {\n      toastr.error(`Invalid battle \"${puzName}\" for deckbuilding.`);\n      navigate({\n        pathname: `../prep/${puzName}`,\n        search: searchParams.toString(),\n      });\n    }\n  }, [needRedirectToPrep, canSelectDeck, puzName, navigate, searchParams]);\n\n  if (\n    canSelectDeck === null ||\n    needRedirectToPrep === null ||\n    needRedirectToPrep ||\n    !canSelectDeck\n  )\n    return <LargeSpinner />;\n\n  return (\n    <>\n      <BattleBackground />\n      <div className=\"below-nav\">\n        <div className=\"collection-root\">\n          <DeckDisplay />\n          <CollectionDisplay />\n          <DeckSidebar />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DeckCollectionPage;\n","import { create } from \"zustand\";\n\nimport { AnswerOrientation } from \"game-server/masteries\";\n\nexport type AnswerSelection = {\n  answer: string;\n  orientation: AnswerOrientation;\n};\n\nexport type HoverCell = {\n  x: number;\n  y: number;\n};\n\nexport interface MasteryTreeStoreState {\n  answerSelection: AnswerSelection | null;\n  setAnswerSelection: (answerSelection: AnswerSelection | null) => void;\n\n  pendingAnswerSelection: AnswerSelection | null;\n  setPendingAnswerSelection: (answerSelection: AnswerSelection | null) => void;\n\n  hoverCell: HoverCell | null;\n  setHoverCell: (hoverCell: HoverCell | null) => void;\n}\n\nexport const useMasteryTreeStore = create<MasteryTreeStoreState>(\n  (set, get) => ({\n    answerSelection: null,\n    setAnswerSelection: (answerSelection) => {\n      set({ answerSelection });\n    },\n\n    pendingAnswerSelection: null,\n    setPendingAnswerSelection: (pendingAnswerSelection) => {\n      set({ pendingAnswerSelection });\n    },\n\n    hoverCell: null,\n    setHoverCell: (hoverCell) => {\n      set({ hoverCell });\n    },\n  })\n);\n","import { capitalize } from \"engine/types/factions\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\n\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport FactionScoreTotalsDisplay from \"components/FactionScoreTotalsDisplay\";\nimport FactionIcon from \"components/FactionIcon\";\nimport { Spinner } from \"components/Loading\";\nimport \"./SidebarFactionDisplay.css\";\n\nfunction SidebarFactionDisplay() {\n  const subscribedTeam = useSubscribedTeam();\n  const [searchParams] = useSearchParams();\n\n  if (subscribedTeam === null) return <Spinner inline={true} />;\n  const { faction, factionScoreContributions, masteries } = subscribedTeam;\n  const isFactionsEnabled = masteries[FACTIONS_MASTERY_ID].isEnabled ?? false;\n  const factionScoreContribution =\n    faction === null ? 0 : factionScoreContributions[faction];\n\n  if (!isFactionsEnabled) return null;\n  return (\n    <div>\n      {faction === null ? (\n        <>\n          <div className=\"no-faction-msg\">\n            You&apos;re not aligned with a faction yet.\n          </div>\n        </>\n      ) : (\n        <>\n          <FactionScoreTotalsDisplay />\n          <div>\n            <b>Your faction:</b> <FactionIcon faction={faction} />{\" \"}\n            {capitalize(faction)} <FactionIcon faction={faction} />\n          </div>\n          {factionScoreContribution === 0 ? null : (\n            <div>\n              <b>\n                Total team <FactionIcon faction={faction} /> points:\n              </b>{\" \"}\n              {factionScoreContribution}\n            </div>\n          )}\n        </>\n      )}\n      <Link\n        to={{\n          pathname: `/team/${encodeURIComponent(\n            encodeURIComponent(subscribedTeam.displayName)\n          )}`,\n          search: searchParams.toString(),\n        }}\n      >\n        <button className=\"change-faction-btn\">\n          {faction === null ? \"Choose a faction!\" : \"Change faction alignment\"}\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default SidebarFactionDisplay;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams, useSearchParams, Link } from \"react-router-dom\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport Twemoji from \"react-twemoji\";\nimport \"./MasteryTreePage.css\";\n\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_MASTERY_TREE_PROMPT,\n  PUZ_NAME_FIRST_ANSWER,\n} from \"engine/puzzles/puzzle-data\";\n\nimport settings from \"settings\";\nimport { useMasteryTreeStore } from \"stores/MasteryTreeStore\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport {\n  useSubscribedTeam,\n  useSubscribedMasteryTree,\n  useIsAdminOrHuntOver,\n} from \"stores/ClientGlobalStateStore\";\nimport {\n  useServerInteractionStore,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport { useIsAdminEnabledStore } from \"stores/UserPreferencesStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport { WSReqType } from \"game-server/ws\";\nimport { GlobalUpdatesScopeType } from \"game-server/global-updates\";\nimport {\n  MasteryTreeStepType,\n  MasteryTreeStep,\n  AnswerOrientation,\n  MASTERY_GRID_WIDTH,\n  MASTERY_GRID_HEIGHT,\n  START_X,\n  START_Y,\n  getPlacementCharIndexAt,\n  normalizeAnswer,\n  isPlacementCharValid,\n  makeMasteryTreeGrid,\n} from \"game-server/masteries\";\nimport MasteriesExplorer from \"components/MasteriesExplorer\";\nimport SidebarFactionDisplay from \"components/SidebarFactionDisplay\";\nimport BattleBackground from \"components/BattleBackground\";\nimport Presence from \"components/Presence\";\nimport { ConfirmModal } from \"components/Modal\";\nimport { Spinner } from \"components/Loading\";\n\nfunction MasteryTreePage() {\n  const { djangoBaseUrl } = settings;\n  const [searchParams] = useSearchParams();\n  const [showResetModal, setShowResetModal] = useState(false);\n  const {\n    answerSelection,\n    setAnswerSelection,\n    pendingAnswerSelection,\n    setPendingAnswerSelection,\n    hoverCell,\n    setHoverCell,\n  } = useMasteryTreeStore();\n  const serverInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  )();\n  const teamId = useTeamId();\n  const masteryTree = useSubscribedMasteryTree();\n  const selectedMasteryId = useNavStore((state) => state.selectedMasteryId);\n  const setSelectedMasteryId = useNavStore(\n    (state) => state.setSelectedMasteryId\n  );\n  const setHoveredMasteryId = useNavStore((state) => state.setHoveredMasteryId);\n  const setNavIsMasteryTreePage = useNavStore(\n    (state) => state.setNavIsMasteryTreePage\n  );\n  const setIsMasteryUnlockModalOpen = useNavStore(\n    (state) => state.setIsMasteryUnlockModalOpen\n  );\n  const setSendStep = useClientGameStore((state) => state.setSendStep);\n  const { puzName } = useParams<{\n    puzName?: string;\n  }>();\n  const isAdminOrHuntOver = useIsAdminOrHuntOver();\n  const isSpectating = useIsAdminEnabledStore((state) => state.isSpectating);\n\n  const subscribedTeam = useSubscribedTeam();\n  const sendStep = useCallback(\n    (step: MasteryTreeStep) => {\n      if (serverInterfaceController === null) return;\n      serverInterfaceController.sendReq({\n        type: WSReqType.MASTERY_TREE_STEP,\n        step,\n      });\n    },\n    [serverInterfaceController]\n  );\n\n  useEffect(() => {\n    setNavIsMasteryTreePage(true);\n    return () => {\n      setNavIsMasteryTreePage(false);\n    };\n  }, [setNavIsMasteryTreePage]);\n\n  useEffect(() => {\n    if (serverInterfaceController === null) return;\n    if (isSpectating) return;\n    return serverInterfaceController.addAuthEffect(() => {\n      serverInterfaceController.sendReq({\n        type: WSReqType.VIEW_PUZZLE,\n        puzName: PUZ_NAME_MASTERY_TREE,\n      });\n    });\n  }, [serverInterfaceController, isSpectating]);\n\n  useEffect(() => {\n    if (teamId === null) return;\n    if (serverInterfaceController === null) return;\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.TEAM_MASTERY_TREE,\n      teamId,\n    });\n  }, [serverInterfaceController, teamId]);\n\n  // Reset page state on dismount.\n  useEffect(() => {\n    return () => {\n      setAnswerSelection(null);\n      setHoveredMasteryId(null);\n    };\n  }, [setAnswerSelection, setHoveredMasteryId]);\n\n  // Deselect the answer selection when it has been placed.\n  useEffect(() => {\n    if (answerSelection === null) return;\n    if (masteryTree === null) return;\n    if (masteryTree.placements[answerSelection.answer] === undefined) return;\n    setAnswerSelection(null);\n  }, [answerSelection, setAnswerSelection, masteryTree]);\n\n  // Select the pending answer selection once it has been removed from\n  // the grid.\n  useEffect(() => {\n    if (masteryTree === null) return;\n    if (pendingAnswerSelection === null) return;\n    // Ignore if the user selects something else in the meantime.\n    if (answerSelection !== null) {\n      setPendingAnswerSelection(null);\n      return;\n    }\n    if (masteryTree.placements[pendingAnswerSelection.answer] !== undefined)\n      return;\n    setAnswerSelection(pendingAnswerSelection);\n    setPendingAnswerSelection(null);\n  }, [\n    answerSelection,\n    setAnswerSelection,\n    pendingAnswerSelection,\n    setPendingAnswerSelection,\n    masteryTree,\n  ]);\n\n  useHotkeys(\"r\", () => {\n    if (answerSelection === null) return;\n    setAnswerSelection({\n      ...answerSelection,\n      orientation: ((): AnswerOrientation => {\n        switch (answerSelection.orientation) {\n          case AnswerOrientation.HORIZONTAL:\n            return AnswerOrientation.VERTICAL;\n          case AnswerOrientation.VERTICAL:\n            return AnswerOrientation.HORIZONTAL;\n        }\n      })(),\n    });\n  });\n\n  useHotkeys(\"esc\", () => {\n    setAnswerSelection(null);\n  });\n\n  if (settings.isPublicAccess) {\n    const { djangoBaseUrl } = settings;\n    return (\n      <div className=\"below-nav public-access-not-supported\">\n        <h2>Mastery Tree</h2>\n        <div className=\"public-access-not-supported-message\">\n          The mastery tree is not yet supported in public access. You may still\n          access the solution and stats pages. Please create or use an existing\n          account to gain access to puzzle content.\n        </div>\n        <div className=\"public-access-not-supported-buttons\">\n          <a href={`${djangoBaseUrl}post-hunt-solve/mastery_tree`}>\n            <button>Check your answer spoiler-free</button>\n          </a>\n          <a href={`${djangoBaseUrl}solution/mastery_tree`}>\n            <button>View solution</button>\n          </a>\n          <a href={`${djangoBaseUrl}stats/mastery_tree`}>\n            <button>Stats</button>\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  if (\n    subscribedTeam === null ||\n    masteryTree === null ||\n    isAdminOrHuntOver === null\n  )\n    return <Spinner size={128} />;\n\n  const { faction, puzzles, battleGroups, masteries, hintsInfo } =\n    subscribedTeam;\n  const isSolved = puzzles[PUZ_NAME_MASTERY_TREE]?.solveTime !== undefined;\n  const { numHintsUsed, numHintsTotal } = hintsInfo;\n  const numHintsRemaining = numHintsTotal - numHintsUsed;\n\n  const availableAnswers = Object.values(puzzles).flatMap(\n    ({ puzName, battleGroupName, answer }): ReadonlyArray<string> => {\n      const battleGroup = battleGroups[battleGroupName];\n      if (\n        battleGroup === undefined ||\n        puzName === PUZ_NAME_MASTERY_TREE ||\n        answer === undefined ||\n        answer === \"\"\n      )\n        return [];\n      return [answer];\n    }\n  );\n  availableAnswers.sort();\n  const enabledMasteries = Object.values(masteries).filter(\n    ({ isEnabled }) => isEnabled\n  );\n  const { puzPrompt } = puzzles[PUZ_NAME_MASTERY_TREE_PROMPT] ?? {};\n\n  const urlParam = Object.keys(masteries)\n    .sort()\n    .map((masteryId) =>\n      enabledMasteries.some(\n        ({ masteryId: enabledMasteryId }) => masteryId === enabledMasteryId\n      )\n        ? \"1\"\n        : \"0\"\n    )\n    .join(\"\");\n\n  const getMasteryIdAt = (x: number, y: number): string | null => {\n    return (\n      Object.values(masteries).find(\n        (masteryData) => x === masteryData.x && y === masteryData.y\n      )?.masteryId ?? null\n    );\n  };\n\n  const hoveredMasteryId =\n    hoverCell === null || answerSelection !== null\n      ? null\n      : getMasteryIdAt(hoverCell.x, hoverCell.y);\n  const hoveredPlacement =\n    hoverCell === null || answerSelection !== null || hoveredMasteryId !== null\n      ? null\n      : Object.values(masteryTree.placements)\n          .reverse()\n          .find(\n            (placement) =>\n              getPlacementCharIndexAt(placement, hoverCell.x, hoverCell.y) !==\n              null\n          ) ?? null;\n  const newPlacement =\n    answerSelection === null\n      ? null\n      : hoverCell === null\n      ? null\n      : {\n          answer: answerSelection.answer,\n          x: hoverCell.x,\n          y: hoverCell.y,\n          orientation: answerSelection.orientation,\n        };\n\n  const answersDom = availableAnswers.map((unnormalizedAnswer) => {\n    const answer = normalizeAnswer(unnormalizedAnswer);\n    const isUsed = !!masteryTree.placements[answer];\n    const buttonsDom = isUsed\n      ? (() => {\n          const isSelected =\n            hoveredPlacement !== null && hoveredPlacement.answer === answer;\n          return (\n            <button\n              className={`mastery-tree-answer-button${\n                isSelected ? \" highlight\" : \"\"\n              }`}\n              onClick={() => {\n                sendStep?.({\n                  type: MasteryTreeStepType.DELETE,\n                  answer,\n                });\n              }}\n            >\n              Delete\n            </button>\n          );\n        })()\n      : [AnswerOrientation.HORIZONTAL, AnswerOrientation.VERTICAL].map(\n          (orientation) => {\n            const isSelected =\n              answerSelection !== null &&\n              answerSelection.answer === answer &&\n              answerSelection.orientation === orientation;\n            return (\n              <button\n                key={orientation}\n                className={`mastery-tree-answer-button${\n                  isSelected ? \" highlight\" : \"\"\n                }`}\n                disabled={isUsed}\n                onClick={(e) => {\n                  if (isSelected) {\n                    setAnswerSelection(null);\n                    return;\n                  }\n                  setAnswerSelection({\n                    answer,\n                    orientation,\n                  });\n                  e.stopPropagation();\n                }}\n              >\n                {\n                  {\n                    [AnswerOrientation.HORIZONTAL]: \"Horz\",\n                    [AnswerOrientation.VERTICAL]: \"Vert\",\n                  }[orientation]\n                }\n              </button>\n            );\n          }\n        );\n\n    return (\n      <div key={answer} className=\"mastery-tree-answer\">\n        <div className=\"mastery-tree-answer-label\">{unnormalizedAnswer}</div>\n        {buttonsDom}\n      </div>\n    );\n  });\n\n  const charGrid = makeMasteryTreeGrid(masteryTree);\n  const gridDom = (() => {\n    if (charGrid === null)\n      return (\n        <div className=\"mastery-tree-error\">\n          Oops! Looks like your mastery tree got into an invalid state. Use the\n          buttons on the left to reset the mastery tree or delete answers from\n          it to regain access to the mastery tree.\n        </div>\n      );\n\n    const gridDom = [];\n    for (let y = 0; y < MASTERY_GRID_HEIGHT; y++) {\n      const rowDom = [];\n      for (let x = 0; x < MASTERY_GRID_WIDTH; x++) {\n        const existingChar = charGrid[y][x];\n        const existingPlacement =\n          Object.values(masteryTree.placements).find(\n            (placement) => getPlacementCharIndexAt(placement, x, y) !== null\n          ) ?? null;\n        const isConnected =\n          existingPlacement !== null &&\n          masteryTree.connectedAnswers.includes(existingPlacement.answer);\n\n        const newCharIndex =\n          newPlacement === null\n            ? null\n            : getPlacementCharIndexAt(newPlacement, x, y);\n        const newChar =\n          newPlacement === null || newCharIndex === null\n            ? null\n            : newPlacement.answer[newCharIndex];\n        const isCellInvalid = ((): boolean => {\n          if (newPlacement === null) return false;\n          if (newCharIndex === null) return false;\n          return !isPlacementCharValid(charGrid, newPlacement, newCharIndex);\n        })();\n        const masteryId = getMasteryIdAt(x, y);\n        const hasHoveredMastery =\n          masteryId !== null &&\n          hoveredMasteryId !== null &&\n          masteryId === hoveredMasteryId;\n        const hasHoveredPlacement =\n          hoveredPlacement !== null &&\n          getPlacementCharIndexAt(hoveredPlacement, x, y) !== null;\n        const isStart = x === START_X && y === START_Y;\n        const hasSelectedMastery =\n          masteryId !== null &&\n          selectedMasteryId !== null &&\n          masteryId === selectedMasteryId;\n\n        const highlightClass = isCellInvalid\n          ? \" invalid\"\n          : isStart\n          ? \" tree-root\"\n          : hasHoveredMastery\n          ? \" hovered-mastery\"\n          : masteryId !== null\n          ? \" mastery-target\"\n          : hasHoveredPlacement\n          ? \" hovered-answer\"\n          : isConnected\n          ? \" connected\"\n          : \"\";\n        const isClickable = hasHoveredMastery || hasHoveredPlacement;\n        const charToShow = newChar ?? existingChar;\n\n        rowDom.push(\n          <div\n            key={x}\n            className={`mastery-tree-cell${highlightClass}${\n              hasSelectedMastery ? \" selected-mastery\" : \"\"\n            }${isClickable ? \" clickable\" : \"\"}`}\n            style={{\n              width: `max(${100 / MASTERY_GRID_WIDTH}cqw, 1em)`,\n              height: `max(${100 / MASTERY_GRID_HEIGHT}cqh, 1em)`,\n            }}\n            onMouseEnter={() => {\n              setHoverCell({\n                x,\n                y,\n              });\n              if (masteryId !== null) setHoveredMasteryId(masteryId);\n            }}\n            onMouseLeave={() => {\n              setHoveredMasteryId(null);\n            }}\n            onClick={(e) => {\n              if (newPlacement !== null) {\n                sendStep?.({\n                  type: MasteryTreeStepType.PLACE,\n                  placement: newPlacement,\n                });\n                e.stopPropagation();\n                return;\n              }\n              if (masteryId !== null) {\n                setSelectedMasteryId(masteryId);\n                return;\n              }\n              if (hoveredPlacement !== null) {\n                sendStep?.({\n                  type: MasteryTreeStepType.DELETE,\n                  answer: hoveredPlacement.answer,\n                });\n                setPendingAnswerSelection({\n                  answer: hoveredPlacement.answer,\n                  orientation: hoveredPlacement.orientation,\n                });\n                return;\n              }\n            }}\n          >\n            <div className=\"mastery-tree-cell-char\">{charToShow}</div>\n          </div>\n        );\n      }\n      gridDom.push(\n        <div\n          key={y}\n          className=\"mastery-tree-row\"\n          style={{\n            width: `max(100cqw, ${MASTERY_GRID_WIDTH}em)`,\n            height: `max(${100 / MASTERY_GRID_HEIGHT}cqh, 1em)`,\n          }}\n        >\n          {rowDom}\n        </div>\n      );\n    }\n    return gridDom;\n  })();\n\n  const numEnabledMasteries = Object.values(masteries).filter(\n    ({ isEnabled }) => isEnabled\n  ).length;\n  const totNumMasteries = Object.keys(masteries).length;\n  const fishMetaDom = (\n    <>\n      {puzPrompt === undefined ? (\n        <>\n          <h5>\n            Masteries activated: {numEnabledMasteries} / {totNumMasteries}\n          </h5>\n          <div>Activate all {totNumMasteries} masteries to proceed.</div>\n          {subscribedTeam.puzzles[PUZ_NAME_FIRST_ANSWER]?.solveTime ? (\n            <Link\n              to={{\n                pathname: `../prep/${PUZ_NAME_FIRST_ANSWER}`,\n                search: searchParams.toString(),\n              }}\n            >\n              <button className=\"mastery-tree-cutscene-btn\">\n                <div>Replay cutscene</div>\n                <div>(Your first ANSWER)</div>\n              </button>\n            </Link>\n          ) : null}\n        </>\n      ) : (\n        <>\n          <h5>\n            {puzPrompt.header}\n            {isSolved ? (\n              <div\n                className=\"solved-title-marker\"\n                style={{ fontSize: \"0.8em\" }}\n              >\n                Solved!{\" \"}\n                <span className=\"solved-title-answer\">\n                  {puzzles[PUZ_NAME_MASTERY_TREE].answer}\n                </span>\n              </div>\n            ) : null}\n          </h5>\n          <div>{puzPrompt.text}</div>\n        </>\n      )}\n      {puzPrompt !== undefined || settings.isPosthunt || isAdminOrHuntOver ? (\n        <div className=\"mastery-next-buttons\">\n          {puzPrompt !== undefined ? (\n            <>\n              {isSolved ? (\n                settings.isPosthunt ? null : ( // hide feedback after posthunt\n                  <a href={`${djangoBaseUrl}solve/${PUZ_NAME_MASTERY_TREE}`}>\n                    <button>Leave feedback</button>\n                  </a>\n                )\n              ) : (\n                <a href={`${djangoBaseUrl}solve/${PUZ_NAME_MASTERY_TREE}`}>\n                  <button>Submit answer</button>\n                </a>\n              )}\n              {numHintsTotal && !isSolved ? (\n                <a href={`${djangoBaseUrl}hints/${PUZ_NAME_MASTERY_TREE}`}>\n                  <button>\n                    {numHintsRemaining ? \"Get a hint\" : \"View hints\"} (\n                    {numHintsRemaining}\n                    <Twemoji tag=\"span\">💡</Twemoji>)\n                  </button>\n                </a>\n              ) : null}\n            </>\n          ) : null}\n          {settings.isPosthunt || isAdminOrHuntOver ? (\n            <div className=\"mastery-solution-buttons\">\n              <a href={`${djangoBaseUrl}solution/${PUZ_NAME_MASTERY_TREE}`}>\n                <button>Solution</button>\n              </a>\n              <a href={`${djangoBaseUrl}stats/${PUZ_NAME_MASTERY_TREE}`}>\n                <button>Stats</button>\n              </a>\n            </div>\n          ) : null}\n        </div>\n      ) : null}\n    </>\n  );\n\n  return (\n    <>\n      <BattleBackground puzName={PUZ_NAME_MASTERY_TREE} />\n      <Presence cursorGroupName={PUZ_NAME_MASTERY_TREE} enabled={true}>\n        <div className=\"below-nav\">\n          <div\n            className=\"mastery-tree-root\"\n            onClick={() => {\n              setAnswerSelection(null);\n            }}\n          >\n            <div className=\"mastery-tree-left-sidebar\">\n              <div className=\"mastery-tree-controls\">\n                <button onClick={() => setShowResetModal(true)}>Reset</button>\n                {answerSelection === null ? null : (\n                  <>\n                    <div>\n                      <kbd>r</kbd> Rotate\n                    </div>\n                    <div>\n                      <kbd>Esc</kbd> Deselect\n                    </div>\n                  </>\n                )}\n              </div>\n              <div className=\"mastery-tree-answers\">{answersDom}</div>\n            </div>\n            <div className=\"mastery-tree-main\">\n              <div className={\"mastery-tree-grid-panel\"}>\n                <div\n                  id=\"mastery-tree-grid\"\n                  className={`mastery-tree-grid${\n                    answerSelection !== null ? \" pointer\" : \"\"\n                  }`}\n                  style={{\n                    height: `max(min(100cqh, ${\n                      (100 / MASTERY_GRID_WIDTH) * MASTERY_GRID_HEIGHT\n                    }cqw), ${MASTERY_GRID_HEIGHT}em)`,\n                    width: `max(min(100cqw, ${\n                      (100 / MASTERY_GRID_HEIGHT) * MASTERY_GRID_WIDTH\n                    }cqh), ${MASTERY_GRID_WIDTH}em)`,\n                  }}\n                >\n                  {gridDom}\n                </div>\n              </div>\n            </div>\n            <div className=\"mastery-tree-right-sidebar\">\n              <MasteriesExplorer />\n              {faction === null ? <SidebarFactionDisplay /> : null}\n              <div className=\"mastery-next\">{fishMetaDom}</div>\n              <div className=\"mastery-tree-right-sidebar-buttons\">\n                {\n                  // URL overrides are not currently supported.\n                  // <button\n                  //   onClick={() => {\n                  //     navigator.clipboard.writeText(urlParam).then(() => {\n                  //       setCopyText(\"Copied!\");\n                  //       setTimeout(() => {\n                  //         setCopyText(\"Copy URL code\");\n                  //       }, 1000);\n                  //     });\n                  //   }}\n                  // >\n                  //   {copyText}\n                  // </button>\n                }\n                {puzName === undefined ? null : (\n                  <Link\n                    to={{\n                      pathname: `../prep/${puzName}`,\n                      search: searchParams.toString(),\n                    }}\n                  >\n                    <button>Back</button>\n                  </Link>\n                )}\n                <div>\n                  <b>Note to postsolvers:</b> During the hunt, progress on the\n                  mastery tree was gated behind hunt progress. If you’re just\n                  postsolving individual battles, you may force-activate\n                  masteries from the{\" \"}\n                  <a\n                    href=\"#\"\n                    onClick={() => {\n                      setIsMasteryUnlockModalOpen(true);\n                    }}\n                  >\n                    <b>\n                      <Twemoji tag=\"span\">🔓</Twemoji> Mastery Tree Unlocks\n                    </b>{\" \"}\n                    panel\n                  </a>\n                  .\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Presence>\n      <ConfirmModal\n        isOpen={showResetModal}\n        onClose={() => setShowResetModal(false)}\n        title=\"Are you sure?\"\n        onConfirm={() => {\n          sendStep?.({\n            type: MasteryTreeStepType.RESET,\n          });\n        }}\n        confirmLabel=\"Reset\"\n      >\n        This can’t be reversed.\n      </ConfirmModal>\n    </>\n  );\n}\n\nexport default MasteryTreePage;\n","import BattlerImage from \"components/BattlerImage\";\nimport Image from \"components/Image\";\nimport Tooltip from \"components/Tooltip\";\nimport { PuzzleLink } from \"components/Link\";\nimport {\n  MapPosition,\n  PUZ_NAME_INTRO,\n  BATTLE_GROUP_NAME_MOONICK,\n  PUZ_NAME_FINAL_BATTLE,\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_PVP,\n  BATTLE_GROUP_NAME_INSTANCER,\n  WEIRD_BATTLE_GROUPS,\n} from \"engine/puzzles/puzzle-data\";\nimport { GlobalStatePuzzleStats } from \"game-server/global-updates\";\nimport { getBattlerArtPath } from \"images\";\nimport Twemoji from \"react-twemoji\";\nimport \"./Clickable.css\";\n\nexport interface ClickablesProps {\n  clickableId: string;\n  displayName: string;\n  answer?: string;\n  completionText?: string;\n  isMeta: boolean;\n  isBattle: boolean;\n  isCutscene: boolean;\n  isLegendary: boolean;\n  isNew: boolean;\n  isSolved: boolean;\n  mapPos: MapPosition;\n  isAnyRoomActive: boolean;\n  hasAnswer: boolean;\n  linkTargetOverride?: string;\n  battleGroupName: string;\n  stats?: GlobalStatePuzzleStats;\n  icon?: string;\n}\n\nfunction Clickable(props: ClickablesProps) {\n  const {\n    clickableId,\n    displayName,\n    answer,\n    completionText,\n    isMeta,\n    isBattle,\n    isCutscene,\n    isLegendary,\n    isNew,\n    isSolved,\n    mapPos,\n    isAnyRoomActive,\n    battleGroupName,\n    hasAnswer,\n    linkTargetOverride,\n    stats,\n    icon,\n  } = props;\n\n  const [rightIcon, rightTooltip] = (() => {\n    if (isAnyRoomActive) {\n      return [\n        isSolved ? \"🔁\" : \"⏳\",\n        (isCutscene ? \"Cutscene in progress!\" : \"Battle in progress!\") +\n          (isSolved ? \" (replay)\" : \"\"),\n      ];\n    }\n    if (isSolved) return [\"✅️\", \"\"];\n    if (isMeta) return [\"Ⓜ️\", \"Metapuzzle\"];\n    if (isNew && battleGroupName !== BATTLE_GROUP_NAME_INSTANCER)\n      return [\"🆕\", \"\"];\n    if ([\"❗\", \"❓\", \"🤼\", \"🕸️\", \"🌲\"].includes(icon ?? \"\")) return [icon, \"\"];\n    return [\"\", \"\"];\n  })();\n\n  const innerDom = (\n    <>\n      <div\n        id={`clickable-${clickableId}`}\n        className={`map-enemy-battler${\n          battleGroupName === PUZ_NAME_FINAL_BATTLE\n            ? \" map-kero\"\n            : battleGroupName === PUZ_NAME_MASTERY_TREE\n            ? \" map-mastery-tree\"\n            : battleGroupName === PUZ_NAME_PVP\n            ? \" map-pvp\"\n            : \"\"\n        }`}\n        style={{\n          zIndex: battleGroupName === \"infinitely_many_hogs_and_logs\" ? 0 : 1,\n        }}\n      >\n        {WEIRD_BATTLE_GROUPS.includes(battleGroupName) ? (\n          <Image\n            className=\"map-weird-img\"\n            src={getBattlerArtPath(battleGroupName)}\n          />\n        ) : isCutscene && battleGroupName !== PUZ_NAME_INTRO ? (\n          <BattlerImage battleGroupName={\"cutscene\"} />\n        ) : battleGroupName === BATTLE_GROUP_NAME_MOONICK ? (\n          <BattlerImage battleGroupName={\"moonick-clickable\"} />\n        ) : (\n          <BattlerImage battleGroupName={battleGroupName} />\n        )}\n      </div>\n      <div className=\"map-puz-label\">\n        <Twemoji>{icon}</Twemoji>\n        <div className=\"map-puz-title\">\n          <div>{displayName}</div>\n          {answer ? <b>{answer}</b> : null}\n          {completionText ? <b>{completionText}</b> : null}\n          {stats === undefined ||\n          battleGroupName === BATTLE_GROUP_NAME_INSTANCER ? null : (\n            <span>\n              {stats.solveCount}{\" \"}\n              <small>{stats.solveCount === 1 ? \"solve\" : \"solves\"}</small> |{\" \"}\n              {stats.unlockCount}{\" \"}\n              <small>{stats.unlockCount === 1 ? \"unlock\" : \"unlocks\"}</small>\n            </span>\n          )}\n        </div>\n        <Tooltip text={rightTooltip}>\n          <Twemoji>{rightIcon}</Twemoji>\n        </Tooltip>\n      </div>\n    </>\n  );\n\n  return (\n    <div\n      className=\"map-puz\"\n      style={{\n        backgroundColor: \"rgba(0, 255, 0, 0)\",\n        left: `${mapPos.x}vw`,\n        top: `${mapPos.y}vw`,\n      }}\n    >\n      <PuzzleLink\n        battleGroupName={battleGroupName}\n        hasAnswer={hasAnswer}\n        linkTargetOverride={linkTargetOverride}\n      >\n        {innerDom}\n      </PuzzleLink>\n    </div>\n  );\n}\n\nexport default Clickable;\n","import Tooltip from \"components/Tooltip\";\nimport { useState } from \"react\";\nimport { ClickablesProps } from \"./Clickable\";\nimport \"./ClickableSmall.css\";\n\ninterface ClickableSmallProps extends ClickablesProps {\n  windowScrollHeight: number;\n  scrollTo: () => Promise<void>;\n}\n\nfunction ClickableSmall(props: ClickableSmallProps) {\n  const {\n    displayName,\n    isSolved,\n    mapPos,\n    isAnyRoomActive,\n    windowScrollHeight,\n    scrollTo,\n    icon,\n  } = props;\n\n  const [scrolling, setScrolling] = useState(false);\n\n  return (\n    <Tooltip\n      text={scrolling ? undefined : displayName}\n      placement=\"right\"\n      directRef={(props) => (\n        <div\n          className={`minimap-puz ${isSolved ? \"solved\" : \"unsolved\"} ${\n            isAnyRoomActive ? \"active\" : \"\"\n          }`}\n          tabIndex={0}\n          onClick={async () => {\n            setScrolling(true);\n            await scrollTo();\n            setScrolling(false);\n          }}\n          style={{\n            left: `${((mapPos.x - 20) / 60) * 100}%`,\n            top: `${\n              (((mapPos.y / 100) * window.innerWidth -\n                window.innerWidth * 0.5) /\n                (windowScrollHeight - window.innerWidth * 0.5)) *\n              100\n            }%`,\n          }}\n          {...props}\n        >\n          {icon}\n          {/* we want to use text-shadow, so don't: <Twemoji>{icon}</Twemoji> */}\n        </div>\n      )}\n    />\n  );\n}\n\nexport default ClickableSmall;\n","import { useEffect, useRef, useCallback, useLayoutEffect } from \"react\";\nimport {\n  PVP_MASTERY_ID,\n  SOLVE_COUNTS_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport {\n  PUZ_NAME_INTRO,\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_MASTERY_TREE_PROMPT,\n  PUZ_NAME_PVP,\n  WEIRD_BATTLE_GROUPS,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  ClientBattleGroupGlobalState,\n  getCompletionVerb,\n  GlobalStateBattleRoomStatus,\n} from \"game-server/global-updates\";\nimport {\n  useSubscribedTeam,\n  useShouldShowInitMap,\n} from \"stores/ClientGlobalStateStore\";\nimport Clickable, { ClickablesProps } from \"./Clickable\";\nimport ClickableSmall from \"./ClickableSmall\";\nimport \"./MapDisplay.css\";\nimport { getIcon, scrollToPromise } from \"./utils\";\n\nconst INIT_CLICKABLE = {\n  clickableId: PUZ_NAME_INTRO,\n  displayName: \"OPEN THE TREASURE CHEST\",\n  isNew: false,\n  isMeta: false,\n  isBattle: false,\n  isCutscene: false,\n  isLegendary: false,\n  isAnyRoomActive: false,\n  isSolved: false,\n  mapPos: {\n    x: 50,\n    y: 72.39819005,\n  },\n  hasAnswer: false,\n  linkTargetOverride: `/game/cutscene/${PUZ_NAME_INTRO}/start`,\n  battleGroupName: `${PUZ_NAME_INTRO}-initial`,\n  icon: \"❗\",\n};\n\nfunction MapDisplay({\n  windowScrollHeight,\n}: {\n  windowScrollHeight: number | null;\n}) {\n  const minimapScreenRef = useRef<HTMLDivElement>(null);\n  const subscribedTeam = useSubscribedTeam();\n  const shouldShowInitMap = useShouldShowInitMap();\n  const puzzles = subscribedTeam?.puzzles ?? null;\n  const masteries = subscribedTeam?.masteries ?? null;\n  const battleGroups = subscribedTeam?.battleGroups ?? null;\n\n  const isPuzzleStatsEnabled =\n    masteries !== null && masteries[SOLVE_COUNTS_MASTERY_ID].isEnabled;\n  const isPvPEnabled =\n    masteries !== null && masteries[PVP_MASTERY_ID].isEnabled;\n  const isFishMetaUnlocked =\n    puzzles !== null && puzzles[PUZ_NAME_MASTERY_TREE_PROMPT] !== undefined;\n\n  const getClickableState = (\n    battleGroup: ClientBattleGroupGlobalState\n  ): ClickablesProps | undefined => {\n    if (puzzles === null) return undefined;\n\n    const {\n      battleGroupName,\n      displayName,\n      isCutscene = false,\n      isLegendary = false,\n      mapPos,\n      stats,\n    } = battleGroup;\n\n    if (mapPos === undefined) return undefined;\n    if (battleGroupName === PUZ_NAME_PVP && !isPvPEnabled) return undefined;\n    const puzData = puzzles[battleGroupName];\n    // This may become undefined when deleting unlocks.\n    if (puzData === undefined) return undefined;\n\n    const { answer, hasAnswer = false, isNew = false, solveTime } = puzData;\n\n    const isSolved = solveTime !== undefined;\n    const isMasteryTree = battleGroupName === PUZ_NAME_MASTERY_TREE;\n    const isPvP = battleGroupName === PUZ_NAME_PVP;\n    const isBattle = !isMasteryTree && !hasAnswer;\n    const isAnyRoomActive =\n      Object.values(puzzles).find(\n        (puzzle) =>\n          puzzle.battleGroupName === battleGroupName &&\n          puzzle.roomStatus === GlobalStateBattleRoomStatus.ACTIVE\n      ) !== undefined;\n    const icon = getIcon(puzData, battleGroup);\n\n    return {\n      clickableId: battleGroupName,\n      displayName,\n      answer,\n      completionText:\n        !isSolved || answer !== undefined\n          ? undefined\n          : `${getCompletionVerb(battleGroup)}!`,\n      isMeta: isMasteryTree && isFishMetaUnlocked,\n      isBattle,\n      isCutscene,\n      isLegendary,\n      isNew,\n      isSolved,\n      mapPos,\n      isAnyRoomActive,\n      hasAnswer,\n      battleGroupName,\n      stats:\n        isPuzzleStatsEnabled &&\n        !isCutscene &&\n        !isPvP &&\n        !(isMasteryTree && !isFishMetaUnlocked)\n          ? stats\n          : undefined,\n      icon,\n    };\n  };\n\n  const clickableProps = Object.values(battleGroups ?? {})\n    .map(getClickableState)\n    .filter((value): value is ClickablesProps => !!value)\n    .sort((c1, c2) => c1.mapPos.y - c2.mapPos.y);\n\n  const scrollOffset = (clickable: ClickablesProps) =>\n    (clickable.mapPos.y * window.innerWidth) / 100 - window.innerHeight / 2;\n  const scrollToId = useCallback(\n    async (clickableId: string) => {\n      const clickable = clickableProps.find(\n        (obj) => obj.clickableId === clickableId\n      );\n      const clickableElt = document.getElementById(`clickable-${clickableId}`);\n      if (!clickable || !clickableElt) return;\n      await scrollToPromise(scrollOffset(clickable));\n      clickableElt.parentElement?.focus();\n    },\n    [clickableProps]\n  );\n  useEffect(() => {\n    const handler = ({ key }: KeyboardEvent) => {\n      const fudgedOffset = (c: ClickablesProps) =>\n        Math.min(\n          scrollOffset(c),\n          document.body.scrollHeight - window.innerHeight\n        );\n      const finder = {\n        \"`\": (c: ClickablesProps) => fudgedOffset(c) > window.scrollY + 10,\n        \"~\": (c: ClickablesProps) => fudgedOffset(c) < window.scrollY - 10,\n      }[key];\n      if (!finder) return;\n      const unsolved = clickableProps.filter(\n        (clickable) =>\n          !clickable.isSolved &&\n          !WEIRD_BATTLE_GROUPS.includes(clickable.battleGroupName)\n      );\n      if (!unsolved.length) return;\n      if (key === \"~\") unsolved.reverse();\n      const next = unsolved.find(finder) ?? unsolved[0];\n      scrollToId(next.clickableId);\n    };\n    window.addEventListener(\"keypress\", handler);\n    return () => window.removeEventListener(\"keypress\", handler);\n  }, [clickableProps, scrollToId]);\n  useEffect(() => {\n    if (windowScrollHeight === null) return;\n    const handler = () => {\n      if (minimapScreenRef.current) {\n        minimapScreenRef.current.style.top = `${\n          ((window.scrollY - window.innerWidth * 0.5) /\n            (windowScrollHeight - window.innerWidth * 0.5)) *\n          100\n        }%`;\n        minimapScreenRef.current.style.height = `${\n          (window.innerHeight /\n            ((windowScrollHeight ?? 0) - window.innerWidth * 0.5)) *\n          100\n        }%`;\n      }\n    };\n\n    window.addEventListener(\"scroll\", handler, { passive: true });\n    window.addEventListener(\"resize\", handler, { passive: true });\n    handler();\n    return () => {\n      window.removeEventListener(\"scroll\", handler);\n      window.removeEventListener(\"resize\", handler);\n    };\n  }, [windowScrollHeight]);\n  // Scroll preservation is already handled in React; this is specifically for\n  // the case when the user leaves to e.g. a fish puzzle and comes back.\n  useEffect(() => {\n    const handler = () => {\n      if ((windowScrollHeight ?? 0) > window.innerHeight)\n        sessionStorage.mapScroll = window.scrollY;\n    };\n    window.addEventListener(\"scroll\", handler, { passive: true });\n    return () => window.removeEventListener(\"scroll\", handler);\n  }, [windowScrollHeight]);\n  useLayoutEffect(() => {\n    if (\n      window.scrollY === 0 &&\n      sessionStorage.mapScroll &&\n      (windowScrollHeight ?? 0) > window.innerHeight\n    )\n      window.scrollTo(window.scrollX, +sessionStorage.mapScroll);\n  }, [windowScrollHeight]);\n  // This ensures the map doesn't overflow horizontally. Who knows why we have\n  // to do it this way.\n  useEffect(() => {\n    const pageContents = document.querySelector(\n      \".page-contents\"\n    ) as HTMLDivElement;\n    if (!pageContents) return;\n    pageContents.style.height = \"100%\";\n    pageContents.style.overflow = \"hidden\";\n    return () => {\n      pageContents.style.height = \"\";\n      pageContents.style.overflow = \"\";\n    };\n  }, []);\n\n  if (\n    subscribedTeam === null ||\n    puzzles === null ||\n    battleGroups === null ||\n    shouldShowInitMap === null\n  )\n    return null;\n\n  return (\n    <>\n      <div className=\"map\">\n        {shouldShowInitMap ? (\n          <Clickable {...INIT_CLICKABLE} />\n        ) : (\n          clickableProps.map((clickable) => (\n            <Clickable key={clickable.clickableId} {...clickable} />\n          ))\n        )}\n      </div>\n      {shouldShowInitMap || clickableProps.length <= 5 ? null : (\n        <div className=\"minimap\">\n          <div className=\"minimap-background\">\n            <div className=\"minimap-note\">\n              press <kbd>`</kbd> to jump!\n            </div>\n          </div>\n          <div className=\"minimap-screen\" ref={minimapScreenRef} />\n          {windowScrollHeight === null\n            ? null\n            : clickableProps.map((clickable) => (\n                <ClickableSmall\n                  key={clickable.clickableId}\n                  {...clickable}\n                  windowScrollHeight={windowScrollHeight}\n                  scrollTo={() => scrollToId(clickable.clickableId)}\n                />\n              ))}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default MapDisplay;\n","import Image from \"components/Image\";\nimport { getMapBgArtPath, getMapBgSliceArtPaths } from \"images\";\nimport \"./ParallaxBackground.css\";\n\nfunction ParallaxBackground({\n  isTitleRevealed,\n  scrollHeight,\n}: {\n  isTitleRevealed: boolean;\n  scrollHeight: number | null;\n}) {\n  if (scrollHeight === null) return null;\n  const sliceHeight = window.innerWidth / 2; // slices have a 2:1 ratio\n  const sliceBg = (path: string) =>\n    getMapBgSliceArtPaths(path)\n      .slice(0, Math.ceil(scrollHeight / sliceHeight))\n      .map((src, i) => (\n        <Image\n          className=\"layer\"\n          src={src}\n          key={i}\n          style={{ top: i * 50 + \"vw\" }}\n        />\n      ));\n  return (\n    <>\n      <div className=\"fg\" style={{ height: scrollHeight + \"px\" }}>\n        {isTitleRevealed ? sliceBg(\"islands\") : null}\n      </div>\n      <div className=\"bg\" style={{ height: scrollHeight + \"px\" }}>\n        {sliceBg(\"2-cave-full\")}\n        <h1 className=\"title\">Galactic Puzzle Hunt 2023</h1>\n        {isTitleRevealed ? (\n          <Image\n            className=\"gcc-new\"\n            src={getMapBgArtPath(\"galacticardcaptors.png\")}\n          />\n        ) : (\n          <Image\n            className=\"gcc\"\n            src={getMapBgArtPath(\"galacticosmicave.png\")}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ParallaxBackground;\n","import { useEffect, useRef, useState } from \"react\";\nimport Twemoji from \"react-twemoji\";\n\nimport { RoutedLink } from \"components/Link\";\nimport MapDisplay, { ParallaxBackground } from \"components/MapDisplay\";\nimport {\n  NUM_LEGENDARIES,\n  PUZ_NAME_FINAL_BATTLE,\n  PUZ_NAME_PRE_FINAL_BATTLE,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  useSubscribedTeam,\n  useShouldShowInitMap,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport \"./MapPage.css\";\nimport { Spinner } from \"components/Loading\";\nimport settings from \"settings\";\n\nfunction MapPage() {\n  const [scrollHeight, setScrollHeight] = useState<number | null>(null);\n  const [footerHeight, setFooterHeight] = useState<number | null>(180);\n  const contentElemRef = useRef<HTMLDivElement>(null);\n  const footerElemRef = useRef<HTMLDivElement>(null);\n\n  const subscribedTeam = useSubscribedTeam();\n  const shouldShowInitMap = useShouldShowInitMap();\n  const puzzles = subscribedTeam?.puzzles ?? null;\n  const battleGroups = subscribedTeam?.battleGroups ?? null;\n\n  const { djangoBaseUrl } = settings;\n\n  useEffect(() => {\n    const footerElem = footerElemRef.current;\n    if (footerElem === null) return;\n\n    const fixHeight = () => {\n      setFooterHeight(footerElem.offsetHeight);\n    };\n\n    const resizeObserver = new ResizeObserver(fixHeight);\n    resizeObserver.observe(footerElem);\n    fixHeight();\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  });\n\n  useEffect(() => {\n    if (puzzles === null || battleGroups === null) return;\n\n    const contentElem = contentElemRef.current;\n    if (contentElem === null) return;\n\n    const fixHeight = () => {\n      setScrollHeight(\n        ([...document.querySelectorAll(\".map-puz\")] as HTMLDivElement[])\n          .map((elem) => elem.offsetTop + elem.offsetHeight)\n          .reduce((a, b) => Math.max(a, b), 0) + (footerHeight ?? 0)\n      );\n    };\n\n    const resizeObserver = new ResizeObserver(fixHeight);\n    resizeObserver.observe(contentElem);\n    fixHeight();\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [\n    footerHeight,\n    // We need these dependencies on puzzles/battle groups, since\n    // they cause the rendered .map-puz elements to change.\n    puzzles,\n    battleGroups,\n  ]);\n\n  // If a subscription is made invalid due to a puzzle getting set locked,\n  // the solver will be redirected to the map page. Clear such problematic\n  // subscriptions to prevent further errors.\n  const {\n    subscribedTeamBattle: subscribedTeamBattleSelection,\n    setSubscribedTeamBattle,\n    subscribedTeamFishPuzzle: subscribedTeamFishPuzzleSelection,\n    setSubscribedTeamFishPuzzle,\n  } = useGlobalSubscriptionStore();\n  useEffect(() => {\n    if (subscribedTeam === null) return;\n    if (\n      subscribedTeamBattleSelection !== null &&\n      subscribedTeam.puzzles[subscribedTeamBattleSelection.puzName] ===\n        undefined\n    )\n      setSubscribedTeamBattle(null);\n    if (\n      subscribedTeamFishPuzzleSelection !== null &&\n      subscribedTeam.puzzles[subscribedTeamFishPuzzleSelection.puzName] ===\n        undefined\n    )\n      setSubscribedTeamFishPuzzle(null);\n  }, [\n    subscribedTeam,\n    subscribedTeamBattleSelection,\n    subscribedTeamFishPuzzleSelection,\n    setSubscribedTeamBattle,\n    setSubscribedTeamFishPuzzle,\n  ]);\n\n  if (\n    subscribedTeam === null ||\n    puzzles === null ||\n    battleGroups === null ||\n    shouldShowInitMap === null\n  )\n    return <Spinner size={128} />;\n\n  const numLegendariesBefriended = Object.values(puzzles).filter(\n    ({ puzName, solveTime }) =>\n      solveTime !== undefined && (battleGroups[puzName]?.isLegendary ?? false)\n  ).length;\n  const numLegendaryBattlesUnlocked = Object.values(puzzles).filter(\n    ({ puzName }) => battleGroups[puzName]?.isLegendary ?? false\n  ).length;\n  const isFinalBattleUnlocked = puzzles[PUZ_NAME_FINAL_BATTLE] !== undefined;\n  const isPreFinalBattleUnlocked =\n    puzzles[PUZ_NAME_PRE_FINAL_BATTLE] !== undefined;\n\n  const HUNT_CLOSE_DATE = new Date(\"2024-01-01T11:11:00+11:00\");\n  // format as F j, Y \\a\\t g:i A T to user locale\n  const LOCAL_HUNT_CLOSE_DATE =\n    \"Local time: \" +\n    HUNT_CLOSE_DATE.toLocaleString(undefined, {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n      timeZoneName: \"short\",\n    });\n\n  return (\n    <>\n      <ParallaxBackground\n        isTitleRevealed={!shouldShowInitMap}\n        scrollHeight={scrollHeight}\n      />\n      <div\n        className=\"map-root\"\n        style={{\n          height: scrollHeight === null ? undefined : `${scrollHeight}px`,\n        }}\n        ref={contentElemRef}\n      >\n        {settings.isPosthunt ? (\n          <>\n            <div className=\"map-notice\">\n              <div>\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                    color: \"#f86\",\n                  }}\n                >\n                  <Twemoji tag=\"span\">⚠️</Twemoji> Note to new visitors and\n                  postsolvers:\n                </span>{\" \"}\n                The <RoutedLink path=\"/game/unlock\">unlock gadget</RoutedLink>{\" \"}\n                is now available. Use it to reset the website state and simulate\n                hunt progress.\n              </div>\n              <div>\n                If you’re unfamiliar with the premise of this hunt, we highly\n                recommend using the gadget to start the hunt from the beginning.\n                Much of this hunt is designed to be experienced in tandem with\n                hunt progress, rather than as independent puzzles.\n              </div>\n            </div>\n          </>\n        ) : null}\n        <div className=\"map-notice\">\n          <div>\n            {settings.isPosthunt ? (\n              \"Galactic Puzzle Hunt 2023 has come to a close. Thanks for puzzling with us!\"\n            ) : (\n              <>\n                The Galactic Puzzle Hunt is now over, but you can still register\n                and progress through the hunt until{\" \"}\n                <time\n                  dateTime=\"2024-01-01T11:11:00+11:00\"\n                  data-format=\"F j, Y \\a\\t g:i A T\"\n                  title={LOCAL_HUNT_CLOSE_DATE}\n                >\n                  December 31, 2023 at 7:11 PM EST\n                </time>\n                .\n              </>\n            )}\n          </div>\n          <div>\n            Please fill out our{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://forms.gle/rCDjii8iMwSRhv5KA\"\n            >\n              feedback form\n            </a>{\" \"}\n            and check out our{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`${djangoBaseUrl}wrapup`}\n            >\n              wrap-up\n            </a>\n            !\n          </div>\n          <div>\n            If you enjoyed our hunt, please consider{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`${djangoBaseUrl}donate`}\n            >\n              donating\n            </a>\n            .\n            <br />\n            <b>\n              If you&rsquo;d like to hear from us about future events, please\n              join our{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://groups.google.com/g/galacticpuzzlehunt\"\n              >\n                interest list\n              </a>\n              .\n            </b>\n          </div>\n        </div>\n        <MapDisplay\n          windowScrollHeight={\n            // Account for the height of the navbar.\n            (scrollHeight ?? 0) + 50\n          }\n        />\n      </div>\n      <div\n        className=\"map-footer\"\n        style={{\n          // Offset lower by 1px to get around pixel rounding issues.\n          top: `${(scrollHeight ?? 0) - (footerHeight ?? 0) + 1}px`,\n        }}\n        ref={footerElemRef}\n      >\n        {numLegendaryBattlesUnlocked === NUM_LEGENDARIES &&\n        !isPreFinalBattleUnlocked ? (\n          <div className=\"map-footer-text\">\n            <div className=\"map-footer-num-legendaries\">\n              {numLegendariesBefriended} / {NUM_LEGENDARIES} legendaries\n              befriended.\n            </div>\n            <div>Befriend all the legendaries to enter the water!</div>\n          </div>\n        ) : null}\n        <div className=\"map-shadow\" />\n      </div>\n    </>\n  );\n}\n\nexport default MapPage;\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./AdminPage.css\";\n\nimport { WSReqType } from \"game-server/ws\";\nimport { getPuzzleStageNumbers } from \"game-server/global-updates\";\nimport {\n  useServerInterfaceController,\n  useTeamId,\n} from \"stores/ServerInteractionStore\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { LargeSpinner } from \"components/Loading\";\n\ninterface AdminPuzzleProps {\n  teamId: string;\n  puzName: string;\n  displayName: string;\n  isSolved: boolean;\n  isUnlocked: boolean;\n  answer?: string;\n}\n\nconst AdminPuzzleDisplay = (props: AdminPuzzleProps) => {\n  const { teamId, puzName, displayName, isSolved, isUnlocked, answer } = props;\n  const solveInputRef = useRef<HTMLInputElement>(null);\n  const serverInterfaceController = useServerInterfaceController();\n\n  // TODO: Make links to the puzzles.\n  const puzLabel = displayName;\n\n  return (\n    <div className=\"admin-puz\" key={puzName}>\n      <div className=\"admin-puz-label\">\n        {puzLabel}\n        {answer === undefined ? null : ` (${answer})`}\n      </div>\n      <div>\n        <button\n          disabled={isSolved || !isUnlocked}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideSolved: { [puzName]: true },\n                },\n              },\n            });\n          }}\n        >\n          Set solved\n        </button>\n      </div>\n      <div>\n        <button\n          disabled={!isSolved}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideSolved: { [puzName]: false },\n                },\n              },\n            });\n          }}\n        >\n          Set unsolved\n        </button>\n      </div>\n      <div className=\"admin-puz-spacer\"></div>\n      <div>\n        <button\n          disabled={isUnlocked}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideUnlocked: { [puzName]: true },\n                },\n              },\n            });\n          }}\n        >\n          Set unlocked\n        </button>\n      </div>\n      <div>\n        <button\n          disabled={!isUnlocked}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideUnlocked: { [puzName]: false },\n                },\n              },\n            });\n          }}\n        >\n          Set locked\n        </button>\n      </div>\n      <div>(dev only)</div>\n    </div>\n  );\n};\n\ninterface AdminCardProps {\n  teamId: string;\n  cardName: string;\n  displayName: string;\n  isUnlocked: boolean;\n}\n\nconst AdminCardDisplay = (props: AdminCardProps) => {\n  const { teamId, cardName, displayName, isUnlocked } = props;\n  const serverInterfaceController = useServerInterfaceController();\n\n  return (\n    <div className=\"admin-puz\" key={cardName}>\n      <div className=\"admin-puz-label\">{displayName}</div>\n      <div>\n        <button\n          disabled={isUnlocked}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideCardUnlocked: { [cardName]: true },\n                },\n              },\n            });\n          }}\n        >\n          Set unlocked\n        </button>\n      </div>\n      <div>\n        <button\n          disabled={!isUnlocked}\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideCardUnlocked: { [cardName]: false },\n                },\n              },\n            });\n          }}\n        >\n          Set locked\n        </button>\n      </div>\n      <div>(dev only)</div>\n    </div>\n  );\n};\n\nfunction TeamAdminDisplay() {\n  const [displayNameInput, setDisplayNameInput] = useState(\"\");\n  const { subscribedTeamId } = useGlobalSubscriptionStore();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const puzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const battleGroups = useClientGlobalStateStore(\n    (state) => state.globalState.battleGroups\n  );\n  const subscribedTeam = useSubscribedTeam(subscribedTeamId);\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const serverInterfaceController = useServerInterfaceController();\n  const displayName =\n    subscribedTeam === null ||\n    teamAdminData[subscribedTeam.teamId] === undefined\n      ? \"\"\n      : teamAdminData[subscribedTeam.teamId].displayName;\n\n  useEffect(() => {\n    if (displayName === null) return;\n    // Keep the display name input in sync if the display name\n    // changes due to external sources.\n    setDisplayNameInput(displayName);\n  }, [displayName, setDisplayNameInput]);\n\n  if (\n    subscribedTeam === null ||\n    Object.keys(puzzles).length === 0 ||\n    teamAdminData[subscribedTeam.teamId] === undefined ||\n    displayName === null\n  )\n    return <LargeSpinner />;\n\n  const { teamId, puzzles: unlockedPuzzles, cardUnlocks } = subscribedTeam;\n  const { isHidden, isInactive, isTempBlocked } = teamAdminData[teamId];\n  const stageNumbers = getPuzzleStageNumbers(puzzles, battleGroups);\n  const puzzlesDom = Object.values(puzzles)\n    .sort((puz1, puz2) => puz1.order - puz2.order)\n    .map(({ puzName, battleGroupName }) => {\n      const unlockedPuzzle = unlockedPuzzles[puzName];\n      const stageNum = stageNumbers[puzName];\n      const battleGroupDisplayName = battleGroups[battleGroupName].displayName;\n      const displayName =\n        stageNum === 0\n          ? battleGroupDisplayName\n          : `${battleGroupDisplayName}, Stage ${stageNum}`;\n      return (\n        <AdminPuzzleDisplay\n          key={puzName}\n          teamId={teamId}\n          puzName={puzName}\n          displayName={displayName}\n          isSolved={unlockedPuzzle?.solveTime !== undefined}\n          isUnlocked={unlockedPuzzle !== undefined}\n          answer={unlockedPuzzle?.answer}\n        />\n      );\n    });\n  const cardsDom = Object.keys(cardsDB)\n    .filter((cardName) => cardsDB[cardName].cardUnlockGroupId !== null)\n    .sort()\n    .map((cardName) => {\n      return (\n        <AdminCardDisplay\n          key={cardName}\n          teamId={teamId}\n          cardName={cardName}\n          displayName={cardsDB[cardName].displayName}\n          isUnlocked={cardUnlocks[cardName] !== undefined}\n        />\n      );\n    });\n  const setDisplayNameFromInput = () => {\n    if (displayNameInput === displayName) return;\n    serverInterfaceController.sendReq({\n      type: WSReqType.ADMIN_MODIFY,\n      teams: {\n        [teamId]: {\n          displayName: displayNameInput,\n        },\n      },\n    });\n  };\n  return (\n    <>\n      <div className=\"admin-header\">\n        <div className=\"admin-selected-team-name\">\n          <div className=\"admin-selected-team-name-label\">Team name:</div>\n          <div>\n            <input\n              className=\"admin-team-name-input\"\n              type=\"text\"\n              value={displayNameInput}\n              onChange={(e) => {\n                setDisplayNameInput(e.target.value);\n              }}\n              onBlur={() => {\n                setDisplayNameFromInput();\n              }}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  setDisplayNameFromInput();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"admin-header-checkboxes\">\n          <div className=\"admin-checkbox-control\">\n            <input\n              type=\"checkbox\"\n              id=\"is-team-hidden-checkbox\"\n              defaultChecked={isHidden}\n              onChange={(e) => {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.ADMIN_MODIFY,\n                  teams: {\n                    [teamId]: {\n                      isHidden: e.target.checked,\n                    },\n                  },\n                });\n              }}\n            />{\" \"}\n            <label htmlFor=\"is-team-hidden-checkbox\">Is Hidden</label>\n          </div>\n          <div className=\"admin-checkbox-control\">\n            <input\n              type=\"checkbox\"\n              id=\"is-team-inactive-checkbox\"\n              defaultChecked={isInactive}\n              onChange={(e) => {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.ADMIN_MODIFY,\n                  teams: {\n                    [teamId]: {\n                      isInactive: e.target.checked,\n                    },\n                  },\n                });\n              }}\n            />{\" \"}\n            <label htmlFor=\"is-team-inactive-checkbox\">Is Inactive</label>\n          </div>\n          <div className=\"admin-checkbox-control\">\n            <input\n              type=\"checkbox\"\n              id=\"is-team-temporarily-blocked-checkbox\"\n              defaultChecked={isTempBlocked}\n              onChange={(e) => {\n                serverInterfaceController.sendReq({\n                  type: WSReqType.ADMIN_MODIFY,\n                  teams: {\n                    [teamId]: {\n                      isTempBlocked: e.target.checked,\n                    },\n                  },\n                });\n              }}\n            />{\" \"}\n            <label htmlFor=\"is-team-temporarily-blocked-checkbox\">\n              Is Temporarily Blocked\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"admin-header-spacer\" />\n      <div className=\"admin-puzzles\">\n        {puzzlesDom}\n        {cardsDom}\n      </div>\n    </>\n  );\n}\n\nfunction AdminPage() {\n  const serverInterfaceController = useServerInterfaceController();\n  const selfTeamId = useTeamId();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const teams = useClientGlobalStateStore((state) => state.globalState.teams);\n  const {\n    subscribedTeamId,\n    setSubscribedTeamId,\n    setNeedAdmin,\n    setNeedTeamList,\n  } = useGlobalSubscriptionStore();\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    setNeedAdmin(true);\n  }, [setNeedAdmin]);\n\n  useEffect(() => {\n    setNeedTeamList(true);\n    // Don't unset on unmount to prevent extraneous OVERRIDE_STATEs.\n    // We don't have unsubscribe anyway so unsetting is strictly worse.\n  }, [setNeedTeamList]);\n\n  useEffect(() => {\n    // We use cross-team subscriptions to check out team state.\n    // Reset the subscribed team ID to the real team when leaving the page.\n    return () => {\n      setSubscribedTeamId(selfTeamId);\n    };\n  }, [setSubscribedTeamId, selfTeamId]);\n\n  if (Object.keys(teamAdminData).length === 0) return <LargeSpinner />;\n\n  const teamsDom = Object.keys(teamAdminData)\n    .filter((teamId) => {\n      const teamData = teamAdminData[teamId];\n      return teamData.displayName.toLowerCase().indexOf(searchText.trim()) >= 0;\n    })\n    .sort()\n    .map((teamId) => {\n      const teamData = teamAdminData[teamId];\n      const isSelected =\n        subscribedTeamId !== null && subscribedTeamId === teamId;\n      return (\n        <div key={teamId}>\n          <button\n            className={`admin-team-btn${isSelected ? \" highlight\" : \"\"}`}\n            onClick={() => {\n              setSubscribedTeamId(teamId);\n            }}\n          >\n            {teamData.displayName}\n          </button>\n        </div>\n      );\n    });\n\n  return (\n    <div className=\"below-nav\">\n      <div className=\"admin-root\">\n        <div className=\"admin-sidebar\">\n          <div className=\"admin-teams\">\n            <input\n              type=\"text\"\n              className=\"admin-team-search-input\"\n              onChange={(e) => {\n                setSearchText(e.target.value.toLowerCase().trim());\n              }}\n            />\n            {teamsDom}\n          </div>\n        </div>\n        <div className=\"admin-main\">\n          <TeamAdminDisplay />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import { useEffect, useState, ReactNode, memo } from \"react\";\nimport Twemoji from \"react-twemoji\";\nimport {\n  useFloating,\n  useHover,\n  useInteractions,\n  offset,\n} from \"@floating-ui/react\";\nimport \"./BigBoardPage.css\";\n\nimport settings from \"settings\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport {\n  makeStaticInspector,\n  useStaticInspector,\n} from \"stores/ClientGameStore\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n} from \"stores/ClientGlobalStateStore\";\nimport {\n  useIsAdmin,\n  useServerInterfaceController,\n} from \"stores/ServerInteractionStore\";\nimport {\n  BigBoardSortOrder,\n  useBigBoardPreferencesStore,\n} from \"stores/UserPreferencesStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { useNavStore } from \"stores/NavStore\";\nimport { NUM_DECK_SLOTS } from \"engine/types/decks\";\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_MASTERY_TREE_PROMPT,\n  PUZ_NAME_PVP,\n  PUZ_NAME_FINAL_BATTLE,\n  BATTLE_GROUP_NAME_INSTANCER,\n  BATTLE_GROUP_NAME_MASTERY_TREE,\n  PuzzleData,\n  BattleGroupData,\n  isUsedForSolveCount,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  GlobalUpdatesScopeType,\n  getPuzzleStageNumbers,\n  speedrunTimeToString,\n} from \"game-server/global-updates\";\nimport {\n  DirtyStateType,\n  DirtyState,\n  ServerDirtyState,\n  getIntervalMetricsSummaryString,\n  BigBoardTeamPuzzleState,\n  TeamSummaryState,\n} from \"game-server/monitoring\";\n\nimport { LargeSpinner } from \"components/Loading\";\nimport { useSortedTeams } from \"components/HuntLib/TeamListDisplay\";\nimport { PuzzleLink } from \"components/Link\";\nimport TeamDisplayNameDisplay from \"components/TeamDisplayNameDisplay\";\nimport Tooltip from \"components/Tooltip\";\n\nconst FAST_SYNC_DANGER_THRESHOLD = 10 * 1000; // 10s\nconst SLOW_SYNC_DANGER_THRESHOLD = 5 * 60 * 1000; // 5min\n\ntype BigBoardColumnData = {\n  colKey: string;\n  displayName: string;\n  shortName?: string;\n  emoji?: string;\n  puzzleLink?: {\n    battleGroupName: string;\n    hasAnswer: boolean;\n  };\n};\n\nconst makeShortName = (displayName: string) => {\n  if (displayName.startsWith(\"PvP\")) return \"PvP\";\n  if (displayName.startsWith(\"Make Your Own\")) return \"MYO\";\n  if (displayName.startsWith(\"Bovine Social Media\")) return \"BSM\";\n  if (displayName.startsWith(\"Console-ation\")) return \"CP\";\n  displayName = displayName.replace(\"(and Logs)\", \"\");\n  const ret = [];\n  let isLastAlpha = false;\n  for (const c of displayName) {\n    if (c === \"'\") continue;\n    const isAlpha = c.match(/^[a-zA-Z]$/) !== null;\n    if (isAlpha ? !isLastAlpha : c !== \" \") ret.push(c);\n    isLastAlpha = isAlpha;\n  }\n  if (ret.length >= 7) return `${ret.slice(0, 4).join(\"\")}...`;\n  else return ret.join(\"\");\n};\n\nconst getDirtyStateEmoji = (dirtyStateType: DirtyStateType): string => {\n  switch (dirtyStateType) {\n    case DirtyStateType.NEW:\n      return \" \";\n    case DirtyStateType.DIRTY:\n      return \"⚠️\";\n    case DirtyStateType.SYNCING:\n      return \"⏳\";\n    case DirtyStateType.FAILED:\n      return \"💥\";\n    case DirtyStateType.SYNCED:\n      return \"✅\";\n  }\n};\n\nconst getPuzzleDisplayName = (\n  puzName: string,\n  battleGroupName: string,\n  battleGroups: { [battleGroupName: string]: BattleGroupData },\n  stageNumbers: { [puzName: string]: number }\n): string => {\n  const { displayName } = battleGroups[battleGroupName];\n  const stageNum = stageNumbers[puzName];\n  return stageNum === 0 ? displayName : `${displayName} ${stageNum}`;\n};\n\nconst makePuzColData = (\n  puzzle: PuzzleData,\n  battleGroups: { [battleGroupName: string]: BattleGroupData },\n  stageNumbers: { [puzName: string]: number },\n  reactKeyPrefix?: string\n): BigBoardColumnData => {\n  const { puzName, battleGroupName, answer } = puzzle;\n  return {\n    colKey: `${reactKeyPrefix ?? \"puz\"}-${puzName}`,\n    displayName: getPuzzleDisplayName(\n      puzName,\n      battleGroupName,\n      battleGroups,\n      stageNumbers\n    ),\n    emoji: battleGroups[battleGroupName].emoji,\n    puzzleLink: {\n      battleGroupName,\n      hasAnswer: answer !== null,\n    },\n  };\n};\n\nconst makePuzListColData = (\n  puzzles: PuzzleData[],\n  battleGroups: { [battleGroupName: string]: BattleGroupData },\n  stageNumbers: { [puzName: string]: number },\n  reactKeyPrefix?: string\n): BigBoardColumnData[] => {\n  return puzzles.map((puzzle) =>\n    makePuzColData(puzzle, battleGroups, stageNumbers, reactKeyPrefix)\n  );\n};\n\nconst makeBigBoardColGroup = (cols: BigBoardColumnData[]) => {\n  return cols.map((colData, i) => (\n    <col\n      key={colData.colKey}\n      className={`${i === cols.length - 1 ? \"big-board-group-end\" : \"\"}`}\n    />\n  ));\n};\n\nfunction TeamListTeamName({ teamId }: { teamId: string }) {\n  const teams = useClientGlobalStateStore((state) => state.globalState.teams);\n  return <TeamDisplayNameDisplay teamData={teams[teamId]} />;\n}\n\nfunction BigBoardCheckboxOption({\n  elemId,\n  desc,\n  state,\n  onChange,\n}: {\n  elemId: string;\n  desc: string;\n  state: boolean;\n  onChange: (newState: boolean) => void;\n}) {\n  return (\n    <div className=\"big-board-checkbox-option\">\n      <input\n        type=\"checkbox\"\n        id={elemId}\n        defaultChecked={state}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      />{\" \"}\n      <label htmlFor={elemId}>{desc}</label>\n    </div>\n  );\n}\n\nfunction BigBoardTeamSearch() {\n  const setBigBoardTeamFilter = useNavStore(\n    (state) => state.setBigBoardTeamFilter\n  );\n  return (\n    <div className=\"big-board-team-search\">\n      <Twemoji>🔍</Twemoji>{\" \"}\n      <input\n        placeholder=\"Filter teams...\"\n        onChange={(e) =>\n          setBigBoardTeamFilter(e.target.value.toLowerCase().trim())\n        }\n      />\n    </div>\n  );\n}\n\nfunction BigBoardPageSelection() {\n  const numTeamsPerPage = useBigBoardPreferencesStore(\n    (state) => state.numTeamsPerPage\n  );\n  const setNumTeamsPerPage = useBigBoardPreferencesStore(\n    (state) => state.setNumTeamsPerPage\n  );\n  const pageNum = useBigBoardPreferencesStore((state) => state.pageNum);\n  const setPageNum = useBigBoardPreferencesStore((state) => state.setPageNum);\n  const [numTeamsPerPageInput, setNumTeamsPerPageInput] = useState(\n    numTeamsPerPage.toString()\n  );\n  const [pageNumInput, setPageNumInput] = useState((pageNum + 1).toString());\n  const teams = useClientGlobalStateStore((state) => state.globalState.teams);\n  const numTeams = Object.keys(teams).length;\n  const maxPageNum = Math.ceil(numTeams / numTeamsPerPage) - 1;\n\n  const setPageNumAndInput = (num: number) => {\n    const clampedNum = Math.min(Math.max(0, num), maxPageNum);\n    setPageNum(clampedNum);\n    setPageNumInput((clampedNum + 1).toString());\n  };\n  const setNumTeamsPerPageFromInput = () => {\n    const parsed = parseInt(numTeamsPerPageInput);\n    if (Number.isInteger(parsed) && parsed >= 0) {\n      setNumTeamsPerPage(parsed);\n      const newMaxPageNum = Math.ceil(numTeams / parsed) - 1;\n      if (pageNum > newMaxPageNum) setPageNumAndInput(newMaxPageNum);\n    }\n  };\n  const setPageNumFromInput = () => {\n    const parsed = parseInt(pageNumInput);\n    if (Number.isInteger(parsed) && parsed >= 0 && parsed <= maxPageNum) {\n      setPageNum(parsed - 1);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          className=\"big-board-num-teams-per-page-input\"\n          type=\"text\"\n          inputMode=\"numeric\"\n          value={numTeamsPerPageInput}\n          onChange={(e) => {\n            setNumTeamsPerPageInput(e.target.value);\n          }}\n          onBlur={() => {\n            setNumTeamsPerPageFromInput();\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              setNumTeamsPerPageFromInput();\n            }\n          }}\n        />{\" \"}\n        / page\n      </div>\n      <div className=\"big-board-page-num-buttons\">\n        <div className=\"big-board-page-num-button\">\n          <a href=\"#\" onClick={() => setPageNumAndInput(0)}>\n            «\n          </a>\n        </div>\n        <div className=\"big-board-page-num-button\">\n          <a href=\"#\" onClick={() => setPageNumAndInput(pageNum - 1)}>\n            ‹\n          </a>\n        </div>\n        <div>\n          <input\n            className=\"big-board-page-num-input\"\n            type=\"text\"\n            inputMode=\"numeric\"\n            value={pageNumInput}\n            onChange={(e) => {\n              setPageNumInput(e.target.value);\n            }}\n            onBlur={() => {\n              setPageNumFromInput();\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                setPageNumFromInput();\n              }\n            }}\n          />\n        </div>\n        <div className=\"big-board-page-num-button\">\n          <a href=\"#\" onClick={() => setPageNumAndInput(pageNum + 1)}>\n            ›\n          </a>\n        </div>\n        <div className=\"big-board-page-num-button\">\n          <a href=\"#\" onClick={() => setPageNumAndInput(maxPageNum)}>\n            »\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction BigBoardHeader({\n  colData,\n  isActive,\n  spectateLink,\n}: {\n  colData: BigBoardColumnData;\n  isActive?: boolean;\n  spectateLink?: string;\n}) {\n  const useEmojiHeaders = useBigBoardPreferencesStore(\n    (state) => state.useEmojiHeaders\n  );\n  const { colKey, displayName, shortName, emoji, puzzleLink } = colData;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const { refs, floatingStyles, context } = useFloating({\n    open: showTooltip,\n    onOpenChange: setShowTooltip,\n    middleware: [offset(-8)],\n  });\n  const hover = useHover(context);\n  const { getReferenceProps, getFloatingProps } = useInteractions([hover]);\n  const linkChildren = (\n    <>\n      {useEmojiHeaders && emoji !== undefined && emoji !== \"\"\n        ? emoji\n        : shortName ?? makeShortName(displayName)}\n      {!isActive || spectateLink === undefined ? null : (\n        <a href={spectateLink} target=\"_blank\" rel=\"noreferrer\">\n          👁️\n        </a>\n      )}\n    </>\n  );\n  return (\n    <th key={colKey} className={isActive ?? false ? \"big-board-active\" : \"\"}>\n      <div\n        className=\"puzzle-title-header-link\"\n        ref={refs.setReference}\n        {...getReferenceProps()}\n      >\n        {puzzleLink === undefined ? (\n          linkChildren\n        ) : (\n          <PuzzleLink\n            battleGroupName={puzzleLink.battleGroupName}\n            hasAnswer={puzzleLink.hasAnswer}\n          >\n            {linkChildren}\n          </PuzzleLink>\n        )}\n      </div>\n      {showTooltip && (\n        <div\n          className=\"puzzle-title-header-tooltip\"\n          ref={refs.setFloating}\n          style={floatingStyles}\n          {...getFloatingProps()}\n        >\n          {displayName}\n        </div>\n      )}\n    </th>\n  );\n}\n\nconst isDirtyStateSyncTimeSignificant = (\n  dirtyStateType: DirtyStateType\n): boolean => {\n  return ![DirtyStateType.NEW, DirtyStateType.SYNCED].includes(dirtyStateType);\n};\n\nfunction DirtyStateCellNoMemo({\n  dirtyState = { type: DirtyStateType.NEW, lastSyncTime: 0 },\n  isSummary = false,\n  isFast = false,\n}: {\n  dirtyState?: DirtyState;\n  isSummary?: boolean;\n  isFast?: boolean;\n}) {\n  const emoji = getDirtyStateEmoji(dirtyState.type);\n  const timeSinceSync = Date.now() - dirtyState.lastSyncTime;\n  const showTime = isDirtyStateSyncTimeSignificant(dirtyState.type);\n  const isDangerous =\n    showTime &&\n    timeSinceSync >\n      (isFast ? FAST_SYNC_DANGER_THRESHOLD : SLOW_SYNC_DANGER_THRESHOLD);\n  return (\n    <td\n      className={`big-board-dirty-state-cell${isSummary ? \" summary\" : \"\"}${\n        isDangerous ? \" danger\" : \"\"\n      }`}\n      title={\n        showTime\n          ? `Last sync: ${speedrunTimeToString(timeSinceSync, true)} ago`\n          : undefined\n      }\n    >\n      {emoji}\n    </td>\n  );\n}\nconst DirtyStateCell = memo(DirtyStateCellNoMemo);\n\nfunction IntervalMetricsCell({\n  numPerSecond,\n  isSummary = false,\n}: {\n  numPerSecond: number;\n  isSummary?: boolean;\n}) {\n  return (\n    <td\n      className={`big-board-interval-metrics-cell${\n        isSummary ? \" summary\" : \"\"\n      }`}\n    >\n      {Math.round(numPerSecond * 10) <= 0 ? null : numPerSecond.toFixed(1)}\n    </td>\n  );\n}\n\nconst useBigBoardPageTeamIds = (\n  showHidden: boolean,\n  sortFunc?: (teamId1: string, teamId2: string) => number\n) => {\n  const bigBoardTeamFilter = useNavStore((state) => state.bigBoardTeamFilter);\n  const sortedTeams = useSortedTeams(null, false, showHidden);\n  const teamIds = sortedTeams\n    .filter(({ displayName }) =>\n      displayName.toLowerCase().includes(bigBoardTeamFilter)\n    )\n    .map(({ teamId }) => teamId);\n  if (sortFunc !== undefined) teamIds.sort(sortFunc);\n  const numTeamsPerPage = useBigBoardPreferencesStore(\n    (state) => state.numTeamsPerPage\n  );\n  const pageNum = useBigBoardPreferencesStore((state) => state.pageNum);\n  return teamIds.slice(\n    pageNum * numTeamsPerPage,\n    (pageNum + 1) * numTeamsPerPage\n  );\n};\n\nconst useSortedFishPuzzles = () => {\n  const puzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  return Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      const { isFullPuzzle, answer } = puzzles[battleGroupName];\n      return isFullPuzzle && answer !== null && puzName === battleGroupName;\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n};\n\ntype NormalizedServerDirtyState = {\n  [teamId: string]: {\n    [colKey: string]: DirtyState | undefined;\n  };\n};\n\nconst getNormalizedDirtyState = (\n  allTeams: TeamSummaryState[],\n  dirtyState: ServerDirtyState\n): NormalizedServerDirtyState => {\n  return Object.fromEntries(\n    allTeams.map(({ teamId }) => {\n      const teamState = dirtyState.teams[teamId];\n      const {\n        fastSync,\n        misc,\n        masteryTree,\n        decks,\n        checkpoints,\n        rooms,\n        answers,\n      } = teamState ?? {};\n      const teamDirtyState: { [colKey: string]: DirtyState | undefined } = {\n        fastSync,\n        misc,\n        masteryTree,\n        ...Object.fromEntries(\n          Object.entries(decks ?? {}).map(([slot, dirtyState]) => [\n            `deck-${slot}`,\n            dirtyState,\n          ])\n        ),\n        ...Object.fromEntries(\n          Object.entries(checkpoints ?? {}).map(([puzName, dirtyState]) => [\n            `checkpoint-${puzName}`,\n            dirtyState,\n          ])\n        ),\n        ...Object.fromEntries(\n          Object.entries(rooms ?? {}).map(([puzName, dirtyState]) => [\n            `puz-${puzName}`,\n            dirtyState,\n          ])\n        ),\n        ...Object.fromEntries(\n          Object.entries(answers ?? {}).map(([puzName, dirtyState]) => [\n            `puz-${puzName}`,\n            dirtyState,\n          ])\n        ),\n      };\n      return [teamId, teamDirtyState];\n    })\n  );\n};\n\nconst updateDirtyStateSummary = (\n  dirtyStateSummary: DirtyState,\n  dirtyState: DirtyState\n): DirtyState => {\n  const dirtyStateTypeSignificanceOrder = [\n    DirtyStateType.NEW,\n    DirtyStateType.SYNCED,\n    DirtyStateType.DIRTY,\n    DirtyStateType.FAILED,\n    DirtyStateType.SYNCING,\n  ];\n  if (\n    dirtyStateTypeSignificanceOrder.indexOf(dirtyState.type) >\n    dirtyStateTypeSignificanceOrder.indexOf(dirtyStateSummary.type)\n  ) {\n    dirtyStateSummary.type = dirtyState.type;\n  }\n  if (\n    isDirtyStateSyncTimeSignificant(dirtyState.type) &&\n    (dirtyStateSummary.lastSyncTime === 0 ||\n      dirtyState.lastSyncTime < dirtyStateSummary.lastSyncTime)\n  ) {\n    dirtyStateSummary.lastSyncTime = dirtyState.lastSyncTime;\n  }\n  return dirtyStateSummary;\n};\n\nconst getDirtyStateMetrics = (\n  normalizedDirtyState: NormalizedServerDirtyState\n) => {\n  const dirtyStateCounts: { [dirtyStateType in DirtyStateType]?: number } = {};\n  const teamDirtyStateSummaries: { [teamId: string]: DirtyState } = {};\n  const colDirtyStateSummaries: { [colKey: string]: DirtyState } = {};\n  for (const [teamId, teamState] of Object.entries(normalizedDirtyState)) {\n    for (const [colKey, dirtyState] of Object.entries(teamState)) {\n      if (dirtyState === undefined) continue;\n      dirtyStateCounts[dirtyState.type] =\n        (dirtyStateCounts[dirtyState.type] ?? 0) + 1;\n      teamDirtyStateSummaries[teamId] = updateDirtyStateSummary(\n        teamDirtyStateSummaries[teamId] ?? {\n          type: DirtyStateType.NEW,\n          lastSyncTime: 0,\n        },\n        dirtyState\n      );\n      colDirtyStateSummaries[colKey] = updateDirtyStateSummary(\n        colDirtyStateSummaries[colKey] ?? {\n          type: DirtyStateType.NEW,\n          lastSyncTime: 0,\n        },\n        dirtyState\n      );\n    }\n  }\n  return {\n    dirtyStateCounts,\n    teamDirtyStateSummaries,\n    colDirtyStateSummaries,\n  };\n};\n\nexport function ServerHealthPage() {\n  const useEmojiHeaders = useBigBoardPreferencesStore(\n    (state) => state.useEmojiHeaders\n  );\n  const setUseEmojiHeaders = useBigBoardPreferencesStore(\n    (state) => state.setUseEmojiHeaders\n  );\n  const sortOrder = useBigBoardPreferencesStore((state) => state.sortOrder);\n  const setSortOrder = useBigBoardPreferencesStore(\n    (state) => state.setSortOrder\n  );\n  const serverInterfaceController = useServerInterfaceController();\n  const { setNeedAdmin, setNeedTeamList } = useGlobalSubscriptionStore();\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const puzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const battleGroups = useClientGlobalStateStore(\n    (state) => state.globalState.battleGroups\n  );\n  const serverHealth = useClientGlobalStateStore(\n    (state) => state.globalState.serverHealth\n  );\n  const stageNumbers = getPuzzleStageNumbers(puzzles, battleGroups);\n  // Include hidden teams for this page as they contribute\n  // to server load too.\n  const allTeams = useSortedTeams(null, false, true);\n  const sortedFishPuzzles = useSortedFishPuzzles();\n  const sortedBattles = Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      const { isFullPuzzle, isCutscene, answer } = puzzles[battleGroupName];\n      const { numPuzzles } = battleGroups[battleGroupName];\n      const stageNum = stageNumbers[puzName];\n      return (\n        puzName === PUZ_NAME_PVP ||\n        (battleGroupName === BATTLE_GROUP_NAME_INSTANCER &&\n          puzName !== battleGroupName) ||\n        ((isFullPuzzle || isCutscene) &&\n          answer === null &&\n          (puzName !== battleGroupName || numPuzzles === 1))\n      );\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n  const sortedCheckpoints = sortedBattles.filter(\n    ({ puzName, battleGroupName }) =>\n      battleGroupName === BATTLE_GROUP_NAME_INSTANCER ||\n      makeStaticInspector(puzName, cardsDB).areCheckpointsAllowed()\n  );\n\n  const normalizedDirtyState =\n    allTeams === null || serverHealth === null\n      ? null\n      : getNormalizedDirtyState(allTeams, serverHealth.dirtyState);\n  const dirtyStateMetrics =\n    normalizedDirtyState === null\n      ? null\n      : getDirtyStateMetrics(normalizedDirtyState);\n  const sortFunc = (() => {\n    if (dirtyStateMetrics === null || serverHealth === null) return null;\n    const { teamDirtyStateSummaries } = dirtyStateMetrics;\n    const { teamNumRequestsMetrics } = serverHealth;\n\n    switch (sortOrder) {\n      case BigBoardSortOrder.LEADERBOARD:\n        return null;\n      case BigBoardSortOrder.HEALTH:\n        return (teamId1: string, teamId2: string) => {\n          const summary1 = teamDirtyStateSummaries[teamId1];\n          const summary2 = teamDirtyStateSummaries[teamId2];\n          const lastSyncTime1 = summary1?.lastSyncTime ?? 0;\n          const lastSyncTime2 = summary2?.lastSyncTime ?? 0;\n          const isDirtyDiff =\n            (lastSyncTime1 > 0 ? 0 : 1) - (lastSyncTime2 > 0 ? 0 : 1);\n          if (isDirtyDiff !== 0) return isDirtyDiff;\n          if (lastSyncTime1 === 0 && lastSyncTime2 === 0) {\n            const hasSync1 =\n              (summary1?.type ?? DirtyStateType.NEW) !== DirtyStateType.NEW;\n            const hasSync2 =\n              (summary2?.type ?? DirtyStateType.NEW) !== DirtyStateType.NEW;\n            return (hasSync1 ? 0 : 1) - (hasSync2 ? 0 : 1);\n          }\n          return lastSyncTime1 - lastSyncTime2;\n        };\n      case BigBoardSortOrder.ACTIVITY:\n        return (teamId1: string, teamId2: string) => {\n          const numPerInterval1 =\n            (teamNumRequestsMetrics[teamId1] ?? {}).numPerInterval ?? 0;\n          const numPerInterval2 =\n            (teamNumRequestsMetrics[teamId2] ?? {}).numPerInterval ?? 0;\n          return numPerInterval2 - numPerInterval1;\n        };\n    }\n  })();\n  const teamIds = useBigBoardPageTeamIds(true, sortFunc ?? undefined);\n\n  useEffect(() => {\n    setNeedAdmin(true);\n  }, [setNeedAdmin]);\n\n  useEffect(() => {\n    setNeedTeamList(true);\n  }, [setNeedTeamList]);\n\n  useEffect(() => {\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.SERVER_HEALTH,\n    });\n  }, [serverInterfaceController]);\n\n  // Check that the SERVER scope has been synced by checking\n  // that puzzles is non-empty.\n  if (\n    serverHealth === null ||\n    Object.keys(puzzles).length === 0 ||\n    normalizedDirtyState === null ||\n    dirtyStateMetrics === null\n  )\n    return <LargeSpinner />;\n\n  const {\n    fastSyncMetrics,\n    slowSyncMetrics,\n    checkAnswerMetrics,\n    fastSyncQueueLength,\n    numAuthsMetrics,\n    numRequestsMetrics,\n    teamNumAuthsMetrics,\n    teamNumRequestsMetrics,\n    numActivePeriodicTasksHandlers,\n    numPendingSubmissionTasks,\n    numCompletedRoomsToSync,\n    teamInitQueueLength,\n    numActiveConns,\n    userTimeUsage,\n    systemTimeUsage,\n    dirtyState,\n  } = serverHealth;\n\n  const { dirtyStateCounts, teamDirtyStateSummaries, colDirtyStateSummaries } =\n    dirtyStateMetrics;\n\n  const getTeamNumAuthsPerSecond = (teamId: string): number => {\n    const metrics = teamNumAuthsMetrics[teamId];\n    if (metrics === undefined) return 0;\n    const { intervalLength, numPerInterval } = metrics;\n    return numPerInterval / (intervalLength / 1000);\n  };\n  const getTeamNumRequestsPerSecond = (teamId: string): number => {\n    const metrics = teamNumRequestsMetrics[teamId];\n    if (metrics === undefined) return 0;\n    const { intervalLength, numPerInterval } = metrics;\n    return numPerInterval / (intervalLength / 1000);\n  };\n  const metricsSummaries = {\n    numAuthsPerSecond: 0,\n    numRequestsPerSecond: 0,\n  };\n  for (const teamId of Object.keys(teamNumAuthsMetrics)) {\n    metricsSummaries.numAuthsPerSecond += getTeamNumAuthsPerSecond(teamId);\n  }\n  for (const teamId of Object.keys(teamNumRequestsMetrics)) {\n    metricsSummaries.numRequestsPerSecond +=\n      getTeamNumRequestsPerSecond(teamId);\n  }\n\n  const deckCols: BigBoardColumnData[] = [];\n  for (let i = 0; i < NUM_DECK_SLOTS; i++) {\n    deckCols.push({ colKey: `deck-${i}`, displayName: `Deck ${i + 1}` });\n  }\n  const roomCols = makePuzListColData(\n    sortedBattles,\n    battleGroups,\n    stageNumbers\n  );\n  const checkpointsCols = makePuzListColData(\n    sortedCheckpoints,\n    battleGroups,\n    stageNumbers,\n    \"checkpoint\"\n  );\n  const answerCols = makePuzListColData(\n    sortedFishPuzzles,\n    battleGroups,\n    stageNumbers\n  );\n  const cols: BigBoardColumnData[] = [\n    { colKey: \"fastSync\", displayName: \"Fast Sync\", shortName: \"Fast\" },\n    { colKey: \"misc\", displayName: \"Misc. state\", shortName: \"Misc\" },\n    {\n      colKey: \"masteryTree\",\n      displayName: \"Mastery Tree\",\n      shortName: \"Mas.\",\n      puzzleLink: {\n        battleGroupName: PUZ_NAME_MASTERY_TREE,\n        hasAnswer: false,\n      },\n    },\n    ...deckCols,\n    ...roomCols,\n    ...checkpointsCols,\n    ...answerCols,\n  ];\n\n  const rowsDom = teamIds.map((teamId) => {\n    const teamState = dirtyState.teams[teamId];\n    const teamNumAuthsPerSecond = getTeamNumAuthsPerSecond(teamId);\n    const teamNumRequestsPerSecond = getTeamNumRequestsPerSecond(teamId);\n    return (\n      <tr key={teamId}>\n        <td>\n          <TeamListTeamName teamId={teamId} />\n        </td>\n        <td>{teamId}</td>\n        <IntervalMetricsCell numPerSecond={teamNumAuthsPerSecond} />\n        <IntervalMetricsCell numPerSecond={teamNumRequestsPerSecond} />\n        <DirtyStateCell\n          isSummary={true}\n          dirtyState={teamDirtyStateSummaries[teamId]}\n        />\n        {cols.map((colData) => (\n          <DirtyStateCell\n            key={colData.colKey}\n            dirtyState={normalizedDirtyState[teamId][colData.colKey]}\n            isFast={colData.colKey === \"fastSync\"}\n          />\n        ))}\n      </tr>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"big-board\">\n        <table>\n          <colgroup>\n            <col />\n            <col />\n            <col />\n            <col />\n            <col />\n            <col />\n            <col />\n            <col className=\"big-board-group-end\" />\n            {makeBigBoardColGroup(deckCols)}\n            {makeBigBoardColGroup(roomCols)}\n            {makeBigBoardColGroup(checkpointsCols)}\n            {makeBigBoardColGroup(answerCols)}\n          </colgroup>\n          <thead>\n            <tr className=\"big-board-header-groups\">\n              <th colSpan={8} />\n              <th colSpan={deckCols.length}>\n                <div className=\"big-board-header-group\">Decks</div>\n              </th>\n              <th colSpan={roomCols.length}>\n                <div className=\"big-board-header-group\">Rooms</div>\n              </th>\n              <th colSpan={checkpointsCols.length}>\n                <div className=\"big-board-header-group\">Checkpoints</div>\n              </th>\n              <th colSpan={answerCols.length}>\n                <div className=\"big-board-header-group\">Answers</div>\n              </th>\n            </tr>\n            <tr>\n              <th>Team</th>\n              <th>ID</th>\n              <th>Auths / s</th>\n              <th>Reqs / s</th>\n              <th>[Summ.]</th>\n              {cols.map((colData) => (\n                <BigBoardHeader key={colData.colKey} colData={colData} />\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>[Summary]</td>\n              <td />\n              <IntervalMetricsCell\n                numPerSecond={metricsSummaries.numAuthsPerSecond}\n                isSummary={true}\n              />\n              <IntervalMetricsCell\n                numPerSecond={metricsSummaries.numRequestsPerSecond}\n                isSummary={true}\n              />\n              <td />\n              {cols.map((colData) => (\n                <DirtyStateCell\n                  key={colData.colKey}\n                  isSummary={true}\n                  dirtyState={colDirtyStateSummaries[colData.colKey]}\n                  isFast={colData.colKey === \"fastSync\"}\n                />\n              ))}\n            </tr>\n            {rowsDom}\n          </tbody>\n        </table>\n        <div className=\"big-board-right-padding\" />\n      </div>\n      <div className=\"health-footer\">\n        <div className=\"health-footer-metrics\">\n          <div>Fast: {getIntervalMetricsSummaryString(fastSyncMetrics)}</div>\n          <div>Slow: {getIntervalMetricsSummaryString(slowSyncMetrics)}</div>\n          <div>Ans: {getIntervalMetricsSummaryString(checkAnswerMetrics)}</div>\n          <div>Auths: {getIntervalMetricsSummaryString(numAuthsMetrics)}</div>\n          <div>Reqs: {getIntervalMetricsSummaryString(numRequestsMetrics)}</div>\n        </div>\n        <div className=\"health-footer-bottom\">\n          <BigBoardTeamSearch />\n          <BigBoardPageSelection />\n          <BigBoardCheckboxOption\n            elemId=\"use-emoji-headers-checkbox\"\n            desc=\"Emoji\"\n            state={useEmojiHeaders}\n            onChange={setUseEmojiHeaders}\n          />\n          <div className=\"big-board-sort-selection\">\n            <label htmlFor=\"big-board-sort-order\">Sort by:</label>\n            <select\n              id=\"big-board-sort-order\"\n              value={sortOrder}\n              onChange={(e) => {\n                setSortOrder(e.target.value as BigBoardSortOrder);\n              }}\n            >\n              {Object.values(BigBoardSortOrder).map((order) => (\n                <option key={order} value={order}>\n                  {order}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"health-footer-counts\">\n            <Tooltip text=\"Dirty objects\">\n              {getDirtyStateEmoji(DirtyStateType.DIRTY)}{\" \"}\n              {dirtyStateCounts[DirtyStateType.DIRTY] ?? 0}\n            </Tooltip>\n            <Tooltip text=\"Objects in sync\">\n              {getDirtyStateEmoji(DirtyStateType.SYNCING)}{\" \"}\n              {dirtyStateCounts[DirtyStateType.SYNCING] ?? 0}\n            </Tooltip>\n            <Tooltip text=\"Failed syncs\">\n              {getDirtyStateEmoji(DirtyStateType.FAILED)}{\" \"}\n              {dirtyStateCounts[DirtyStateType.FAILED] ?? 0}\n            </Tooltip>\n            <Tooltip text=\"Fast sync queue length\">\n              🐇 {fastSyncQueueLength}\n            </Tooltip>\n            <Tooltip text=\"Excess active periodic task handlers\">\n              ⏱️{\" \"}\n              {\n                // There will almost always be one periodic task handler\n                // running, since these metrics are reported by the\n                // periodic task handler. Only report the extra ones.\n                Math.max(numActivePeriodicTasksHandlers - 1, 0)\n              }\n            </Tooltip>\n            <Tooltip text=\"Pending answer submissions\">\n              📞 {numPendingSubmissionTasks}\n            </Tooltip>\n            <Tooltip text=\"Completed rooms pending sync\">\n              🚪 {numCompletedRoomsToSync}\n            </Tooltip>\n            <Tooltip text=\"Pending team inits\">\n              👥 {teamInitQueueLength}\n            </Tooltip>\n            <Tooltip text=\"Active connections\">🔌 {numActiveConns}</Tooltip>\n            <Tooltip text=\"User time\">\n              U: {(userTimeUsage * 100).toFixed(1)}%\n            </Tooltip>\n            <Tooltip text=\"System time\">\n              S: {(systemTimeUsage * 100).toFixed(1)}%\n            </Tooltip>\n            <div className=\"health-footer-bottom-spacer\"></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype BigBoardPuzzleCellContext = {\n  huntEndTime: number;\n  rank?: number;\n  masteryTreeSolveTime?: number;\n  finalBattleSolveTime?: number;\n  isFish: boolean;\n  battleGroupNumMembers?: number;\n  spectateLink?: string;\n};\n\nfunction BigBoardPuzzleCellNoMemo({\n  teamPuzState,\n  huntEndTime,\n  rank,\n  masteryTreeSolveTime,\n  finalBattleSolveTime,\n  isFish,\n  battleGroupNumMembers = 0,\n  spectateLink,\n}: {\n  teamPuzState?: BigBoardTeamPuzzleState;\n} & BigBoardPuzzleCellContext) {\n  const {\n    solveTime,\n    numHintsUsed = 0,\n    numWrongGuesses = 0,\n    numMembers = 0,\n  } = teamPuzState ?? {};\n  const isSolved = solveTime !== undefined;\n  const isUnlocked = teamPuzState !== undefined;\n  const isPostsolved = solveTime !== undefined && solveTime > huntEndTime;\n  const isBacksolved =\n    solveTime !== undefined &&\n    (isFish\n      ? masteryTreeSolveTime !== undefined && solveTime > masteryTreeSolveTime\n      : finalBattleSolveTime !== undefined && solveTime > finalBattleSolveTime);\n  const classes = [\n    ...(isSolved\n      ? [\"big-board-solved\"]\n      : numWrongGuesses > 0\n      ? [\"big-board-wrong\"]\n      : isUnlocked\n      ? [\"big-board-unlocked\"]\n      : []),\n    // Note that this differs from the usual bigboard in that we\n    // also count hints that were asked but not answered.\n    // I don't think it really makes a big difference since if we\n    // don't want a hint to count we'll just refund it soon enough.\n    ...(numHintsUsed > 0 ? [\"big-board-hinted\"] : []),\n    ...(isPostsolved ? [\"big-board-postsolved\"] : []),\n    ...(isBacksolved ? [\"big-board-backsolved\"] : []),\n    ...(numMembers + battleGroupNumMembers > 0 ? [\"big-board-active\"] : []),\n  ];\n  const className = classes.join(\" \");\n  return (\n    <td\n      className={className === \"\" ? undefined : className}\n      title={\n        solveTime === undefined\n          ? undefined\n          : `${isBacksolved ? \"Backsolved\" : \"Solved\"} at ${new Date(\n              solveTime\n            ).toLocaleString()}`\n      }\n    >\n      {rank === undefined ? null : rank + 1}\n      {numWrongGuesses === 0 ? null : <>&minus;{numWrongGuesses}</>}\n      {numHintsUsed === 0 ? null : <small>+{numHintsUsed}</small>}\n      {numMembers === 0 || spectateLink === undefined ? null : (\n        <a href={spectateLink} target=\"_blank\" rel=\"noreferrer\">\n          👁️\n        </a>\n      )}\n    </td>\n  );\n}\nconst BigBoardPuzzleCell = memo(BigBoardPuzzleCellNoMemo);\n\ntype SolveTimeRecord = {\n  teamId: string;\n  solveTime: number;\n};\n\nexport function BigBoardPage() {\n  const useEmojiHeaders = useBigBoardPreferencesStore(\n    (state) => state.useEmojiHeaders\n  );\n  const setUseEmojiHeaders = useBigBoardPreferencesStore(\n    (state) => state.setUseEmojiHeaders\n  );\n  const collapseSubbattles = useBigBoardPreferencesStore(\n    (state) => state.collapseSubbattles\n  );\n  const setCollapseSubbattles = useBigBoardPreferencesStore(\n    (state) => state.setCollapseSubbattles\n  );\n  const showHidden = useBigBoardPreferencesStore((state) => state.showHidden);\n  const setShowHidden = useBigBoardPreferencesStore(\n    (state) => state.setShowHidden\n  );\n  const showCardUnlocks = useBigBoardPreferencesStore(\n    (state) => state.showCardUnlocks\n  );\n  const setShowCardUnlocks = useBigBoardPreferencesStore(\n    (state) => state.setShowCardUnlocks\n  );\n  const bigBoardTeamFilter = useNavStore((state) => state.bigBoardTeamFilter);\n  const serverInterfaceController = useServerInterfaceController();\n  const subscribedTeam = useSubscribedTeam();\n  const { setNeedAdmin, setNeedTeamList } = useGlobalSubscriptionStore();\n  const teams = useClientGlobalStateStore((state) => state.globalState.teams);\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const isAdmin = useIsAdmin() ?? false;\n  const puzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const battleGroups = useClientGlobalStateStore(\n    (state) => state.globalState.battleGroups\n  );\n  const masteries = useClientGlobalStateStore(\n    (state) => state.globalState.masteries\n  );\n  const bigBoard = useClientGlobalStateStore(\n    (state) => state.globalState.bigBoard\n  );\n  const stageNumbers = getPuzzleStageNumbers(puzzles, battleGroups);\n  const teamIds = useBigBoardPageTeamIds(showHidden);\n  const allTeams = useSortedTeams(null, false);\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const inspector = useStaticInspector();\n  const sortedFishPuzzles = useSortedFishPuzzles();\n  const sortedBattles = Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      const { isFullPuzzle, isCutscene, answer } = puzzles[battleGroupName];\n      const { numPuzzles } = battleGroups[battleGroupName];\n      const stageNum = stageNumbers[puzName];\n      return (\n        (isFullPuzzle || puzName === PUZ_NAME_PVP) &&\n        answer === null &&\n        (collapseSubbattles\n          ? puzName === battleGroupName\n          : puzName !== battleGroupName || numPuzzles === 1)\n      );\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n  const sortedCutscenes = Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      const { isCutscene } = puzzles[battleGroupName];\n      return isCutscene;\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n  const sortedInstancers = Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      return (\n        battleGroupName === BATTLE_GROUP_NAME_INSTANCER &&\n        puzName !== battleGroupName\n      );\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n  const sortedMasteries = Object.values(puzzles)\n    .filter(({ puzName, battleGroupName }) => {\n      return (\n        battleGroupName === BATTLE_GROUP_NAME_MASTERY_TREE &&\n        ![\n          BATTLE_GROUP_NAME_MASTERY_TREE,\n          PUZ_NAME_MASTERY_TREE_PROMPT,\n        ].includes(puzName)\n      );\n    })\n    .sort((puz1, puz2) => puz1.order - puz2.order);\n  const sortedCards = Object.keys(cardsDB)\n    .filter(\n      (cardName) =>\n        cardsDB[cardName].cardUnlockGroupId !== null &&\n        cardName !== \"test-card\" &&\n        !inspector.isLegendary(cardName)\n    )\n    .sort();\n  const sortedLegendaries = Object.keys(cardsDB)\n    .filter((cardName) => inspector.isLegendary(cardName))\n    .sort();\n\n  useEffect(() => {\n    setNeedAdmin(true);\n  }, [setNeedAdmin]);\n\n  useEffect(() => {\n    setNeedTeamList(true);\n  }, [setNeedTeamList]);\n\n  useEffect(() => {\n    return serverInterfaceController.addSubscribeEffect({\n      type: GlobalUpdatesScopeType.BIG_BOARD,\n    });\n  }, [serverInterfaceController]);\n\n  // Check that the SERVER scope has been synced by checking\n  // that puzzles is non-empty.\n  if (\n    bigBoard === null ||\n    subscribedTeam === null ||\n    Object.keys(puzzles).length === 0\n  )\n    return <LargeSpinner />;\n\n  const { huntEndTime } = subscribedTeam;\n\n  const battleCols = makePuzListColData(\n    sortedBattles,\n    battleGroups,\n    stageNumbers\n  );\n  const fishPuzzleCols = makePuzListColData(\n    sortedFishPuzzles,\n    battleGroups,\n    stageNumbers\n  );\n  const cutsceneCols = makePuzListColData(\n    sortedCutscenes,\n    battleGroups,\n    stageNumbers\n  );\n  const instancerCols = makePuzListColData(\n    sortedInstancers,\n    battleGroups,\n    stageNumbers\n  );\n  const masteryCols = sortedMasteries.map(({ puzName: masteryId }) => ({\n    colKey: `mastery-${masteryId}`,\n    displayName: masteries[masteryId].displayName,\n  }));\n  const cardCols = sortedCards.map((cardName) => ({\n    colKey: `card-${cardName}`,\n    displayName: cardsDB[cardName].displayName,\n  }));\n  const legendaryCols = sortedLegendaries.map((cardName) => ({\n    colKey: `card-${cardName}`,\n    displayName: cardsDB[cardName].displayName,\n  }));\n\n  const cols: BigBoardColumnData[] = [\n    ...battleCols,\n    ...fishPuzzleCols,\n    ...cutsceneCols,\n    ...instancerCols,\n    ...masteryCols,\n    ...(showCardUnlocks ? [...cardCols, ...legendaryCols] : []),\n  ];\n\n  const globalRanks: { [teamId: string]: number } = {};\n  const solveTimes: { [puzName: string]: SolveTimeRecord[] } = {};\n  const solveTimeRanks: { [teamId: string]: { [puzName: string]: number } } =\n    {};\n  const puzStats: {\n    [puzName: string]: {\n      numUnlocks: number;\n      numSolves: number;\n      numWrongGuesses: number;\n      numHintsUsed: number;\n    };\n  } = {};\n  const teamStats: {\n    [teamId: string]: {\n      lastSolveTime?: number;\n      numSolves: number;\n      numWrongGuesses: number;\n      numHintsUsed: number;\n    };\n  } = Object.fromEntries(\n    Object.keys(bigBoard.teams).map((teamId) => [\n      teamId,\n      {\n        numSolves: 0,\n        numWrongGuesses: 0,\n        numHintsUsed: 0,\n      },\n    ])\n  );\n  const teamBattleGroupNumMembers: {\n    [teamId: string]: {\n      [battleGroupName: string]: number;\n    };\n  } = Object.fromEntries(\n    Object.keys(bigBoard.teams).map((teamId) => [teamId, {}])\n  );\n  for (const [teamId, teamState] of Object.entries(bigBoard.teams)) {\n    const { isHidden = false } = teams[teamId];\n    const currTeamStats = teamStats[teamId];\n    for (const [puzName, puzState] of Object.entries(teamState.unlocks)) {\n      const {\n        solveTime,\n        numWrongGuesses = 0,\n        numHintsUsed = 0,\n        numMembers = 0,\n      } = puzState;\n      const { battleGroupName, isCutscene = false } = puzzles[puzName];\n      puzStats[puzName] ??= {\n        numUnlocks: 0,\n        numSolves: 0,\n        numWrongGuesses: 0,\n        numHintsUsed: 0,\n      };\n      const currPuzStats = puzStats[puzName];\n      if (solveTime !== undefined) {\n        if (!isHidden) {\n          currPuzStats.numSolves ??= 0;\n          currPuzStats.numSolves++;\n          solveTimes[puzName] ??= [];\n          solveTimes[puzName].push({ teamId, solveTime });\n        }\n        if (isUsedForSolveCount(puzName, battleGroupName, isCutscene)) {\n          currTeamStats.lastSolveTime = Math.max(\n            currTeamStats.lastSolveTime ?? 0,\n            solveTime\n          );\n          currTeamStats.numSolves++;\n        }\n      }\n      currTeamStats.numWrongGuesses += numWrongGuesses;\n      currTeamStats.numHintsUsed += numHintsUsed;\n      if (!isHidden) {\n        currPuzStats.numUnlocks++;\n        currPuzStats.numWrongGuesses += numWrongGuesses;\n        currPuzStats.numHintsUsed += numHintsUsed;\n      }\n\n      if (collapseSubbattles && puzName !== battleGroupName && numMembers > 0) {\n        teamBattleGroupNumMembers[teamId][battleGroupName] ??= 0;\n        teamBattleGroupNumMembers[teamId][battleGroupName] += numMembers;\n      }\n    }\n  }\n  for (const { teamId } of allTeams) {\n    globalRanks[teamId] = Object.keys(globalRanks).length;\n  }\n\n  for (const [puzName, puzSolveTimes] of Object.entries(solveTimes)) {\n    puzSolveTimes.sort(\n      (record1, record2) => record1.solveTime - record2.solveTime\n    );\n    for (const [i, { teamId }] of puzSolveTimes.entries()) {\n      solveTimeRanks[teamId] ??= {};\n      solveTimeRanks[teamId][puzName] = i;\n    }\n  }\n\n  const rowsDom = teamIds.map((teamId) => {\n    const {\n      numHintsTotal = 0,\n      unlocks = {},\n      selectedPuzzles = {},\n      enabledMasteries = {},\n      cardUnlocks = {},\n    } = bigBoard.teams[teamId] ?? {};\n    const {\n      lastSolveTime = 0,\n      numSolves = 0,\n      numWrongGuesses = 0,\n      numHintsUsed = 0,\n    } = teamStats[teamId] ?? {};\n    const globalRank = globalRanks[teamId];\n    const adminData =\n      !isAdmin || settings.isImpersonate ? null : teamAdminData[teamId] ?? null;\n    return (\n      <tr key={teamId}>\n        <td>\n          <TeamListTeamName teamId={teamId} />\n        </td>\n        <td>\n          {adminData === null ? null : (\n            <a\n              href={`${settings.djangoBaseUrl}impersonate/${adminData.userId}`}\n            >\n              <Twemoji>🕵️</Twemoji>\n            </a>\n          )}\n        </td>\n        <td>{globalRank !== undefined ? globalRank + 1 : null}</td>\n        <td>\n          {numSolves <= 0 ? null : numSolves}\n          {numWrongGuesses <= 0 ? null : <>&minus;{numWrongGuesses}</>}\n        </td>\n        <td>\n          {numHintsUsed <= 0 && numHintsTotal <= 0\n            ? null\n            : `${numHintsUsed} / ${numHintsTotal}`}\n        </td>\n        <td>\n          {lastSolveTime === undefined\n            ? null\n            : new Date(lastSolveTime).toLocaleString()}\n        </td>\n        {sortedBattles.map(({ puzName }) => {\n          return (\n            <BigBoardPuzzleCell\n              key={puzName}\n              teamPuzState={unlocks[puzName]}\n              huntEndTime={huntEndTime}\n              rank={solveTimeRanks[teamId]?.[puzName]}\n              finalBattleSolveTime={unlocks[PUZ_NAME_FINAL_BATTLE]?.solveTime}\n              isFish={false}\n              battleGroupNumMembers={\n                teamBattleGroupNumMembers[teamId]?.[\n                  puzzles[puzName].battleGroupName\n                ] ?? 0\n              }\n              spectateLink={`/game/spectate/${puzName}/${teamId}`}\n            />\n          );\n        })}\n        {sortedFishPuzzles.map(({ puzName }) => {\n          return (\n            <BigBoardPuzzleCell\n              key={puzName}\n              teamPuzState={unlocks[puzName]}\n              huntEndTime={huntEndTime}\n              rank={solveTimeRanks[teamId]?.[puzName]}\n              masteryTreeSolveTime={\n                unlocks[BATTLE_GROUP_NAME_MASTERY_TREE]?.solveTime\n              }\n              isFish={true}\n            />\n          );\n        })}\n        {sortedCutscenes.map(({ puzName }) => {\n          return (\n            <BigBoardPuzzleCell\n              key={puzName}\n              teamPuzState={unlocks[puzName]}\n              huntEndTime={huntEndTime}\n              isFish={false}\n            />\n          );\n        })}\n        {sortedInstancers.map(({ puzName }, i) => {\n          const selectedPuzName = selectedPuzzles[puzName];\n          if (selectedPuzName === undefined) return <td key={puzName} />;\n          return (\n            <BigBoardHeader\n              key={puzName}\n              colData={makePuzColData(\n                puzzles[selectedPuzName],\n                battleGroups,\n                stageNumbers\n              )}\n              isActive={((unlocks[puzName] ?? {}).numMembers ?? 0) > 0}\n              spectateLink={`/game/spectate/${puzName}/${teamId}`}\n            />\n          );\n        })}\n        {sortedMasteries.map(({ puzName: masteryId }) => (\n          <td\n            key={masteryId}\n            className={\n              enabledMasteries[masteryId] !== undefined\n                ? \"big-board-solved\"\n                : unlocks[masteryId] !== undefined\n                ? \"big-board-unlocked\"\n                : undefined\n            }\n          ></td>\n        ))}\n        {showCardUnlocks ? (\n          <>\n            {sortedCards.map((cardName) => (\n              <td\n                key={cardName}\n                className={\n                  cardUnlocks[cardName] !== undefined\n                    ? \"big-board-solved\"\n                    : undefined\n                }\n              ></td>\n            ))}\n            {sortedLegendaries.map((cardName) => (\n              <td\n                key={cardName}\n                className={\n                  cardUnlocks[cardName] !== undefined\n                    ? \"big-board-solved\"\n                    : undefined\n                }\n              ></td>\n            ))}\n          </>\n        ) : null}\n      </tr>\n    );\n  });\n\n  const leftCols = [\n    <th key=\"team\">Team</th>,\n    <th key=\"impersonate\"></th>,\n    <th key=\"rank\">#</th>,\n    <th key=\"num-solves\">\n      <Twemoji>✅</Twemoji>\n    </th>,\n    <th key=\"num-hints\">\n      <Twemoji>💡</Twemoji>\n    </th>,\n    <th key=\"last-solve\">Last solve</th>,\n  ];\n\n  const makePuzStatsRow = (\n    rowName: string,\n    makeElem: (puzName: string) => ReactNode\n  ) => {\n    return (\n      <tr>\n        <td>{rowName}</td>\n        <td colSpan={leftCols.length - 1} />\n        {sortedBattles.map(({ puzName }) => makeElem(puzName))}\n        {sortedFishPuzzles.map(({ puzName }) => makeElem(puzName))}\n        <td colSpan={sortedCutscenes.length} />\n        <td colSpan={sortedInstancers.length} />\n        <td colSpan={sortedMasteries.length} />\n        {showCardUnlocks ? (\n          <>\n            <td colSpan={sortedCards.length} />\n            <td colSpan={sortedLegendaries.length} />\n          </>\n        ) : null}\n      </tr>\n    );\n  };\n  const makePercentage = (num: number, denom: number) => {\n    if (num === 0 || denom === 0) return \"\";\n    return `${Math.round((100 * num) / denom)}%`;\n  };\n\n  return (\n    <>\n      <div className=\"big-board\">\n        <table>\n          <colgroup>\n            {leftCols.map((col, i) => (\n              <col key={i} />\n            ))}\n            {makeBigBoardColGroup(battleCols)}\n            {makeBigBoardColGroup(fishPuzzleCols)}\n            {makeBigBoardColGroup(cutsceneCols)}\n            {makeBigBoardColGroup(instancerCols)}\n            {makeBigBoardColGroup(masteryCols)}\n            {showCardUnlocks ? (\n              <>\n                {makeBigBoardColGroup(cardCols)}\n                {makeBigBoardColGroup(legendaryCols)}\n              </>\n            ) : null}\n          </colgroup>\n          <thead>\n            <tr className=\"big-board-header-groups\">\n              <th colSpan={leftCols.length} />\n              <th colSpan={battleCols.length}>\n                <div className=\"big-board-header-group\">Battles</div>\n              </th>\n              <th colSpan={fishPuzzleCols.length}>\n                <div className=\"big-board-header-group\">Questions</div>\n              </th>\n              <th colSpan={cutsceneCols.length}>\n                <div className=\"big-board-header-group\">Cutscenes</div>\n              </th>\n              <th colSpan={instancerCols.length}>\n                <div className=\"big-board-header-group\">Instancers</div>\n              </th>\n              <th colSpan={masteryCols.length}>\n                <div className=\"big-board-header-group\">Masteries</div>\n              </th>\n              {showCardUnlocks ? (\n                <>\n                  <th colSpan={cardCols.length}>\n                    <div className=\"big-board-header-group\">Card Unlocks</div>\n                  </th>\n                  <th colSpan={legendaryCols.length}>\n                    <div className=\"big-board-header-group\">Legendaries</div>\n                  </th>\n                </>\n              ) : null}\n            </tr>\n            <tr>\n              {leftCols}\n              {cols.map((colData) => (\n                <BigBoardHeader key={colData.colKey} colData={colData} />\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {makePuzStatsRow(\"Solves\", (puzName) => (\n              <td key={puzName} className=\"big-board-solved\">\n                {puzStats[puzName]?.numSolves ?? 0}\n              </td>\n            ))}\n            {makePuzStatsRow(\"Guesses\", (puzName) =>\n              puzzles[puzName].answer === null ? (\n                <td key={puzName} />\n              ) : (\n                <td key={puzName} className=\"big-board-wrong\">\n                  {(puzStats[puzName]?.numWrongGuesses ?? 0) +\n                    (puzStats[puzName]?.numSolves ?? 0)}\n                </td>\n              )\n            )}\n            {makePuzStatsRow(\"Unlocks\", (puzName) => (\n              <td key={puzName} className=\"big-board-unlocked\">\n                {puzStats[puzName]?.numUnlocks ?? 0}\n              </td>\n            ))}\n            {makePuzStatsRow(\"Hints\", (puzName) => (\n              <td key={puzName} className=\"big-board-hinted\">\n                {puzStats[puzName]?.numHintsUsed ?? 0}\n              </td>\n            ))}\n            {makePuzStatsRow(\"%Solve/Guess\", (puzName) =>\n              puzzles[puzName].answer === null ? (\n                <td key={puzName} />\n              ) : (\n                <td key={puzName}>\n                  {makePercentage(\n                    puzStats[puzName]?.numSolves ?? 0,\n                    (puzStats[puzName]?.numWrongGuesses ?? 0) +\n                      (puzStats[puzName]?.numSolves ?? 0)\n                  )}\n                </td>\n              )\n            )}\n            {makePuzStatsRow(\"%Solve/Unlock\", (puzName) => (\n              <td key={puzName}>\n                {makePercentage(\n                  puzStats[puzName]?.numSolves ?? 0,\n                  puzStats[puzName]?.numUnlocks ?? 0\n                )}\n              </td>\n            ))}\n            {rowsDom}\n          </tbody>\n        </table>\n        <div className=\"big-board-right-padding\" />\n      </div>\n      <div className=\"big-board-footer\">\n        <div className=\"big-board-footer-options\">\n          <BigBoardTeamSearch />\n          <BigBoardPageSelection />\n          <BigBoardCheckboxOption\n            elemId=\"use-emoji-headers-checkbox\"\n            desc=\"Emoji\"\n            state={useEmojiHeaders}\n            onChange={setUseEmojiHeaders}\n          />\n          <BigBoardCheckboxOption\n            elemId=\"collapse-subbattles-checkbox\"\n            desc=\"Collapse sub-battles\"\n            state={collapseSubbattles}\n            onChange={setCollapseSubbattles}\n          />\n          <BigBoardCheckboxOption\n            elemId=\"show-hidden-checkbox\"\n            desc=\"Show hidden teams\"\n            state={showHidden}\n            onChange={setShowHidden}\n          />\n          <BigBoardCheckboxOption\n            elemId=\"show-card-unlocks-checkbox\"\n            desc=\"Show card unlocks\"\n            state={showCardUnlocks}\n            onChange={setShowCardUnlocks}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","export default \"__VITE_ASSET__eb46f86d__\"","import { Speaker } from \"engine/types/keyframes\";\nimport { DRAW_CARD_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { getKeroLayers } from \"engine/cards/card-effects-shared\";\n\nimport { useSubscribedTeam } from \"stores/ClientGlobalStateStore\";\nimport { Link } from \"react-router-dom\";\nimport FormattedText from \"components/FormattedText\";\nimport { StoryDialogBox } from \"components/CutsceneDialogBox\";\nimport { KeroImage } from \"components/Image\";\nimport \"./KerosNotesPage.css\";\nimport kerosNotesPng from \"images/keros-notes.png\";\n\nfunction KeroProTip({ dialogue }: { dialogue: string }) {\n  return (\n    <StoryDialogBox\n      speaker={Speaker.KERO_DOS}\n      dialogue={`Kero Pro Tip\\n${dialogue}`}\n    />\n  );\n}\n\nfunction KerosNotesPage() {\n  const subscribedTeam = useSubscribedTeam();\n  const hasLegendary =\n    subscribedTeam !== null &&\n    Object.values(subscribedTeam.puzzles).some(\n      (puzData) =>\n        puzData.solveTime !== undefined &&\n        puzData.puzName === puzData.battleGroupName &&\n        subscribedTeam.battleGroups[puzData.battleGroupName].isLegendary\n    );\n  const hasDrawCardMastery =\n    subscribedTeam !== null &&\n    subscribedTeam.masteries[DRAW_CARD_MASTERY_ID].isEnabled;\n  const keroLayers = getKeroLayers(\n    Object.keys(subscribedTeam?.cardUnlocks ?? {}),\n    0\n  );\n\n  return (\n    <>\n      <div className=\"top-more-actions\" />\n      <h1>Kero’s Notes</h1>\n      <main className=\"keros-notes\">\n        <KeroImage className=\"keros-notes-kero-image\" keroLayers={keroLayers} />\n        <div>\n          <div className=\"keros-notes-p\">\n            Welcome to the GalactiCosmiCave! <FormattedText text=\"$(o´▽`o)$\" />{\" \"}\n            This cave is filled with all sorts of creatures to meet and\n            befriend!\n          </div>\n          <div className=\"keros-notes-p\">\n            Befriending a creature is simple — all it takes is a wave of the\n            uwuand! But with all the CHAOS going around, it seems the uwuand\n            hasn’t been working too well lately. No worries, that just means\n            we’ve gotta battle the creatures first! I’ve already shown you the\n            ropes, but these notes should help in case you forget anything. Hope\n            you find them useful in your journey as{\" \"}\n            <strong>GalactiCardCaptors</strong>!\n          </div>\n        </div>\n        <div className=\"keros-note\">\n          <h4 id=\"website\">\n            <a href=\"#website\">The Website</a>\n          </h4>\n          <div className=\"keros-notes-p\">\n            Battles and cutscenes are synced across your team, so everyone can\n            enjoy them together! <FormattedText text=\"$♡＼(￣▽￣)／♡$\" /> You\n            can also split up and try different battles at once, or go back and\n            replay cutscenes at your own pace.\n          </div>\n          <div className=\"keros-notes-p\">\n            On top of that, there’s also the{\" \"}\n            <Link to={{ pathname: \"/game/prep/instancer\" }}>Instancer</Link>!\n            The Instancer is a special place maintained by a group of spiders\n            known as the Overworked Web Operatives! It comes with three rooms\n            that you can use to create additional instances of battles or\n            cutscenes at any time. These instances behave exactly like their\n            “real” counterparts — and if you win in an instance, you win in real\n            life!\n          </div>\n          <div className=\"keros-notes-p\">\n            Some battles allow you to save your progress. You also get an\n            autosave at the start of each turn, in case you need it. Use this\n            power wisely! <FormattedText text=\"$ヽ(・∀・)ﾉ$\" />\n          </div>\n          <KeroProTip dialogue=\"There’s no undo button, so SAVE your GAMES! $(ᵔ.ᵔ)$\" />\n        </div>\n        <div className=\"keros-note\">\n          <h4 id=\"decks\">\n            <a href=\"#decks\">Decks</a>\n          </h4>\n          <div className=\"keros-notes-p\">\n            Cards let you call upon creatures you’ve befriended to assist you in\n            battles! You choose which friends to bring into a battle by building\n            a deck of cards. A deck may contain up to 2 copies of each card,\n            must have at least 1 card, and cannot have more than 30 cards in\n            total.\n          </div>\n          {hasLegendary ? (\n            <div className=\"keros-notes-p\">\n              Some creatures are legendaries! Legendaries are super powerful,\n              but they don’t like each other very much. A deck may contain at\n              most one legendary card.\n            </div>\n          ) : null}\n        </div>\n        <div className=\"keros-note\">\n          <h4 id=\"battles\">\n            <a href=\"#battles\">Battles</a>\n          </h4>\n          <div className=\"keros-notes-p\">\n            <img src={kerosNotesPng} className=\"kero-game-diagram\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Battles are held on a rectangular field of Spaces, usually with 5 columns and 6 rows. The Spaces closer to your side, the bottom of the field, are Friendly Spaces; the other Spaces are Enemy Spaces.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Spaces can be occupied by Units, which are either Creatures or Bases. Each Space can hold at most one Unit at any given time. The triangle in the upper-right corner shows who controls that Unit: Friendly Units have a △ or ▲; Enemy Units have a ▼ or ▽.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Whenever a Unit’s text refers to something Friendly, it means belonging to the Unit’s owner. “Enemy” has the opposite meaning: belonging to the opponent of the Unit’s owner.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Each Unit has some amount of Health, and can receive Damage. Damage persists across turns. When a Unit holds Damage equal to or in excess of its Health, it is Destroyed. (Other effects may Destroy a Unit directly without impacting its Health.) Destroyed Units are removed from the field.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"When a Unit has at least one Damage, it displays a fraction [Health &minus; Damage] / [Health] to indicate the amount of additional Damage it can sustain before being Destroyed; this quantity, Health &minus; Damage, is also called Current Health. For example, a Unit at 4/7 Health that gains 2 Health will be at 6/9, not 6/7 or 4/9.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Creatures on the field are either Ready or Unready. Most Actions can only be performed with Ready Creatures. Ready Creatures display a solid triangle (▲ or ▼); Unready Creatures appear desaturated and display a hollow triangle (△ or ▽). Creatures that have an Action, whether or not they’re Ready, glow.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"You also maintain a draw pile, as well as a hand of cards that you can Summon Creatures from. At the start of each battle, your deck gets shuffled randomly into your draw pile. Then, you draw the top four cards from your draw pile into your hand. You also draw a card at the start of each turn, which means that you begin your first turn with five cards in hand. If your deck has less than five cards, you start the battle with your entire deck in hand and no cards in your draw pile.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Generally, you lose when all your Bases are Destroyed. But with these Creatures, you can never tell! $╰(▔∀▔)╯$ It seems that different battles might have different conditions for winning or losing. Sometimes, winning isn’t even enough to befriend a Creature! How puzzling.\" />\n          </div>\n          <KeroProTip dialogue=\"Zooming out might make things better on smaller screens! $ヽ(°〇°)ﾉ$\" />\n        </div>\n        <div className=\"keros-note\">\n          <h4 id=\"turns\">\n            <a href=\"#turns\">Turns</a>\n          </h4>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"At the beginning of your turn, you draw one card from your draw pile (if it has cards) and all Friendly Creatures become Ready.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"During your turn, you may perform any number of Actions in any order (subject to their restrictions and costs). Some Actions cost Food. You can get Food as a result of other Actions or passive Unit effects. The Food you have is displayed on the left of the battle field. Food does not persist across turns.\" />\n          </div>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"The Actions you can perform are:\" />\n          </div>\n          <ul>\n            <li>\n              <FormattedText text=\"Summon a Creature from your hand: Pay the Creature’s Summon cost in Food, then place the Creature on an Empty Friendly Space. When Summoned, Creatures start Unready.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Attack with a Ready Creature: Pay one Food of its Faction. (For Cows, you must specifically pay a Food it can Create.) The Creature deals Damage equal to its Power to another Enemy Unit and Unreadies. Normally, the target of the Attack must not be Protected from the attacker.\" />\n              <ul>\n                <li>\n                  <FormattedText text=\"A Unit on a Friendly Space Protects Friendly Units behind it from Units on Enemy Spaces. Some Unit effects may grant Protection in other circumstances.\" />\n                </li>\n                <li>\n                  <FormattedText text=\"A Unit is Sneaky if it is in an Enemy Space. Generally, Sneaky Units do not Protect any Friendly Units, but no Enemy Units are Protected from Sneaky Units.\" />\n                </li>\n              </ul>\n            </li>\n            <li>\n              <FormattedText text=\"Move a Ready Creature: (This does not cost Food.) The Creature moves to an Adjacent Empty Space and Unreadies.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Create with a Ready Creature: You gain one Food of the Creature’s Faction, and the Creature Unreadies. (Gray Cows may Create one of two Foods; see below.)\" />\n            </li>\n            <li>\n              <FormattedText text=\"Activate the Special of a Ready Creature: Pay the cost (if any) and Unready the Creature, then perform the Special.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Activate the Flex of a Creature: Pay the cost (if any), then perform the Flex. Unlike other Actions, the Creature does not need to be Ready, and activating the Flex doesn’t Unready the Creature.\" />\n            </li>\n            {hasDrawCardMastery ? (\n              <li>\n                <FormattedText text=\"Draw a card: Pay two of any Food, then draw a card from your draw pile into your hand.\" />\n              </li>\n            ) : null}\n          </ul>\n          <KeroProTip dialogue=\"For a Sneaky Creature, all Enemy Units are Unprotected! $(>ᴗ•)$\" />\n        </div>\n        <div className=\"keros-note\">\n          <h4 id=\"food\">\n            <a href=\"#food\">Food</a>\n          </h4>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"Every Creature belongs to a Faction, indicated by their card’s color. Each Faction is associated with a preferred Food which they can Create or use to Attack.\" />\n          </div>\n          <ul>\n            <li>\n              <FormattedText text=\"Boars produce {R} (Boarries). Their cards are red.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Dryads produce {P} (Flower). Their cards are purple.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Dinosaurs produce {G} (Eggs). Their cards are green.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Bees produce {Y} (Honey). Their cards are yellow.\" />\n            </li>\n            <li>\n              <FormattedText text=\"Cows are a little unusual. A Cow is either white, gray or black, as shown by its card’s color. White Cows Create {W} (Whipped Cream) and require it to Attack. Black Cows Create {B} (Butter) and require it to Attack. Gray Cows Create either {W} (Whipped Cream) or {B} (Butter), and can use either to Attack. When Creating with a gray Cow, it is up to you to decide whether to Create {W} (Whipped Cream) or {B} (Butter).\" />\n            </li>\n          </ul>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"There are two costs that aren’t Foods:\" />\n          </div>\n          <ul>\n            <li>\n              <FormattedText text=\"{.} can be paid with any Food.\" />\n            </li>\n            <li>\n              <FormattedText text=\"{(W/B)} (Milk) can be paid with either {W} (Whipped Cream) or {B} (Butter).\" />\n            </li>\n          </ul>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"There is one type of Food that is not a cost:\" />\n          </div>\n          <ul>\n            <li>\n              <FormattedText text=\"{?} (Pie) can pay for any cost.\" />\n            </li>\n          </ul>\n          <div className=\"keros-notes-p\">\n            <FormattedText text=\"You can often also tell a Creature’s Faction from its Summon cost. Apart from {.}, the Food in a Creature’s Summon cost is almost always the Food associated with its Faction. For Cows, this means {W} (Whipped Cream) for white Cows, and {B} (Butter) for black Cows. Gray Cows are different — their Summon cost may contain any combination of {W} (Whipped Cream), {B} (Butter) or {(W/B)} (Milk), but will always contain at least one {(W/B)} (Milk).\" />\n          </div>\n          <KeroProTip dialogue=\"Everyone loves Pie! $(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧$\" />\n        </div>\n      </main>\n    </>\n  );\n}\nexport default KerosNotesPage;\n","import { useEffect } from \"react\";\nimport Twemoji from \"react-twemoji\";\nimport \"./UnlockPage.css\";\n\nimport { getUnlockableCards } from \"engine/types/card-data\";\nimport { WSReqType } from \"game-server/ws\";\nimport { getPuzzleStageNumbers } from \"game-server/global-updates\";\nimport { useServerInterfaceController } from \"stores/ServerInteractionStore\";\nimport { useStaticInspector } from \"stores/ClientGameStore\";\nimport {\n  useClientGlobalStateStore,\n  useSubscribedTeam,\n} from \"stores/ClientGlobalStateStore\";\nimport { useGlobalSubscriptionStore } from \"stores/GlobalSubscriptionStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { CardEmbed } from \"components/HuntLib/CardEmbed\";\nimport { LargeSpinner } from \"components/Loading\";\nimport Tabs from \"components/Tabs\";\nimport Tooltip from \"components/Tooltip\";\nimport { PuzzleLink, RoutedLink } from \"components/Link\";\nimport settings from \"settings\";\nimport {\n  BATTLE_GROUP_NAME_INSTANCER,\n  PUZ_NAME_PVP,\n  getPuzzleMapIcon,\n} from \"engine/puzzles/puzzle-data\";\n\ninterface UnlockCardProps {\n  teamId: string;\n  cardName: string;\n  displayName: string;\n  isUnlocked: boolean;\n}\n\nconst UnlockCardDisplay = (props: UnlockCardProps) => {\n  const { teamId, cardName, displayName, isUnlocked } = props;\n  const serverInterfaceController = useServerInterfaceController();\n  const inspector = useStaticInspector();\n  const isLegendary = inspector.isLegendary(cardName);\n\n  return (\n    <div className=\"unlock-puzzle-display\" key={cardName}>\n      <Tooltip text={isUnlocked ? \"Set locked\" : \"Set unlocked\"}>\n        <button\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideCardUnlocked: { [cardName]: !isUnlocked },\n                },\n              },\n            });\n          }}\n        >\n          {isUnlocked ? \"🔑\" : \"🔒\"}\n        </button>\n      </Tooltip>\n      <div className=\"unlock-puzzle-card\">\n        <CardEmbed content={`${isLegendary ? \"👑 \" : \"\"}${displayName}`} />\n      </div>\n    </div>\n  );\n};\n\ninterface UnlockPuzzleProps {\n  teamId: string;\n  puzName: string;\n  displayName: string;\n  isSolved: boolean;\n  isUnlocked: boolean;\n  hasAnswer: boolean;\n  icon?: string;\n}\n\nconst UnlockPuzzleDisplay = (props: UnlockPuzzleProps) => {\n  const {\n    teamId,\n    puzName,\n    displayName,\n    isSolved,\n    isUnlocked,\n    hasAnswer,\n    icon,\n  } = props;\n  const serverInterfaceController = useServerInterfaceController();\n\n  return (\n    <div className=\"unlock-puzzle-display\" key={puzName}>\n      <Tooltip text={isUnlocked ? \"Set locked\" : \"Set unlocked\"}>\n        <button\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideUnlocked: { [puzName]: !isUnlocked },\n                },\n              },\n            });\n          }}\n        >\n          {isUnlocked ? \"🔑\" : \"🔒\"}\n        </button>\n      </Tooltip>\n      <Tooltip text={isSolved ? \"Set unsolved\" : \"Set solved\"}>\n        <button\n          disabled={\n            !isUnlocked ||\n            puzName === PUZ_NAME_PVP ||\n            puzName === BATTLE_GROUP_NAME_INSTANCER\n          }\n          onClick={() => {\n            serverInterfaceController.sendReq({\n              type: WSReqType.ADMIN_MODIFY,\n              teams: {\n                [teamId]: {\n                  overrideSolved: { [puzName]: !isSolved },\n                },\n              },\n            });\n          }}\n        >\n          {isSolved ? \"✅️\" : \"🔲️\"}\n        </button>\n      </Tooltip>\n      {isUnlocked ? (\n        <PuzzleLink battleGroupName={puzName} hasAnswer={hasAnswer}>\n          {icon} {displayName}\n        </PuzzleLink>\n      ) : (\n        <div>\n          {icon} {displayName}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction UnlockCardsDisplay() {\n  const { subscribedTeamId } = useGlobalSubscriptionStore();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const subscribedTeam = useSubscribedTeam(subscribedTeamId);\n  const inspector = useStaticInspector();\n\n  if (\n    subscribedTeam === null ||\n    Object.keys(cardsDB).length === 0 ||\n    teamAdminData[subscribedTeam.teamId] === undefined\n  )\n    return <LargeSpinner />;\n\n  const { teamId, cardUnlocks } = subscribedTeam;\n\n  const cardsDom = getUnlockableCards(cardsDB)\n    .sort((cardName1, cardName2) => {\n      const isLegendary1 = inspector.isLegendary(cardName1);\n      const isLegendary2 = inspector.isLegendary(cardName2);\n      if (isLegendary1 !== isLegendary2)\n        return (isLegendary1 ? 1 : 0) - (isLegendary2 ? 1 : 0);\n      return cardName1.localeCompare(cardName2);\n    })\n    .map((cardName) => {\n      return (\n        <UnlockCardDisplay\n          key={cardName}\n          teamId={teamId}\n          cardName={cardName}\n          displayName={cardsDB[cardName].displayName}\n          isUnlocked={cardUnlocks[cardName] !== undefined}\n        />\n      );\n    });\n\n  return <div className=\"unlock-puzzles\">{cardsDom}</div>;\n}\n\nfunction UnlockPuzzlesDisplay() {\n  const { subscribedTeamId } = useGlobalSubscriptionStore();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const puzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const battleGroups = useClientGlobalStateStore(\n    (state) => state.globalState.battleGroups\n  );\n  const subscribedTeam = useSubscribedTeam(subscribedTeamId);\n\n  if (\n    subscribedTeam === null ||\n    Object.keys(puzzles).length === 0 ||\n    teamAdminData[subscribedTeam.teamId] === undefined\n  )\n    return <LargeSpinner />;\n\n  const { teamId, puzzles: unlockedPuzzles } = subscribedTeam;\n  const stageNumbers = getPuzzleStageNumbers(puzzles, battleGroups);\n\n  const puzzlesDom = Object.values(puzzles)\n    .filter(({ puzName }) => stageNumbers[puzName] === 0)\n    .filter(\n      ({ isCutscene, isFullPuzzle, puzName }) =>\n        isCutscene ||\n        isFullPuzzle ||\n        puzName === PUZ_NAME_PVP ||\n        puzName === BATTLE_GROUP_NAME_INSTANCER\n    )\n    .sort((puz1, puz2) => puz1.order - puz2.order)\n    .map(({ puzName, battleGroupName }) => {\n      const unlockedPuzzle = unlockedPuzzles[puzName];\n      const stageNum = stageNumbers[puzName];\n      const { isCutscene, answer } = puzzles[puzName];\n      const { isLegendary, displayName: battleGroupDisplayName } =\n        battleGroups[battleGroupName];\n      const hasAnswer = answer !== null;\n      const displayName =\n        stageNum === 0\n          ? battleGroupDisplayName\n          : `${battleGroupDisplayName}, Stage ${stageNum}`;\n      return (\n        <UnlockPuzzleDisplay\n          key={puzName}\n          teamId={teamId}\n          puzName={puzName}\n          displayName={displayName}\n          isSolved={unlockedPuzzle?.solveTime !== undefined}\n          isUnlocked={unlockedPuzzle !== undefined}\n          hasAnswer={hasAnswer}\n          icon={getPuzzleMapIcon(\n            hasAnswer,\n            battleGroupName,\n            isCutscene,\n            isLegendary\n          )}\n        />\n      );\n    });\n\n  return <div className=\"unlock-puzzles\">{puzzlesDom}</div>;\n}\n\nfunction UnlockInfo() {\n  const { subscribedTeamId } = useGlobalSubscriptionStore();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const subscribedTeam = useSubscribedTeam(subscribedTeamId);\n  const serverInterfaceController = useServerInterfaceController();\n  const allPuzzles = useClientGlobalStateStore(\n    (state) => state.globalState.puzzles\n  );\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const inspector = useStaticInspector();\n\n  if (\n    subscribedTeam === null ||\n    Object.keys(allPuzzles).length === 0 ||\n    Object.keys(cardsDB).length === 0 ||\n    teamAdminData[subscribedTeam.teamId] === undefined\n  )\n    return <LargeSpinner />;\n\n  const { battleGroups, cardUnlocks, puzzles, teamId } = subscribedTeam;\n\n  const resetAll = () => {\n    serverInterfaceController.resetServer();\n  };\n\n  const unlockAllPuzzles = () =>\n    serverInterfaceController.sendReq({\n      type: WSReqType.ADMIN_MODIFY,\n      teams: {\n        [teamId]: {\n          overrideUnlocked: Object.fromEntries(\n            Object.keys(allPuzzles)\n              .filter((puzName) => {\n                const { isCutscene, isFullPuzzle } = allPuzzles[puzName];\n                return (\n                  isCutscene ||\n                  isFullPuzzle ||\n                  [PUZ_NAME_PVP, BATTLE_GROUP_NAME_INSTANCER].includes(puzName)\n                );\n              })\n              .map((puzName) => [puzName, true])\n          ),\n        },\n      },\n    });\n\n  const unlockCards = (cardNames: string[]) => {\n    serverInterfaceController.sendReq({\n      type: WSReqType.ADMIN_MODIFY,\n      teams: {\n        [teamId]: {\n          overrideCardUnlocked: Object.fromEntries(\n            cardNames.map((cardName) => [cardName, true])\n          ),\n        },\n      },\n    });\n  };\n\n  const unlockAllNonLegendaries = () =>\n    unlockCards(\n      getUnlockableCards(cardsDB).filter(\n        (cardName) => !inspector.isLegendary(cardName)\n      )\n    );\n\n  const unlockAllLegendaries = () =>\n    unlockCards(\n      getUnlockableCards(cardsDB).filter((cardName) =>\n        inspector.isLegendary(cardName)\n      )\n    );\n\n  const puzUnlockCount = Object.keys(battleGroups)\n    .filter((puzName) => !battleGroups[puzName].isCutscene)\n    .filter((puzName) => puzzles[puzName]?.unlockTime).length;\n  const solveCount = Object.keys(battleGroups)\n    .filter((puzName) => !battleGroups[puzName].isCutscene)\n    .filter((puzName) => puzzles[puzName]?.solveTime).length;\n  const cardUnlockCount = Object.keys(cardUnlocks).length;\n\n  return (\n    <>\n      <div className=\"hunt-unlocks-buttons\">\n        <button onClick={resetAll}>Reset all progress</button>\n        <button onClick={unlockAllPuzzles}>Unlock all puzzles</button>\n        <button onClick={unlockAllNonLegendaries}>\n          Unlock all non-legendaries\n        </button>\n        <button onClick={unlockAllLegendaries}>Unlock all legendaries</button>\n      </div>\n      <p>\n        Puzzles unlocked: {puzUnlockCount} (of 41)\n        <br />\n        Puzzles solved: {solveCount} (of 39)\n        <br />\n        Cards unlocked: {cardUnlockCount} (of 63)\n      </p>\n    </>\n  );\n}\n\nfunction UnlockPage() {\n  const serverInterfaceController = useServerInterfaceController();\n  const teamAdminData = useClientGlobalStateStore(\n    (state) => state.globalState.teamAdminData\n  );\n  const { setNeedAdmin, setSubscribedTeamBattle, setSubscribedTeamFishPuzzle } =\n    useGlobalSubscriptionStore();\n\n  useEffect(() => {\n    setNeedAdmin(true);\n  }, [setNeedAdmin]);\n\n  useEffect(() => {\n    // Clear subscription state to prevent extraneous errors when\n    // messing with unlocks.\n    setSubscribedTeamBattle(null);\n    setSubscribedTeamFishPuzzle(null);\n  }, [setSubscribedTeamBattle, setSubscribedTeamFishPuzzle]);\n\n  if (Object.keys(teamAdminData).length === 0) return <LargeSpinner />;\n\n  return (\n    <div className=\"unlock-body\">\n      <div className=\"top-more-actions\" />\n      <h1>Unlocking</h1>\n      <main>\n        <div className=\"note\">\n          <Twemoji tag=\"span\">⚠️</Twemoji> <b>Be careful!</b> There are no\n          confirmations for anything you click on this page.\n        </div>\n        <p>\n          <b>To experience the hunt like a team during the hunt would</b>, click\n          “Reset all progress” and start at the{\" \"}\n          <RoutedLink\n            path=\"/game/map\"\n            href={`${settings.djangoBaseUrl}puzzles`}\n          >\n            map\n          </RoutedLink>\n          . You won’t need to use this page again, unless you want to skip\n          puzzles you’re stuck on. Progress is saved locally in your browser and\n          synced across all your browser tabs. Note that there is currently no\n          support for interaction between multiple postsolvers, and that all\n          global leaderboards have been frozen.\n        </p>\n        <p>\n          The default initial posthunt state has all puzzles and all\n          non-legendaries unlocked to support postsolving individual puzzles\n          independently. To restore this state, click “Reset all progress”,\n          “Unlock all puzzles”, then “Unlock all non-legendaries”.{\" \"}\n          <b>Do not click “Unlock all legendaries”.</b>\n        </p>\n\n        <p>\n          You can also manage unlocks within a battle by accessing the{\" \"}\n          <b>Battle Unlocks</b> panel from the “🔓” group in the navbar. This\n          panel only becomes available once you have a battle open.\n        </p>\n        <h3>Hunt unlocks</h3>\n        <UnlockInfo />\n        <h3>Individual unlocks</h3>\n        <Tabs.Container\n          items={[\n            {\n              label: \"Puzzles and cutscenes\",\n              content: <UnlockPuzzlesDisplay />,\n            },\n            {\n              label: \"Cards\",\n              content: <UnlockCardsDisplay />,\n            },\n          ]}\n        >\n          <Tabs.ButtonList className=\"unlock-button-list\">\n            <Tabs.Buttons />\n          </Tabs.ButtonList>\n          <p>\n            <Twemoji tag=\"span\">⚠️</Twemoji> <b>Note:</b> Setting a card or\n            puzzle to locked may appear to fail silently if your existing solves\n            would cause the puzzle or card to be immediately unlocked.\n          </p>\n          <Tabs.Content />\n        </Tabs.Container>\n      </main>\n    </div>\n  );\n}\n\nexport default UnlockPage;\n","import { useEffect, useState } from \"react\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Outlet,\n  useMatch,\n  useSearchParams,\n  useParams,\n  useNavigate,\n  useLocation,\n  ScrollRestoration,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport { TeamListDisplay, TeamPage } from \"components/HuntLib\";\nimport Modal from \"components/Modal\";\nimport { Spinner } from \"components/Loading\";\nimport { Error } from \"components/Error\";\nimport PrepPage from \"pages/PrepPage\";\nimport GamePage from \"pages/GamePage\";\nimport { useAudioEffect } from \"pages/GamePageUtil/useAudioEffect\";\nimport StartPrepPage from \"pages/StartPrepPage\";\nimport StartBattlePage from \"pages/StartBattlePage\";\nimport StartVictoryPage from \"pages/StartVictoryPage\";\nimport DeckCollectionPage from \"pages/DeckCollectionPage\";\nimport MasteryTreePage from \"pages/MasteryTreePage\";\nimport MapPage from \"pages/MapPage\";\nimport AdminPage from \"pages/AdminPage\";\nimport { ServerHealthPage, BigBoardPage } from \"pages/BigBoardPage\";\nimport KerosNotesPage from \"pages/KerosNotesPage\";\n\nimport settings from \"settings\";\nimport { makeCardsDB } from \"engine/cards/CardsDB\";\nimport { WSErrorCode } from \"game-server/ws\";\nimport { ServerInterfaceType } from \"game-server/server-interface/ServerInterface\";\nimport { useClientGameStore } from \"stores/ClientGameStore\";\nimport {\n  useSubscribedTeam,\n  useSelectedPuzName,\n} from \"stores/ClientGlobalStateStore\";\nimport { useServerInteractionStore } from \"stores/ServerInteractionStore\";\nimport { useCardsDBStore } from \"stores/CardsDBStore\";\nimport { useUserLogStore } from \"stores/UserLogStore\";\nimport { useNavStore, usePuzNameIfExists } from \"stores/NavStore\";\n\nimport ALL_CARDS from \"engine/cards/all-cards-client\";\nimport {\n  PUZ_NAME_INTRO,\n  PUZ_NAME_POST_FINAL_BATTLE,\n} from \"engine/puzzles/puzzle-data\";\nimport ArtCreditsPage from \"pages/ArtCreditsPage\";\nimport UnlockPage from \"pages/UnlockPage\";\n\nfunction PageBase() {\n  const [isRefreshNeeded, setIsRefreshNeeded] = useState(false);\n  const [isDisconnected, setDisconnected] = useState(false);\n  const [isDownForMaintenance, setIsDownForMaintenance] = useState(false);\n  const addToUserLog = useUserLogStore((state) => state.addToUserLog);\n\n  const sendStep = useClientGameStore((state) => state.sendStep);\n  const setSendStep = useClientGameStore((state) => state.setSendStep);\n  const getServerInterfaceController = useServerInteractionStore(\n    (state) => state.getServerInterfaceController\n  );\n\n  const cardsDB = useCardsDBStore((state) => state.cardsDB);\n  const setCardsDB = useCardsDBStore((state) => state.setCardsDB);\n  const serverInterfaceController = getServerInterfaceController();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isRootPage = useMatch(\"/game\");\n  const navigate = useNavigate();\n  const setNavPuzName = useNavStore((state) => state.setNavPuzName);\n\n  useEffect(() => {\n    setCardsDB(makeCardsDB(ALL_CARDS));\n  }, [setCardsDB]);\n\n  useEffect(() => {\n    if (serverInterfaceController === null) return;\n\n    const cleanupOnError = serverInterfaceController.onErrorEvent.addListener(\n      (err) => {\n        addToUserLog(`Received error \"${err.errCode}\".`);\n      }\n    );\n    const cleanupAuthEffect = serverInterfaceController.addAuthEffect(() => {\n      addToUserLog(`Connected to server.`);\n    });\n    const cleanupAfterDisconnect =\n      serverInterfaceController.connectionControllers[\n        ServerInterfaceType.MAIN\n      ].afterDisconnectEvent.addListener(\n        ({ numReconnections, reconnectDelayInSeconds }) => {\n          setDisconnected(reconnectDelayInSeconds < 0);\n          if (numReconnections === 0) {\n            addToUserLog(`Disconnected from server. Reconnecting...`);\n          } else if (reconnectDelayInSeconds < 0) {\n            addToUserLog(`Reconnection failed; giving up.`);\n          } else {\n            addToUserLog(\n              `Failed to reconnect. Reconnecting in ${reconnectDelayInSeconds} seconds...`\n            );\n          }\n        }\n      );\n\n    return () => {\n      cleanupOnError();\n      cleanupAuthEffect();\n      cleanupAfterDisconnect();\n    };\n  }, [serverInterfaceController, addToUserLog]);\n\n  useEffect(() => {\n    if (serverInterfaceController === null) return;\n\n    return serverInterfaceController.addStuckEffect((err) => {\n      switch (err.errCode) {\n        case WSErrorCode.TEAM_TEMP_BLOCKED: {\n          setIsDownForMaintenance(true);\n          break;\n        }\n        default: {\n          setIsRefreshNeeded(true);\n        }\n      }\n    });\n  }, [serverInterfaceController, setIsRefreshNeeded, setIsDownForMaintenance]);\n\n  useEffect(() => {\n    document.documentElement.classList.add(\"game-base\");\n    return () => document.documentElement.classList.remove(\"game-base\");\n  }, []);\n\n  useEffect(() => {\n    if (isRootPage) {\n      navigate(\n        {\n          pathname: \"map\",\n          search: searchParams.toString(),\n        },\n        { replace: true }\n      );\n    }\n  }, [isRootPage, navigate, searchParams]);\n\n  if (Object.keys(cardsDB).length === 0) return <Spinner size={128} />;\n\n  return (\n    <div className=\"page-contents\">\n      <Modal isOpen={isDisconnected || isRefreshNeeded} title=\"Disconnected\">\n        Sorry, something went wrong.\n        <br />\n        Please refresh the page.\n      </Modal>\n      <Modal isOpen={isDownForMaintenance} title=\"Down for Maintenance\">\n        The site is down for maintenance.\n        <br />\n        Please try again after a while, and monitor your email for updates!\n      </Modal>\n      <Outlet />\n      <ScrollRestoration getKey={(location) => location.pathname} />\n    </div>\n  );\n}\n\nfunction NavWrapper() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const setHasRouter = useNavStore((state) => state.setHasRouter);\n  const routerNavigatePath = useNavStore((state) => state.routerNavigatePath);\n  const setRouterNavigatePath = useNavStore(\n    (state) => state.setRouterNavigatePath\n  );\n  const selectedPuzName = useSelectedPuzName();\n  const pagePuzName = usePuzNameIfExists();\n  const puzName = selectedPuzName ?? pagePuzName;\n  const setNavPuzName = useNavStore((state) => state.setNavPuzName);\n\n  useEffect(() => {\n    setHasRouter(true);\n  }, [setHasRouter]);\n\n  useEffect(() => {\n    if (routerNavigatePath === null) return;\n    navigate({\n      pathname: routerNavigatePath,\n      search: searchParams.toString(),\n    });\n    setRouterNavigatePath(null);\n  }, [routerNavigatePath, setRouterNavigatePath, searchParams, navigate]);\n\n  useEffect(() => {\n    setNavPuzName(puzName);\n  }, [puzName, setNavPuzName]);\n\n  useEffect(() => {\n    const tray = document.querySelector(\".tray\") as HTMLElement;\n    tray.style.transform = \"\";\n  }, [location]);\n\n  const { teamName } = useParams();\n  const subscribedTeam = useSubscribedTeam();\n  useEffect(() => {\n    document.title = (() => {\n      if (teamName) return teamName;\n      if (subscribedTeam) {\n        const { puzzles, battleGroups } = subscribedTeam;\n        if (puzName) {\n          const name =\n            battleGroups[puzzles[puzName]?.battleGroupName]?.displayName;\n          if (name) return name;\n        }\n        if (puzzles[PUZ_NAME_INTRO]?.solveTime) return \"GalactiCardCaptors✨️\";\n      }\n      return settings.documentTitle;\n    })();\n  }, [puzName, teamName, subscribedTeam]);\n\n  useEffect(() => {\n    if (subscribedTeam?.puzzles[PUZ_NAME_POST_FINAL_BATTLE]?.solveTime)\n      (document.querySelector(\"link[rel=icon]\") as HTMLLinkElement).href =\n        \"/static/images/favicon.56ccd37f.ico\";\n  }, [subscribedTeam]);\n\n  useAudioEffect();\n\n  return <Outlet />;\n}\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <NavWrapper />,\n    errorElement: <Error />,\n    children: [\n      {\n        path: \"game\",\n        element: <PageBase />,\n        children: [\n          {\n            path: \"prep/:puzName\",\n            element: <PrepPage />,\n          },\n          {\n            path: \"prep/:puzName/start\",\n            element: <StartPrepPage />,\n          },\n          ...[\"battle\", \"cutscene\"].flatMap((subpath) => [\n            {\n              path: `${subpath}/:puzName`,\n              element: <GamePage />,\n            },\n            {\n              path: `${subpath}/:puzName/start`,\n              element: <StartBattlePage />,\n            },\n            {\n              path: `${subpath}/:puzName/start/:slot`,\n              element: <StartBattlePage />,\n            },\n            {\n              path: `${subpath}/:puzName/restart/:slot`,\n              element: <StartBattlePage restart={true} />,\n            },\n          ]),\n          {\n            path: \"spectate/:puzName/:spectateTeamId\",\n            element: <GamePage />,\n          },\n          {\n            path: \"deck/:slot/:puzName\",\n            element: <DeckCollectionPage />,\n          },\n          {\n            path: \"mastery\",\n            element: <MasteryTreePage />,\n          },\n          {\n            path: \"mastery/:puzName\",\n            element: <MasteryTreePage />,\n          },\n          {\n            path: \"victory/start\",\n            element: <StartVictoryPage />,\n          },\n          {\n            path: \"map\",\n            element: <MapPage />,\n          },\n          {\n            path: \"admin\",\n            element: <AdminPage />,\n          },\n          {\n            path: \"unlock\",\n            element: <UnlockPage />,\n          },\n          {\n            path: \"bigboard\",\n            element: <BigBoardPage />,\n          },\n          {\n            path: \"health\",\n            element: <ServerHealthPage />,\n          },\n        ],\n      },\n      {\n        path: \"game/keros_notes\",\n        element: <KerosNotesPage />,\n      },\n      {\n        path: \"game/art_credits\",\n        element: <ArtCreditsPage />,\n      },\n      {\n        path: \"teams\",\n        element: <TeamListDisplay />,\n      },\n      {\n        path: \"teams/:mode\",\n        element: <TeamListDisplay />,\n      },\n      {\n        path: \"team/:teamName\",\n        element: <TeamPage />,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"names":["teamToSortKey","team","isFaction","isSpeedrun","completionTime","factionScoreContribution","lastSolveTime","numSolves","totalTime","numTimes","teamId","useSortedTeams","faction","includeHidden","freezeAfterHuntEnd","liveTeams","useClientGlobalStateStore","state","useMemo","teams","settings","a","b","aKey","bKey","i","SpeedrunNote","headerText","jsx","Tooltip","Twemoji","TeamListDisplay","teamAdminData","serverInterfaceController","useServerInteractionStore","setNeedAdmin","setNeedTeamList","useGlobalSubscriptionStore","isAdmin","useIsAdmin","subscribedTeam","useSubscribedTeam","mode","useParams","Faction","sortedTeams","searchParams","useSearchParams","useEffect","Spinner","masteries","factionTotals","factionsEnabled","FACTIONS_MASTERY_ID","speedrunsEnabled","SPEEDRUN_MASTERY_ID","Navigate","timeOpts","factionColor","level","SYMBOL_INFO","factionToColor","tabsDom","Link","fac1","fac2","fac","FactionIcon","teamsDom","score","speedrunTimeToString","jsxs","TeamDisplayNameDisplay","adminData","Fragment","thStyle","SelectFactionDisplay","teamData","userSelectedFaction","setSelectedFaction","useState","teamFaction","factionScoreContributions","isMyTeam","selectedFaction","selectedFactionScore","selectedFactionRank","getFactionRank","nextRankThreshold","FACTION_RANK_THRESHOLDS","factionsDom","isSelected","capitalize","factionDetailsDom","factionActionDom","evt","WSReqType","factionScoreDom","FactionRankDisplay","TeamPage","djangoBaseUrl","teamName","subscribedTeamMembers","useSubscribedTeamMembers","navigate","useNavigate","areTeamsLoaded","showSubpuzzles","useUserPreferencesStore","setShowSubpuzzles","GlobalUpdatesScopeType","Globals","LargeSpinner","duration","secs","hours","mins","solves","puzzles","battleGroups","solveRow","puzName","displayName","speedrunTime","subpuzzle","unused","unlockTime","solveTime","hasAnswer","className","speedrunText","text","PuzzleLink","rows","_a","p1","p2","subpuzzles","PUZ_NAME_MASTERY_TREE","puzzle","order1","order2","speedrunTotal","battleGroupName","used","isUsedForGlobalSpeedrunTime","e","actions","errorPng","Error","error","useRouteError","is404","isRouteErrorResponse","cardListToCardDict","cardList","cardDict","cardName","getDevKnobs","getInitAutoPrepOpts","params","overrideMasteryTrees","requestedDeck","requestedOppDeck","role","gameState","makeInitGameState","getClientGameSpec","allSpecs","getAllClientSpecs","gameSpec","inspector","Inspector","Player","Role","BattleBackground","props","windowWidth","setWindowWidth","windowHeight","setWindowHeight","bgElemRef","useRef","fixHeight","resizeObserver","puzNameOpt","mapYOffset","selectedPuzName","useSelectedPuzName","pagePuzName","usePuzNameIfExists","sliceBg","mapPos","path","screenTop","screenBottom","sliceHeight","firstSlice","getMapBgSliceArtPaths","src","Image","_extends","target","source","key","_assertThisInitialized","self","_setPrototypeOf","o","p","_inheritsLoose","subClass","superClass","setPrototypeOf","safeIsNaN","value","isEqual","first","second","areInputsEqual","newInputs","lastInputs","memoizeOne","resultFn","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","hasNativePerformanceNow","now","cancelTimeout","timeoutID","requestTimeout","callback","delay","start","tick","size","getScrollbarSize","recalculate","div","style","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","innerDiv","innerStyle","IS_SCROLLING_DEBOUNCE_INTERVAL$1","defaultItemKey$1","index","data","createListComponent","_ref","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","List","_this","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","scrollDirection","scrollOffset","scrollUpdateWasRequested","_this$props","direction","itemSize","layout","itemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","_","__","___","event","_event$currentTarget","clientWidth","scrollLeft","scrollWidth","prevState","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","ref","outerRef","nextProps","validateSharedProps$1","_proto","align","_this$props2","itemCount","scrollbarSize","_this$props3","initialScrollOffset","_this$props4","_this$state","_this$props5","children","height","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","width","isScrolling","onScroll","_this$_getRangeToRend","startIndex","stopIndex","items","_index","createElement","estimatedTotalSize","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","_ref2","_ref3","FixedSizeList","_ref4","instanceProps","lastItemOffset","maxOffset","minOffset","middleOffset","_ref5","offset","_ref6","numVisibleItems","_ref7","validateTargetTeam","targetTeamId","hasPvP","isPvPGameActive","isBlocked","isBlockedBy","PvPTeamDisplay","incomingRequestOpt","outgoingRequestOpt","timeRemaining","setTimeRemaining","incomingRequest","setIncomingRequest","outgoingRequest","setOutgoingRequest","useServerInterfaceController","useTeamId","usePuzName","battleStatus","useSubscribedBattleStatus","isBattleActive","GlobalStateBattleRoomStatus","invalidReason","selectedDeckData","useSelectedDeckData","activeTimeout","getTimeToNextSecond","timeNowSeconds","perSecondHandler","timeNow","selectedDeckSlot","isSelectedDeckValid","deckInvalidReasonText","buttonText","invalidReasonText","numMinutes","numSeconds","PvPLobbyTabButton","tab","refTimeNow","pvpLobbyTab","setPvPLobbyTab","incomingRequests","useSubscribedTeamPvP","hasIncoming","expiryTime","PvPLobbyTab","tooltipText","PvPLobbyDisplay","subscribedTeamPvP","pvp","hideInvalid","setHideInvalid","teamsList","setTeamsList","setRefTimeNow","teamsFilter","setTeamsFilter","fullTeamsList","outgoingRequests","blockedTeams","blockedByTeams","ring","isHidden","allRequests","nextUpdateTime","isInRing","pvpEnabled","PVP_MASTERY_ID","CutsceneDialogOption","content","onClick","disabled","delayed","setDelayed","StoryDialogBox","dialogue","speaker","preventScroll","dialogOptionsConfig","sendStep","useClientGameStore","isLocked","useIsLockedBesidesKeyframe","cardUnlocks","keroLayers","getKeroLayers","speakerImage","Speaker","KeroImage","getCutsceneArtPath","OverlayScrollbarsComponent","defaultOverlayScrollbarsOptions","FormattedText","dialogOption","dialogOptionIndex","StepType","CutsceneDialogBox","keyframe","isGameActive","useInspector","keyframeId","showNext","dialogOptions","scrollToPromise","top","promise","resolve","handler","maxScrollIsh","getIcon","puzData","battleGroup","isCutscene","isLegendary","getPuzzleMapIcon","PreBattleDialogueDisplay","useSelectedBattleGroup","preBattleDialogue","dialogBoxesDom","line","isSpeakerKero","isSpeakerDino","isSpeakerCaptainPi","PrepPuzzleSelectionDisplay","useBattleGroup","puzzlesInBattleGroup","usePuzzlesInBattleGroup","selectedBattleGroup","puzzlesInSelectedBattleGroup","usePuzzlesInSelectedBattleGroup","subscribedTeamBattle","useSubscribedTeamBattle","instanceablePuzzles","numPuzzlesPerBattleGroup","puzData1","puzData2","icon","isInstanceable","stageNum","roomStatus","isRoomActive","selectionPuzName","newSelectedPuzName","BattlerImage","PrepDisplay","isPvP","PUZ_NAME_PVP","setIsInstancerModalOpen","useNavStore","setIsPvPModalOpen","isInstancer","useIsInstancer","isBattleGroupSolved","errata","e1","e2","erratum","getCompletionVerb","InstancerNotice","PvPNotice","GRAPH_BUCKETS","FactionScoreTotalsDisplay","factionHistory","setNeedFactionHistory","hoverFaction","setHoverFaction","factionScores","orderedFactions","faction1","score1","faction2","score2","epoch","graphPoints","timeBucket","maxScore","scoreGraphDom","total","time","scoreTotalsDom","SpeedrunLeaderboardSummary","subscribedTeamSpeedrunLeaderboardSummary","useSubscribedTeamSpeedrunLeaderboardSummary","speedrunLeaderboardSummary","speedrunRank","makeSpeedrunRecordRow","rank","record","leaderboardDom","SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH","selfRankDom","clientTeamGlobalStateToTeamNameDisplayData","TabContext","createContext","Container","emptyContent","indexProp","setIndexProp","rest","index_","setIndex_","isControlled","setIndex","useCallback","ButtonList","useContext","Buttons","makeProps","overridden","allowEmpty","renderButtons","selected","makeButton","item","isActive","tooltipProps","Content","elt","Tabbed","Tabs","BattleControl","player","isSpectating","useIsAdminEnabledStore","showEndConfirm","setShowEndConfirm","selectedDeckFailedChecks","isDeckLocked","isSolved","isBattle","onJoin","onStart","onEnd","onPvpUnlock","buttons","failText","getFailText","label","PUZ_NAME_POST_FINAL_BATTLE","ConfirmModal","BattleStatus","isAdminOrHuntOver","useIsAdminOrHuntOver","hintsInfo","numHintsUsed","numHintsTotal","numHintsRemaining","hasMasteries","hasFactions","choicesText","choices","s","DeckCardDisplay","name","isEditingPriority","resetIsEditingPriority","cardsDB","useCardsDBStore","slot","useSlot","deck","useSubscribedDeck","selectedName","useSelectedCardData","setSelected","useSelectCardHandAllCardsAvailable","resetSelected","useResetSelectedCard","showAnimate","cardRef","isMouseOver","mouseX","mouseY","rect","toggleSelected","BALATRO_DAMPEN","BALATRO_SHINY_OPACITY","interpolate","input","x","y","endIndex","x0","x1","y0","y1","CardSize","card","resetStyle","handleMouseMove","rotateX","rotateY","diagonalMovement","sheenPosition","sheenOpacity","sheenPosition1","sheenPosition2","sheenPosition3","sheenPosition4","sheenPosition5","sheenPosition6","sheenGradient","isCardLegendary","count","getDeckCardCount","increaseCountStep","decreaseCountStep","increaseCount","decreaseCount","setPriority","renderQuantity","isDeckUpdateValid","CardDisplay","colorValue","ColorSymbol","nameCompare","costCompare","aCost","bCost","colorCompare","aVal","bVal","CollectionDisplay","setShowAnimate","setSize","sort","setSort","filter","setFilter","useStaticInspector","hasLegendary","currentSort","CollectionSort","ALL_CARDS","cardData","isCardValidForDeckbuilding","DeckStats","numCards","getDeckSize","maxNumCards","hasLegendariesUnlocked","numLegendaries","getDeckUniqueLegendaries","maxNumLegendaries","failedChecks","failedChecksStr","Check","failedCheck","PriorityCard","priorityCard","startEditingPriority","resetPriorityCard","DeckDisplay","setIsEditingPriority","lockedDeckSelection","isPriorityCardEnabled","PRIORITY_CARD_MASTERY_ID","ZoomedCardDisplay","useZoomedCard","playerPerspective","usePlayerPerspective","permanentId","permanent","useDeckbuildingStore","create","set","get","displayNameInput","CardSource","empty","_b","_c","_d","DeckSidebar","setDisplayNameInput","DeckList","DeckListDeck","isDisabled","secondaryHighlight","highlight","context","setHoveredDeck","isEmpty","onSelect","onEdit","DisplayedDeck","showPriorityCard","selectedDeck","displayedDeck","disabledExcept","highlightedDeckSlot","secondaryHighlightedDeckSlot","lockedDeckSlot","decks","optDeck","createNewDeck","DeckSelection","canSelectDeck","activeGame","PUZ_NAME_TUTORIAL_DECKBUILDING","Friends","cardUnlocksForPuzzle","useCardUnlocksForSelectedPuzzle","cardUnlocksDom","PrepFactionDisplay","isFactionsEnabled","lock","MasteriesExplorer","enabledMasteries","selectedMasteryId","setSelectedMasteryId","hoveredMasteryId","setHoveredMasteryId","selectMasteryDom","x2","y2","MASTERY_GRID_WIDTH","MASTERY_GRID_HEIGHT","masteryId","isEnabled","displayedMasteryId","effectText","PrepMasteries","isMasteryTreeEnabled","toMasteries","SubpuzzleButton","puzIndex","isNew","isInstancerRoomActive","goToPuzzle","SubpuzzleSelection","numPuzzles","isMoonick","BATTLE_GROUP_NAME_MOONICK","unlockGrouping","MOONICK_UNLOCK_GROUPING","activeRow","setActiveRow","curRow","rowStartIndex","firstPuz","acc","cur","rowDom","idx","nextTooltip","MOONICK_UNLOCK_THRESHOLDS","useWindowDimensions","setHeight","setWidth","onResize","PrepRight","isSpeedrunEnabled","hasStats","isTall","activeTab","setActiveTab","tabItems","PrepPage","isUnmounted","setIsUnmounted","setSubscribedTeamBattle","setSubscribedTeamDecksTeamId","isInstancerModalOpen","hasClosedInstancerModal","setHasClosedInstancerModal","lastInstancerRoom","setLastInstancerRoom","isPvPModalOpen","hasClosedPvPModal","setHasClosedPvPModal","allPuzzles","isDummy","isStageLocked","isUnknownBattle","isValidBattle","useIsValidBattle","BATTLE_GROUP_NAME_INSTANCER","redirectPuzName","unsolvedPuzzles","otherPuzName","navigateToBattlePage","toastr","isCanceled","autoPrepOpts","res","parent","grandparent","PUZ_NAME_FINAL_BATTLE","NUM_LEGENDARIES","getUnlockableCards","Modal","useUserLogStore","msg","DeleteTags","IMAGE_PATH","bodySingle","bodySegment","head","frontWing","backWing","udders","blackLeg","whiteLeg","fishTail","fps","speed","circleWidth","circleHeight","keroX","keroY","KeroFishyAnim","__publicField","parentParam","fishyElement","phase","recoil","part","tag","scale","subpart","img","isU","isW","position","u","w","counter","z","j","parts","KerodosAnimInternal","keroPhase","getKeroLayersForFinalBattle","fishyAnimRef","KerodosAnim","memo","AIBattler","animKeroDos","useRoomBattleGroupName","hideBattler","chat","isFinalBattle","cssIdFor","UIElement","CutsceneUI","roomBattleGroupName","useRoomBattleGroupNameFromGameState","image","imageChildren","useGameHotkeys","keyboardCursorRef","useKeyboardCursorStore","enabled","inOneChoice","KeyboardCursorMode","keyboardState","fieldCursorLocation","handCursorIndex","handPlayer","subcursorLocation","cursorMode","useZoomCardStore","getCurrentInspectorInfo","cardDetails","computeFieldCard","computeHandCard","isLockedBesidesKeyframe","setLocked","useHotkeys","processDirectionKey","DirectionKey","processEscapeKey","processSelectKey","hotkeys","processEndTurnKey","isHotkeyPressed","processDrawKey","processSpecialKey","processFlexKey","processCreate1Key","processCreate2Key","processFocusFieldKey","processFocusHandKey","processSelectHandCardKey","processHelpKey","inspectorInfo","stepMaker","currentEffectOpts","useTurnStore","pendingEffect","pendingForm","selectedCard","selectedPermanent","SelectedCardType","EffectOptType","letter","choice","c","effectOpt","isEffectOptValid","effectOpts","sendStepIfValid","pendingForms","makeInspector","StepMaker","results","computeResultsDirectionKey","applyMutations","computeResultsCancelKey","computeResultsSelectKey","computeResultsEndTurnKey","computeResultsDrawKey","computeResultsSpecialKey","computeResultsFlexKey","computeResultsCreate1Key","computeResultsCreate2Key","computeResultsFocusFieldKey","computeResultsFocusHandKey","computeResultsSelectHandCardKey","computeResultsHelpKey","mutations","selectedHandCard","mutation","ExternalMutationType","handCardId","defenderId","defender","effectForms","abilityType","AbilityType","combos","isHotkeyModalOpen","setIsHotkeyModalOpen","step","isValid","StepButton","id","shortcut","startEffect","useStartEffect","useEffectOpts","useRole","useStepMaker","resolved","payment","stepToPayment","gain","stepToGain","helpText","stepToName","gemsDisplay","GemsDisplay","GemType","passthrough","isPassthrough","isEndingTurn","hasActionsLeft","helpTooltip","describeStep","defaultButton","effects","HoverNotifier","DeckInfo","playerState","mouseZoomedCard","setZoomedCard","resetZoomedCard","hasDrawCardMastery","DRAW_CARD_MASTERY_ID","drawStep","drawPile","topCard","topCardResolved","isScrying","onScry","onUnscry","Icon","IconType","NORMAL_CARD_LIMIT","HandCardsDisplay","isAllCardsAvailable","cards","isSmall","isTurnPending","resetSelectedCard","resetEffectOpts","useResetEffectOpts","setSelectedCardHand","useSelectCardHand","setSelectedCardHandAllCardsAvailable","roomId","focusHandCardInfo","useAnimationSpeed","cssWidth","setCssWidth","handCard","isKeyboardFocused","AnimatePresence","keyboardFocused","motion","SHORTCUT_END_TURN","HandDisplay","hotkeysEnabled","allCardsHand","allCardNames","endTurnStep","disable","canRoleControlPlayer","useSize","observer","UNMASK_PADDING","UnmaskRect","unmaskSelector","maskElt","setMaskElt","setElt","setX","setY","useMutationObserver","updateOffset","maskTop","maskLeft","eltTop","eltLeft","Mask","selector","unmaskSelectors","MessagePopover","placement","isPositioned","setIsPositioned","refs","floatingStyles","updPos","useFloating","refEl","floatingEl","autoUpdate","flip","shift","limitShift","FloatingFocusManager","Keyframe","nextElt","setNextElt","selectorOpt","selectorPermanent","selectorSlot","nextSelectorOpt","nextSelectorPermanent","showMask","useCutsceneUI","resolveSelectorPermanent","selectorElem","matches","selectorFor","resolveSelector","nextSelector","onNext","prevPointerEvents","CursorEventType","CursorEventMoveZod","CursorEventRemoveZod","CursorEventClickZod","getRootElt","getRefElt","posToRatio","rX","rY","ratioToPos","throttle","func","wait","inThrottle","args","murmurhash","str","seed","l","h","k","colorHash","Cursor","connId","animated","color","outline","cursorSvg","CursorClick","useMouseMove","pos","setPos","spectateTeamId","enableSendEvents","sendReq","sendReq2","onMouseLeave","isJsonNull","num","onMouseMove","onClickCapture","lastClickId","Presence","cursorGroupName","isCursorGroupReady","setIsCursorGroupReady","cursors","setCursors","clicks","setClicks","rawPos","clamp","cursor","click","reqId","cleanupOnAck","ackReqId","ServerInterfaceType","SHORTCUT_SPECIAL","SHORTCUT_FLEX","SHORTCUT_CREATE1","SHORTCUT_CREATE2","useSelectedPermanentCardActionData","useSelectedPermanent","cardActions","gemColorCombos","gemColors","createStep","abilityStep","CardActionsDisplay","fallback","selectedPermanentCardActionData","userPrompt","describeForm","DropdownSelectAndSubmit","button","selectedOption","setSelectedOption","opt","GameLog","userLog","renderedUserLog","setRenderedUserLog","isFullyScrolled","setIsFullyScrolled","useLayoutEffect","el","GameMenu","disableSteps","showRestartModal","setShowRestartModal","statusText","turnNum","isOwnTurn","winner","saveLoadDom","checkpointSummaries","newSlot","MAX_MANUAL_SAVES","checkpointSummary","checkpointSummaryDom","turnNumber","checkpointRoomId","timestamp","isOldRoom","GamePhase","restartConfirmText","onRestart","NESTED_TOOLTIP_TEXT","location","GameSettings","setSpeed","recurseFieldTooltips","setRecurseFieldTooltips","recurseActionTooltips","setRecurseActionTooltips","setAnimKeroDos","isHotkeysEnabled","isHotkeysEnabledPref","useHotkeyPreferencesStore","setIsHotkeysEnabledPref","useResolvedPath","spectateLink","newVal","LeftOfFieldDisplay","resetCard","isGameSettingsEnabled","useIsGameSettingsEnabled","playerUs","playerThem","opponentOf","PlayerGemsDisplay","PLAYER_SYMBOL","LOW_TIME_THRESHOLD","PVP_TURN_TIME_LIMIT","SpeedrunTimer","keepRunningDuringUpdates","isOurTimer","timerRef","outOfTime","setOutOfTime","serverInterface","timerConfigSnapshot","setTimerConfigSnapshot","animationFrame","updateTimer","prevTurnsTime","startTurnTime","isTimerRunning","currTurnTime","timeToShow","timeLeft","claimTimeVictory","FieldTeamDataDisplay","usePrimaryPuzName","roomPuzName","useRoomPuzNameFromGameState","roomBattleGroup","useRoomBattleGroupFromGameState","roomSubpuzzleIndex","useRoomSubpuzzleIndexFromGameState","showSpeedrunTimer","instancerIndex","teamNameDom","REPUTATION_BOOST_MASTERY_ID","RightOfFieldDisplay","zoomedCard","FactionScoreCalculationDisplay","solvedModalState","stats","isWinner","FactionScoreConstants","calcFactionScore","SolvedModal","setSolvedModalState","isSolveReady","puzzlesInRoomBattleGroup","getPuzzlesInBattleGroup","roomPuzIndex","hasNextPuzzle","nextPuzzle","nextPuzzleNeedsDeck","makeStaticInspector","nextPuzzlePath","BATTLE_GROUP_NAME_TUTORIAL","targetRoomId","battleCardUnlocks","loseReason","postBattleDialogue","prevBestSpeedrunTime","hasSpeedrunMastery","hasFactionsMastery","factionScoreFromGame","showFactionScore","allCardUnlocks","isSpeedrunNewBest","LoseReason","useGameEnd","isGameEndUITriggered","setIsGameEndUITriggered","isEndCutsceneRedirectHandled","isPageReady","setLeftTabIndex","usePuzzlesInRoomBattleGroupFromGameState","hasGameEnded","endCutsceneRedirect","endCutsceneRedirectDjango","LeftTab","useUpdatesQueue","enterRoomParams","delays","processUpdateAsync","processUpdatesSync","setGameState","cleanup","upd","isStale","speedPref","update","getBattleGroup","getIsGameSettingsEnabled","timeout","timer","UPDATE_DELAYS","UpdateType","triggerUpdateSideEffects","addToUserLog","setRoomId","setIsEndCutsceneRedirectHandled","getPlayerPerspectiveForRole","turnResetCard","keyboardResetCard","keyboardResetEffectOpts","resetHoverState","useHoverActionStore","turnText","isReplay","endMessage","won","handleUpdateAsync","applyUpdate","setUpdateLock","setIsPageReady","animateUpdate","useAnimationStore","err","handleUpdatesSync","upds","useGameUpdates","isAdminEnabled","needRedirectToPrep","useNeedRedirectToPrep","useInitSendStep","setStepLock","setSendStep","resetGameUIActionsState","useResetGameUIActionsState","resetForSuccessfulStep","errCode","WSErrorCode","resp","useTutorialKeyframes","isKeyframeSelected","setSelectedFieldPermanent","useSelectFieldPermanent","query","selectPermanentId","GamePage","useIsLocked","clearLog","resetKeyboardState","setIsHotkeysEnabled","hideGame","FieldDisplay","rockLobsterUrl","sfxUrl","HowlerGlobal","Howler","vol","setupAudioContext","ids","sound","muted","ext","test","audioTest","mpegTest","ua","checkOpera","isOldOpera","checkSafari","safariVersion","isOldSafari","unlock","audioNode","testPlay","audio","handleSuspension","Howl","url","Sound","loadBuffer","sprite","internal","soundId","seek","stop","setParams","node","playWebAudio","playHtml5","play","loadedNoReadyState","listener","from","to","len","currentTime","end","isGroup","diff","steps","stepLen","lastTick","loop","rate","playing","seekAndEmit","emitSeek","realTime","rateSeek","sounds","remCache","cache","fn","once","events","isId","keys","task","limit","cnt","isIOS","checkIE","howl","volume","loadSound","dataView","decodeAudioData","xhr","code","safeXhrSend","arraybuffer","success","buffer","iOS","appVersion","version","safari","exports","global","pan","xUp","yUp","zUp","or","_super","pannerType","setupPanner","pa","panner","type","SFX","sfxMetadata","useAudioEffect","useAudioPreferencesStore","isMuted","layers","register","setPlayAudioNotif","players","AudioLayer","rockLobster","playAudio","sfx","unregister","notif","HuntNotificationType","StartPrepPage","setSearchParams","isMasteryTree","StartBattlePage","restart","isUnlocked","StartVictoryPage","DeckCollectionPage","useBattleGroupName","useMasteryTreeStore","answerSelection","pendingAnswerSelection","hoverCell","SidebarFactionDisplay","MasteryTreePage","showResetModal","setShowResetModal","setAnswerSelection","setPendingAnswerSelection","setHoverCell","masteryTree","useSubscribedMasteryTree","setNavIsMasteryTreePage","setIsMasteryUnlockModalOpen","AnswerOrientation","availableAnswers","answer","puzPrompt","PUZ_NAME_MASTERY_TREE_PROMPT","enabledMasteryId","getMasteryIdAt","masteryData","hoveredPlacement","getPlacementCharIndexAt","newPlacement","answersDom","unnormalizedAnswer","normalizeAnswer","isUsed","buttonsDom","MasteryTreeStepType","orientation","charGrid","makeMasteryTreeGrid","gridDom","existingChar","existingPlacement","isConnected","newCharIndex","newChar","isCellInvalid","isPlacementCharValid","hasHoveredMastery","hasHoveredPlacement","isStart","START_X","START_Y","hasSelectedMastery","highlightClass","isClickable","charToShow","numEnabledMasteries","totNumMasteries","fishMetaDom","PUZ_NAME_FIRST_ANSWER","Clickable","clickableId","completionText","isMeta","isAnyRoomActive","linkTargetOverride","rightIcon","rightTooltip","innerDom","WEIRD_BATTLE_GROUPS","getBattlerArtPath","PUZ_NAME_INTRO","ClickableSmall","windowScrollHeight","scrollTo","scrolling","setScrolling","INIT_CLICKABLE","MapDisplay","minimapScreenRef","shouldShowInitMap","useShouldShowInitMap","isPuzzleStatsEnabled","SOLVE_COUNTS_MASTERY_ID","isPvPEnabled","isFishMetaUnlocked","getClickableState","clickableProps","c1","c2","clickable","scrollToId","obj","clickableElt","fudgedOffset","finder","unsolved","next","pageContents","ParallaxBackground","isTitleRevealed","getMapBgArtPath","MapPage","setScrollHeight","footerHeight","setFooterHeight","contentElemRef","footerElemRef","footerElem","contentElem","elem","subscribedTeamBattleSelection","subscribedTeamFishPuzzleSelection","setSubscribedTeamFishPuzzle","numLegendariesBefriended","numLegendaryBattlesUnlocked","isPreFinalBattleUnlocked","PUZ_NAME_PRE_FINAL_BATTLE","LOCAL_HUNT_CLOSE_DATE","RoutedLink","AdminPuzzleDisplay","puzLabel","AdminCardDisplay","TeamAdminDisplay","subscribedTeamId","unlockedPuzzles","isInactive","isTempBlocked","stageNumbers","getPuzzleStageNumbers","puzzlesDom","puz1","puz2","unlockedPuzzle","battleGroupDisplayName","cardsDom","setDisplayNameFromInput","AdminPage","selfTeamId","setSubscribedTeamId","searchText","setSearchText","FAST_SYNC_DANGER_THRESHOLD","SLOW_SYNC_DANGER_THRESHOLD","makeShortName","ret","isLastAlpha","isAlpha","getDirtyStateEmoji","dirtyStateType","DirtyStateType","getPuzzleDisplayName","makePuzColData","reactKeyPrefix","makePuzListColData","makeBigBoardColGroup","cols","colData","TeamListTeamName","BigBoardCheckboxOption","elemId","desc","onChange","BigBoardTeamSearch","setBigBoardTeamFilter","BigBoardPageSelection","numTeamsPerPage","useBigBoardPreferencesStore","setNumTeamsPerPage","pageNum","setPageNum","numTeamsPerPageInput","setNumTeamsPerPageInput","pageNumInput","setPageNumInput","numTeams","maxPageNum","setPageNumAndInput","clampedNum","setNumTeamsPerPageFromInput","parsed","newMaxPageNum","setPageNumFromInput","BigBoardHeader","useEmojiHeaders","colKey","shortName","emoji","puzzleLink","showTooltip","setShowTooltip","hover","useHover","getReferenceProps","getFloatingProps","useInteractions","linkChildren","isDirtyStateSyncTimeSignificant","DirtyStateCellNoMemo","dirtyState","isSummary","isFast","timeSinceSync","showTime","isDangerous","DirtyStateCell","IntervalMetricsCell","numPerSecond","useBigBoardPageTeamIds","showHidden","sortFunc","bigBoardTeamFilter","teamIds","useSortedFishPuzzles","isFullPuzzle","getNormalizedDirtyState","allTeams","teamState","fastSync","misc","checkpoints","rooms","answers","teamDirtyState","updateDirtyStateSummary","dirtyStateSummary","dirtyStateTypeSignificanceOrder","getDirtyStateMetrics","normalizedDirtyState","dirtyStateCounts","teamDirtyStateSummaries","colDirtyStateSummaries","ServerHealthPage","setUseEmojiHeaders","sortOrder","setSortOrder","serverHealth","sortedFishPuzzles","sortedBattles","sortedCheckpoints","dirtyStateMetrics","teamNumRequestsMetrics","BigBoardSortOrder","teamId1","teamId2","summary1","summary2","lastSyncTime1","lastSyncTime2","isDirtyDiff","hasSync1","hasSync2","numPerInterval1","fastSyncMetrics","slowSyncMetrics","checkAnswerMetrics","fastSyncQueueLength","numAuthsMetrics","numRequestsMetrics","teamNumAuthsMetrics","numActivePeriodicTasksHandlers","numPendingSubmissionTasks","numCompletedRoomsToSync","teamInitQueueLength","numActiveConns","userTimeUsage","systemTimeUsage","getTeamNumAuthsPerSecond","metrics","intervalLength","numPerInterval","getTeamNumRequestsPerSecond","metricsSummaries","deckCols","NUM_DECK_SLOTS","roomCols","checkpointsCols","answerCols","rowsDom","teamNumAuthsPerSecond","teamNumRequestsPerSecond","getIntervalMetricsSummaryString","order","BigBoardPuzzleCellNoMemo","teamPuzState","huntEndTime","masteryTreeSolveTime","finalBattleSolveTime","isFish","battleGroupNumMembers","numWrongGuesses","numMembers","isPostsolved","isBacksolved","BigBoardPuzzleCell","BigBoardPage","collapseSubbattles","setCollapseSubbattles","setShowHidden","showCardUnlocks","setShowCardUnlocks","bigBoard","sortedCutscenes","sortedInstancers","sortedMasteries","BATTLE_GROUP_NAME_MASTERY_TREE","sortedCards","sortedLegendaries","battleCols","fishPuzzleCols","cutsceneCols","instancerCols","masteryCols","cardCols","legendaryCols","globalRanks","solveTimes","solveTimeRanks","puzStats","teamStats","teamBattleGroupNumMembers","currTeamStats","puzState","currPuzStats","isUsedForSolveCount","puzSolveTimes","record1","record2","unlocks","selectedPuzzles","globalRank","leftCols","makePuzStatsRow","rowName","makeElem","makePercentage","denom","col","kerosNotesPng","KeroProTip","KerosNotesPage","UnlockCardDisplay","CardEmbed","UnlockPuzzleDisplay","UnlockCardsDisplay","cardName1","cardName2","isLegendary1","isLegendary2","UnlockPuzzlesDisplay","UnlockInfo","resetAll","unlockAllPuzzles","unlockCards","cardNames","unlockAllNonLegendaries","unlockAllLegendaries","puzUnlockCount","solveCount","cardUnlockCount","UnlockPage","PageBase","isRefreshNeeded","setIsRefreshNeeded","isDisconnected","setDisconnected","isDownForMaintenance","setIsDownForMaintenance","getServerInterfaceController","setCardsDB","isRootPage","useMatch","makeCardsDB","cleanupOnError","cleanupAuthEffect","cleanupAfterDisconnect","numReconnections","reconnectDelayInSeconds","Outlet","ScrollRestoration","NavWrapper","useLocation","setHasRouter","routerNavigatePath","setRouterNavigatePath","setNavPuzName","tray","router","createBrowserRouter","subpath","ArtCreditsPage","App","RouterProvider"],"mappings":"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","x_google_ignoreList":[7,8,9,10,11,12,74]}