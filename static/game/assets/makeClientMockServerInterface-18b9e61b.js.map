{"version":3,"file":"makeClientMockServerInterface-18b9e61b.js","sources":["../../../interactive/src/game-server/server-interface/MockServerInterface.ts","../../node_modules/localforage/dist/localforage.js","../../../interactive/src/engine/puzzles/all-keyframes.json?raw","../../../interactive/src/engine/puzzles/all-keyframes-client.ts","../../../interactive/src/game-server/backend-interface/BackendInterfaceController.ts","../../../interactive/src/game-server/backend-interface/backend-sync.ts","../../../interactive/src/game-server/server-controllers/battle-controller.ts","../../../interactive/src/game-server/server-controllers/pvp-controller.ts","../../../interactive/src/game-server/server-controllers/team-aux-controller.ts","../../../interactive/src/game-server/server-controllers/team-controller.ts","../../../interactive/src/engine/cards/card-effects.ts","../../../interactive/src/engine/game-specs/common.ts","../../../interactive/src/engine/game-specs/radlands.ts","../../../interactive/src/engine/game-specs/robot.ts","../../../interactive/src/engine/game-specs/tutorial1.ts","../../../interactive/src/engine/game-specs/tutorial2.ts","../../../interactive/src/engine/game-specs/tutorial3.ts","../../../interactive/src/engine/game-specs/tutorial4.ts","../../../interactive/src/engine/game-specs/tutorial5.ts","../../../interactive/src/engine/game-specs/tutorial6.ts","../../../interactive/src/engine/game-specs/puzzle-4.ts","../../../interactive/src/engine/game-specs/puzzle-8.ts","../../../interactive/src/engine/game-specs/puzzle-9.ts","../../../interactive/src/engine/game-specs/puzzle-22-logic.ts","../../../interactive/src/engine/game-specs/puzzle-22.ts","../../../interactive/src/engine/game-specs/puzzle-28-SPOILERS-data.ts","../../../interactive/src/engine/game-specs/puzzle-28.ts","../../../interactive/src/engine/game-specs/puzzle-31.ts","../../../interactive/src/engine/game-specs/puzzle-44.ts","../../../interactive/src/engine/game-specs/puzzle-46.ts","../../../interactive/src/engine/game-specs/puzzle-50-common.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/canalview.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/cave.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/kurodoko.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/kurotto.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/lightandshadow.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/minesweeper.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/mochikoro.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/nurikabe.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/slitherlink.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/snake.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/tasquare.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/yinyang.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/neighbors.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/rowcolumn.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/visions.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/areas.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/single.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/ones.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/rectangles.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/squares.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/twosnakes.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/touchingpaths.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/connectedvision.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/rectangleareas.ts","../../../interactive/src/engine/game-specs/puzzle-50-data/final.ts","../../../interactive/src/engine/game-specs/puzzle-50.ts","../../../interactive/src/engine/game-specs/puzzle-51-server-data.ts","../../../interactive/src/engine/game-specs/puzzle-51.ts","../../../interactive/src/engine/game-specs/puzzle-76.ts","../../../interactive/src/engine/game-specs/puzzle-80.ts","../../../interactive/src/engine/game-specs/puzzle-82.ts","../../../interactive/src/engine/game-specs/puzzle-90.ts","../../../interactive/src/engine/game-specs/puzzle-98-ramp.ts","../../../interactive/src/engine/game-specs/puzzle-98-shadow.ts","../../../interactive/src/engine/game-specs/puzzle-98-splitter.ts","../../../interactive/src/engine/game-specs/puzzle-98-yinyang.ts","../../../interactive/src/engine/game-specs/puzzle-98-vulture.ts","../../../interactive/src/engine/game-specs/puzzle-53.ts","../../../interactive/src/engine/game-specs/puzzle-101.ts","../../../interactive/src/engine/game-specs/puzzle-109.ts","../../../interactive/src/engine/game-specs/test-battle.ts","../../../interactive/src/engine/all-game-specs.ts","../../../interactive/src/engine/Controller.ts","../../../interactive/src/engine/Engine.ts","../../../interactive/src/game-server/UpdatesMulticaster.ts","../../../interactive/src/game-server/sync-controllers.ts","../../../interactive/src/game-server/server-controllers/rooms-controller.ts","../../../interactive/src/game-server/server-controllers/stats-controller.ts","../../../interactive/src/game-server/server-controllers/cursors-controller.ts","../../../interactive/src/game-server/manual-validation.ts","../../../interactive/src/game-server/GameServer.ts","../../../interactive/src/game-server/authentication-interface/MockAuthenticationInterface.ts","../../src/makeMockServer.ts","../../src/makeClientMockServerInterface.ts"],"sourcesContent":["import {\n  ServerInterface,\n  ServerInterfaceCallbacks,\n} from \"game-server/server-interface/ServerInterface\";\nimport { GameServer } from \"game-server/GameServer\";\n\nexport class MockServerInterface implements ServerInterface {\n  gameServer: GameServer;\n  callbacks?: ServerInterfaceCallbacks;\n  connUid?: string;\n  handleMsg: (msg: string) => void;\n  disconnect: () => void;\n  isClosed: boolean;\n\n  constructor(gameServer: GameServer, connUid?: string) {\n    this.gameServer = gameServer;\n    this.connUid = connUid;\n    this.handleMsg = (msg) => {\n      throw new Error(\"connection not initialized yet\");\n    };\n    this.disconnect = () => {\n      throw new Error(\"connection not initialized yet\");\n    };\n    this.isClosed = false;\n  }\n\n  init(callbacks: ServerInterfaceCallbacks) {\n    this.callbacks = callbacks;\n    this.connect();\n  }\n\n  private connect(): void {\n    if (this.callbacks === undefined)\n      throw new Error(\"expect callbacks to be defined\");\n    const { onOpen, onResp, afterDisconnect } = this.callbacks;\n    const { handleMsg, removeClient } = this.gameServer.addClient(\n      {\n        send: (msg) => {\n          if (this.isClosed) return;\n          Promise.resolve().then(() => {\n            onResp(msg);\n          });\n        },\n        close: () => {\n          this.close();\n        },\n      },\n      this.connUid\n    );\n    this.handleMsg = handleMsg;\n    this.disconnect = () => {\n      removeClient();\n      afterDisconnect({\n        numReconnections: 0,\n        reconnectDelayInSeconds: 0,\n      });\n    };\n\n    onOpen();\n  }\n\n  send(msg: string) {\n    Promise.resolve().then(() => {\n      this.handleMsg(msg);\n    });\n  }\n\n  reconnect() {\n    this.disconnect();\n    this.connect();\n  }\n\n  close() {\n    this.disconnect();\n    this.isClosed = true;\n  }\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","export default \"[{\\\"id\\\":\\\"intro-start\\\",\\\"dialogue\\\":\\\"⚠️ Warning ⚠️\\\\nCutscenes are synced across your team. Gather your teammates here before proceeding!\\\\n(Don’t worry if someone can’t make it — you’ll always be able to replay a cutscene later.)\\\",\\\"dialogOptions\\\":[\\\"Ready!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true},{\\\"id\\\":\\\"keyframe-1\\\",\\\"dialogue\\\":\\\"Your treasure map has proven true! All that work deciphering esoteric codes and cryptic clues has finally paid off!\\\",\\\"dialogOptions\\\":[\\\"Open the chest already!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"treasure-chest.png\\\"},{\\\"id\\\":\\\"keyframe-2\\\",\\\"dialogOptions\\\":[\\\"!!!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kaboom.png\\\"},{\\\"id\\\":\\\"keyframe-3\\\",\\\"dialogOptions\\\":[\\\"...?!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"explosion.png\\\"},{\\\"id\\\":\\\"keyframe-4\\\",\\\"dialogue\\\":\\\"Nice ta meetcha! I’m KERO, a magic carp!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"What were you doing in that box?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-5\\\",\\\"dialogue\\\":\\\"I’m guarding it! It must never be opened.\\\\nA great evil is trapped within!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"Um\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-6\\\",\\\"dialogue\\\":\\\"OwO ...you opened it didn’t you.\\\",\\\"speaker\\\":\\\"angry_kero\\\",\\\"dialogOptions\\\":[\\\"You weren’t guarding it very well.\\\",\\\"Maybe you shouldn’t have sealed it in a treasure chest.\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"angry-kero.png\\\"},{\\\"id\\\":\\\"keyframe-7\\\",\\\"dialogue\\\":\\\"Now you’ve done it!\\\\nCHAOS will descend upon the world!\\\",\\\"speaker\\\":\\\"angry_kero\\\",\\\"dialogOptions\\\":[\\\"Okay, okay, what can we do about it?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"angry-kero.png\\\"},{\\\"id\\\":\\\"keyframe-8\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"Take this uwuand! It’ll help us transform the monsters of this cave into friends, using the POWER OF UWU!!!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"uwuand.png\\\"},{\\\"id\\\":\\\"tutorial1-start-1\\\",\\\"dialogue\\\":\\\"Look! A New Boarn has been corrupted by the \\\\nCHAOS! We’ll save it with a CARD BATTLE!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Let’s do it!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-10\\\",\\\"dialogue\\\":\\\"Here’s a friend I made earlier!\\\\nHis name is Yoshi. Yoshisaur Munchakoopas!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selectorPermanent\\\":\\\"yoshisaur-munchakoopas\\\",\\\"dialogOptions\\\":[\\\"Wait, Yoshi? Do you mean-\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial1-end-turn-1\\\",\\\"dialogue\\\":\\\"No time for questions!\\\\nWe can’t do anything right now, so hit End Turn.\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selector\\\":\\\"end_turn\\\",\\\"showMask\\\":true},{\\\"id\\\":\\\"tutorial1-start-2\\\",\\\"dialogue\\\":\\\"Oh no! New Boarn attacked Yoshi!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-13\\\",\\\"dialogue\\\":\\\"This is New Boarn’s Power, 3.\\\\nWhen a Creature Attacks, it deals damage equal to its Power.\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selector\\\":\\\"power\\\",\\\"selectorPermanent\\\":\\\"new-boarn\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-14\\\",\\\"dialogue\\\":\\\"This is Yoshi’s Health. It was 4, now it’s 1.\\\\nIf his Health hits 0, he’ll get Destroyed!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selector\\\":\\\"health\\\",\\\"selectorPermanent\\\":\\\"yoshisaur-munchakoopas\\\",\\\"dialogOptions\\\":[\\\"We can’t let that happen!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-15\\\",\\\"dialogue\\\":\\\"No worries! I’s our turn now. Yoshi is ready to Act!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Yeah! Yoshi, use, uh, ...Swallow?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial1-before-give-food\\\",\\\"dialogue\\\":\\\"Not so fast! Most Actions in battle cost Food,\\\\nbut it looks like you don’t have any yet. $(ﾟ ヘﾟ)$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"(ﾟ ヘﾟ)\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-17\\\",\\\"dialogue\\\":\\\"Here, take this Egg!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selector\\\":\\\"gems\\\",\\\"dialogOptions\\\":[\\\"Thanks!\\\",\\\"Wait, where’d this egg come fr-\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-18\\\",\\\"dialogue\\\":\\\"We’ve gotta use that Egg right away!\\\\nFood doesn’t last longer than a single turn.\\\\nQuick, select Yoshi!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"nextSelectorPermanent\\\":\\\"yoshisaur-munchakoopas\\\",\\\"blocking\\\":true,\\\"showNext\\\":false},{\\\"id\\\":\\\"keyframe-19\\\",\\\"dialogue\\\":\\\"Now if you mouse over New Boarn to Attack it,\\\\nyou’ll see that Attacking will use up that Egg.\\\\nClick on New Boarn to Attack!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"You want me to attack a newboarn?\\\",\\\"Can’t we find a peaceful resolution?\\\"]},{\\\"id\\\":\\\"tutorial1-attack\\\",\\\"dialogue\\\":\\\"Don’t worry! After we beat the CHAOS all out of it, we’ll use the uwuand to transform it into a FRIEND!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"...Seems legit.\\\",\\\"The Power of Friendship!\\\"]},{\\\"id\\\":\\\"tutorial1-start-3\\\",\\\"dialogue\\\":\\\"You did it! You Destroyed New Boarn!\\\\nNow use the uwuand!!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"✨\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"uwuand.png\\\"},{\\\"id\\\":\\\"tutorial1-card\\\",\\\"dialogue\\\":\\\"New Boarn is now our friend!!!!! $٩( ˃▿˂ )۶$\\\\nThis card will let you Summon it to help you in the future!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true},{\\\"id\\\":\\\"keyframe-23\\\",\\\"dialogue\\\":\\\"There are more battles ahead, but before we move on,\\\\nI’ve gotta tell you about the Instancer!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"What’s the Instancer?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-24\\\",\\\"dialogue\\\":\\\"It’s a web of parallel timelines maintained by a mysterious coven of spiders!\\\\nYour team can use it to experiment with different strategies for the same battle at the same time.\\\\nYou can find it on the Map, or jump straight to it from the navbar!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"I always suspected spiders could do that sort of thing.\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-25\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"I think battles are more fun when everyone’s together though...\\\\n$(〃´𓎟`〃)$ but it’s up to ya if you wanna use it!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"tutorial2-start-1\\\",\\\"dialogue\\\":\\\"It’s time for our next battle! \\\\nI hear that swine camp around here.\\\\nWe need to Destroy their Camp!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Why?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial2-before-summon\\\",\\\"dialogue\\\":\\\"We win battles by Destroying all Enemy Bases!\\\\nOnly then can we use the power of UWU to recruit more friends!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"That makes sense.\\\",\\\"That makes no sense.\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial2-end-turn-1\\\",\\\"dialogue\\\":\\\"Here, I Summoned New Boarn from earlier!\\\\nWe only just Summoned it, so it’s not Ready to Act yet.\\\\nClick End Turn to start the next Turn, and it’ll be Ready!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial2-start-2\\\",\\\"dialogue\\\":\\\"Your Camp made a Pie!\\\\nA Camp makes one Pie at the start of each turn.\\\",\\\"speaker\\\":\\\"kero\\\",\\\"selector\\\":\\\"gems\\\",\\\"dialogOptions\\\":[\\\"Yum!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial2-attack-1\\\",\\\"dialogue\\\":\\\"Also, New Boarn can Act now!\\\\nUse it to Attack the Camp.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Go ham, little sow!\\\",\\\"Sow discord, little ham!\\\"]},{\\\"id\\\":\\\"tutorial2-end-turn-2\\\",\\\"dialogue\\\":\\\"After a Creature Acts, it becomes tired and won’t be\\\\nReady until the next turn.\\\\nLet’s end our turn now. We’ll Attack again next turn!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial2-start-3\\\",\\\"dialogue\\\":\\\"Oh no! The swine noticed us!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-33\\\",\\\"dialogue\\\":\\\"No matter. They’re just Creatures.$ ╮(╯∀╰)╭$\\\\nWe only need to Destroy their Camp to\\\\nactivate the power of UWU!\\\\nGo ahead and Attack their Camp!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"nextSelectorPermanent\\\":\\\"new-boarn\\\",\\\"showNext\\\":false},{\\\"id\\\":\\\"tutorial2-attack-2\\\",\\\"dialogue\\\":\\\"Huh, the Camp is grayed out. That means we can’t Attack it.\\\\n...Oh right, it’s Protected! $(ノ_<。)$\\\\nThat’s what it’ll say if you mouse over it.\\\\nA Unit is Protected if there’s another Unit in front of it.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial2-free-play\\\",\\\"dialogue\\\":\\\"I’m sure you’ll find a way to win anyway!\\\\nGo you! uwu\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial2-start-4\\\",\\\"dialogue\\\":\\\"Hooray! We befriended Hog and Hamlet!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-37\\\",\\\"dialogue\\\":\\\"New Boarn, Hog, and Hamlet all belong to\\\\nthe same Faction: the Boar Faction.\\\\nBoars are known for their delicious Boarries.\\\\nYou should try them sometime! $(*´ڡ`●)$\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"boars.png\\\"},{\\\"id\\\":\\\"keyframe-38\\\",\\\"dialogue\\\":\\\"Yoshi belongs to a different Faction: the Dino Faction!\\\\nDinos are known for their Eggs!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"dinos.png\\\"},{\\\"id\\\":\\\"keyframe-39\\\",\\\"dialogue\\\":\\\"There’s also the Bee, Dryad, and Cow Factions.\\\\nEach Faction produces a different kind of Food.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"other-factions.png\\\"},{\\\"id\\\":\\\"keyframe-40\\\",\\\"dialogue\\\":\\\"You can tell what Faction a Creature is by looking at their color,\\\\nor the Food on top of their Card!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-41\\\",\\\"dialogue\\\":\\\"Attacking with a Creature always costs one Food.\\\\nBut Creatures can only gain energy from eating their own Faction’s Food. $(-_-* )$\\\\nSo New Boarn will Attack if you give it a Boarry, but not Eggs or Butter, for example.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"food-example.png\\\"},{\\\"id\\\":\\\"keyframe-42\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"Eggs, Honey, Butter, Flower, Whipped Cream, and Boarries. With their powers combined, they make Pie!\\\\nPie can substitute for any Food. Everyone loves Pie!\\\\nThat’s why we could get New Boarn to attack for a Pie just now!\\\",\\\"dialogOptions\\\":[\\\"Yoshi! I choose you!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"pie.png\\\"},{\\\"id\\\":\\\"tutorial3-start-1\\\",\\\"dialogue\\\":\\\"We’re out in the open now!\\\\nTwo Beeowulfs? No worries, I’m sure Yoshi can handle this!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-lose-1\\\",\\\"dialogue\\\":\\\"We lost??? Righto, I forgot to mention...\\\\nCreatures can Attack down any column!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Can we block the Attacks somehow?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial3-lose-1-other\\\",\\\"endGameUnsolved\\\":true,\\\"dialogue\\\":\\\"We can! For that, we’ll need to learn a new Action — Move!\\\\nNext time, select Yoshi, then the Space to his left.\\\\nHe’ll Move there and Protect our Camp!\\\\nLet’s try this battle again by Restarting it.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial3-lose-1-wrong-move\\\",\\\"endGameUnsolved\\\":true,\\\"dialogue\\\":\\\"We can! For that, we’ll need to learn a new Action — Move!\\\\nI see you’ve already given it a try.\\\\nNext time, move Yoshi to the left instead!\\\\nHe’ll Move there and Protect our Camp!\\\\nLet’s try this battle again by Restarting it.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial3-after-move\\\",\\\"dialogue\\\":\\\"Nice Move! Even though the Beeowulfs can attack any column,\\\\nYoshi Protects everything behind him! $ᕙ(  •̀ ᗜ •́  )ᕗ$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-48\\\",\\\"dialogue\\\":\\\"Unlike Attacking, Moving doesn’t cost Food.\\\\nBut it still counts as an Action, so Yoshi won’t be Ready to Act\\\\nagain until our next turn. Time to End Turn!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-start-2\\\",\\\"dialogue\\\":\\\"Alright, you’ve got this!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-start-3\\\",\\\"dialogue\\\":\\\"That was great! We could do this ’til the cows come home!\\\\nBut wait, something’s wrong. Do you hear that?\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"Is that... knocking?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-51\\\",\\\"dialogue\\\":\\\"Who’s there?\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"Don’t answer it!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-52\\\",\\\"dialogue\\\":\\\"Oh no, it’s the Cows!\\\",\\\"speaker\\\":\\\"angry_kero\\\",\\\"dialogOptions\\\":[\\\"Cows? In a cave?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"angry-kero.png\\\"},{\\\"id\\\":\\\"tutorial3-before-give-cards\\\",\\\"dialogue\\\":\\\"Yeah! These Cows won’t let anyone get in their way!\\\\nLooks like they’ll be here in 3 turns.\\\\nYoshi can’t handle all that alone!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"dialogOptions\\\":[\\\"What do we do?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-54\\\",\\\"dialogue\\\":\\\"We’ve gotta Summon more friends!\\\\nHere are all the friends we made earlier.\\\\nWe’ll need them all on the field before the cows arrive!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"How do we Summon?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-55\\\",\\\"dialogue\\\":\\\"Lemme give you a quick Summoning crash course!\\\\nEach Creature’s Summon cost is shown above their card.\\\\nHog and Hamlet each cost {R}. Our Camp’s {?} can substitute\\\\nfor {R}, so we can Summon both of them over the next two turns.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"What about New Boarn?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-56\\\",\\\"dialogue\\\":\\\"We’ll think about New Boarn later!\\\\nFor now, focus on getting the other two Boars on the field.\\\\n(By the way, you might notice that we can only Summon on the\\\\nSpaces closer to us. That’s because the Spaces on the other\\\\nside are Enemy Spaces. We can’t Summon there!)\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-start-5\\\",\\\"dialogue\\\":\\\"Aight, let’s Summon the New Boarn!\\\\nFor that, we’ll need a new Action — Create!\\\\nCreating causes a Ready Creature to produce one Food.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Oh! Like Pie?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-58\\\",\\\"dialogue\\\":\\\"Not exactly... The Food that a Creature Creates depends on\\\\ntheir Faction. For example, Yoshi is a Dino, so when he\\\\nCreates, he lays an {G}. When a Boar like Hog or Hamlet\\\\nCreates, it gathers a {R}!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-59\\\",\\\"dialogue\\\":\\\"See if you can make up {R}{R}{R} to Summon New Boarn!\\\\nDon’t forget the {?} we got from our Camp, which can\\\\nsubstitute for any Food.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-after-summon-new-boarn\\\",\\\"dialogue\\\":\\\"Did you see New Boarn jump?\\\\nNew Boarn is one hyperactive Boar! When you Summon it,\\\\nit jumps to a random Empty Friendly Space.\\\\nYou can read all about it in its card text!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"What a strong newboarn!\\\",\\\"Sounds like it was Boarn for this!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial3-focus-hog\\\",\\\"dialogue\\\":\\\"Hog’s an interesting one too! It can only Attack down its column.\\\\nYou’ll wanna pay attention to how each Creature is different\\\\nto win more battles and make more friends!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial3-after-focus-hog\\\",\\\"dialogue\\\":\\\"Now you’re familiar with the three basic Actions.\\\\nRemember that Creatures can only Act once per turn.\\\\nYou’ll often have to think carefully about whether to\\\\nAttack, Move, or Create!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-63\\\",\\\"dialogue\\\":\\\"The cows are almost upon us.\\\\nEnd your turn, and I’m sure you can handle the rest!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-stampede-fail\\\",\\\"dialogue\\\":\\\"Oh no! You didn’t Summon all our friends!\\\\nUhh... good luck, I guess... $(ﾟAﾟ;)$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-stampede\\\",\\\"dialogue\\\":\\\"You can do it! I’m rooting for you!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial3-lose-2\\\",\\\"endGameUnsolved\\\":true,\\\"dialogue\\\":\\\"Guess it didn’t work out... Don’t worry, you can always try again! You might also need to think more carefully about which Spaces you Summon our friends to.\\\\nOh, and check out the menu! You have two Save slots that you can use to Save or Load your battle progress at any time, and one that autosaves at the start of every turn!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial4-start-1\\\",\\\"dialogue\\\":\\\"Didya get to read our new friends’ card text?\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Of course!\\\",\\\"Huh?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"nextIds\\\":[\\\"tutorial4-start-1-1\\\",\\\"tutorial4-start-1-2\\\"]},{\\\"id\\\":\\\"tutorial4-start-1-1\\\",\\\"dialogue\\\":\\\"Amazing! The card text will be important for this battle.\\\\nBut first, let’s get our friends on the field!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Let’s go!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"nextIds\\\":[\\\"tutorial4-start-1-join\\\"]},{\\\"id\\\":\\\"tutorial4-start-1-2\\\",\\\"dialogue\\\":\\\"Well, ya gonna need to if we’re gonna win this battle!\\\\nBut first, let’s get our friends on the field!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Let’s go!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"nextIds\\\":[\\\"tutorial4-start-1-join\\\"]},{\\\"id\\\":\\\"tutorial4-start-1-join\\\",\\\"dialogue\\\":\\\"Chocolate Calf’s Summon cost is {.}{B}!\\\\nAny Food can substitute for {.}!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-71\\\",\\\"dialogue\\\":\\\"You might also come across {(W/B)}. {(W/B)} is Milk!!\\\\nButter and Whipped Cream are both made of Milk,\\\\nso either {B} and {W} can substitute for {(W/B)}!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial4-focus-beeowulf-1\\\",\\\"dialogue\\\":\\\"And Beeowulf’s Summon cost is just one {Y}!\\\\nI’m sure that one’s no problem for you!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-73\\\",\\\"dialogue\\\":\\\"Alright, time to get our friends on the field!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial4-start-2-not-all-summon\\\",\\\"dialogue\\\":\\\"OHHHH THAT’S A BUZZLOAD’A BEEZ!!!!\\\\nBut it looks like you didn’t manage to Summon all\\\\nour friends... I’m not sure you can win this now. $(’A`)$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial4-start-2\\\",\\\"dialogue\\\":\\\"OHHHH THAT’S A BUZZLOAD’A BEEZ!!!! $(⊃‿⊂)ミ3$\\\\nDon’t worry. We can use our friends’ unique abilities\\\\nto win the battle in a single turn!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial4-focus-beeowulf-2\\\",\\\"dialogue\\\":\\\"Beeowulf has a Special! Activating a Special counts as an\\\\nAction, just like Attack, Move, or Create. That means that\\\\nBeeowulf can only activate its Special when it’s Ready,\\\\nand then it gets tired and can’t Act again until the next turn!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial4-focus-calf-1\\\",\\\"dialogue\\\":\\\"Chocolate Calf has a Flex! Activating a Flex doesn’t count\\\\nas an Action. That means that it can Flex as many times\\\\nas we want, whether or not it’s Ready!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"tutorial4-focus-calf-2\\\",\\\"dialogue\\\":\\\"Activating a Special or Flex may cost Food. Do you see\\\\nthe {W} next to “Flex” in Chocolate Calf’s card text?\\\\nThat means that it costs one {W} to activate it!\\\\nIf you don’t see any symbols in front of the card text for\\\\nan ability, that means that activating it is free!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-79\\\",\\\"dialogue\\\":\\\"Don’t forget to check the card text of the Enemy Bees too!\\\\nOkay I’m sure you’ve got this!!! SEEYA\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial5-start\\\",\\\"dialogue\\\":\\\"You’re pretty much an expert at battlin’ now.\\\\nI’ve just one last thing to teach ya!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-81\\\",\\\"dialogue\\\":\\\"When a Creature crosses into an Enemy Space,\\\\nit becomes Sneaky. Sneaky Creatures can attack\\\\nProtected Enemies, but no longer Protect Units behind them.\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"protection.png\\\"},{\\\"id\\\":\\\"keyframe-82\\\",\\\"dialogue\\\":\\\"Idk if you’ll use it for this battle. Or if you’ll ever use it at all!\\\\nBut that’s what happens when Creatures get too Sneaky!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-83\\\",\\\"dialogue\\\":\\\"And oh, forgot to mention. You get to send up to two copies\\\\nof each friend into battle! Don’t ask me why, I don’t make the\\\\nrules ’round here. $(･ω<)☆$\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-84\\\",\\\"dialogue\\\":\\\"Anyway, that’s enough talking, we’ve got a battle on our hands!\\\\nIt’s time to BEFRIEND some DRYADS!!!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial6-start-no-deck\\\",\\\"dialogue\\\":\\\"It’s time for your FINAL TEST!\\\\nBut you’ll have to bring your own Deck for this one. $( •̀⩊•́ )$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Deck?\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-86\\\",\\\"dialogue\\\":\\\"A Deck is a roster of friends you’ll bring into battle!\\\\nYou can select up to two copies of each friend to\\\\nmake up a Deck of up to 30 friends in total.\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-87\\\",\\\"dialogue\\\":\\\"By the way, if you ever feel like you need a refresher on all\\\\nthe stuff we’ve talked about so far — like if you’ve gotta do\\\\nsome last-minute revision for a big TEST for example —\\\\nI’ve added a link to some Notes to your navbar!\\\\nI wrote them just for you~ $(◕‿◕)♡$\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\",\\\"dialogOptions\\\":[\\\"Aw, thanks!\\\"],\\\"blocking\\\":true,\\\"showNext\\\":true},{\\\"id\\\":\\\"keyframe-88\\\",\\\"endGameUnsolved\\\":true,\\\"dialogue\\\":\\\"Now hit “Exit battle” in the menu, build your Deck,\\\\nand come back when you’re ready!\\\\nChoose carefully, for we have a SUPER ULTIMATE\\\\nEXTREME CHALLENGE FINAL BATTLE ahead of us!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial6-start-1\\\",\\\"dialogue\\\":\\\"Looks like we’re here early! But don’t dally, ’cos it looks like\\\\nthe monsters will be here as soon as next turn!\\\\nThere are so many of them... hopefully they’ll come in a\\\\nfew at a time or we won’t have time to catch our breaths!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial6-start-2\\\",\\\"dialogue\\\":\\\"AHH NO THEY CAME ALL AT ONCE WHAT A DISASTER!!!!!\\\",\\\"speaker\\\":\\\"enemy\\\",\\\"selector\\\":\\\"ai_battler\\\"},{\\\"id\\\":\\\"tutorial6-end\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"You... did it? Already? I wasn’t paying attention,\\\\nbut you must’ve pulled off some fancy combos there\\\\nto have made it through that battle so quickly!\\\\nWell, that must mean you’re an expert now. Ｏ(≧∇≦)Ｏ\\\\nGo forth and befriend!\\\",\\\"speaker\\\":\\\"kero\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"masteries-start\\\",\\\"dialogue\\\":\\\"⚠️ Warning ⚠️\\\\nCutscenes are synced across your team. Gather your teammates here before proceeding!\\\\n(Don’t worry if someone can’t make it — you’ll always be able to replay a cutscene later.)\\\",\\\"dialogOptions\\\":[\\\"Ready!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true},{\\\"id\\\":\\\"keyframe-93\\\",\\\"dialogue\\\":\\\"Wouldya look at that! You found an ANSWER!\\\",\\\"dialogOptions\\\":[\\\"Heh, we totally breezed through that puzzle!\\\",\\\"It was a tough puzzle but we made it through!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-94\\\",\\\"dialogue\\\":\\\"Puzzle? What puzzle? This whole time I thought we were doing a BATTLE OF WITS!\\\",\\\"dialogOptions\\\":[\\\"Ah, right, of course we were.\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-95\\\",\\\"dialogue\\\":\\\"Yeah! You even got to befriend a buncha monsters!\\\",\\\"dialogOptions\\\":[\\\"Yay! The power of UWU!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-96\\\",\\\"dialogue\\\":\\\"Actually, y’know what? That ANSWER you found...\\\\nIt looks a lot like a branch from the Mastery Tree!\\\",\\\"dialogOptions\\\":[\\\"Mastery Tree?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-97\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"Yeah! All the CHAOS has caused the Mastery Tree to fall apart, scattering its branches all over the cave!\\\\nYou need to find its branches and put it back together again!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"legendary-start\\\",\\\"dialogue\\\":\\\"⚠️ Warning ⚠️\\\\nCutscenes are synced across your team. Gather your teammates here before proceeding!\\\\n(Don’t worry if someone can’t make it — you’ll always be able to replay a cutscene later.)\\\",\\\"dialogOptions\\\":[\\\"Ready!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true},{\\\"id\\\":\\\"keyframe-99\\\",\\\"dialogue\\\":\\\"$ヽ(°〇°)ﾉ$ You did it! You befriended a legendary!\\\",\\\"dialogOptions\\\":[\\\"Yay! But wait, did you just... transform?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-100\\\",\\\"dialogue\\\":\\\"Oh, don’t mind that. That’s just the legendary’s power coursing\\\\nthrough me! The more friends we make, the more power I get —\\\\npower to rid this cave of CHAOS once and for all!\\\",\\\"dialogOptions\\\":[\\\"Ah, of course! So, what’s a legendary?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-101\\\",\\\"dialogue\\\":\\\"Legendaries are awesome. They’re the best kinda friend!\\\\nThey don’t like each other very much, though...\\\",\\\"dialogOptions\\\":[\\\"Why not?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-102\\\",\\\"dialogue\\\":\\\"I dunno. Pride, maybe. The Factions have been fighting since forever!\\\\nThe legendaries wanna prove that they alone are the best.\\\\nWhat does it matter, as long as they all become our friends!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-103\\\",\\\"dialogue\\\":\\\"Though it does mean that you can’t bring more than one legendary (or more than one copy of the same legendary) to battle at a time. What a bummer!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-104\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"Anyways, there are 12 legendaries hiding throughout the cave.\\\\nThe power of UWU demands that we befriend them all!\\\",\\\"dialogOptions\\\":[\\\"Let’s go!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"pre-final-battle-start\\\",\\\"dialogue\\\":\\\"⚠️ Warning ⚠️\\\\nCutscenes are synced across your team. Gather your teammates here before proceeding!\\\\n(Don’t worry if someone can’t make it — you’ll always be able to replay a cutscene later.)\\\",\\\"dialogOptions\\\":[\\\"Ready!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true},{\\\"id\\\":\\\"keyframe-106\\\",\\\"dialogue\\\":\\\"You did it! You befriended all the legendaries.\\\\nWith these cards, we can finally take over the cave!\\\",\\\"dialogOptions\\\":[\\\"I thought we were saving the cave, not taking it over! What about the power of UWU?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero dos\\\"},{\\\"id\\\":\\\"keyframe-107\\\",\\\"dialogue\\\":\\\"I AM UWU, the Underwater Usurper!\\\\nAnd with the power of the cards, we can usurp the whole world!!!!\\\\nNow hand them over.\\\",\\\"dialogOptions\\\":[\\\"Never!\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"angry-kero-dos.png\\\"},{\\\"id\\\":\\\"keyframe-108\\\",\\\"dialogue\\\":\\\"...tragedy... ...an imposter approaches... 🌷\\\\n...call upon the flowers... 🌺 ...accept my aid...\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"coloring.png\\\"},{\\\"id\\\":\\\"keyframe-109\\\",\\\"dialogue\\\":\\\"What, flowers? Don’t make me L, A, U, G, H!\\\\nThe whole C, A, V, E is at stake. Let M, E take care of it!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"spelling-bee.png\\\"},{\\\"id\\\":\\\"keyframe-110\\\",\\\"dialogue\\\":\\\"Calm your wings, Bee. I’ve seen your quarterlies.\\\\nYou won’t pass the audit, let alone win them the battle!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"moonick.png\\\"},{\\\"id\\\":\\\"keyframe-111\\\",\\\"dialogue\\\":\\\"Do I need to S, P, E, L, L it out for you? Your audits mean nothing! And if you don’t know, no one in this C, A, V, E likes you Cows, let alone your T, A, X, E, S!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"spelling-bee.png\\\"},{\\\"id\\\":\\\"keyframe-112\\\",\\\"dialogue\\\":\\\"(angry slime noises)\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"slime--slime.png\\\"},{\\\"id\\\":\\\"keyframe-113\\\",\\\"dialogue\\\":\\\"And you thirgle yorgle any bergle? Yorgle not a clurgle whargle yorgle targle with! Norgle of you yorgle have largle ergle on a genurgle bargle, I’ll sargle that murgle!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"dargle.png\\\"},{\\\"id\\\":\\\"keyframe-114\\\",\\\"dialogue\\\":\\\"Git outta here, Dargle! Ain’t nobody here can make heads or tails of what yer sayin’! Take me instead, this here battle’s a job for a Cow!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"miss-yu.png\\\"},{\\\"id\\\":\\\"keyframe-115\\\",\\\"dialogue\\\":\\\"Lackadairy, get thee home, cows, thou’rt milk-drunk! I shall show that ⍼ what’s 🗦🗫🗧ing, eh!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"jabberwock.png\\\"},{\\\"id\\\":\\\"keyframe-116\\\",\\\"dialogue\\\":\\\"(ANGRY angry slime SLIME NOISES noises)\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"slime--slime-2.png\\\"},{\\\"id\\\":\\\"keyframe-117\\\",\\\"dialogue\\\":\\\"Friends! This is no time for bickering!\\\\nLet us set aside our differences just this once.\\\\nOnly with our powers combined do we stand a chance against this... thing!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\"},{\\\"id\\\":\\\"keyframe-118\\\",\\\"dialogue\\\":\\\"I hate to say this but the cap’s right. If any of us tries to monopolize the board like we always do, it’s Checkmate in Three!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"blancmange.png\\\"},{\\\"id\\\":\\\"keyframe-119\\\",\\\"dialogue\\\":\\\"A load of HOGWASH but I’ll TAKE IT! Anything to get BACK at this SWINE and take my place BACK at the TREASURY!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"mister-penny.png\\\"},{\\\"id\\\":\\\"keyframe-120\\\",\\\"dialogue\\\":\\\"i’ve not fought alongside others before.\\\\nbut if i’ve l, e, a, r, n, e, d anything, it’s that i shouldn’t be afraid of t, r, y, i, n, g!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"bb-b.png\\\"},{\\\"id\\\":\\\"keyframe-121\\\",\\\"dialogue\\\":\\\"Yeah! Let us dominate the corners, surround the opponent, and flip the whole battle around! ...Together!\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"othello.png\\\"},{\\\"id\\\":\\\"keyframe-122\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"(determined DETERMINED SLIME slime noises NOISES)\\\\n(DETERMINED determined slime SLIME NOISES noises)\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"slime--slime-3.png\\\"},{\\\"id\\\":\\\"post-final-battle-start\\\",\\\"dialogue\\\":\\\"How? How could I possibly have lost???\\\\nNow I’m all alone... again... $ಥ﹏ಥ$\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"sad-kero.png\\\"},{\\\"id\\\":\\\"keyframe-124\\\",\\\"dialogue\\\":\\\"There is one force that you don’t understand.\\\\nA force stronger than any other force in the world.\\\\nEven more powerful than UWU.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\"},{\\\"id\\\":\\\"keyframe-125\\\",\\\"dialogue\\\":\\\"That force is...\\\",\\\"dialogOptions\\\":[\\\"Friendship?\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\"},{\\\"id\\\":\\\"keyframe-126\\\",\\\"dialogue\\\":\\\"PIE.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\"},{\\\"id\\\":\\\"keyframe-127\\\",\\\"dialogue\\\":\\\"...\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"sad-kero.png\\\"},{\\\"id\\\":\\\"keyframe-128\\\",\\\"dialogue\\\":\\\"# i want pie...\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"sad-kero.png\\\"},{\\\"id\\\":\\\"keyframe-129\\\",\\\"dialogue\\\":\\\"# i’d ask a camp for some, but...\\\\n# i don’t even have a camp anymore...\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"sad-kero.png\\\"},{\\\"id\\\":\\\"keyframe-130\\\",\\\"dialogue\\\":\\\"You cannot win friends with the power of CHAOS.\\\\nOnly when all the Factions come together, in HARMONY, can we make...\\\\nNot just any pie, but LEGENDARY PIE.\\\\nYet, I suppose, we have you, Kero, to thank, for bringing all of us together with this battle.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\"},{\\\"id\\\":\\\"post-final-battle-choice\\\",\\\"dialogue\\\":\\\"Brave heroes, what will you choose?\\\",\\\"dialogOptions\\\":[\\\"Seal him away!\\\",\\\"Invite him to join us for some pie.\\\"],\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"captain-pi.png\\\",\\\"nextIds\\\":[\\\"post-final-battle-choice-1\\\",\\\"post-final-battle-choice-2\\\"]},{\\\"id\\\":\\\"post-final-battle-choice-1\\\",\\\"dialogue\\\":\\\"You and all the creatures of the cave seal Kero in the nearest lockable object, which is an empty treasure chest you found lying nearby.\\\\nYou make sure to hide the map to the chest behind lots of puzzles so that he will never be unsealed again.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"treasure-chest.png\\\"},{\\\"id\\\":\\\"keyframe-133\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"And so, for the first time in a thousand years, the Factions worked together to bake a LEGENDARY PIE, and ate it, too.\\\\nAnd everyone learned that the real treasure wasn’t taking over the world, it was the pies you made along the way.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"legendary-pie-no-kero.png\\\"},{\\\"id\\\":\\\"post-final-battle-choice-2\\\",\\\"dialogue\\\":\\\"I love PIE! uwu\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"kero.png\\\"},{\\\"id\\\":\\\"keyframe-135\\\",\\\"endCutscene\\\":true,\\\"endGame\\\":true,\\\"dialogue\\\":\\\"And so, for the first time in a thousand years, the Factions worked together to bake a LEGENDARY PIE, and ate it, too.\\\\nAnd everyone learned that the real treasure wasn’t taking over the world, it was the pies you made along the way.\\\",\\\"showMask\\\":true,\\\"blocking\\\":true,\\\"showNext\\\":true,\\\"useCutsceneUI\\\":true,\\\"hideGame\\\":true,\\\"image\\\":\\\"legendary-pie-w-kero.png\\\"}]\"","import { Keyframe } from \"engine/types/keyframes\";\nimport allKeyframesJson from \"engine/puzzles/all-keyframes.json?raw\";\n\nconst ALL_KEYFRAMES: Keyframe[] = JSON.parse(allKeyframesJson) as Keyframe[];\nexport default ALL_KEYFRAMES;\n","import {\n  SyncDataBackendReq,\n  CheckAnswerBackendReq,\n  GetInitDataBackendResp,\n  GetInitTeamDataBackendResp,\n  CheckAnswerBackendResp,\n  BackendInterface,\n} from \"game-server/backend-interface/BackendInterface\";\n\nexport type BackendInterfaceControllerOpts = {\n  backend: BackendInterface;\n  dumpBackendRequests: boolean;\n};\n\nexport class BackendInterfaceController implements BackendInterface {\n  dumpRequests: boolean;\n  backend: BackendInterface;\n\n  constructor(opts: BackendInterfaceControllerOpts) {\n    this.dumpRequests = opts.dumpBackendRequests;\n    this.backend = opts.backend;\n  }\n\n  async getInitData(): Promise<GetInitDataBackendResp> {\n    if (this.dumpRequests) {\n      console.log(`req getInitData`);\n    }\n    const resp = await this.backend.getInitData();\n    if (this.dumpRequests) {\n      console.log(`resp getInitData`);\n    }\n    return resp;\n  }\n\n  async getInitTeamData(teamId: string): Promise<GetInitTeamDataBackendResp> {\n    if (this.dumpRequests) {\n      console.log(`req getInitTeamData`);\n    }\n    const resp = await this.backend.getInitTeamData(teamId);\n    if (this.dumpRequests) {\n      console.log(`resp getInitTeamData`);\n    }\n    return resp;\n  }\n\n  async syncData(req: SyncDataBackendReq) {\n    if (this.dumpRequests) {\n      console.log(`req syncData`);\n    }\n    const resp = await this.backend.syncData(req);\n    if (this.dumpRequests) {\n      console.log(`resp syncData`);\n    }\n    return resp;\n  }\n\n  async checkAnswer(\n    req: CheckAnswerBackendReq\n  ): Promise<CheckAnswerBackendResp> {\n    if (this.dumpRequests) {\n      console.log(`req solve`);\n    }\n    const isCorrect = await this.backend.checkAnswer(req);\n    if (this.dumpRequests) {\n      console.log(`resp solve`);\n    }\n    return isCorrect;\n  }\n}\n","import { MasteryTree } from \"game-server/masteries\";\nimport {\n  BackendDeck,\n  BackendAnswerSubmission,\n  BackendUnlock,\n  BackendCardUnlock,\n  BackendCutsceneChoice,\n} from \"game-server/backend-interface/BackendInterface\";\nimport { GameServerConfig } from \"game-server/GameServer\";\nimport { DirtyStateType, DirtyState } from \"game-server/monitoring\";\nimport { Faction } from \"engine/types/factions\";\nimport { SerializedCheckpointState } from \"engine/types/game-state\";\n\n/**\n * Amount of time to throttle the slow sync. For now, don't throttle\n * it; the sync period will depend on the periodic sync frequency.\n */\nexport const SLOW_SYNC_THROTTLE_MS = 0;\n\nexport type BackendSyncReqPacket = {\n  /** Inactive state to update. */\n  isInactive?: boolean;\n  /** Hidden state to update. */\n  isHidden?: boolean;\n  /** Display name to update */\n  displayName?: string;\n  /** Faction to update. */\n  faction?: Faction | null;\n  /** Faction score contributions to update. */\n  factionScoreContributions?: { [faction in Faction]?: number };\n  /** Decks to create or overwrite. */\n  decks?: { [slot: number]: BackendDeck };\n  /** Mastery tree to create or overwrite. */\n  masteryTree?: MasteryTree;\n  /** Answer submissions to add/fish puzzle solves to delete. */\n  answerSubmissions?: {\n    [puzName: string]: {\n      [answer: string]: BackendAnswerSubmission;\n    } | null;\n  };\n  /** Unlocks to add/delete. */\n  unlocks?: { [puzName: string]: BackendUnlock | null };\n  /** Card unlocks to add/delete. */\n  cardUnlocks?: { [cardName: string]: BackendCardUnlock | null };\n  /** View times to update. Only used for battles. */\n  viewTimes?: { [puzName: string]: number };\n  /** Slots of preferred decks to set. */\n  preferredDecks?: { [puzName: string]: number };\n  /** Puzzle selections for instancer rooms. */\n  puzzleSelections?: { [puzName: string]: string | null };\n  /** Saved checkpoints for each puzzle. */\n  checkpoints?: {\n    [puzName: string]: { [slot: number]: SerializedCheckpointState };\n  };\n  /** teamIds of blocked teams to add/delete. */\n  blockedTeams?: { [teamId: string]: boolean };\n  /** Whether we're in the ring, to set or unset. */\n  isInRing?: boolean;\n  /** Choices made during cutscene keyframes with dialog options. */\n  cutsceneChoices?: BackendCutsceneChoice[];\n};\n\nexport class BackendSyncReqController {\n  packet: BackendSyncReqPacket;\n  tracker: SyncTracker;\n\n  constructor(\n    serverConfig: GameServerConfig,\n    syncType: SyncObjectType,\n    onDirtyStateChange: (dirtyState: DirtyState) => void\n  ) {\n    this.packet = {};\n    this.tracker = new SyncTracker(serverConfig, syncType, onDirtyStateChange);\n  }\n\n  isDirty(): boolean {\n    return Object.keys(this.packet).length > 0;\n  }\n\n  /**\n   * Merge a new packet into the pending packet, taking care to ensure\n   * that the final state reflects the application of the incoming\n   * state after the initial state. If there are conflicts within\n   * the incoming packet itself, deletes take priority over adds.\n   */\n  mergePacket({\n    isInactive,\n    isHidden,\n    displayName,\n    faction,\n    factionScoreContributions,\n    decks,\n    masteryTree,\n    answerSubmissions,\n    unlocks,\n    cardUnlocks,\n    viewTimes,\n    preferredDecks,\n    puzzleSelections,\n    checkpoints,\n    blockedTeams,\n    isInRing,\n    cutsceneChoices,\n  }: BackendSyncReqPacket): void {\n    if (isInactive !== undefined) this.packet.isInactive = isInactive;\n    if (isHidden !== undefined) this.packet.isHidden = isHidden;\n    if (displayName !== undefined) this.packet.displayName = displayName;\n    if (faction !== undefined) this.packet.faction = faction;\n    this.packet.factionScoreContributions = Object.assign(\n      this.packet.factionScoreContributions ?? {},\n      factionScoreContributions ?? {}\n    );\n    this.packet.decks = Object.assign(this.packet.decks ?? {}, decks ?? {});\n    if (masteryTree !== undefined) this.packet.masteryTree = masteryTree;\n    for (const [puzName, puzSubmissions] of Object.entries(\n      answerSubmissions ?? {}\n    )) {\n      this.packet.answerSubmissions ??= {};\n      if (puzSubmissions === null) {\n        this.packet.answerSubmissions[puzName] = null;\n        continue;\n      }\n      this.packet.answerSubmissions[puzName] = Object.assign(\n        this.packet.answerSubmissions[puzName] ?? {},\n        puzSubmissions\n      );\n    }\n    this.packet.unlocks = Object.assign(\n      this.packet.unlocks ?? {},\n      unlocks ?? {}\n    );\n    this.packet.cardUnlocks = Object.assign(\n      this.packet.cardUnlocks ?? {},\n      cardUnlocks ?? {}\n    );\n    this.packet.viewTimes = Object.assign(\n      this.packet.viewTimes ?? {},\n      viewTimes ?? {}\n    );\n    this.packet.preferredDecks = Object.assign(\n      this.packet.preferredDecks ?? {},\n      preferredDecks ?? {}\n    );\n    this.packet.puzzleSelections = Object.assign(\n      this.packet.puzzleSelections ?? {},\n      puzzleSelections ?? {}\n    );\n    this.packet.checkpoints = Object.assign(\n      this.packet.checkpoints ?? {},\n      checkpoints ?? {}\n    );\n    this.packet.blockedTeams = Object.assign(\n      this.packet.blockedTeams ?? {},\n      blockedTeams ?? {}\n    );\n    if (isInRing !== undefined) this.packet.isInRing = isInRing;\n    if (cutsceneChoices !== undefined) {\n      this.packet.cutsceneChoices ??= [];\n      this.packet.cutsceneChoices.push(...cutsceneChoices);\n    }\n\n    // Remove empty entries.\n    this.resolvePacket({});\n\n    if (this.isDirty()) this.tracker.handleModify();\n  }\n\n  /**\n   * Takes in a snapshot representing synced data and removes it from\n   * the pending packet, taking into consideration the fact that\n   * the pending packet might have been modified while the sync\n   * was in process.\n   */\n  private resolvePacket({\n    isInactive,\n    isHidden,\n    displayName,\n    faction,\n    factionScoreContributions,\n    decks,\n    masteryTree,\n    answerSubmissions,\n    unlocks,\n    cardUnlocks,\n    viewTimes,\n    preferredDecks,\n    puzzleSelections,\n    checkpoints,\n    blockedTeams,\n    isInRing,\n    cutsceneChoices,\n  }: BackendSyncReqPacket): void {\n    if (\n      this.packet.isInactive !== undefined &&\n      isInactive === this.packet.isInactive\n    )\n      delete this.packet.isInactive;\n    if (this.packet.isHidden !== undefined && isHidden === this.packet.isHidden)\n      delete this.packet.isHidden;\n    if (\n      this.packet.displayName !== undefined &&\n      displayName === this.packet.displayName\n    )\n      delete this.packet.displayName;\n    if (this.packet.faction !== undefined && faction === this.packet.faction)\n      delete this.packet.faction;\n    for (const [kFaction, factionScoreContribution] of Object.entries(\n      factionScoreContributions ?? {}\n    )) {\n      const faction = kFaction as Faction;\n      if (this.packet.factionScoreContributions === undefined) continue;\n      if (this.packet.factionScoreContributions[faction] === undefined)\n        continue;\n      if (\n        this.packet.factionScoreContributions[faction] !==\n        factionScoreContribution\n      )\n        continue;\n      delete this.packet.factionScoreContributions[faction];\n    }\n    if (Object.keys(this.packet.factionScoreContributions ?? {}).length === 0)\n      delete this.packet.factionScoreContributions;\n\n    // For time-based syncs (decks/mastery trees), we are guaranteed\n    // that a new object will not be added if an existing object (with\n    // the same ID) is already in the packet.\n\n    for (const slot of Object.keys(decks ?? {})) {\n      if (this.packet.decks === undefined) continue;\n      delete this.packet.decks[Number(slot)];\n    }\n    if (Object.keys(this.packet.decks ?? {}).length === 0)\n      delete this.packet.decks;\n\n    if (masteryTree !== undefined) delete this.packet.masteryTree;\n\n    // If we ever e.g. find ourselves requesting to sync two different\n    // solve records for the same puzzle, then it does not matter which\n    // one gets synced. So, we can just check e.g. whether we want a\n    // puzzle solved or unsolved to resolve its pending sync state.\n\n    for (const [puzName, puzSubmissions] of Object.entries(\n      answerSubmissions ?? {}\n    )) {\n      if (this.packet.answerSubmissions === undefined) continue;\n      const pendingPuzSubmissions = this.packet.answerSubmissions[puzName];\n      if (pendingPuzSubmissions === undefined) continue;\n      if (puzSubmissions === null) {\n        if (pendingPuzSubmissions !== null) continue;\n        delete this.packet.answerSubmissions[puzName];\n      } else {\n        if (pendingPuzSubmissions === null) continue;\n        for (const [answer, submissions] of Object.entries(\n          puzSubmissions ?? {}\n        )) {\n          delete pendingPuzSubmissions[answer];\n        }\n        if (Object.keys(pendingPuzSubmissions).length === 0)\n          delete this.packet.answerSubmissions[puzName];\n      }\n    }\n    if (Object.keys(this.packet.answerSubmissions ?? {}).length === 0)\n      delete this.packet.answerSubmissions;\n\n    for (const [puzName, unlock] of Object.entries(unlocks ?? {})) {\n      if (this.packet.unlocks === undefined) continue;\n      const pendingUnlock = this.packet.unlocks[puzName];\n      if (pendingUnlock === undefined) continue;\n      if ((pendingUnlock === null) !== (unlock === null)) continue;\n      delete this.packet.unlocks[puzName];\n    }\n    if (Object.keys(this.packet.unlocks ?? {}).length === 0)\n      delete this.packet.unlocks;\n\n    for (const [puzName, cardUnlock] of Object.entries(cardUnlocks ?? {})) {\n      if (this.packet.cardUnlocks === undefined) continue;\n      const pendingCardUnlock = this.packet.cardUnlocks[puzName];\n      if (pendingCardUnlock === undefined) continue;\n      if ((pendingCardUnlock === null) !== (cardUnlock === null)) continue;\n      if (\n        (pendingCardUnlock?.puzName ?? null) !== (cardUnlock?.puzName ?? null)\n      )\n        continue;\n      delete this.packet.cardUnlocks[puzName];\n    }\n    if (Object.keys(this.packet.cardUnlocks ?? {}).length === 0)\n      delete this.packet.cardUnlocks;\n\n    // View times will only ever be set once, so we have nothing to check.\n    for (const puzName of Object.keys(viewTimes ?? {})) {\n      if (this.packet.viewTimes === undefined) continue;\n      delete this.packet.viewTimes[puzName];\n    }\n    if (Object.keys(this.packet.viewTimes ?? {}).length === 0)\n      delete this.packet.viewTimes;\n\n    for (const [puzName, slot] of Object.entries(preferredDecks ?? {})) {\n      if (this.packet.preferredDecks === undefined) continue;\n      const pendingSlot = this.packet.preferredDecks[puzName];\n      if (pendingSlot === undefined) continue;\n      if (pendingSlot !== slot) continue;\n      delete this.packet.preferredDecks[puzName];\n    }\n    if (Object.keys(this.packet.preferredDecks ?? {}).length === 0)\n      delete this.packet.preferredDecks;\n\n    for (const [puzName, selection] of Object.entries(puzzleSelections ?? {})) {\n      if (this.packet.puzzleSelections === undefined) continue;\n      const pendingSelection = this.packet.puzzleSelections[puzName];\n      if (pendingSelection === undefined) continue;\n      if (pendingSelection !== selection) continue;\n      delete this.packet.puzzleSelections[puzName];\n    }\n    if (Object.keys(this.packet.puzzleSelections ?? {}).length === 0)\n      delete this.packet.puzzleSelections;\n\n    for (const [puzName, states] of Object.entries(checkpoints ?? {})) {\n      if (this.packet.checkpoints === undefined) continue;\n      const pendingStates = this.packet.checkpoints[puzName];\n      if (pendingStates === undefined) continue;\n      (() => {\n        if (Object.keys(pendingStates).length !== Object.keys(states).length)\n          return;\n        for (const [slot, state] of Object.entries(states)) {\n          const pendingState = pendingStates[Number(slot)];\n          if (pendingState === undefined) return;\n          if (pendingState.turnNumber !== state.turnNumber) return;\n          if (pendingState.roomId !== state.roomId) return;\n          if (pendingState.timestamp !== state.timestamp) return;\n          if (pendingState.gainedScore !== state.gainedScore) return;\n          if (pendingState.serializedState !== state.serializedState) return;\n        }\n        delete this.packet.checkpoints[puzName];\n      })();\n    }\n    if (Object.keys(this.packet.checkpoints ?? {}).length === 0)\n      delete this.packet.checkpoints;\n\n    for (const [teamId, isBlocked] of Object.entries(blockedTeams ?? {})) {\n      if (this.packet.blockedTeams === undefined) continue;\n      const pendingIsBlocked = this.packet.blockedTeams[teamId];\n      if (pendingIsBlocked === undefined) continue;\n      if (pendingIsBlocked !== isBlocked) continue;\n      delete this.packet.blockedTeams[teamId];\n    }\n    if (Object.keys(this.packet.blockedTeams ?? {}).length === 0)\n      delete this.packet.blockedTeams;\n\n    if (this.packet.isInRing !== undefined && isInRing === this.packet.isInRing)\n      delete this.packet.isInRing;\n\n    if (cutsceneChoices !== undefined) {\n      if (this.packet.cutsceneChoices === undefined)\n        throw new Error(\"expect cutscene choices to be prefix of packet\");\n      this.packet.cutsceneChoices.splice(0, cutsceneChoices.length);\n    }\n    if ((this.packet.cutsceneChoices ?? []).length === 0)\n      delete this.packet.cutsceneChoices;\n  }\n\n  /**\n   * Starts a sync, and returns a snapshot of the current packet,\n   * which is a clone of the current packet at the appropriate depth.\n   *\n   * Returns null if there is nothing to sync. In this case, a sync\n   * is not considered to have started.\n   */\n  startSync(): BackendSyncReqPacket | null {\n    if (!this.tracker.snapshot()) return null;\n    if (!this.isDirty()) {\n      this.tracker.handleSyncResult(true);\n      return null;\n    }\n\n    const {\n      factionScoreContributions,\n      decks,\n      answerSubmissions,\n      unlocks,\n      cardUnlocks,\n      viewTimes,\n      preferredDecks,\n      puzzleSelections,\n      checkpoints,\n      blockedTeams,\n    } = this.packet;\n    return {\n      ...this.packet,\n      factionScoreContributions:\n        factionScoreContributions === undefined\n          ? undefined\n          : { ...factionScoreContributions },\n      decks: decks === undefined ? undefined : { ...decks },\n      answerSubmissions:\n        answerSubmissions === undefined\n          ? undefined\n          : Object.fromEntries(\n              Object.entries(answerSubmissions).map(\n                ([puzName, puzSubmissions]) => [\n                  puzName,\n                  puzSubmissions === null ? null : { ...puzSubmissions },\n                ]\n              )\n            ),\n      unlocks: unlocks === undefined ? undefined : { ...unlocks },\n      cardUnlocks: cardUnlocks === undefined ? undefined : { ...cardUnlocks },\n      viewTimes: viewTimes === undefined ? undefined : { ...viewTimes },\n      preferredDecks:\n        preferredDecks === undefined ? undefined : { ...preferredDecks },\n      puzzleSelections:\n        puzzleSelections === undefined ? undefined : { ...puzzleSelections },\n      checkpoints: checkpoints === undefined ? undefined : { ...checkpoints },\n      blockedTeams:\n        blockedTeams === undefined ? undefined : { ...blockedTeams },\n    };\n  }\n\n  /**\n   * Takes in a snapshot from a sync. After a sync is complete,\n   * removes the synced data from the pending packet, taking into\n   * consideration the fact that the pending packet might have been\n   * modified while the sync was in process.\n   *\n   * A null snapshot indicates that the sync failed.\n   */\n  endSync(snapshot: BackendSyncReqPacket | null): void {\n    if (snapshot !== null) this.resolvePacket(snapshot);\n    this.tracker.handleSyncResult(snapshot !== null);\n  }\n}\n\n/**\n * Utility class to manage sync loops. A user of this controller\n * independently manages a queue of sync tasks, and provides a\n * runSyncAsync method that performs a single sync of some subset\n * of the sync tasks. startLoopAsync can then be used to repeatedly\n * run the provided runSyncAsync until there is nothing left to sync.\n *\n * The user may also add callbacks that wait on pending syncs.\n * These are called once a single iteration of the sync loop completes,\n * because those callbacks do not care if any additional sync tasks\n * are added while that iteration was running.\n */\nexport class SyncLoopController {\n  isSyncInFlight: boolean;\n  /** Callbacks waiting on the sync. */\n  pendingCallbacks: (() => void)[];\n  /**\n   * Performs a sync if there is anything to sync at call time.\n   * Returns true if the loop is complete, i.e. we have tried to\n   * sync all pending sync items.\n   */\n  runSyncAsync: () => Promise<boolean>;\n\n  constructor(runSyncAsync: () => Promise<boolean>) {\n    this.isSyncInFlight = false;\n    this.pendingCallbacks = [];\n    this.runSyncAsync = runSyncAsync;\n  }\n\n  /**\n   * Run the sync loop, if one isn't already running.\n   * This does not guarantee the completion of any sync tasks.\n   * If we need to wait for sync tasks, use triggerLoopAndWaitAsync.\n   */\n  async triggerLoopAsync() {\n    if (this.isSyncInFlight) return;\n    this.isSyncInFlight = true;\n\n    // Keep syncing until the loop is complete.\n    while (true) {\n      // Don't actually modify pendingCallbacks until runSyncAsync\n      // completes without errors.\n      const numCallbacks = this.pendingCallbacks.length;\n\n      let isLoopComplete = false;\n      try {\n        isLoopComplete = await this.runSyncAsync();\n      } catch (err) {\n        // If we hit an error with this sync, break out of the loop\n        // to ensure that we release the lock, and try again later\n        // as part of slow sync.\n        console.error(err);\n        break;\n      }\n\n      // Complete the callbacks even if nothing was synced.\n      for (const callback of this.pendingCallbacks.splice(0, numCallbacks)) {\n        try {\n          callback();\n        } catch (err) {\n          // If we fail here, ensure that we fully clean up state\n          // by continuing to process the other callbacks.\n          console.error(err);\n        }\n      }\n\n      if (isLoopComplete) break;\n    }\n\n    this.isSyncInFlight = false;\n  }\n\n  /**\n   * Trigger the loop and wait for current sync tasks to finish syncing.\n   * Note that the loop may continue running even after this function\n   * returns, if more tasks got added to the queue in the meantime.\n   */\n  async triggerLoopAndWaitAsync() {\n    await new Promise<void>((resolve, reject) => {\n      this.pendingCallbacks.push(resolve);\n      // Don't block on the loop completion.\n      this.triggerLoopAsync();\n    });\n  }\n}\n\nexport enum SyncObjectType {\n  FAST = \"fast\",\n  MISC = \"misc\",\n  MASTERY_TREE = \"mastery_tree\",\n  DECK = \"deck\",\n  ROOM = \"room\",\n  CHECKPOINTS = \"checkpoints\",\n  ANSWER = \"answer\",\n}\n\nexport class SyncTracker {\n  serverConfig: GameServerConfig;\n  syncType: SyncObjectType;\n  onDirtyStateChange: (dirtyState: DirtyState) => void;\n  revNumber: number;\n  syncedRevNumber: number;\n  modifyTime: number;\n  syncTime: number;\n\n  /** The revision number that is currently being synced, if any. */\n  syncingRevNumber: number | null;\n\n  constructor(\n    serverConfig: GameServerConfig,\n    syncType: SyncObjectType,\n    onDirtyStateChange: (dirtyState: DirtyState) => void\n  ) {\n    this.serverConfig = serverConfig;\n    this.syncType = syncType;\n    this.onDirtyStateChange = onDirtyStateChange;\n    this.revNumber = 0;\n    this.syncedRevNumber = 0;\n    const timeNow = new Date().getTime();\n    this.modifyTime = timeNow;\n    this.syncTime = timeNow;\n\n    this.syncingRevNumber = null;\n  }\n\n  /** Returns if a sync is needed. */\n  snapshot(): boolean {\n    if (this.revNumber === this.syncedRevNumber) return false;\n    if (\n      this.modifyTime - this.syncTime <\n      this.serverConfig.slowSyncThrottle[this.syncType]\n    )\n      return false;\n    // Note that we may request a sync despite syncingRevNumber\n    // already being set, due to a previous failed sync. In this\n    // case, just overwrite it.\n    this.syncingRevNumber = this.revNumber;\n    this.onDirtyStateChange({\n      type: DirtyStateType.SYNCING,\n      lastSyncTime: this.syncTime,\n    });\n    return true;\n  }\n\n  handleModify() {\n    const timeNow = Date.now();\n    if (this.revNumber === this.syncedRevNumber) this.syncTime = timeNow;\n    this.modifyTime = timeNow;\n    this.revNumber++;\n    this.onDirtyStateChange({\n      type: DirtyStateType.DIRTY,\n      lastSyncTime: this.syncTime,\n    });\n  }\n\n  handleSyncResult(success: boolean) {\n    if (success) {\n      this.syncTime = new Date().getTime();\n      if (this.syncingRevNumber === null)\n        throw new Error(\"no sync in progress\");\n      this.syncedRevNumber = this.syncingRevNumber;\n    }\n    this.syncingRevNumber = null;\n    this.onDirtyStateChange({\n      type: success ? DirtyStateType.SYNCED : DirtyStateType.FAILED,\n      lastSyncTime: this.syncTime,\n    });\n  }\n}\n","import { cloneDeck, DeckSelection } from \"engine/types/decks\";\nimport { StepType } from \"engine/types/steps\";\nimport { Role } from \"engine/types/updates\";\nimport {\n  GamePhase,\n  Player,\n  PlayerStateTeamData,\n  FullGameState,\n  MutableGameState,\n  CheckpointState,\n  SerializedCheckpointState,\n  isCheckpointSlotValid,\n} from \"engine/types/game-state\";\nimport { FailedChecks } from \"engine/types/action-validation\";\nimport {\n  PUZ_NAME_PVP,\n  BATTLE_GROUP_NAME_INSTANCER,\n  isInstanceable,\n} from \"engine/puzzles/puzzle-data\";\nimport { StaticInspector } from \"engine/Inspector\";\nimport { Engine } from \"engine/Engine\";\nimport { WSErrorCode, WSError, WSRespType } from \"game-server/ws\";\nimport { ClientConnection, GameServer } from \"game-server/GameServer\";\nimport { BackendRoom } from \"game-server/backend-interface/BackendInterface\";\nimport {\n  SyncTracker,\n  SyncObjectType,\n} from \"game-server/backend-interface/backend-sync\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdateType,\n  GlobalUpdate,\n  GlobalStateBattleRoomStatus,\n  ClientActiveGameGlobalState,\n  ClientErratum,\n  TeamBattleUpdateStateGlobalUpdate,\n  CheckpointSummary,\n} from \"game-server/global-updates\";\nimport { GameRoom, UnjoinedRoomMember, RoomMember } from \"game-server/Room\";\nimport { TeamController } from \"./team-controller\";\n\ntype ResolveDeckResult =\n  | {\n      deckSelection: DeckSelection | null;\n      err?: undefined;\n    }\n  | {\n      deckSelection?: undefined;\n      err: WSError;\n    };\n\ntype CommitDeckSelectionResult =\n  | {\n      deckSelections: { [player in Player]?: DeckSelection };\n      err?: undefined;\n    }\n  | {\n      deckSelections?: undefined;\n      err: WSError;\n    };\n\n/** Controller to manage the room for a team/battle combination. */\nexport class TeamBattleController {\n  server: GameServer;\n\n  teamId: string;\n  puzName: string;\n  /** Normally equal to puzName, but may be different in instancers. */\n  selectedPuzName: string | null;\n\n  /**\n   * The selected deck slot in the prep page, before the user has set\n   * \"ready for battle\".\n   */\n  selectedDeckSlot: number | null;\n  /**\n   * Details about the pending game, if any. This needs to be separate\n   * from the activeGame state, since we want to be able to start\n   * setting up a pending game while keeping details about the previous\n   * game.\n   */\n  pendingGame?: {\n    deckSelection: DeckSelection | null;\n  };\n\n  checkpoints: { [slot: number]: SerializedCheckpointState };\n  checkpointsSyncTracker: SyncTracker;\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * updates for this battle.\n   */\n  subscriptions: Map<string, ClientConnection>;\n  /**\n   * Map of connId to connections for connections subscribed to\n   * updates for this battle's speedrun leaderboard summary.\n   */\n  speedrunLeaderboardSummarySubscriptions: Map<string, ClientConnection>;\n\n  constructor(\n    teamId: string,\n    puzName: string,\n    selectedPuzName: string | null,\n    selectedDeckSlot: number | null,\n    server: GameServer\n  ) {\n    this.teamId = teamId;\n    this.puzName = puzName;\n    this.selectedPuzName = selectedPuzName;\n    this.server = server;\n\n    this.selectedDeckSlot = selectedDeckSlot;\n    this.checkpoints = {};\n    this.checkpointsSyncTracker = new SyncTracker(\n      this.server.config,\n      SyncObjectType.CHECKPOINTS,\n      (dirtyState) => {\n        this.server.dirtyStateTracker.update({\n          teams: {\n            [this.teamId]: {\n              checkpoints: {\n                [this.puzName]: dirtyState,\n              },\n            },\n          },\n        });\n      }\n    );\n    this.subscriptions = new Map();\n    this.speedrunLeaderboardSummarySubscriptions = new Map();\n  }\n\n  getTeamController(): TeamController {\n    return this.server.getTeamController(this.teamId);\n  }\n\n  getBattleGroupName(): string {\n    return this.server.getBattleGroup(this.puzName).battleGroupName;\n  }\n\n  wantsErrataFor(puzzle: string): boolean {\n    const { puzName, selectedPuzName } = this;\n    if (\n      puzzle === puzName ||\n      puzzle === this.server.getBattleGroup(puzName).battleGroupName\n    )\n      return true;\n    if (selectedPuzName === null) return false;\n    if (\n      puzzle === selectedPuzName ||\n      puzzle === this.server.getBattleGroup(selectedPuzName).battleGroupName\n    )\n      return true;\n    return false;\n  }\n\n  filterErrata(conn: ClientConnection): { [erratumId: string]: ClientErratum } {\n    const errata: { [erratumId: string]: ClientErratum } = {};\n    for (const [\n      erratumId,\n      { puzzle, text, timestamp, published },\n    ] of Object.entries(this.server.errata))\n      if (\n        puzzle !== null &&\n        text !== \"\" &&\n        this.wantsErrataFor(puzzle) &&\n        (published || conn.isAdmin)\n      )\n        errata[erratumId] = { erratumId, text, timestamp, published };\n    return errata;\n  }\n\n  broadcastErrataGlobalUpdate(\n    upd: Omit<TeamBattleUpdateStateGlobalUpdate, \"type\">\n  ) {\n    const subscriptions = this.server.getSubscriptions({\n      type: GlobalUpdatesScopeType.TEAM_BATTLE,\n      teamId: this.teamId,\n      puzName: this.puzName,\n    });\n    for (const conn of subscriptions.values())\n      this.server.sendResp(conn, {\n        type: WSRespType.GLOBAL_UPDATE,\n        upd: {\n          type: GlobalUpdateType.TEAM_BATTLE_UPDATE_STATE,\n          errata: this.filterErrata(conn),\n          ...upd,\n        },\n      });\n  }\n\n  getActiveRoom(): GameRoom | null {\n    return this.server.gameRoomsController.getActiveRoom(\n      this.teamId,\n      this.puzName\n    );\n  }\n\n  private setActiveRoom(room: GameRoom): void {\n    this.server.gameRoomsController.setActiveRoom(\n      this.teamId,\n      this.puzName,\n      room.roomId\n    );\n  }\n\n  getRoomStatus(): GlobalStateBattleRoomStatus {\n    const room = this.getActiveRoom();\n    if (room === null) return GlobalStateBattleRoomStatus.NONE;\n    const { gameState } = room.engine;\n    if (gameState.phase === GamePhase.ACTIVE)\n      return GlobalStateBattleRoomStatus.ACTIVE;\n    return GlobalStateBattleRoomStatus.INACTIVE;\n  }\n\n  getRoomPuzName(): string | null {\n    const room = this.getActiveRoom();\n    if (room === null) return null;\n    return room.engine.puzName;\n  }\n\n  isRoomActive(): boolean {\n    return this.getRoomStatus() === GlobalStateBattleRoomStatus.ACTIVE;\n  }\n\n  getInspector(): StaticInspector {\n    if (this.selectedPuzName === null)\n      throw new Error(\"need puzzle selection to get inspector\");\n    return this.server.gameRoomsController.getInspector(this.selectedPuzName);\n  }\n\n  private getPlayerInGameState(gameState: FullGameState): Player {\n    const playerCandidates = [Player.P1, Player.P2].filter((player) => {\n      const { teamData } = gameState[player];\n      return teamData !== undefined && teamData.teamId === this.teamId;\n    });\n    // Retain support for vanilla to enable workshop.\n    // TODO: If we ever have intra-team PvP, this would instead\n    // need to depend on which side of the board we're on.\n    if (playerCandidates.length !== 1 && this.selectedPuzName !== \"vanilla\")\n      throw new Error(\"team not uniquely part of active game\");\n    return playerCandidates[0];\n  }\n\n  getPlayer(): Player {\n    const room = this.getActiveRoom();\n    if (room === null)\n      throw new Error(\"player not defined if there's no active game\");\n    const { gameState } = room.engine;\n    return this.getPlayerInGameState(gameState);\n  }\n\n  getActiveGameTeamData(): PlayerStateTeamData {\n    const room = this.getActiveRoom();\n    if (room === null)\n      throw new Error(\"tried to get team data without an active game\");\n    const { teamData } = room.engine.gameState[this.getPlayer()];\n    if (teamData === undefined)\n      throw new Error(\"expect team data to be present in active game\");\n    return teamData;\n  }\n\n  getActiveGameDeckSelection(): DeckSelection | null {\n    const room = this.getActiveRoom();\n    if (room === null)\n      throw new Error(\"tried to get team data without an active game\");\n    return (\n      room.engine.gameState.engineOnly.deckSelections[this.getPlayer()] ?? null\n    );\n  }\n\n  /**\n   * Leave the currently active game. Returns a list of room members\n   * kicked from the active game room, if any. This may be only a\n   * subset of the members originally in the room if there are\n   * multiple teams connected to the room.\n   */\n  private leaveActiveGame(): RoomMember[] {\n    const room = this.getActiveRoom();\n    if (room === null) return [];\n\n    const membersToKick = [...room.members.values()].filter((roomMember) => {\n      const { teamId, spectateTeamId } = roomMember.conn;\n      if (teamId === undefined)\n        throw new Error(\n          \"expect conn to be authenticated if it is joined to a room\"\n        );\n      return teamId === this.teamId || spectateTeamId === this.teamId;\n    });\n    for (const roomMember of membersToKick) {\n      this.server.kickRoomMember(roomMember);\n    }\n\n    return membersToKick;\n  }\n\n  /**\n   * To start a new battle, we first confirm a selected deck, and\n   * then start the battle. This separation is only relevant\n   * in PvP, where some time may pass between a team committing\n   * to a deck and accepting a match.\n   * This method commits the deck selection into a pending game,\n   * presuming that the team may act as any of the specified players\n   * for the battle.\n   * Returns the valid player-deck combinations produced.\n   */\n  commitDeckSelection(\n    players: ReadonlyArray<Player>,\n    reuseDeck?: boolean,\n    allowInvalidDecks?: boolean\n  ): CommitDeckSelectionResult {\n    if (this.isRoomActive())\n      throw new Error(\n        \"don't expect to set up a new game while a game is active\"\n      );\n\n    const inspector = this.getInspector();\n    const deckPlayers = players.filter(\n      (player) => inspector.getDeckOverride(player) === null\n    );\n    const { deckSelection, err } = this.resolveDeckForBattle(\n      deckPlayers,\n      reuseDeck,\n      allowInvalidDecks\n    );\n    if (err !== undefined) return { err };\n\n    this.pendingGame = {\n      deckSelection,\n    };\n\n    const deckSelections: { [player in Player]?: DeckSelection } = {};\n    if (deckSelection === null) {\n      if (deckPlayers.length > 0 && !inspector.isNoDeckAllowed())\n        throw new Error(\"expect a deck selection if players need decks\");\n    } else {\n      if (deckSelection !== null) {\n        for (const player of deckPlayers) {\n          deckSelections[player] = deckSelection;\n        }\n      }\n    }\n\n    return { deckSelections };\n  }\n\n  /**\n   * Move connections from the active game into a new room.\n   * Members joining the new room are assigned the specified role,\n   * unless they were GOD in the old room.\n   */\n  private moveConnsIntoRoom(room: GameRoom, role: Role): void {\n    const prevMembers = this.leaveActiveGame();\n    for (const { conn, role: prevRole } of prevMembers) {\n      this.server.joinConnToRoom(\n        conn,\n        room,\n        prevRole === Role.GOD ? prevRole : role\n      );\n    }\n  }\n\n  /**\n   * Activate the pending game by moving the team into a new room.\n   * The room is provided externally to support sharing the same\n   * room across multiple teams in PvP scenarios.\n   * The deck selection is saved to support reuse deck on retry.\n   *\n   * Members joining the new room are assigned the specified role,\n   * unless they were GOD in the old room. If not specified, the\n   * default role is picked based on the game spec.\n   */\n  activateGame(room: GameRoom, role?: Role): void {\n    const inspector = this.getInspector();\n    role ??= inspector.getDefaultRole();\n\n    // Transfer members of this team from the old room to the new one.\n    this.moveConnsIntoRoom(room, role);\n\n    if (this.pendingGame === undefined)\n      throw new Error(\"no pending game to activate\");\n    delete this.pendingGame;\n\n    this.setActiveRoom(room);\n    this.handleRoomStatusChange();\n  }\n\n  getLockedDeckSelection(): DeckSelection | null {\n    // Only use the active game deck selection if the room is active.\n    // Otherwise, the deck selection is only there to support retry\n    // with same deck, and does not need to be visible to the client.\n    if (this.isRoomActive()) return this.getActiveGameDeckSelection();\n    return this.pendingGame?.deckSelection ?? null;\n  }\n\n  getClientActiveGameState(): ClientActiveGameGlobalState | null {\n    const room = this.getActiveRoom();\n    if (!this.isRoomActive()) return null;\n    if (room === null)\n      throw new Error(\"expect an active game if the room status is active\");\n    const { enabledMasteries, faction } = this.getActiveGameTeamData();\n    return { enabledMasteries, faction };\n  }\n\n  broadcastTeamBattleGlobalUpdate(upd: GlobalUpdate): void {\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_BATTLE,\n        teamId: this.teamId,\n        puzName: this.puzName,\n      },\n      upd\n    );\n  }\n\n  broadcastTeamSpeedrunLeaderboardSummaryGlobalUpdate(upd: GlobalUpdate): void {\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY,\n        teamId: this.teamId,\n        puzName: this.puzName,\n      },\n      upd\n    );\n  }\n\n  handleRoomStatusChange(): void {\n    const { teamId, puzName } = this;\n    const roomStatus = this.getRoomStatus();\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM,\n        teamId,\n      },\n      {\n        type: GlobalUpdateType.TEAM_UPDATE_PUZZLE,\n        puzName,\n        roomStatus,\n      }\n    );\n    this.broadcastLockedDeckSelection();\n    this.broadcastTeamBattleGlobalUpdate({\n      type: GlobalUpdateType.TEAM_BATTLE_UPDATE_STATE,\n      activeGame: this.getClientActiveGameState(),\n      roomPuzName: this.getRoomPuzName(),\n    });\n    if (puzName === PUZ_NAME_PVP) {\n      this.server.handleTeamSummaryUpdate(this.teamId, {\n        isPvPGameActive: this.isRoomActive(),\n      });\n    }\n  }\n\n  broadcastLockedDeckSelection(): void {\n    this.broadcastTeamBattleGlobalUpdate({\n      type: GlobalUpdateType.TEAM_BATTLE_UPDATE_STATE,\n      lockedDeckSelection: this.getLockedDeckSelection(),\n    });\n  }\n\n  summarizeCheckpoints(): { [slot: number]: CheckpointSummary } {\n    return Object.fromEntries(\n      Object.entries(this.checkpoints).map(\n        ([slot, { turnNumber, roomId, timestamp }]) => [\n          slot,\n          { turnNumber, roomId, timestamp },\n        ]\n      )\n    );\n  }\n\n  makeCheckpoint(engine: Engine, slots: number[]): void {\n    const { roomId, gameState } = engine;\n    const checkpoint: CheckpointState = {\n      selectedPuzName: this.selectedPuzName,\n      gameState,\n    };\n    const serialized: SerializedCheckpointState = {\n      turnNumber: gameState.turnNumber,\n      roomId,\n      timestamp: Date.now(),\n      gainedScore: gameState.engineOnly.gainedScore,\n      serializedState: JSON.stringify(checkpoint),\n    };\n    for (const slot of slots) this.checkpoints[slot] = serialized;\n    this.handleCheckpointsChange();\n  }\n\n  restoreCheckpoint(conn: ClientConnection, slot: number): void {\n    if (!isCheckpointSlotValid(slot))\n      return this.server.sendErr(conn, {\n        errCode: WSErrorCode.INVALID_CHECKPOINT_SLOT,\n      });\n    const room = this.getActiveRoom();\n    if (room === null) {\n      this.server.sendErr(conn, { errCode: WSErrorCode.NO_ROOM });\n      return;\n    }\n    const { gameState } = room.engine;\n    const serializedCheckpoint = this.checkpoints[slot];\n    if (serializedCheckpoint === undefined) {\n      this.server.sendErr(conn, { errCode: WSErrorCode.NO_CHECKPOINT });\n      return;\n    }\n    const checkpoint = JSON.parse(\n      serializedCheckpoint.serializedState\n    ) as CheckpointState;\n\n    if (checkpoint.selectedPuzName !== null) {\n      const err = this.selectPuzzle(checkpoint.selectedPuzName, true);\n      if (err !== null)\n        throw new Error(\"should not encounter error re-selecting the old puzz\");\n    }\n\n    // Lock the deck selection back to the original deck selection.\n    // The old deck contents are derived from the game state and\n    // shown to the player separately as part of the active game\n    // state broadcast in the room status update handler.\n    const player = this.getPlayerInGameState(checkpoint.gameState);\n    const deck = checkpoint.gameState.engineOnly.deckSelections[player];\n    const deckSlot = deck?.slot ?? null;\n    if (deckSlot !== null) {\n      const err = this.selectDeck(deckSlot, true);\n      if (err !== null)\n        throw new Error(\"should not encounter error re-selecting the old deck\");\n    }\n\n    // HACK: It might be possible to restore an old checkpoint from before\n    // solving after having solved a battle. Fix up the isReplay state.\n    for (const player of [Player.P1, Player.P2]) {\n      const { teamData } = checkpoint.gameState[player];\n      if (teamData === undefined) continue;\n      teamData.isReplay = this.server\n        .getTeamController(teamData.teamId)\n        .solveTimes.has(checkpoint.gameState.puzName);\n    }\n\n    checkpoint.gameState.engineOnly.gainedScore =\n      serializedCheckpoint.gainedScore;\n\n    // We might restore from a different puzzle in instancer rooms.\n    const isSamePuzzle = gameState.puzName === checkpoint.gameState.puzName;\n\n    // HACK: Create a fake BackendRoom and restore it. No need to set\n    // optional fields that aren't used by restoreSavedRoom.\n    // If we're restoring from the same puzzle, initialize the new room\n    // with the current game state first and then send an override, in\n    // order to animate the restoration process.\n    const newRoom = this.restoreSavedRoom({\n      roomId: this.server.genGameRoomId(),\n      puzName: checkpoint.gameState.puzName,\n      hostPuzName: this.puzName,\n      createTime: new Date().getTime(),\n      savedRoom: { gameState: isSamePuzzle ? gameState : checkpoint.gameState },\n    });\n    if (newRoom === null) throw new Error(\"expect restore room to succeed\");\n    if (isSamePuzzle) {\n      this.server.useUpdatesContext(newRoom, () => {\n        newRoom.engine.broadcastOverrideState(checkpoint.gameState);\n      });\n    }\n    this.handleRoomStatusChange();\n\n    // Update the roomIds of all checkpoints attributed to the same\n    // room as the restored checkpoint, so that they show to the user\n    // as belonging to the currently active room.\n    const oldRoomId = serializedCheckpoint.roomId;\n    for (const [slot, checkpoint] of Object.entries(this.checkpoints)) {\n      if (checkpoint.roomId === oldRoomId) {\n        this.checkpoints[Number(slot)] = {\n          ...checkpoint,\n          roomId: newRoom.roomId,\n        };\n      }\n    }\n    this.handleCheckpointsChange();\n  }\n\n  private handleCheckpointsChange() {\n    this.checkpointsSyncTracker.handleModify();\n    this.broadcastTeamBattleGlobalUpdate({\n      type: GlobalUpdateType.TEAM_BATTLE_UPDATE_STATE,\n      checkpointSummaries: this.summarizeCheckpoints(),\n    });\n  }\n\n  handleRoomComplete(roomId: string, gainedScore: number) {\n    for (const [slot, checkpoint] of Object.entries(this.checkpoints))\n      if (checkpoint.roomId === roomId)\n        this.checkpoints[Number(slot)] = { ...checkpoint, gainedScore };\n    this.handleCheckpointsChange();\n    this.handleRoomStatusChange();\n  }\n\n  resign(): WSError | null {\n    const room = this.getActiveRoom();\n    if (room === null) return { errCode: WSErrorCode.NO_ROOM };\n    if (!this.isRoomActive()) {\n      // This might be caused by a race condition, so just return\n      // silently.\n      return null;\n    }\n\n    this.server.sendSystemStep(room, {\n      type: StepType.SYSTEM_RESIGN,\n      player: this.getPlayer(),\n    });\n    return null;\n  }\n\n  handleEnterGameRoom(unjoinedMember: UnjoinedRoomMember): void {\n    const { conn, role } = unjoinedMember;\n    const room = this.getActiveRoom();\n\n    // The client should only request to join the game room once\n    // a game has been set up.\n    if (room === null) {\n      this.server.sendEnterRoomErr(unjoinedMember, {\n        errCode: WSErrorCode.NO_ROOM,\n      });\n      return;\n    }\n\n    // Only allow arbitrary roles as admin.\n    if (role !== undefined && !conn.isAdmin) {\n      this.server.sendEnterRoomErr(unjoinedMember, {\n        errCode: WSErrorCode.PERMISSION_DENIED,\n      });\n      return;\n    }\n\n    // Currently, the default role is always captured in what player\n    // the team is joined to the room as.\n    const defaultRole = ((): Role => {\n      switch (this.getPlayer()) {\n        case Player.P1:\n          return Role.P1;\n        case Player.P2:\n          return Role.P2;\n      }\n    })();\n\n    this.server.completeEnterRoom(\n      {\n        ...unjoinedMember,\n        role: role ?? defaultRole,\n      },\n      room\n    );\n  }\n\n  selectPuzzle(\n    selectedPuzName: string | null,\n    restoring?: boolean\n  ): WSError | null {\n    // Early out to avoid broadcasting an unnecessary update.\n    if (\n      this.selectedPuzName !== null &&\n      this.selectedPuzName === selectedPuzName\n    )\n      return null;\n\n    if (this.getBattleGroupName() !== BATTLE_GROUP_NAME_INSTANCER)\n      return { errCode: WSErrorCode.INVALID_PUZZLE };\n    if (this.isRoomActive() && !restoring)\n      return { errCode: WSErrorCode.LOCKED_BY_BATTLE };\n\n    if (selectedPuzName !== null) {\n      const puzData = this.server.puzzlesDB.tryGetPuzzle(selectedPuzName);\n      const battleGroupData =\n        this.server.puzzlesDB.tryGetBattleGroup(selectedPuzName);\n      if (puzData === null || battleGroupData === null)\n        return { errCode: WSErrorCode.INVALID_PUZZLE };\n      if (\n        !isInstanceable(\n          puzData.answer !== null,\n          puzData.puzName,\n          puzData.battleGroupName,\n          battleGroupData.numPuzzles\n        )\n      )\n        return { errCode: WSErrorCode.INVALID_PUZZLE };\n    }\n\n    this.selectedPuzName = selectedPuzName;\n    this.getTeamController().mergeSlowSyncPacket({\n      puzzleSelections: {\n        [this.puzName]: selectedPuzName,\n      },\n    });\n    this.server.bigBoardStateTracker.updateTeam(this.teamId, {\n      selectedPuzzles: {\n        [this.puzName]: selectedPuzName,\n      },\n    });\n\n    this.broadcastErrataGlobalUpdate({ selectedPuzName });\n    return null;\n  }\n\n  selectDeck(slot: number, restoring?: boolean): WSError | null {\n    // Don't select the deck if no change is required.\n    if (slot === this.selectedDeckSlot) return null;\n\n    if (this.isRoomActive() && !restoring)\n      return { errCode: WSErrorCode.LOCKED_BY_BATTLE };\n\n    this.selectedDeckSlot = slot;\n    this.getTeamController().mergeSlowSyncPacket({\n      preferredDecks: {\n        [this.puzName]: slot,\n      },\n    });\n    this.broadcastTeamBattleGlobalUpdate({\n      type: GlobalUpdateType.TEAM_BATTLE_UPDATE_STATE,\n      selectedDeckSlot: slot,\n    });\n    return null;\n  }\n\n  /**\n   * Resolve the team's deck as players for the battle. If resolve fails,\n   * send an error to conn and return null.\n   * Allow multiple players to support joining as both players in dev.\n   */\n  private resolveDeckForBattle(\n    /** Players that will be assigned the resolved deck, if any. */\n    players: Player[],\n    reuseDeck?: boolean,\n    allowInvalidDecks?: boolean\n  ): ResolveDeckResult {\n    // If there are no players that need a deck, then don't get one.\n    // In particular, battles with assigned P1 decks should not\n    // require the user to make deck selections.\n    if (players.length <= 0) return { deckSelection: null };\n\n    const { selectedDeckSlot } = this;\n    const room = this.getActiveRoom();\n    const inspector = this.getInspector();\n\n    if ((reuseDeck ?? false) && room !== null) {\n      return { deckSelection: this.getActiveGameDeckSelection() };\n    }\n\n    if (selectedDeckSlot === null) {\n      if (inspector.isNoDeckAllowed()) return { deckSelection: null };\n      if (allowInvalidDecks ?? false) {\n        return {\n          deckSelection: {\n            slot: null,\n            deck: {\n              displayName: \"autogen deck\",\n              cards: {},\n            },\n          },\n        };\n      }\n\n      return { err: { errCode: WSErrorCode.NEED_DECK } };\n    }\n\n    const deck =\n      this.getTeamController().getDeckController(selectedDeckSlot).deck;\n    for (const player of players) {\n      const failedChecks: FailedChecks = new Set();\n      inspector.validateDeck(failedChecks, player, deck);\n      if (!(allowInvalidDecks ?? false) && failedChecks.size !== 0) {\n        return { err: { errCode: WSErrorCode.INVALID_DECK } };\n      }\n    }\n\n    return {\n      deckSelection: {\n        slot: selectedDeckSlot,\n        deck: cloneDeck(deck),\n      },\n    };\n  }\n\n  restoreSavedRoom(roomEntry: BackendRoom): GameRoom | null {\n    const { roomId, hostPuzName, puzName, savedRoom } = roomEntry;\n    if (savedRoom === undefined) return null;\n    this.selectPuzzle(puzName);\n    // Check if the room already exists, which may be the case when\n    // restoring PvP rooms.\n    const existingRoomTracker =\n      this.server.gameRoomsController.rooms.get(roomId);\n    const room =\n      existingRoomTracker?.room ??\n      this.server.gameRoomsController.createRoomFromGameState(\n        puzName,\n        hostPuzName,\n        // Warning: This is necessary even if we're not concerned about\n        // type safety, since if this is called from restoreCheckpoint,\n        // and the previous game has ended, the game state might not\n        // have been synced to backend yet and so should be treated as\n        // immutable. If we want to remove this deep copy, then\n        // restoreCheckpoint should be updated to deep copy the game\n        // state if the game has ended.\n        JSON.parse(JSON.stringify(savedRoom.gameState)) as MutableGameState,\n        roomId\n      );\n    const defaultRole = ((): Role => {\n      switch (this.getPlayerInGameState(room.engine.gameState)) {\n        case Player.P1:\n          return Role.P1;\n        case Player.P2:\n          return Role.P2;\n      }\n    })();\n    this.moveConnsIntoRoom(room, defaultRole);\n    this.setActiveRoom(room);\n    return room;\n  }\n}\n","import { StepType } from \"engine/types/steps\";\nimport { Role } from \"engine/types/updates\";\nimport { Player, DevKnobs, opponentOf } from \"engine/types/game-state\";\nimport { PUZ_NAME_PVP, PVP_TURN_TIME_LIMIT } from \"engine/puzzles/puzzle-data\";\nimport { PVP_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { WSErrorCode, WSError, WSRespType } from \"game-server/ws\";\nimport { HuntNotificationType } from \"game-server/notifications\";\nimport { ClientConnection, GameServer } from \"game-server/GameServer\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdateType,\n  GlobalUpdate,\n} from \"game-server/global-updates\";\n\n/**\n * PvP requests expire after some amount of time, to make it more\n * likely that the requesting team is still active when the request\n * gets accepted.\n */\nexport const PVP_REQUEST_EXPIRY_TIME_MS = 60 * 1000;\n\nexport type PvPRequest = {\n  fromTeamId: string;\n  toTeamId: string;\n  expiryTime: number;\n};\n\nconst isPvPRequestExpired = (pvpReq: PvPRequest): boolean => {\n  const timeNow = new Date().getTime();\n  const { expiryTime } = pvpReq;\n  return timeNow > expiryTime;\n};\n\nexport class TeamPvPController {\n  teamId: string;\n  server: GameServer;\n\n  /** Battle requests that the team has made, indexed by team ID. */\n  outgoingRequests: Map<string, PvPRequest>;\n  /** Battle requests made to the team, indexed by team ID. */\n  incomingRequests: Map<string, PvPRequest>;\n  /** Team IDs of teams blocked by the team. */\n  blockedTeams: Set<string>;\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * updates for this team's PvP state.\n   */\n  subscriptions: Map<string, ClientConnection>;\n\n  constructor(\n    teamId: string,\n    blockedTeams: ReadonlyArray<string>,\n    server: GameServer\n  ) {\n    this.teamId = teamId;\n    this.server = server;\n    this.outgoingRequests = new Map();\n    this.incomingRequests = new Map();\n    this.blockedTeams = new Set(blockedTeams);\n    this.subscriptions = new Map();\n  }\n\n  getTeamController() {\n    return this.server.getTeamController(this.teamId);\n  }\n\n  getBattleController() {\n    return this.getTeamController().getBattleController(PUZ_NAME_PVP);\n  }\n\n  claimTimeVictory(): WSError | null {\n    const room = this.getBattleController().getActiveRoom();\n    if (room === null) {\n      return { errCode: WSErrorCode.NO_ROOM };\n    }\n    const { gameState } = room.engine;\n    const opponent = opponentOf(this.getBattleController().getPlayer());\n    const { teamData, startTurnTime } = gameState[opponent] ?? {};\n    if (!teamData) throw new Error(\"pvp opponent not found\");\n    if (!startTurnTime || Date.now() - startTurnTime < PVP_TURN_TIME_LIMIT) {\n      // client sent request when stale; return silently\n      return null;\n    }\n    this.server.sendSystemStep(room, {\n      type: StepType.SYSTEM_TIME_OUT,\n      player: opponent,\n    });\n    return null;\n  }\n\n  getHasMastery(): boolean {\n    return this.getTeamController()\n      .masteryTreeController.getEnabledMasteries()\n      .has(PVP_MASTERY_ID);\n  }\n\n  broadcastTeamPvPGlobalUpdate(upd: GlobalUpdate) {\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_PVP,\n        teamId: this.teamId,\n      },\n      upd\n    );\n  }\n\n  isGameActive(): boolean {\n    return this.getBattleController().isRoomActive();\n  }\n\n  /**\n   * Validate that a team ID is a valid opponent, and get its\n   * PvP controller.\n   */\n  private validateOpponentTeamId(\n    targetTeamId: string\n  ): TeamPvPController | null {\n    // A team cannot battle itself.\n    if (targetTeamId === this.teamId) return null;\n    const targetTeamController = this.server.teamControllers.get(targetTeamId);\n    if (targetTeamController === undefined) return null;\n    return targetTeamController.pvpController;\n  }\n\n  private commitDeckSelection(): WSError | null {\n    const battleController = this.getBattleController();\n\n    // If we've already committed the deck, don't commit it again.\n    if (battleController.pendingGame !== undefined) return null;\n\n    const { err } = battleController.commitDeckSelection([\n      Player.P1,\n      Player.P2,\n    ]);\n    return err ?? null;\n  }\n\n  handleUnlockDeck(conn: ClientConnection): WSError | null {\n    if (this.isGameActive()) {\n      return { errCode: WSErrorCode.LOCKED_BY_BATTLE };\n    }\n\n    this.clearOutgoingRequests();\n    const battleController = this.getBattleController();\n    delete battleController.pendingGame;\n    battleController.broadcastLockedDeckSelection();\n    return null;\n  }\n\n  private makePvPRequest(targetTeamId: string): WSError | null {\n    const targetController = this.validateOpponentTeamId(targetTeamId);\n    if (targetController === null) {\n      return { errCode: WSErrorCode.INVALID_TEAM };\n    }\n    if (this.blockedTeams.has(targetTeamId)) {\n      return { errCode: WSErrorCode.BLOCKED_BY_REQUESTER };\n    }\n    if (targetController.blockedTeams.has(this.teamId)) {\n      return { errCode: WSErrorCode.BLOCKED_BY_TARGET };\n    }\n    if (this.isGameActive()) {\n      return { errCode: WSErrorCode.ROOM_BUSY };\n    }\n    if (!this.getHasMastery()) {\n      return { errCode: WSErrorCode.NO_MASTERY };\n    }\n    if (!targetController.getHasMastery()) {\n      return { errCode: WSErrorCode.TARGET_NO_MASTERY };\n    }\n\n    const existingReq = this.outgoingRequests.get(targetTeamId);\n    if (existingReq !== undefined) {\n      if (isPvPRequestExpired(existingReq)) {\n        this.clearRequest(existingReq, false);\n      } else {\n        return { errCode: WSErrorCode.DUPLICATE_REQUEST };\n      }\n    }\n\n    const commitDeckSelectionErr = this.commitDeckSelection();\n    if (commitDeckSelectionErr !== null) return commitDeckSelectionErr;\n\n    const pvpReq = {\n      fromTeamId: this.teamId,\n      toTeamId: targetTeamId,\n      expiryTime: new Date().getTime() + PVP_REQUEST_EXPIRY_TIME_MS,\n    };\n    this.outgoingRequests.set(targetTeamId, pvpReq);\n    targetController.incomingRequests.set(this.teamId, pvpReq);\n\n    this.getBattleController().broadcastLockedDeckSelection();\n    this.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      outgoingRequestsToAdd: [pvpReq],\n    });\n    targetController.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      incomingRequestsToAdd: [pvpReq],\n    });\n\n    this.server.broadcastRespToTeam(targetTeamId, {\n      type: WSRespType.NOTIFICATION,\n      notif: { type: HuntNotificationType.PVP_REQUEST_RECEIVED },\n    });\n\n    return null;\n  }\n\n  handleMakePvPRequest(\n    targetTeamId: string,\n    autoAccept?: boolean\n  ): WSError | null {\n    const makePvPRequestErr = this.makePvPRequest(targetTeamId);\n    if (makePvPRequestErr !== null) return makePvPRequestErr;\n\n    if (autoAccept ?? false) {\n      const targetController = this.validateOpponentTeamId(targetTeamId);\n      if (targetController === null)\n        return { errCode: WSErrorCode.INVALID_TEAM };\n      const acceptPvPRequestErr = targetController.acceptPvPRequest(\n        this.teamId,\n        undefined,\n        true\n      );\n      if (acceptPvPRequestErr !== null) return acceptPvPRequestErr;\n    }\n\n    return null;\n  }\n\n  handleCancelPvPRequest(\n    conn: ClientConnection,\n    targetTeamId: string\n  ): WSError | null {\n    const targetController = this.validateOpponentTeamId(targetTeamId);\n    if (targetController === null) {\n      return { errCode: WSErrorCode.INVALID_TEAM };\n    }\n\n    const existingReq = this.outgoingRequests.get(targetTeamId);\n    // Don't return an error if the request doesn't exist, since\n    // that might be due to a race condition.\n    if (existingReq !== undefined) {\n      this.clearRequest(existingReq, true);\n    }\n\n    this.unlockDeckIfUnneeded();\n    return null;\n  }\n\n  setIsTeamBlocked(\n    conn: ClientConnection,\n    targetTeamId: string,\n    isBlocked: boolean\n  ): WSError | null {\n    const targetController = this.validateOpponentTeamId(targetTeamId);\n    if (targetController === null) {\n      return { errCode: WSErrorCode.INVALID_TEAM };\n    }\n\n    if (isBlocked) {\n      this.blockedTeams.add(targetTeamId);\n      const existingOutgoingReq = this.outgoingRequests.get(targetTeamId);\n      if (existingOutgoingReq !== undefined)\n        this.clearRequest(existingOutgoingReq, true);\n      const existingIncomingReq = this.incomingRequests.get(targetTeamId);\n      if (existingIncomingReq !== undefined)\n        this.clearRequest(existingIncomingReq, true);\n    } else {\n      this.blockedTeams.delete(targetTeamId);\n    }\n\n    this.getTeamController().mergeSlowSyncPacket({\n      blockedTeams: {\n        [targetTeamId]: isBlocked,\n      },\n    });\n\n    this.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      blockedTeamsToAdd: isBlocked ? [targetTeamId] : undefined,\n      blockedTeamsToDelete: isBlocked ? undefined : [targetTeamId],\n    });\n    targetController.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      blockedByTeamsToAdd: isBlocked ? [this.teamId] : undefined,\n      blockedByTeamsToDelete: isBlocked ? undefined : [this.teamId],\n    });\n\n    return null;\n  }\n\n  /**\n   * Enter the ring. Note that a team may \"re-enter\" the ring after\n   * some time to re-send battle requests.\n   */\n  enterRing(): WSError | null {\n    if (!this.getHasMastery()) {\n      return { errCode: WSErrorCode.NO_MASTERY };\n    }\n\n    const { ring } = this.server.pvpLobbyController;\n    const isNew = ring.indexOf(this.teamId) === -1;\n    if (isNew) {\n      ring.push(this.teamId);\n      this.getTeamController().mergeSlowSyncPacket({ isInRing: true });\n      this.server.pvpLobbyController.broadcastPvPGlobalUpdate({\n        type: GlobalUpdateType.PVP_UPDATE_STATE,\n        ringTeamsToAdd: [this.teamId],\n      });\n    }\n\n    // Broadcast requests to anyone who would accept it, and only\n    // if the current deck selection is valid.\n    for (const targetTeamId of ring) {\n      this.makePvPRequest(targetTeamId);\n    }\n\n    return null;\n  }\n\n  leaveRing() {\n    const { ring } = this.server.pvpLobbyController;\n    const indexInRing = ring.indexOf(this.teamId);\n    if (indexInRing === -1) return;\n    ring.splice(indexInRing, 1);\n    this.getTeamController().mergeSlowSyncPacket({ isInRing: false });\n\n    this.server.pvpLobbyController.broadcastPvPGlobalUpdate({\n      type: GlobalUpdateType.PVP_UPDATE_STATE,\n      ringTeamsToDelete: [this.teamId],\n    });\n  }\n\n  acceptPvPRequest(\n    targetTeamId: string,\n    devKnobs?: DevKnobs,\n    forceP1?: boolean\n  ): WSError | null {\n    this.clearExpiredRequests();\n\n    const targetController = this.validateOpponentTeamId(targetTeamId);\n    if (targetController === null) {\n      return { errCode: WSErrorCode.INVALID_TEAM };\n    }\n    const pvpReq = this.incomingRequests.get(targetTeamId);\n    if (pvpReq === undefined) {\n      return { errCode: WSErrorCode.NO_PVP_REQUEST };\n    }\n    if (this.isGameActive()) {\n      return { errCode: WSErrorCode.ROOM_BUSY };\n    }\n    if (!this.getHasMastery()) {\n      return { errCode: WSErrorCode.NO_MASTERY };\n    }\n    if (!targetController.getHasMastery()) {\n      return { errCode: WSErrorCode.TARGET_NO_MASTERY };\n    }\n\n    const commitDeckSelectionErr = this.commitDeckSelection();\n    if (commitDeckSelectionErr !== null) return commitDeckSelectionErr;\n\n    this.clearAllRequestsAndLeaveRing();\n    targetController.clearAllRequestsAndLeaveRing();\n\n    const battleController = this.getBattleController();\n    const targetBattleController = targetController.getBattleController();\n    if (\n      battleController.pendingGame === undefined ||\n      targetBattleController.pendingGame === undefined\n    )\n      throw new Error(\"expect game setup for pvp teams to be ready\");\n    const selfDeckSelection = battleController.pendingGame.deckSelection;\n    const oppDeckSelection = targetBattleController.pendingGame.deckSelection;\n    if (selfDeckSelection === null || oppDeckSelection === null)\n      throw new Error(\"expect deck selections pvp teams to be defined\");\n\n    const isP1 = forceP1 ?? false ? true : Math.random() * 2 < 1;\n    const room = this.server.gameRoomsController.createRoom(\n      PUZ_NAME_PVP,\n      PUZ_NAME_PVP,\n      {\n        [Player.P1]: isP1 ? this.teamId : targetTeamId,\n        [Player.P2]: isP1 ? targetTeamId : this.teamId,\n      },\n      {\n        [Player.P1]: isP1 ? selfDeckSelection : oppDeckSelection,\n        [Player.P2]: isP1 ? oppDeckSelection : selfDeckSelection,\n      },\n      devKnobs\n    );\n    battleController.activateGame(room, isP1 ? Role.P1 : Role.P2);\n    targetBattleController.activateGame(room, isP1 ? Role.P2 : Role.P1);\n\n    this.server.broadcastRespToTeam(targetTeamId, {\n      type: WSRespType.NOTIFICATION,\n      notif: { type: HuntNotificationType.PVP_REQUEST_ACCEPTED },\n    });\n\n    return null;\n  }\n\n  private clearRequest(pvpReq: PvPRequest, broadcast: boolean) {\n    const { fromTeamId, toTeamId } = pvpReq;\n    const fromController =\n      this.server.getTeamController(fromTeamId).pvpController;\n    const toController = this.server.getTeamController(toTeamId).pvpController;\n    fromController.outgoingRequests.delete(toTeamId);\n    toController.incomingRequests.delete(fromTeamId);\n\n    if (broadcast) {\n      fromController.broadcastTeamPvPGlobalUpdate({\n        type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n        outgoingRequestsToDelete: [toTeamId],\n      });\n      toController.broadcastTeamPvPGlobalUpdate({\n        type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n        incomingRequestsToDelete: [fromTeamId],\n      });\n    }\n  }\n\n  clearExpiredRequests() {\n    for (const pvpReq of [\n      ...this.incomingRequests.values(),\n      ...this.outgoingRequests.values(),\n    ].filter(isPvPRequestExpired)) {\n      this.clearRequest(pvpReq, false);\n    }\n  }\n\n  clearOutgoingRequests() {\n    for (const pvpReq of this.outgoingRequests.values()) {\n      this.clearRequest(pvpReq, false);\n    }\n    this.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      clearOutgoingRequests: true,\n    });\n  }\n\n  clearAllRequestsAndLeaveRing() {\n    for (const pvpReq of [\n      ...this.incomingRequests.values(),\n      ...this.outgoingRequests.values(),\n    ]) {\n      this.clearRequest(pvpReq, false);\n    }\n\n    this.broadcastTeamPvPGlobalUpdate({\n      type: GlobalUpdateType.TEAM_PVP_UPDATE_STATE,\n      clearOutgoingRequests: true,\n      clearIncomingRequests: true,\n    });\n\n    this.leaveRing();\n  }\n\n  unlockDeckIfUnneeded(): void {\n    if (this.isGameActive()) return;\n    this.clearExpiredRequests();\n    if (this.outgoingRequests.size > 0) return;\n\n    // If there is no active game and no active outgoing requests,\n    // unlock the deck.\n    const battleController = this.getBattleController();\n    if (battleController.pendingGame === undefined) return;\n    delete battleController.pendingGame;\n    battleController.broadcastLockedDeckSelection();\n  }\n}\n\nexport class PvPLobbyController {\n  server: GameServer;\n\n  /**\n   * Teams may enter the \"ring\" to indicate intent to battle any\n   * available team.\n   * This tracks the team IDs of teams in the ring in the order\n   * that they joined, from least to most recent.\n   */\n  ring: string[];\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * global (non-team-specific) PvP updates.\n   */\n  subscriptions: Map<string, ClientConnection>;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.ring = [];\n    this.subscriptions = new Map();\n  }\n\n  broadcastPvPGlobalUpdate(upd: GlobalUpdate) {\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.PVP,\n      },\n      upd\n    );\n  }\n}\n","import { Deck, DeckUpdate, applyDeckUpdate } from \"engine/types/decks\";\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_MASTERY_TREE_PROMPT,\n  PUZ_NAME_MYOSB,\n  MYOSB_DATA,\n} from \"engine/puzzles/puzzle-data\";\nimport {\n  REPUTATION_BOOST_MASTERY_ID,\n  PVP_MASTERY_ID,\n  SOLVE_COUNTS_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { WSRespType } from \"game-server/ws\";\nimport { isDeckUpdateValid } from \"game-server/deckbuilding\";\nimport {\n  MasteryTree,\n  MasteryTreeStep,\n  MasteryTreeUpdate,\n  getMasteriesFromMasteryTree,\n  isMasteryTreeStepValid,\n  masteryTreeStepToUpdate,\n  applyMasteryTreeUpdate,\n  normalizeAnswer,\n} from \"game-server/masteries\";\nimport { ClientConnection, GameServer } from \"game-server/GameServer\";\nimport {\n  BackendAnswerSubmission,\n  CheckAnswerBackendRespType,\n  CheckAnswerBackendResp,\n  makeBattleSolveAnswerSubmission,\n} from \"game-server/backend-interface/BackendInterface\";\nimport {\n  SyncTracker,\n  SyncObjectType,\n} from \"game-server/backend-interface/backend-sync\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdatesScope,\n  GlobalUpdateType,\n} from \"game-server/global-updates\";\nimport { TeamController } from \"./team-controller\";\n\ntype AnswerSubmissionTask = {\n  answer: string;\n  onDone: (resp: CheckAnswerBackendResp) => void;\n  onError: () => void;\n};\n\nexport class TeamFishPuzzleController {\n  teamId: string;\n  puzName: string;\n  server: GameServer;\n\n  numWrongGuesses: number;\n  numExtraGuesses: number;\n  /**\n   * We only keep track of submissions since the server was last\n   * created. The client should get the rest of the submissions\n   * directly from Django.\n   */\n  recentSubmissions: BackendAnswerSubmission[];\n\n  /**\n   * Answer submission queue. This is necessary because to submit an\n   * answer, we perform two requests, one to check it and one to\n   * actually submit it, and submitting an answer affects the checking\n   * of future answers  (e.g. due to repeated answers or guess limits).\n   */\n  pendingAnswerSubmissionTasks: AnswerSubmissionTask[];\n  syncTracker: SyncTracker;\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * updates for this puzzle.\n   */\n  subscriptions: Map<string, ClientConnection>;\n\n  constructor(\n    teamId: string,\n    puzName: string,\n    numWrongGuesses: number,\n    numExtraGuesses: number,\n    server: GameServer\n  ) {\n    this.teamId = teamId;\n    this.puzName = puzName;\n    this.server = server;\n\n    this.numWrongGuesses = numWrongGuesses;\n    this.numExtraGuesses = numExtraGuesses;\n    this.recentSubmissions = [];\n    this.pendingAnswerSubmissionTasks = [];\n    (this.syncTracker = new SyncTracker(\n      this.server.config,\n      SyncObjectType.ANSWER,\n      (dirtyState) => {\n        this.server.dirtyStateTracker.update({\n          teams: {\n            [this.teamId]: {\n              answers: { [this.puzName]: dirtyState },\n            },\n          },\n        });\n      }\n    )),\n      (this.subscriptions = new Map());\n  }\n\n  getTeamController(): TeamController {\n    return this.server.getTeamController(this.teamId);\n  }\n\n  getGlobalUpdatesScope(): GlobalUpdatesScope {\n    return {\n      type: GlobalUpdatesScopeType.TEAM_FISH_PUZZLE,\n      teamId: this.teamId,\n      puzName: this.puzName,\n    };\n  }\n\n  getNumGuessesRemaining(): number {\n    return (\n      this.server.maxGuessesPerPuzzle +\n      this.numExtraGuesses -\n      this.numWrongGuesses\n    );\n  }\n\n  handleUpdateNumWrongGuesses() {\n    this.server.bigBoardStateTracker.updateTeam(this.teamId, {\n      unlocks: {\n        [this.puzName]: {\n          numWrongGuesses: this.numWrongGuesses,\n        },\n      },\n    });\n    this.handleUpdateNumGuessesRemaining();\n  }\n\n  handleUpdateNumGuessesRemaining() {\n    this.server.broadcastGlobalUpdate(this.getGlobalUpdatesScope(), {\n      type: GlobalUpdateType.TEAM_FISH_PUZZLE_SET_NUM_GUESSES_REMAINING,\n      numGuessesRemaining: this.getNumGuessesRemaining(),\n    });\n  }\n\n  async addSubmissionTask(task: AnswerSubmissionTask) {\n    this.server.numPendingSubmissionTasks++;\n    this.syncTracker.handleModify();\n    this.pendingAnswerSubmissionTasks.push(task);\n    // If there are already tasks in the queue, then the queue\n    // is already being processed elsewhere.\n    if (this.pendingAnswerSubmissionTasks.length > 1) return;\n\n    this.syncTracker.snapshot();\n    while (this.pendingAnswerSubmissionTasks.length > 0) {\n      const { answer, onDone, onError } = this.pendingAnswerSubmissionTasks[0];\n      try {\n        // Piggyback the fast sync throttle to prevent too many\n        // answer submission tasks from running at once.\n        this.server.checkAnswerMetrics.record();\n        const resp = await this.server.runWithSyncThrottleAsync(async () => {\n          return await this.server.backend.checkAnswer({\n            teamId: this.teamId,\n            puzName: this.puzName,\n            answer,\n          });\n        });\n\n        if (resp !== undefined) {\n          if (resp.type === CheckAnswerBackendRespType.SUCCESS) {\n            const { submittedAnswer, isCorrect } = resp;\n\n            const submission = {\n              teamId: this.teamId,\n              puzName: this.puzName,\n              answer: submittedAnswer,\n              isCorrect,\n              timestamp: new Date().getTime(),\n              usedFreeAnswer: false,\n            };\n\n            await this.getTeamController().handleTeamUpdatesAsync({\n              answerSubmissionsToAdd: [submission],\n            });\n\n            this.recentSubmissions.push(submission);\n            if (!isCorrect) {\n              this.numWrongGuesses++;\n              this.handleUpdateNumWrongGuesses();\n            }\n\n            this.server.broadcastGlobalUpdate(this.getGlobalUpdatesScope(), {\n              type: GlobalUpdateType.TEAM_FISH_PUZZLE_ADD_GUESS,\n              submission: {\n                submittedAnswer: submission.answer,\n                timestamp: submission.timestamp,\n              },\n            });\n          }\n\n          onDone(resp);\n        }\n      } catch (err) {\n        console.error(err);\n        onError();\n      } finally {\n        // Don't shift out tasks until we are done processing\n        // them, to prevent multiple answer submission loops from\n        // running at once. The presence of the task in the queue\n        // is used to signal that the queue is busy.\n        this.pendingAnswerSubmissionTasks.shift();\n        this.server.numPendingSubmissionTasks--;\n      }\n    }\n    this.syncTracker.handleSyncResult(true);\n  }\n\n  async handleSubmitAnswerAsync(conn: ClientConnection, answer: string) {\n    const resp = await new Promise<CheckAnswerBackendResp>(\n      (resolve, reject) => {\n        this.addSubmissionTask({\n          answer,\n          onDone: (resp) => {\n            resolve(resp);\n          },\n          onError: () => {\n            reject();\n          },\n        });\n      }\n    );\n\n    this.server.sendResp(conn, {\n      type: WSRespType.SUBMIT_ANSWER_ACK,\n      resp,\n    });\n  }\n\n  async handleMyosbRequest(conn: ClientConnection, components: number[][]) {\n    const { ansString, possible } = MYOSB_DATA;\n    const letter =\n      ansString[\n        possible.filter(\n          (poss) => new Set(poss.map(([x, y]) => components[x]?.[y])).size === 5\n        ).length\n      ];\n    if (this.puzName !== PUZ_NAME_MYOSB) {\n      return;\n    }\n    this.server.sendResp(conn, {\n      type: WSRespType.MYOSB_RESPONSE,\n      resp: `Our solvers have solved your puzzle and extracted the letter ${letter}.`,\n    });\n  }\n}\n\nexport class DeckController {\n  teamId: string;\n  slot: number;\n  server: GameServer;\n  deck: Deck;\n\n  slowSyncTracking: {\n    tracker: SyncTracker;\n  };\n\n  constructor(teamId: string, slot: number, deck: Deck, server: GameServer) {\n    this.teamId = teamId;\n    this.slot = slot;\n    this.server = server;\n    this.deck = deck;\n    this.slowSyncTracking = {\n      tracker: new SyncTracker(\n        this.server.config,\n        SyncObjectType.DECK,\n        (dirtyState) => {\n          this.server.dirtyStateTracker.update({\n            teams: {\n              [this.teamId]: {\n                decks: { [this.slot]: dirtyState },\n              },\n            },\n          });\n        }\n      ),\n    };\n  }\n\n  getTeamController(): TeamController {\n    return this.server.getTeamController(this.teamId);\n  }\n\n  /** (Dev-only) Override a deck as part of auto-prep. */\n  overrideDeck(deck: Deck) {\n    // HACK: create deckUpd to transform existing deck\n    // into requested deck\n    const deckUpdCards: { [cardName: string]: number } = {};\n    const deckUpd: DeckUpdate = {\n      displayName: deck.displayName,\n      cards: deckUpdCards,\n    };\n    for (const [cardName, val] of Object.entries(this.deck.cards)) {\n      deckUpdCards[cardName] = 0;\n    }\n    for (const [cardName, val] of Object.entries(deck.cards)) {\n      deckUpdCards[cardName] = val;\n    }\n\n    this.handleDeckUpdate(deckUpd);\n  }\n\n  handleDeckUpdate(deckUpd: DeckUpdate): void {\n    applyDeckUpdate(this.deck, deckUpd);\n    this.slowSyncTracking.tracker.handleModify();\n\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_DECKS,\n        teamId: this.teamId,\n      },\n      {\n        type: GlobalUpdateType.TEAM_DECKS_UPDATE_DECK,\n        slot: this.slot,\n        deckUpd,\n      }\n    );\n\n    // We don't need to handle the deckbuilding room, because if a\n    // deckbuilding room exists, then it should \"own\" the deck,\n    // and so it would be the only source of the deck updates\n    // and can apply them itself.\n  }\n\n  handleDeckbuildingStep(deckUpd: DeckUpdate): void {\n    const { cardUnlocks } = this.getTeamController();\n    if (\n      !isDeckUpdateValid(\n        deckUpd,\n        this.deck,\n        new Set(cardUnlocks.keys()),\n        this.server.cardsDB\n      )\n    ) {\n      // Just drop the request silently since this may be a result of\n      // a race condition.\n      return;\n    }\n\n    this.handleDeckUpdate(deckUpd);\n  }\n}\n\nexport class TeamMasteryTreeController {\n  teamId: string;\n  server: GameServer;\n  masteryTree: MasteryTree;\n  /** Cache of the enabled masteries. */\n  enabledMasteries: Set<string>;\n\n  slowSyncTracking: {\n    tracker: SyncTracker;\n  };\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * updates for this team's mastery tree.\n   */\n  subscriptions: Map<string, ClientConnection>;\n\n  constructor(teamId: string, masteryTree: MasteryTree, server: GameServer) {\n    this.teamId = teamId;\n    this.server = server;\n\n    this.masteryTree = masteryTree;\n    // Assign to itself to assuage Typescript.\n    this.enabledMasteries = this.updateEnabledMasteries();\n\n    this.slowSyncTracking = {\n      tracker: new SyncTracker(\n        this.server.config,\n        SyncObjectType.MASTERY_TREE,\n        (dirtyState) => {\n          this.server.dirtyStateTracker.update({\n            teams: {\n              [this.teamId]: {\n                masteryTree: dirtyState,\n              },\n            },\n          });\n        }\n      ),\n    };\n\n    this.subscriptions = new Map();\n  }\n\n  getTeamController(): TeamController {\n    return this.server.getTeamController(this.teamId);\n  }\n\n  /** Compute the enabled masteries without using the cache. */\n  private updateEnabledMasteries(): Set<string> {\n    this.enabledMasteries = new Set(\n      getMasteriesFromMasteryTree(\n        this.server.masteriesDB,\n        this.masteryTree\n      ).map(({ masteryId }) => masteryId)\n    );\n    return this.enabledMasteries;\n  }\n\n  /** (Dev-only) Override a mastery tree as part of auto-prep. */\n  overrideMasteryTree(masteryTree: MasteryTree) {\n    const existingMasteryTree = this.masteryTree;\n\n    // HACK: create masteryTreeUpd to transform existing mastery tree\n    // into requested mastery tree\n    const masteryTreeUpd: MasteryTreeUpdate = {\n      reset: true,\n      newPlacements: Object.values(masteryTree.placements),\n      masteriesListOverride: masteryTree.masteriesListOverride,\n    };\n\n    this.handleMasteryTreeUpdate(masteryTreeUpd);\n  }\n\n  handleMasteryTreeUpdate(masteryTreeUpd: MasteryTreeUpdate): void {\n    const teamController = this.getTeamController();\n\n    const origMasteries = this.getEnabledMasteries();\n    applyMasteryTreeUpdate(this.masteryTree, masteryTreeUpd);\n    this.slowSyncTracking.tracker.handleModify();\n    this.updateEnabledMasteries();\n    const newMasteries = this.getEnabledMasteries();\n\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_MASTERY_TREE,\n        teamId: this.teamId,\n      },\n      {\n        type: GlobalUpdateType.TEAM_MASTERY_TREE_UPDATE,\n        masteryTreeUpd,\n      }\n    );\n\n    const masteriesToEnable = [...newMasteries].filter(\n      (masteryId) => !origMasteries.has(masteryId)\n    );\n    const masteriesToDisable = [...origMasteries].filter(\n      (masteryId) => !newMasteries.has(masteryId)\n    );\n\n    teamController.handleTeamUpdatesAsync({\n      // Set to solved mastery activation linked tracker puzzles.\n      answerSubmissionsToAdd: [...newMasteries].map((masteryId) =>\n        makeBattleSolveAnswerSubmission(\n          this.teamId,\n          masteryId,\n          new Date().getTime()\n        )\n      ),\n      // Unlock the fish meta if all the masteries are enabled.\n      unlocksToAdd:\n        newMasteries.size === Object.keys(this.server.masteriesDB).length\n          ? [\n              {\n                teamId: this.teamId,\n                puzName: PUZ_NAME_MASTERY_TREE_PROMPT,\n                timestamp: new Date().getTime(),\n              },\n            ]\n          : undefined,\n    });\n\n    const changedMasteries = new Set([\n      ...masteriesToEnable,\n      ...masteriesToDisable,\n    ]);\n\n    if (\n      changedMasteries.has(REPUTATION_BOOST_MASTERY_ID) ||\n      changedMasteries.has(PVP_MASTERY_ID)\n    ) {\n      const hasReputationBoost = newMasteries.has(REPUTATION_BOOST_MASTERY_ID);\n      const hasPvP = newMasteries.has(PVP_MASTERY_ID);\n\n      this.server.handleTeamSummaryUpdate(this.teamId, {\n        hasReputationBoost,\n        hasPvP,\n      });\n\n      if (!hasPvP) {\n        const { pvpController } = teamController;\n        pvpController.clearAllRequestsAndLeaveRing();\n      }\n    }\n\n    if (masteriesToEnable.includes(SOLVE_COUNTS_MASTERY_ID)) {\n      teamController.broadcastTeamGlobalUpdate({\n        type: GlobalUpdateType.TEAM_UPDATE_PUZZLE_STATS,\n        stats: Object.fromEntries(\n          [...teamController.unlockTimes.keys()].flatMap((puzName) =>\n            this.server.puzzlesDB.battleGroups.has(puzName)\n              ? [[puzName, this.server.statsController.getPuzzleStats(puzName)]]\n              : []\n          )\n        ),\n      });\n    }\n\n    const enabledMasteriesDiff = {\n      ...Object.fromEntries(\n        masteriesToEnable.map((masteryId) => [masteryId, true])\n      ),\n      ...Object.fromEntries(\n        masteriesToDisable.map((masteryId) => [masteryId, false])\n      ),\n    };\n    teamController.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      enabledMasteries: enabledMasteriesDiff,\n    });\n    this.server.bigBoardStateTracker.updateTeam(this.teamId, {\n      enabledMasteries: enabledMasteriesDiff,\n    });\n  }\n\n  handleMasteryTreeStep(step: MasteryTreeStep) {\n    const teamController = this.getTeamController();\n    const { puzzlesDB } = this.server;\n    const availableAnswers = [...teamController.solveTimes.keys()].flatMap(\n      (puzName) => {\n        const { battleGroupName, answer } = puzzlesDB.getPuzzle(puzName);\n        if (puzName === PUZ_NAME_MASTERY_TREE) return [];\n        if (answer === null) return [];\n        return normalizeAnswer(answer);\n      }\n    );\n\n    if (!isMasteryTreeStepValid(this.masteryTree, availableAnswers, step)) {\n      // Just drop the request silently since this may be a result of\n      // a race condition.\n      return;\n    }\n\n    this.handleMasteryTreeUpdate(masteryTreeStepToUpdate(step));\n  }\n\n  getEnabledMasteries(): Set<string> {\n    return this.enabledMasteries;\n  }\n}\n","import { Deck, createNewDeck, NUM_DECK_SLOTS } from \"engine/types/decks\";\nimport {\n  Player,\n  DevKnobs,\n  PlayerStateTeamData,\n  CheckpointState,\n} from \"engine/types/game-state\";\nimport {\n  PUZ_NAME_MASTERY_TREE,\n  PUZ_NAME_MASTERY_TREE_PROMPT,\n  PUZ_NAME_PRE_FINAL_BATTLE,\n  PUZ_NAME_POST_FINAL_BATTLE,\n  PUZ_NAME_FIRST_ANSWER,\n  PUZ_NAME_FIRST_LEGENDARY,\n  BATTLE_GROUP_NAME_INSTANCER,\n  BATTLE_GROUP_NAME_TUTORIAL,\n  isUsedForSolveCount,\n  isUsedForGlobalSpeedrunTime,\n} from \"engine/puzzles/puzzle-data\";\nimport { Faction } from \"engine/types/factions\";\nimport {\n  REPUTATION_BOOST_MASTERY_ID,\n  PVP_MASTERY_ID,\n  SOLVE_COUNTS_MASTERY_ID,\n  FACTIONS_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { WSErrorCode, AdminModifyTeamParams } from \"game-server/ws\";\nimport { ClientConnection, GameServer } from \"game-server/GameServer\";\nimport {\n  BackendAnswerSubmission,\n  BackendUnlock,\n  BackendCardUnlock,\n  BackendRoom,\n  GetInitTeamDataBackendResp,\n  BackendOwnedTeamState,\n  makeBattleSolveAnswerSubmission,\n} from \"game-server/backend-interface/BackendInterface\";\nimport {\n  BackendSyncReqPacket,\n  BackendSyncReqController,\n  SyncLoopController,\n  SyncObjectType,\n} from \"game-server/backend-interface/backend-sync\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdateType,\n  GlobalUpdate,\n  GlobalStateBattleRoomStatus,\n  ClientTeamAdminDataGlobalState,\n  ClientTeamSpeedrunInfoGlobalState,\n  ClientPuzzleGlobalState,\n  ClientBattleGroupGlobalState,\n} from \"game-server/global-updates\";\nimport { EnterRoomParams, UnjoinedRoomMember } from \"game-server/Room\";\nimport { HuntNotificationType } from \"game-server/notifications\";\nimport {\n  BigBoardTeamState,\n  TeamSummaryState,\n  IntervalMetrics,\n  HEALTH_MONITORING_INTERVAL_MS,\n} from \"game-server/monitoring\";\nimport { TeamBattleController } from \"./battle-controller\";\nimport { TeamPvPController } from \"./pvp-controller\";\nimport {\n  DeckController,\n  TeamMasteryTreeController,\n  TeamFishPuzzleController,\n} from \"./team-aux-controller\";\n\nexport class TeamController {\n  /** Whether connections from this team are blocked. */\n  isInactive: boolean;\n  /** Whether the team should be exposed on leaderboards, etc. */\n  isHidden: boolean;\n  /** Whether the team is temporarily blocked for maintenance */\n  isTempBlocked: boolean;\n\n  /** The Django user ID, for impersonation. */\n  userId: string;\n\n  teamId: string;\n  displayName: string;\n  faction: Faction | null;\n  factionScoreContributions: { [faction in Faction]: number };\n  members: string[];\n  server: GameServer;\n\n  deckControllers: (DeckController | null)[];\n  masteryTreeController: TeamMasteryTreeController;\n  /** Map of puzNames to battle controllers. */\n  battleControllers: Map<string, TeamBattleController>;\n  /** Map of puzNames to fish puzzle controllers. */\n  fishPuzzleControllers: Map<string, TeamFishPuzzleController>;\n  pvpController: TeamPvPController;\n\n  /** puzNames of the puzzles viewed by the team. */\n  views: Set<string>;\n  /**\n   * cardNames of the cards unlocked by the team, mapped to the\n   * puzName of the puzzles that unlocked them, if any.\n   */\n  cardUnlocks: Map<string, string | null>;\n\n  /** Time when each puzzle was solves, mapped by puzName. */\n  unlockTimes: Map<string, number>;\n  /** Time when each puzzle was solves, mapped by puzName. */\n  solveTimes: Map<string, number>;\n  /** Best speedrun time for each battle, mapped by puzName. */\n  speedrunTimes: Map<string, number>;\n\n  cachedSpeedrunInfo?: ClientTeamSpeedrunInfoGlobalState;\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * team updates for this team.\n   */\n  subscriptions: Map<string, ClientConnection>;\n  /** Global updates subscriptions for the decks. */\n  decksSubscriptions: Map<string, ClientConnection>;\n  /** Global updates subscriptions for the team members. */\n  membersSubscriptions: Map<string, ClientConnection>;\n\n  /* Hints given and used. This state is owned by Django and maintained\n   * here through state syncing */\n  backendOwned: BackendOwnedTeamState;\n\n  numAuthsMetrics: IntervalMetrics;\n  numRequestsMetrics: IntervalMetrics;\n\n  /**\n   * Tracking state for the fast backend sync.\n   * By default, the data here is synced as soon as possible, as\n   * there would be clients waiting on the sync.\n   * If there is a request in flight, new data is synced immediately\n   * after the request completes.\n   * Unlike the periodic sync, pending changes here are broadcast and\n   * applied only after the backend sync is complete.\n   */\n  fastSyncTracking: {\n    syncLoopController: SyncLoopController;\n    syncController: BackendSyncReqController;\n  };\n\n  /**\n   * Tracking state for the slow backend sync.\n   * The data here is only synced periodically.\n   */\n  slowSyncTracking: {\n    syncController: BackendSyncReqController;\n  };\n\n  constructor(\n    teamId: string,\n    initTeamData: GetInitTeamDataBackendResp,\n    server: GameServer\n  ) {\n    const {\n      userId,\n      displayName,\n      isHidden,\n      isInactive,\n      faction,\n      factionScoreContributions,\n      members,\n      decks,\n      masteryTree,\n      views,\n      cardUnlocks,\n      unlockTimes,\n      solveTimes,\n      speedrunTimes,\n      numWrongGuesses,\n      preferredDecks,\n      puzzleSelections,\n      checkpoints,\n      blockedTeams,\n      isInRing,\n      backendOwned,\n    } = initTeamData;\n    this.userId = userId;\n    this.teamId = teamId;\n    this.displayName = displayName;\n    this.faction = faction;\n    this.factionScoreContributions = factionScoreContributions;\n    this.members = members;\n    this.server = server;\n\n    this.deckControllers = new Array(NUM_DECK_SLOTS).fill(null);\n    for (const { slot, deck } of decks) {\n      if (slot < 0 || slot >= this.deckControllers.length)\n        throw new Error(`deck slot ${slot} from backend out of bounds`);\n      this.deckControllers[slot] = new DeckController(\n        this.teamId,\n        slot,\n        deck,\n        this.server\n      );\n    }\n\n    this.masteryTreeController = new TeamMasteryTreeController(\n      teamId,\n      masteryTree ?? {\n        placements: {},\n        connectedAnswers: [],\n      },\n      server\n    );\n\n    this.battleControllers = new Map();\n    this.fishPuzzleControllers = new Map();\n    this.pvpController = new TeamPvPController(\n      teamId,\n      Object.keys(blockedTeams),\n      server\n    );\n    this.views = new Set(views);\n    this.cardUnlocks = new Map(Object.entries(cardUnlocks));\n    this.unlockTimes = new Map(Object.entries(unlockTimes));\n    this.solveTimes = new Map(Object.entries(solveTimes));\n    this.speedrunTimes = new Map(Object.entries(speedrunTimes));\n    this.subscriptions = new Map();\n    this.decksSubscriptions = new Map();\n    this.membersSubscriptions = new Map();\n    this.numAuthsMetrics = new IntervalMetrics(HEALTH_MONITORING_INTERVAL_MS);\n    this.numRequestsMetrics = new IntervalMetrics(\n      HEALTH_MONITORING_INTERVAL_MS\n    );\n    this.fastSyncTracking = {\n      syncLoopController: new SyncLoopController(async () => {\n        try {\n          return await this.runFastSyncAsync();\n        } catch (err) {\n          // Fail gracefully. Fast syncs should be designed to be\n          // retried periodically if unsuccessful.\n          console.error(err);\n          return false;\n        }\n      }),\n      syncController: new BackendSyncReqController(\n        this.server.config,\n        SyncObjectType.FAST,\n        (dirtyState) => {\n          this.server.dirtyStateTracker.update({\n            teams: {\n              [this.teamId]: {\n                fastSync: dirtyState,\n              },\n            },\n          });\n        }\n      ),\n    };\n    this.slowSyncTracking = {\n      syncController: new BackendSyncReqController(\n        this.server.config,\n        SyncObjectType.MISC,\n        (dirtyState) => {\n          this.server.dirtyStateTracker.update({\n            teams: {\n              [this.teamId]: {\n                misc: dirtyState,\n              },\n            },\n          });\n        }\n      ),\n    };\n\n    for (const [\n      puzName,\n      { answer },\n    ] of this.server.puzzlesDB.puzzles.entries()) {\n      if (answer === null) continue;\n      const numWrongGuessesForPuzzle = numWrongGuesses[puzName] ?? 0;\n      const numExtraGuessesForPuzzle = backendOwned.extraGuesses[puzName] ?? 0;\n      if (numWrongGuessesForPuzzle > 0 || numExtraGuessesForPuzzle !== 0) {\n        this.fishPuzzleControllers.set(\n          puzName,\n          new TeamFishPuzzleController(\n            this.teamId,\n            puzName,\n            numWrongGuessesForPuzzle,\n            numExtraGuessesForPuzzle,\n            this.server\n          )\n        );\n      }\n    }\n\n    for (const [puzName, slot] of Object.entries(preferredDecks)) {\n      this.getBattleController(puzName).selectedDeckSlot = slot;\n    }\n    for (const [puzName, selection] of Object.entries(puzzleSelections)) {\n      this.getBattleController(puzName).selectedPuzName = selection;\n    }\n    for (const [puzName, states] of Object.entries(checkpoints)) {\n      this.getBattleController(puzName).checkpoints = states;\n    }\n\n    // Add the team to the ring only if the mastery is enabled, in case\n    // the mastery tree state got out of sync with the in-ring state.\n    // We can't use enterRing as the teamController is not fully\n    // initialized and registered with GameServer yet.\n    if (\n      isInRing &&\n      this.masteryTreeController.getEnabledMasteries().has(PVP_MASTERY_ID)\n    )\n      this.server.pvpLobbyController.ring.push(teamId);\n\n    this.backendOwned = backendOwned;\n\n    this.isInactive = isInactive;\n    this.isHidden = isHidden;\n    this.isTempBlocked = false;\n  }\n\n  /**\n   * Init the team with the stats controller. This must always be\n   * called after construction, once the team controller is registered\n   * with the game server.\n   */\n  initStats() {\n    this.server.statsController.handleTeamUpdates(this.teamId, {\n      factionScoreChanges: { ...this.factionScoreContributions },\n      updateFactionHistory: false,\n      unlocksToAdd: [...this.unlockTimes.keys()],\n      solvesToAdd: [...this.solveTimes.keys()],\n      speedrunTimes: Object.fromEntries(this.speedrunTimes.entries()),\n      solveTimes: Object.fromEntries(this.solveTimes.entries()),\n    });\n  }\n\n  initRooms(rooms: { [puzName: string]: BackendRoom }) {\n    for (const roomEntry of Object.values(rooms)) {\n      const { puzName, hostPuzName } = roomEntry;\n      // Don't restore a saved room if its puzzle was set locked,\n      // as doing so in the instancer would set the selected puzzle.\n      if (this.unlockTimes.has(puzName))\n        this.getBattleController(hostPuzName).restoreSavedRoom(roomEntry);\n    }\n  }\n\n  broadcastTeamGlobalUpdate(upd: GlobalUpdate): void {\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM,\n        teamId: this.teamId,\n      },\n      upd\n    );\n  }\n\n  getDeckController(slot: number): DeckController {\n    // TODO: Make sure slot bounds are validated in callers\n    const existingController = this.deckControllers[slot];\n    if (existingController !== null) return existingController;\n\n    const timeNow = new Date().getTime();\n\n    const deck: Deck = createNewDeck(slot);\n    const deckController = new DeckController(\n      this.teamId,\n      slot,\n      deck,\n      this.server\n    );\n    this.deckControllers[slot] = deckController;\n    // Broadcast the deck creation to subscribers by pushing a null update.\n    deckController.handleDeckUpdate({});\n    return deckController;\n  }\n\n  isValidBattle(puzName: string): boolean {\n    // Either the puzName is invalid, or the team has not unlocked it.\n    if (!this.unlockTimes.has(puzName)) return false;\n    const { battleGroupName } = this.server.puzzlesDB.getPuzzle(puzName);\n\n    // Fish puzzles cannot be used for battles.\n    // Check the answer from the battle group instead of the puzzle\n    // directly to filter out the tracker mastery tree \"puzzles\" too.\n    const { answer } = this.server.puzzlesDB.getPuzzle(battleGroupName);\n    if (answer !== null) return false;\n\n    const { numPuzzles } =\n      this.server.puzzlesDB.getBattleGroup(battleGroupName);\n    // Dummy battles (for groups of multiple sub-battles) are only\n    // relevant for full puzzle accounting, and cannot be used\n    // to actually start a battle.\n    if (numPuzzles > 1 && puzName === battleGroupName) return false;\n\n    return true;\n  }\n\n  isValidFishPuzzle(puzName: string): boolean {\n    // Either the puzName is invalid, or the team has not unlocked it.\n    if (!this.unlockTimes.has(puzName)) return false;\n\n    const { answer, battleGroupName } =\n      this.server.puzzlesDB.getPuzzle(puzName);\n    // Ignore battles, and the fake mastery tree state tracker puzzles.\n    // Fish puzzle controllers are only used for answer submission.\n    if (answer === null) return false;\n\n    // The team should not have access to answer submission for the\n    // mastery tree until they have unlocked the prompt.\n    if (\n      puzName === PUZ_NAME_MASTERY_TREE &&\n      !this.unlockTimes.has(PUZ_NAME_MASTERY_TREE_PROMPT)\n    )\n      return false;\n\n    return true;\n  }\n\n  // If there doesn't exist a battle controller for the given slug, this will\n  // attempt to create one, and throw an error if the puzzle name doesn't exist.\n  getBattleController(puzName: string): TeamBattleController {\n    const existingController = this.battleControllers.get(puzName);\n    if (existingController !== undefined) return existingController;\n\n    const { battleGroupName } = this.server.getBattleGroup(puzName); // throws error if puzName doesn't exist\n    const isInstancer = battleGroupName === BATTLE_GROUP_NAME_INSTANCER;\n    const controller = new TeamBattleController(\n      this.teamId,\n      puzName,\n      isInstancer ? null : puzName,\n      null,\n      this.server\n    );\n    this.battleControllers.set(puzName, controller);\n    return controller;\n  }\n\n  getFishPuzzleController(puzName: string): TeamFishPuzzleController {\n    const existingController = this.fishPuzzleControllers.get(puzName);\n    if (existingController !== undefined) return existingController;\n\n    const controller = new TeamFishPuzzleController(\n      this.teamId,\n      puzName,\n      0,\n      0,\n      this.server\n    );\n    this.fishPuzzleControllers.set(puzName, controller);\n    return controller;\n  }\n\n  isPuzzleUnlocked(puzName: string): boolean {\n    return this.unlockTimes.has(puzName);\n  }\n\n  getClientPuzzleState(puzName: string): ClientPuzzleGlobalState {\n    const puzData = this.server.puzzlesDB.getPuzzle(puzName);\n    const { answer } = puzData;\n    const unlockTime = this.unlockTimes.get(puzName);\n    if (unlockTime === undefined)\n      throw new Error(`tried to get client state for locked puzzle ${puzName}`);\n\n    const { battleGroupName, order } = puzData;\n    const puzState: ClientPuzzleGlobalState = {\n      puzName,\n      battleGroupName,\n      order,\n      hasAnswer: answer !== null ? true : undefined,\n      isNew: !this.views.has(puzName),\n      speedrunTime: this.speedrunTimes.get(puzName),\n      unlockTime,\n      solveTime: this.solveTimes.get(puzName),\n      puzPrompt:\n        puzName === PUZ_NAME_MASTERY_TREE_PROMPT\n          ? {\n              header: \"Restoring peace\",\n              text: \"With your newfound mastery over the cards, you realize what you need to do next. What do you need to restore peace among the factions?\",\n            }\n          : undefined,\n    };\n\n    if (answer !== null && this.solveTimes.has(puzName)) {\n      puzState.answer = answer;\n    }\n\n    const battleController = this.battleControllers.get(puzName);\n    if (battleController !== undefined) {\n      const roomStatus = battleController.getRoomStatus();\n      if (roomStatus !== GlobalStateBattleRoomStatus.NONE)\n        puzState.roomStatus = roomStatus;\n    }\n\n    return puzState;\n  }\n\n  getClientBattleGroupState(\n    battleGroupName: string\n  ): ClientBattleGroupGlobalState {\n    const {\n      displayName,\n      mapPos,\n      isLegendary,\n      preBattleDialogue,\n      postBattleDialogue,\n      numPuzzles,\n    } = this.server.getBattleGroup(battleGroupName);\n    const puzData = this.server.puzzlesDB.getPuzzle(battleGroupName);\n    const { isCutscene, answer } = puzData;\n    const battleGroupState: ClientBattleGroupGlobalState = {\n      battleGroupName,\n      displayName,\n      isCutscene: isCutscene ? true : undefined,\n      isLegendary: isLegendary ? true : undefined,\n      preBattleDialogue,\n      postBattleDialogue: this.solveTimes.has(battleGroupName)\n        ? postBattleDialogue\n        : undefined,\n      numPuzzles: numPuzzles !== 1 ? numPuzzles : undefined,\n      mapPos,\n    };\n    if (\n      this.masteryTreeController\n        .getEnabledMasteries()\n        .has(SOLVE_COUNTS_MASTERY_ID)\n    )\n      battleGroupState.stats =\n        this.server.statsController.getPuzzleStats(battleGroupName);\n    return battleGroupState;\n  }\n\n  getLeaderboardNumSolves(): number {\n    return [...this.solveTimes.keys()].filter((puzName) => {\n      const puzData = this.server.puzzlesDB.puzzles.get(puzName);\n      if (puzData === undefined)\n        throw new Error(\"expect solved puzzles to be in puzzlesDB\");\n      return isUsedForSolveCount(\n        puzName,\n        puzData.battleGroupName,\n        puzData.isCutscene\n      );\n    }).length;\n  }\n\n  getClientAdminData(): ClientTeamAdminDataGlobalState {\n    const { userId, displayName, isHidden, isInactive, isTempBlocked } = this;\n    return { userId, displayName, isHidden, isInactive, isTempBlocked };\n  }\n\n  getHintsUsedMap(): { [puzName: string]: number } {\n    const hintsUsedMap: { [puzName: string]: number } = {};\n    for (const puzName of this.backendOwned.hintsUsed) {\n      hintsUsedMap[puzName] = (hintsUsedMap[puzName] ?? 0) + 1;\n    }\n    return hintsUsedMap;\n  }\n\n  getClientBigBoardState(): BigBoardTeamState {\n    const hintsUsedMap = this.getHintsUsedMap();\n    return {\n      numHintsTotal: this.backendOwned.hintsTotal,\n      unlocks: Object.fromEntries(\n        Array.from(this.unlockTimes.keys(), (puzName) => {\n          const { numWrongGuesses } =\n            this.fishPuzzleControllers.get(puzName) ?? {};\n          return [\n            puzName,\n            {\n              solveTime: this.solveTimes.get(puzName),\n              numHintsUsed: hintsUsedMap[puzName],\n              numWrongGuesses: numWrongGuesses,\n              numMembers: this.server.gameRoomsController.getNumRoomMembers(\n                this.teamId,\n                puzName\n              ),\n            },\n          ];\n        })\n      ),\n      cardUnlocks: Object.fromEntries(\n        Array.from(this.cardUnlocks.keys(), (cardName) => [cardName, true])\n      ),\n      selectedPuzzles: Object.fromEntries(\n        [...this.battleControllers.values()].flatMap(\n          ({ puzName, selectedPuzName }) =>\n            selectedPuzName === null || selectedPuzName === puzName\n              ? []\n              : [[puzName, selectedPuzName]]\n        )\n      ),\n      enabledMasteries: Object.fromEntries(\n        Array.from(\n          this.masteryTreeController.getEnabledMasteries(),\n          (masteryId) => [masteryId, true]\n        )\n      ),\n    };\n  }\n\n  getLastSolveTime(): number | undefined {\n    return this.solveTimes.size === 0\n      ? undefined\n      : Math.max(\n          0,\n          ...[...this.solveTimes.entries()]\n            .filter(([puzName, solveTime]) => {\n              const { battleGroupName, isCutscene } =\n                this.server.puzzlesDB.getPuzzle(puzName);\n              return isUsedForSolveCount(puzName, battleGroupName, isCutscene);\n            })\n            .map(([puzName, solveTime]) => solveTime)\n        );\n  }\n\n  getCompletionTime(): number | undefined {\n    return this.solveTimes.get(PUZ_NAME_POST_FINAL_BATTLE);\n  }\n\n  getTeamSummaryState(): TeamSummaryState {\n    const {\n      teamId,\n      displayName,\n      faction,\n      factionScoreContributions,\n      members,\n      masteryTreeController,\n      pvpController,\n      isHidden,\n    } = this;\n    const enabledMasteries = masteryTreeController.getEnabledMasteries();\n    return {\n      teamId,\n      displayName,\n      faction,\n      factionScoreContribution:\n        faction === null ? 0 : factionScoreContributions[faction],\n      hasReputationBoost: enabledMasteries.has(REPUTATION_BOOST_MASTERY_ID)\n        ? true\n        : undefined,\n      hasPvP: enabledMasteries.has(PVP_MASTERY_ID) ? true : undefined,\n      isPvPGameActive: pvpController.isGameActive() ? true : undefined,\n      numSolves: this.getLeaderboardNumSolves(),\n      lastSolveTime: this.getLastSolveTime(),\n      completionTime: this.getCompletionTime(),\n      speedrunInfo: this.computeSpeedrunInfo(),\n      isHidden: isHidden ? true : undefined,\n    };\n  }\n\n  makeTeamDataForBattle(puzName: string): PlayerStateTeamData {\n    const { teamId, displayName, faction } = this;\n    return {\n      teamId,\n      displayName,\n      faction,\n      factionScoreContribution:\n        faction === null ? 0 : this.factionScoreContributions[faction],\n      enabledMasteries: Object.fromEntries(\n        Array.from(\n          this.masteryTreeController.getEnabledMasteries(),\n          (masteryId) => [masteryId, true]\n        )\n      ),\n      isReplay: this.solveTimes.has(puzName),\n      prevBestSpeedrunTime: this.speedrunTimes.get(puzName),\n    };\n  }\n\n  startAIBattle(\n    conn: ClientConnection,\n    puzName: string,\n    slot?: number,\n    restart?: boolean,\n    reuseDeck?: boolean,\n    devKnobs?: DevKnobs\n  ): void {\n    const battleController = this.getBattleController(puzName);\n\n    const { selectedPuzName } = battleController;\n    if (selectedPuzName === null) {\n      // Return an error if no puzzle is selected.\n      this.server.sendErr(conn, { errCode: WSErrorCode.NEED_PUZZLE });\n      return;\n    }\n\n    const inspector = battleController.getInspector();\n    if (!inspector.hasAI() && selectedPuzName !== \"vanilla\") {\n      // This endpoint should only be used for AI puzzles, or the\n      // dev-only vanilla puzzle.\n      this.server.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n      return;\n    }\n\n    if (battleController.isRoomActive()) {\n      if (!(restart ?? false)) {\n        // If no restart is requested, and a battle is already running,\n        // then the request acts as a no-op.\n        return;\n      }\n      const err = battleController.resign();\n      if (err !== null) throw new Error(\"expect resign to succeed\");\n    }\n\n    if (slot !== undefined) {\n      const err = battleController.selectDeck(slot);\n      if (err !== null) {\n        this.server.sendErr(conn, err);\n        return;\n      }\n    }\n\n    // TODO: Validate puzName, role, and requestedRoomId\n    // are good for the team at their current unlock state.\n\n    const teamIds: { [player in Player]?: string } = {};\n\n    // Keep non-AI battle dev functionality around until we have\n    // brought up non-AI battle support.\n    const players = [Player.P1, Player.P2].filter((player) => {\n      return !(inspector.hasAI() && player === Player.P2);\n    });\n    for (const player of players) {\n      teamIds[player] = this.teamId;\n    }\n\n    const { deckSelections, err } = battleController.commitDeckSelection(\n      players,\n      reuseDeck,\n      devKnobs?.allowInvalidDecks\n    );\n    if (err !== undefined) {\n      this.server.sendErr(conn, err);\n      return;\n    }\n\n    const room = this.server.gameRoomsController.createRoom(\n      selectedPuzName,\n      puzName,\n      teamIds,\n      deckSelections,\n      devKnobs\n    );\n    battleController.activateGame(room);\n\n    // The requester will eventually join the room in a separate\n    // request once it sees that the game has started.\n  }\n\n  handleEnterRoom(\n    unjoinedMember: UnjoinedRoomMember,\n    params: EnterRoomParams\n  ): void {\n    const { conn } = unjoinedMember;\n    const { puzName } = params;\n    const battleController = this.battleControllers.get(puzName);\n    if (battleController === undefined) {\n      this.server.sendEnterRoomErr(unjoinedMember, {\n        errCode: WSErrorCode.NO_ROOM,\n      });\n      return;\n    }\n    battleController.handleEnterGameRoom(unjoinedMember);\n  }\n\n  /**\n   * Actually run the fast sync.\n   * Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. there are no sync\n   * tasks in the buffers to run).\n   */\n  private async runFastSyncAsync(): Promise<boolean> {\n    const { syncController } = this.fastSyncTracking;\n    const { packet } = syncController;\n\n    // Remove redundant entries from the pending packet.\n    // This is functionally necessary for consistency, since\n    // the snapshot is later used to update solve counts.\n    if (packet.unlocks !== undefined) {\n      for (const [puzName, val] of Object.entries(packet.unlocks)) {\n        if ((val !== null) === this.unlockTimes.has(puzName))\n          delete packet.unlocks[puzName];\n      }\n    }\n    if (Object.keys(packet.unlocks ?? {}).length === 0) delete packet.unlocks;\n\n    if (packet.cardUnlocks !== undefined) {\n      for (const [cardName, val] of Object.entries(packet.cardUnlocks)) {\n        if (\n          (val !== null) === this.cardUnlocks.has(cardName) &&\n          (val?.puzName ?? null) === (this.cardUnlocks.get(cardName) ?? null)\n        )\n          delete packet.cardUnlocks[cardName];\n      }\n    }\n    if (Object.keys(packet.cardUnlocks ?? {}).length === 0)\n      delete packet.cardUnlocks;\n\n    if (packet.answerSubmissions !== undefined) {\n      for (const [puzName, puzSubmissions] of Object.entries(\n        packet.answerSubmissions\n      )) {\n        if (puzSubmissions === null && !this.solveTimes.has(puzName)) {\n          delete packet.answerSubmissions[puzName];\n        } else if (puzSubmissions !== null && this.solveTimes.has(puzName)) {\n          for (const [answer, submission] of Object.entries(puzSubmissions)) {\n            if (submission.isCorrect) delete puzSubmissions[answer];\n          }\n          if (Object.keys(puzSubmissions ?? {}).length === 0)\n            delete packet.answerSubmissions[puzName];\n        }\n      }\n    }\n    if (Object.keys(packet.answerSubmissions ?? {}).length === 0)\n      delete packet.answerSubmissions;\n\n    const snapshot = syncController.startSync();\n    if (snapshot === null) return true;\n    let didSyncSucceed = false;\n    this.server.fastSyncMetrics.record();\n    // If this errors out, the SyncLoopController will handle it.\n    try {\n      await this.server.syncDataThrottledAsync({\n        teamState: {\n          [this.teamId]: snapshot,\n        },\n      });\n      didSyncSucceed = true;\n    } finally {\n      syncController.endSync(didSyncSucceed ? snapshot : null);\n    }\n\n    const { puzzlesDB } = this.server;\n    const submissionSolves = Object.fromEntries(\n      Object.entries(snapshot.answerSubmissions ?? {}).flatMap<\n        [string, BackendAnswerSubmission | null]\n      >(([puzName, puzSubmissions]) => {\n        if (puzSubmissions === null) return [[puzName, null]];\n        const correctSubmission = Object.values(puzSubmissions).find(\n          (submission) => submission.isCorrect\n        );\n        if (correctSubmission === undefined) return [];\n        return [[puzName, correctSubmission]];\n      })\n    );\n    const answers = Object.fromEntries(\n      Object.entries(submissionSolves).flatMap(([puzName, submission]) => {\n        const { answer } = this.server.puzzlesDB.getPuzzle(puzName);\n        if (answer === null) return [];\n        return [[puzName, answer]];\n      })\n    );\n    const battleGroupUnlocks = Object.fromEntries(\n      Object.entries(snapshot.unlocks ?? {}).flatMap(([puzName, unlock]) =>\n        unlock !== null &&\n        puzzlesDB.getBattleGroup(puzName).battleGroupName === puzName\n          ? [[puzName, this.getClientBattleGroupState(puzName)]]\n          : []\n      )\n    );\n    const cardUnlocks = Object.fromEntries(\n      Object.entries(snapshot.cardUnlocks ?? {}).map(\n        ([cardName, cardUnlock]) => {\n          if (cardUnlock === null) return [cardName, null];\n          const { puzName } = cardUnlock;\n          return [cardName, { cardName, puzName }];\n        }\n      )\n    );\n\n    const solveTimes = Object.fromEntries(\n      Object.entries(submissionSolves).map(([puzName, solve]) =>\n        solve === null ? [puzName, null] : [puzName, solve.timestamp]\n      )\n    );\n\n    // Clear all newly locked puzzles from the instancer.\n    const puzzlesToLock = new Set(\n      Object.entries(snapshot.unlocks ?? {})\n        .filter(([puzName, unlock]) => unlock === null)\n        .map(([puzName, unlock]) => puzName)\n    );\n    if (puzzlesToLock.size > 0) {\n      const instancers = [...this.server.puzzlesDB.puzzles.values()].filter(\n        ({ puzName, battleGroupName }) =>\n          battleGroupName === BATTLE_GROUP_NAME_INSTANCER &&\n          puzName !== BATTLE_GROUP_NAME_INSTANCER\n      );\n      for (const puzName of puzzlesToLock) {\n        const firstSubpuzzle =\n          puzzlesDB.getFirstSubpuzzleInBattleGroup(puzName).puzName;\n        for (const { puzName: instancerPuzName } of instancers) {\n          const battleController = this.getBattleController(instancerPuzName);\n          if (\n            !(\n              battleController.selectedPuzName !== null &&\n              battleController.selectedPuzName === puzName\n            )\n          )\n            continue;\n          if (battleController.isRoomActive()) {\n            if (battleController.resign() !== null)\n              throw new Error(\"failed to resign\");\n          }\n          if (\n            battleController.selectPuzzle(\n              this.unlockTimes.has(firstSubpuzzle) &&\n                !puzzlesToLock.has(firstSubpuzzle)\n                ? firstSubpuzzle\n                : null\n            ) !== null\n          )\n            throw new Error(\"failed to clear selected puzzle\");\n\n          // Clear checkpoints with that selected puzzle.\n          for (const [slot, serializedCheckpoint] of Object.entries(\n            battleController.checkpoints\n          )) {\n            if (serializedCheckpoint === undefined) continue;\n            const checkpoint = JSON.parse(\n              serializedCheckpoint.serializedState\n            ) as CheckpointState;\n            if (checkpoint.selectedPuzName === puzName) {\n              delete battleController.checkpoints[Number(slot)];\n            }\n          }\n        }\n      }\n    }\n\n    // Apply the updates.\n    for (const [puzName, solveTime] of Object.entries(solveTimes)) {\n      // We should have guaranteed this by removing redundant\n      // entries before firing off the sync.\n      if ((solveTime !== null) === this.solveTimes.has(puzName))\n        console.error(\"packet has repeat data from solve state\");\n      if (solveTime === null) this.solveTimes.delete(puzName);\n      else this.solveTimes.set(puzName, solveTime);\n    }\n    for (const [puzName, unlock] of Object.entries(snapshot.unlocks ?? {})) {\n      // We should have guaranteed this by removing redundant\n      // entries before firing off the sync.\n      if ((unlock !== null) === this.unlockTimes.has(puzName))\n        console.error(\"packet has repeat data from unlock state\");\n      if (unlock === null) this.unlockTimes.delete(puzName);\n      else this.unlockTimes.set(puzName, unlock.timestamp);\n    }\n    for (const [cardName, cardUnlock] of Object.entries(\n      snapshot.cardUnlocks ?? {}\n    )) {\n      // We should have guaranteed this by removing redundant\n      // entries before firing off the sync.\n      if (\n        (cardUnlock !== null) === this.cardUnlocks.has(cardName) &&\n        (cardUnlock?.puzName ?? null) ===\n          (this.cardUnlocks.get(cardName) ?? null)\n      )\n        console.error(\"packet has repeat data from card unlock state\");\n      if (cardUnlock === null) this.cardUnlocks.delete(cardName);\n      else this.cardUnlocks.set(cardName, cardUnlock.puzName);\n    }\n\n    // Broadcast the updates.\n    const allUnlocks = Object.fromEntries(\n      Object.entries(snapshot.unlocks ?? {}).map(([puzName, unlock]) => [\n        puzName,\n        unlock === null ? null : this.getClientPuzzleState(puzName),\n      ])\n    );\n    this.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      solveTimes,\n      answers,\n      unlocks: allUnlocks,\n      battleGroupUnlocks,\n      cardUnlocks,\n      masteries: Object.fromEntries(\n        Object.entries(solveTimes).flatMap<\n          [string, { displayName: string; effectText: string } | null]\n        >(([masteryId, solveTime]) => {\n          const mastery = this.server.masteriesDB[masteryId];\n          if (mastery === undefined) return [];\n          if (solveTime === null) return [[masteryId, null]];\n          const { displayName, effectText } = mastery;\n          return [\n            [\n              masteryId,\n              {\n                displayName,\n                effectText,\n              },\n            ],\n          ];\n        })\n      ),\n    });\n    // Unlock post-battle dialogue.\n    for (const [puzName, solveTime] of Object.entries(solveTimes)) {\n      const puzData = this.server.puzzlesDB.getPuzzle(puzName);\n      const { battleGroupName } = puzData;\n      if (puzName !== battleGroupName) continue;\n      const { postBattleDialogue } =\n        this.server.puzzlesDB.getBattleGroup(battleGroupName);\n      if (postBattleDialogue === undefined) continue;\n      this.broadcastTeamGlobalUpdate({\n        type: GlobalUpdateType.TEAM_UPDATE_BATTLE_GROUP,\n        battleGroupName,\n        postBattleDialogue,\n      });\n    }\n    if (Object.keys(solveTimes).length >= 0) {\n      this.server.handleTeamSummaryUpdate(this.teamId, {\n        numSolves: this.getLeaderboardNumSolves(),\n        lastSolveTime: this.getLastSolveTime(),\n        completionTime: this.getCompletionTime(),\n      });\n    }\n\n    const hintsUsedMap = this.getHintsUsedMap();\n    this.server.bigBoardStateTracker.updateTeam(this.teamId, {\n      // No need to worry about diffing here since this doesn't happen\n      // too often, and we already diff in the tracker.\n      unlocks: Object.fromEntries(\n        Array.from(this.unlockTimes.keys(), (puzName) => [\n          puzName,\n          {\n            solveTime: this.solveTimes.get(puzName),\n            // Not sure if we would have reason to do un-unlocking hijinks\n            // that could cause these to become non-zero on unlock,\n            // but send them anyway just in case.\n            numHintsUsed: hintsUsedMap[puzName],\n            numWrongGuesses:\n              this.fishPuzzleControllers.get(puzName)?.numWrongGuesses,\n          },\n        ])\n      ),\n      cardUnlocks: Object.fromEntries(\n        Object.entries(cardUnlocks).map(([cardName, cardUnlock]) => [\n          cardName,\n          cardUnlock !== null,\n        ])\n      ),\n    });\n\n    // This has to come after broadcasting the unlocks, to ensure\n    // that teams have the puzzle global state to merge the\n    // stats into.\n    this.server.statsController.handleTeamUpdates(this.teamId, {\n      unlocksToAdd: [\n        ...Object.keys(allUnlocks).filter(\n          (puzName) => allUnlocks[puzName] !== null\n        ),\n      ],\n      solvesToAdd: Object.keys(submissionSolves).filter(\n        (puzName) => submissionSolves[puzName] !== null\n      ),\n      unlocksToDelete: [\n        ...Object.keys(allUnlocks).filter(\n          (puzName) => allUnlocks[puzName] === null\n        ),\n      ],\n      solvesToDelete: Object.keys(submissionSolves).filter(\n        (puzName) => submissionSolves[puzName] === null\n      ),\n      solveTimes,\n    });\n\n    // Broadcast the victory notification.\n    if (\n      solveTimes[PUZ_NAME_POST_FINAL_BATTLE] !== undefined &&\n      solveTimes[PUZ_NAME_POST_FINAL_BATTLE] !== null\n    ) {\n      this.server.broadcastNotifToTeam(this.teamId, {\n        type: HuntNotificationType.VICTORY,\n      });\n    }\n\n    return false;\n  }\n\n  async handleTeamUpdatesAsync(opts: {\n    solvesToDelete?: string[];\n    unlocksToDelete?: string[];\n    cardUnlocksToDelete?: string[];\n    answerSubmissionsToAdd?: BackendAnswerSubmission[];\n    unlocksToAdd?: BackendUnlock[];\n    cardUnlocksToAdd?: BackendCardUnlock[];\n  }) {\n    const { puzzlesDB } = this.server;\n    const { puzzles, battleGroups } = puzzlesDB;\n    const timeNow = new Date().getTime();\n    const { syncController, syncLoopController } = this.fastSyncTracking;\n\n    if (opts.solvesToDelete !== undefined) {\n      // If a battle group is set unsolved, propagate it to\n      // all subpuzzles as well.\n      const solvesToDeleteSet = new Set(opts.solvesToDelete);\n      opts.solvesToDelete.push(\n        ...[...puzzlesDB.puzzles.values()]\n          .filter(\n            ({ puzName, battleGroupName }) =>\n              !solvesToDeleteSet.has(puzName) &&\n              solvesToDeleteSet.has(battleGroupName)\n          )\n          .map(({ puzName }) => puzName)\n      );\n    }\n\n    if (opts.unlocksToDelete !== undefined) {\n      // If a battle group is set locked, propagate it to\n      // all subpuzzles as well.\n      const unlocksToDeleteSet = new Set(opts.unlocksToDelete);\n      opts.unlocksToDelete.push(\n        ...[...puzzlesDB.puzzles.values()]\n          .filter(\n            ({ puzName, battleGroupName }) =>\n              !unlocksToDeleteSet.has(puzName) &&\n              unlocksToDeleteSet.has(battleGroupName)\n          )\n          .map(({ puzName }) => puzName)\n      );\n\n      // If an unlock is deleted, delete the solve too.\n      opts.solvesToDelete ??= [];\n      opts.solvesToDelete.push(...opts.unlocksToDelete);\n    }\n\n    // Queue the changes for sync.\n    const firstPacket: BackendSyncReqPacket = {\n      answerSubmissions: {},\n      unlocks: {\n        ...Object.fromEntries(\n          (opts.unlocksToAdd ?? []).map((unlock) => [unlock.puzName, unlock])\n        ),\n        ...Object.fromEntries(\n          (opts.unlocksToDelete ?? []).map((puzName) => [puzName, null])\n        ),\n      },\n      cardUnlocks: {\n        ...Object.fromEntries(\n          (opts.cardUnlocksToAdd ?? []).map((cardUnlock) => [\n            cardUnlock.cardName,\n            cardUnlock,\n          ])\n        ),\n        ...Object.fromEntries(\n          (opts.cardUnlocksToDelete ?? []).map((cardName) => [cardName, null])\n        ),\n      },\n    };\n    for (const answerSubmission of opts.answerSubmissionsToAdd ?? []) {\n      const { answer, puzName } = answerSubmission;\n      firstPacket.answerSubmissions ??= {};\n      firstPacket.answerSubmissions[puzName] = Object.assign(\n        firstPacket.answerSubmissions[puzName] ?? {},\n        { [answer]: answerSubmission }\n      );\n    }\n    for (const puzName of opts.solvesToDelete ?? []) {\n      firstPacket.answerSubmissions ??= {};\n      firstPacket.answerSubmissions[puzName] = null;\n    }\n    this.mergeFastSyncPacket(firstPacket);\n\n    // Build up a packet of generated changes to additionally merge.\n    const genPacket: BackendSyncReqPacket = {};\n\n    // Compute the combined solves, including pending changes.\n    const combinedSolves: Set<string> = new Set([\n      ...this.solveTimes.keys(),\n      ...Object.entries(syncController.packet.answerSubmissions ?? {}).flatMap(\n        ([puzName, puzSubmissions]) =>\n          puzSubmissions === null\n            ? []\n            : Object.values(puzSubmissions).some(\n                (submission) => submission.isCorrect\n              )\n            ? [puzName]\n            : []\n      ),\n    ]);\n\n    // Helper function to set a battle solved.\n    const addBattleSolve = (puzName: string): void => {\n      if (combinedSolves.has(puzName)) return;\n      const submission = makeBattleSolveAnswerSubmission(\n        this.teamId,\n        puzName,\n        timeNow\n      );\n      genPacket.answerSubmissions ??= {};\n      genPacket.answerSubmissions[puzName] = Object.assign(\n        genPacket.answerSubmissions[puzName] ?? {},\n        { [submission.answer]: submission }\n      );\n      combinedSolves.add(puzName);\n    };\n\n    // Propagate battle group solves to dummy puzzles.\n    const solveTriggersPerBattleGroup: Map<string, number> = new Map();\n    for (const puzName of combinedSolves) {\n      const { battleGroupName, triggersBattleGroupSolve } =\n        puzzlesDB.getPuzzle(puzName);\n      if (!triggersBattleGroupSolve) continue;\n      solveTriggersPerBattleGroup.set(\n        battleGroupName,\n        (solveTriggersPerBattleGroup.get(battleGroupName) ?? 0) + 1\n      );\n    }\n    for (const [\n      battleGroupName,\n      numSolveTriggers,\n    ] of solveTriggersPerBattleGroup) {\n      const { solveReq } = puzzlesDB.getBattleGroup(battleGroupName);\n      if (numSolveTriggers < solveReq) continue;\n      addBattleSolve(battleGroupName);\n    }\n    for (const puzName of Object.entries(\n      syncController.packet.answerSubmissions ?? {}\n    ).flatMap(([puzName, val]) => (val === null ? [puzName] : []))) {\n      combinedSolves.delete(puzName);\n    }\n\n    // Compute the combined unlocks, including pending changes.\n    const combinedUnlocks: Set<string> = new Set([\n      ...this.unlockTimes.keys(),\n      ...Object.entries(syncController.packet.unlocks ?? {}).flatMap(\n        ([puzName, val]) => (val === null ? [] : [puzName])\n      ),\n    ]);\n    for (const puzName of Object.entries(\n      syncController.packet.unlocks ?? {}\n    ).flatMap(([puzName, val]) => (val === null ? [puzName] : []))) {\n      combinedUnlocks.delete(puzName);\n    }\n\n    // Helper function to unlock a new puzzle.\n    const addUnlock = (puzName: string): void => {\n      if (combinedUnlocks.has(puzName)) return;\n      genPacket.unlocks ??= {};\n      genPacket.unlocks[puzName] = {\n        teamId: this.teamId,\n        puzName,\n        timestamp: timeNow,\n      };\n      combinedUnlocks.add(puzName);\n    };\n\n    // Since the tutorial has card unlocks tied to subpuzzles,\n    // set all subpuzzles solved when the battle group is set solved.\n    if (combinedSolves.has(BATTLE_GROUP_NAME_TUTORIAL)) {\n      for (const { puzName, battleGroupName } of puzzlesDB.puzzles.values()) {\n        if (battleGroupName !== BATTLE_GROUP_NAME_TUTORIAL) continue;\n        addUnlock(puzName);\n        addBattleSolve(puzName);\n      }\n    }\n\n    // Compute the combined card unlocks, including pending changes.\n    // This is recorded as a map from cardName to their attributed\n    // puzName (or null, if unattributed).\n    const combinedCardUnlocks: Map<string, string | null> = new Map([\n      ...this.cardUnlocks.entries(),\n      ...Object.entries(syncController.packet.cardUnlocks ?? {}).flatMap<\n        [string, string | null]\n      >(([cardName, val]) => (val === null ? [] : [[cardName, val.puzName]])),\n    ]);\n    for (const cardName of Object.entries(\n      syncController.packet.cardUnlocks ?? {}\n    ).flatMap(([cardName, val]) => (val === null ? [cardName] : []))) {\n      combinedCardUnlocks.delete(cardName);\n    }\n\n    // Compute the \"unlock points\" for each unlock group.\n    const progressPerUnlockGroup: { [unlockGroupId: string]: number } = {};\n    // For each unlocked card unlock group, holds the battleGroupName\n    // of the battle group that unlocked it.\n    const cardUnlockGroups: { [cardUnlockGroupId: string]: string } = {};\n    for (const { puzName, unlockMult, dstUnlockGroupId } of puzzles.values()) {\n      if (!combinedSolves.has(puzName)) continue;\n      if (progressPerUnlockGroup[dstUnlockGroupId] === undefined)\n        progressPerUnlockGroup[dstUnlockGroupId] = 0;\n      progressPerUnlockGroup[dstUnlockGroupId] += unlockMult;\n    }\n    for (const { puzName, cardUnlockGroupId } of puzzles.values()) {\n      if (!combinedSolves.has(puzName)) continue;\n      if (cardUnlockGroupId === null) continue;\n      cardUnlockGroups[cardUnlockGroupId] = puzName;\n    }\n\n    // Unlock new puzzles as necessary.\n    for (const { puzName, unlockReq, srcUnlockGroupId } of puzzles.values()) {\n      // An unlock requirement of -1 implies that the puzzle\n      // does not get unlocked by round solves.\n      if (unlockReq === -1) continue;\n      if ((progressPerUnlockGroup[srcUnlockGroupId] ?? 0) < unlockReq) continue;\n      addUnlock(puzName);\n    }\n\n    // Unlock the first set of battles for unlocked multi-part battles.\n    for (const { puzName, battleGroupName, unlockReq } of puzzles.values()) {\n      if (unlockReq !== -1) continue;\n      if (!combinedUnlocks.has(battleGroupName)) continue;\n      addUnlock(puzName);\n    }\n\n    // Unlock new cards as necessary.\n    for (const cardData of Object.values(this.server.cardsDB)) {\n      const { name: cardName, cardUnlockGroupId } = cardData;\n      if (cardUnlockGroupId === null) continue;\n      const puzName = cardUnlockGroups[cardUnlockGroupId];\n      if (puzName === undefined) continue;\n      const existingUnlock = combinedCardUnlocks.get(cardName);\n      if (existingUnlock !== undefined && existingUnlock === puzName) continue;\n      genPacket.cardUnlocks ??= {};\n      genPacket.cardUnlocks[cardName] = {\n        teamId: this.teamId,\n        puzName,\n        cardName,\n        timestamp: timeNow,\n      };\n      combinedCardUnlocks.set(cardName, puzName);\n    }\n\n    if (!combinedUnlocks.has(PUZ_NAME_FIRST_ANSWER)) {\n      if (\n        [...puzzles.values()].filter(\n          ({ puzName, answer }) =>\n            answer !== null &&\n            puzName !== PUZ_NAME_MASTERY_TREE &&\n            combinedSolves.has(puzName)\n        ).length > 0\n      ) {\n        addUnlock(PUZ_NAME_FIRST_ANSWER);\n      }\n    }\n\n    if (!combinedUnlocks.has(PUZ_NAME_FIRST_LEGENDARY)) {\n      if (\n        [...battleGroups.values()].filter(\n          ({ battleGroupName, isLegendary }) =>\n            isLegendary && combinedSolves.has(battleGroupName)\n        ).length > 0\n      ) {\n        addUnlock(PUZ_NAME_FIRST_LEGENDARY);\n      }\n    }\n\n    // Unlock the cutscene to the final battle if we have\n    // all the legendaries.\n    if (!combinedUnlocks.has(PUZ_NAME_PRE_FINAL_BATTLE)) {\n      const inspector = this.getBattleController(\n        PUZ_NAME_PRE_FINAL_BATTLE\n      ).getInspector();\n      if (\n        [...battleGroups.values()]\n          .filter(({ isLegendary }) => isLegendary)\n          .every(({ battleGroupName }) => combinedSolves.has(battleGroupName))\n      ) {\n        addUnlock(PUZ_NAME_PRE_FINAL_BATTLE);\n      }\n    }\n\n    this.mergeFastSyncPacket(genPacket);\n\n    await syncLoopController.triggerLoopAndWaitAsync();\n  }\n\n  async adminModifyTeamAsync(params: AdminModifyTeamParams) {\n    const {\n      isInactive,\n      isHidden,\n      isTempBlocked,\n      displayName,\n      overrideSolved,\n      overrideUnlocked,\n      overrideCardUnlocked,\n      overrideMasteriesList,\n      overrideDecks,\n      overrideMasteryTree,\n    } = params;\n    if (isInactive !== undefined) this.setTeamInactive(isInactive);\n    if (isHidden !== undefined) this.setTeamHidden(isHidden);\n    if (isTempBlocked !== undefined) this.setTeamTempBlocked(isTempBlocked);\n    if (displayName !== undefined) this.setDisplayName(displayName);\n\n    this.masteryTreeController.handleMasteryTreeUpdate({\n      masteriesListOverride: overrideMasteriesList,\n    });\n    if (overrideMasteryTree !== undefined)\n      this.masteryTreeController.overrideMasteryTree(overrideMasteryTree);\n    for (const [slot, deck] of Object.entries(overrideDecks ?? {})) {\n      this.getDeckController(Number(slot)).overrideDeck(deck);\n    }\n\n    await this.handleTeamUpdatesAsync({\n      answerSubmissionsToAdd: Object.entries(overrideSolved ?? {}).flatMap(\n        ([puzName, isSolved]) =>\n          isSolved\n            ? [\n                {\n                  teamId: this.teamId,\n                  puzName,\n                  answer: this.server.puzzlesDB.getPuzzle(puzName).answer ?? \"\",\n                  isCorrect: true,\n                  timestamp: new Date().getTime(),\n                  usedFreeAnswer: false,\n                },\n              ]\n            : []\n      ),\n      solvesToDelete: Object.entries(overrideSolved ?? {}).flatMap(\n        ([puzName, isSolved]) => (!isSolved ? [puzName] : [])\n      ),\n      unlocksToAdd: Object.entries(overrideUnlocked ?? {}).flatMap(\n        ([puzName, isUnlocked]) =>\n          isUnlocked\n            ? [\n                {\n                  teamId: this.teamId,\n                  puzName,\n                  timestamp: new Date().getTime(),\n                },\n              ]\n            : []\n      ),\n      unlocksToDelete: Object.entries(overrideUnlocked ?? {}).flatMap(\n        ([puzName, isUnlocked]) => (!isUnlocked ? [puzName] : [])\n      ),\n      cardUnlocksToAdd: Object.entries(overrideCardUnlocked ?? {}).flatMap(\n        ([cardName, isUnlocked]) =>\n          isUnlocked\n            ? [\n                {\n                  teamId: this.teamId,\n                  puzName: null,\n                  cardName,\n                  timestamp: new Date().getTime(),\n                },\n              ]\n            : []\n      ),\n      cardUnlocksToDelete: Object.entries(overrideCardUnlocked ?? {}).flatMap(\n        ([cardName, isUnlocked]) => (!isUnlocked ? [cardName] : [])\n      ),\n    });\n  }\n\n  async overrideIsSolvedAsync(puzName: string, isSolved: boolean) {\n    await this.adminModifyTeamAsync({\n      overrideSolved: {\n        [puzName]: isSolved,\n      },\n    });\n  }\n\n  async overrideIsUnlockedAsync(puzName: string, isUnlocked: boolean) {\n    await this.adminModifyTeamAsync({\n      overrideUnlocked: {\n        [puzName]: isUnlocked,\n      },\n    });\n  }\n\n  async overrideIsCardUnlockedAsync(cardName: string, isUnlocked: boolean) {\n    await this.adminModifyTeamAsync({\n      overrideCardUnlocked: {\n        [cardName]: isUnlocked,\n      },\n    });\n  }\n\n  setTeamInactive(isInactive: boolean) {\n    if (isInactive === this.isInactive) return;\n    this.isInactive = isInactive;\n    this.mergeSlowSyncPacket({ isInactive });\n    if (isInactive) {\n      const teamConns = this.server.teamConns.get(this.teamId);\n      if (teamConns !== undefined) {\n        for (const conn of teamConns.values()) {\n          conn.client.close();\n        }\n      }\n    }\n    this.server.broadcastAdminGlobalUpdate({\n      type: GlobalUpdateType.SERVER_UPDATE_TEAM,\n      teamId: this.teamId,\n      isInactive,\n    });\n  }\n\n  setTeamHidden(isHidden: boolean) {\n    // Don't update stats if there is no change.\n    if (isHidden === this.isHidden) return;\n    this.isHidden = isHidden;\n    this.mergeSlowSyncPacket({ isHidden });\n    if (isHidden) {\n      this.server.statsController.hideTeam(this.teamId);\n    } else {\n      this.server.statsController.unhideTeam(this.teamId);\n    }\n    this.server.broadcastAdminGlobalUpdate({\n      type: GlobalUpdateType.SERVER_UPDATE_TEAM,\n      teamId: this.teamId,\n      isHidden,\n    });\n    this.server.handleTeamSummaryUpdate(this.teamId, {\n      isHidden,\n    });\n  }\n\n  setTeamTempBlocked(isTempBlocked: boolean) {\n    if (isTempBlocked === this.isTempBlocked) return;\n    this.isTempBlocked = isTempBlocked;\n    if (isTempBlocked) {\n      const teamConns = this.server.teamConns.get(this.teamId);\n      if (teamConns !== undefined) {\n        for (const conn of teamConns.values()) {\n          if (!conn.isAdmin) {\n            this.server.sendErr(conn, {\n              errCode: WSErrorCode.TEAM_TEMP_BLOCKED,\n            });\n            conn.client.close();\n          }\n        }\n      }\n    }\n  }\n\n  setDisplayName(displayName: string) {\n    this.displayName = displayName;\n    this.mergeSlowSyncPacket({\n      displayName,\n    });\n    this.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      displayName,\n    });\n    this.server.handleTeamSummaryUpdate(this.teamId, {\n      displayName,\n    });\n    this.server.broadcastAdminGlobalUpdate({\n      type: GlobalUpdateType.SERVER_UPDATE_TEAM,\n      teamId: this.teamId,\n      displayName,\n    });\n  }\n\n  handleSetFaction(conn: ClientConnection, faction: Faction | null) {\n    if (\n      !this.masteryTreeController.getEnabledMasteries().has(FACTIONS_MASTERY_ID)\n    ) {\n      this.server.sendErr(conn, { errCode: WSErrorCode.NO_MASTERY });\n      return;\n    }\n    this.faction = faction;\n    this.mergeSlowSyncPacket({\n      faction,\n    });\n    this.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      faction,\n    });\n    this.server.handleTeamSummaryUpdate(this.teamId, {\n      faction,\n      factionScoreContribution:\n        faction === null ? 0 : this.factionScoreContributions[faction],\n    });\n  }\n\n  handleChangeFactionScoreContributions(changes: {\n    [faction in Faction]?: number;\n  }): void {\n    for (const [kFaction, change] of Object.entries(changes)) {\n      const faction = kFaction as Faction;\n      this.factionScoreContributions[faction] += change;\n    }\n    const changedContributions = Object.fromEntries(\n      Object.entries(this.factionScoreContributions).filter(\n        ([kFaction, contribution]) => changes[kFaction as Faction] ?? 0 !== 0\n      )\n    );\n    this.mergeSlowSyncPacket({\n      factionScoreContributions: changedContributions,\n    });\n    this.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      factionScoreContributions: changedContributions,\n    });\n    const teamFaction = this.faction;\n    if (teamFaction !== null) {\n      const teamFactionScoreChange = changes[teamFaction] ?? 0;\n      if (teamFactionScoreChange !== 0) {\n        this.server.handleTeamSummaryUpdate(this.teamId, {\n          factionScoreContribution: this.factionScoreContributions[teamFaction],\n        });\n      }\n    }\n    this.server.statsController.handleTeamUpdates(this.teamId, {\n      factionScoreChanges: changes,\n      updateFactionHistory: true,\n    });\n  }\n\n  handleSetMembers(members: string[]) {\n    this.members = members;\n    this.server.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_MEMBERS,\n        teamId: this.teamId,\n      },\n      {\n        type: GlobalUpdateType.TEAM_MEMBERS_UPDATE_STATE,\n        members,\n      }\n    );\n  }\n\n  handleNewSpeedrunTime(puzName: string, speedrunTime: number) {\n    const prevBestTime = this.speedrunTimes.get(puzName);\n    if (prevBestTime !== undefined && speedrunTime >= prevBestTime) return;\n\n    this.speedrunTimes.set(puzName, speedrunTime);\n    // Invalidate the cached speedrunInfo.\n    delete this.cachedSpeedrunInfo;\n\n    this.broadcastTeamGlobalUpdate({\n      type: GlobalUpdateType.TEAM_UPDATE_STATE,\n      speedrunTimes: { [puzName]: speedrunTime },\n    });\n\n    this.server.statsController.handleTeamUpdates(this.teamId, {\n      speedrunTimes: { [puzName]: speedrunTime },\n    });\n\n    this.server.handleTeamSummaryUpdate(this.teamId, {\n      speedrunInfo: this.computeSpeedrunInfo(),\n    });\n  }\n\n  computeSpeedrunInfo() {\n    if (this.cachedSpeedrunInfo !== undefined) return this.cachedSpeedrunInfo;\n    const times = [...this.server.puzzlesDB.puzzles.values()]\n      .filter(({ puzName, battleGroupName, isCutscene }) => {\n        return isUsedForGlobalSpeedrunTime(\n          puzName,\n          battleGroupName,\n          isCutscene\n        );\n      })\n      .map(({ puzName }) => this.speedrunTimes.get(puzName) ?? 0);\n    this.cachedSpeedrunInfo = {\n      numTimes: times.filter((time) => !!time).length,\n      totalTime: times.reduce((acc, cur) => acc + cur, 0),\n    };\n    return this.cachedSpeedrunInfo;\n  }\n\n  viewPuzzle(conn: ClientConnection, puzName: string): void {\n    if (!this.unlockTimes.has(puzName)) {\n      this.server.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n      return;\n    }\n\n    const { battleGroupName } = this.server.getBattleGroup(puzName);\n    const timeNow = new Date().getTime();\n    const viewTimes: { [puzName: string]: number } = {};\n    if (!this.views.has(puzName)) viewTimes[puzName] = timeNow;\n    // If we view any puzzle in the battle group, then we view\n    // the whole battle group.\n    if (!this.views.has(battleGroupName)) viewTimes[battleGroupName] = timeNow;\n\n    for (const puzName of Object.keys(viewTimes)) {\n      this.views.add(puzName);\n      this.broadcastTeamGlobalUpdate({\n        type: GlobalUpdateType.TEAM_UPDATE_PUZZLE,\n        puzName,\n        isNew: false,\n      });\n    }\n    this.mergeSlowSyncPacket({\n      viewTimes,\n    });\n  }\n\n  mergeFastSyncPacket(packet: BackendSyncReqPacket) {\n    this.fastSyncTracking.syncController.mergePacket(packet);\n  }\n\n  mergeSlowSyncPacket(packet: BackendSyncReqPacket) {\n    this.slowSyncTracking.syncController.mergePacket(packet);\n  }\n}\n","import { ColorSymbol, CardType } from \"engine/types/card-data\";\nimport { Card, Permanent, Slot } from \"engine/types/game-state\";\nimport { CounterType, CounterData } from \"engine/types/counters\";\nimport {\n  PermanentEventType,\n  CreatedPermanentEvent,\n  DamagedPermanentEvent,\n  PermanentEventHandlers,\n} from \"engine/server-hooks\";\nimport { ActivateAbilityStepResolved } from \"engine/types/steps\";\nimport { GameSpec, EngineContext } from \"engine/types/game-specs\";\nimport { EffectOptType } from \"engine/types/effects\";\nimport { CardsDB } from \"engine/cards/CardsDB\";\nimport { CardEffectsShared } from \"engine/cards/card-effects-shared\";\nimport { PUZZLE_51_CARDS } from \"engine/game-specs/puzzle-51-shared\";\n\nexport type OnAbilityHook = (\n  step: ActivateAbilityStepResolved,\n  ctx: EngineContext\n) => void;\n\n/** Card effects that the server knows. */\nexport type CardEffects = CardEffectsShared & {\n  // These are split up to make the effects spec shorter.\n  onRepeatable?: OnAbilityHook;\n  onSpecial?: OnAbilityHook;\n  /**\n   * Counter data for counters specifically defined for the card.\n   * Counters can also be defined under COMMON_COUNTER_DATA, e.g.\n   * for counters that are used by multiple effects.\n   */\n  counterData?: { [type in CounterType]?: CounterData };\n  /**\n   * Adjust the damage received by permanent.\n   * The damage may optionally be attributed to an attacker.\n   * This may generate updates, e.g. to track adjustments applied,\n   * but MUST NOT perform any game state updates.\n   */\n  adjustDamageReceived?: (\n    permanent: Permanent,\n    damage: number,\n    attacker: Permanent | undefined,\n    ctx: EngineContext\n  ) => number;\n  /**\n   * If permanent would get damaged, run this hook instead.\n   * If this hook returns true, the permanent gets damaged anyway.\n   * If this hook returns false or does not return, the permanent\n   * does not get damaged.\n   */\n  insteadOfDamaged?: (\n    permanent: Permanent,\n    damage: number,\n    attacker: Permanent | undefined,\n    ctx: EngineContext\n  ) => boolean | undefined;\n  /**\n   * Actions to run in response to game events.\n   */\n  handlers?: PermanentEventHandlers;\n};\n\nexport type EffectsDB = { [cardName: string]: CardEffects };\n\nexport const thornsHandler = (ev: DamagedPermanentEvent) => {\n  const { permanent, attacker, ctx } = ev;\n  const { inspector, engine } = ctx;\n  // Attack back only if the damage comes from an attacker.\n  if (attacker) {\n    engine.announce(\n      `${inspector.getCardDisplayName(permanent)} attacks back for 1 damage!`\n    );\n    // Do not attribute damage to prevent triggering other card effects.\n    engine.damageUnattributed(attacker, 1);\n  }\n};\n\ntype PowerHealthBuff = { power?: number; health?: number };\n\nconst buffPermanent = (\n  target: Permanent,\n  buff: PowerHealthBuff,\n  source: Permanent,\n  ctx: EngineContext\n) => {\n  const { inspector, engine } = ctx;\n  const power = buff.power || 0;\n  const health = buff.health || 0;\n  const msgParts = [];\n  if (power) msgParts.push(`+${power} power`);\n  if (health) msgParts.push(`+${health} health`);\n  engine.announce(\n    `${inspector.getCardDisplayName(\n      source\n    )} buffs ${inspector.getCardDisplayName(target)} with ${msgParts.join(\n      \"/\"\n    )}!`\n  );\n\n  engine.adjustPermanentStats(target, power, health);\n};\n\n// buff adjacent cards to a permanent\nconst buffAdjacentHandler = (\n  buff: PowerHealthBuff,\n  condition?: (permanent: Permanent, ctx: EngineContext) => boolean\n) => {\n  return (ev: CreatedPermanentEvent) => {\n    const { permanent, ctx } = ev;\n    ctx.inspector\n      .getAdjacentFriendlyPermanents(permanent)\n      .forEach((adjacentPermanent) => {\n        if (condition && !condition(adjacentPermanent, ctx)) {\n          return;\n        }\n        buffPermanent(adjacentPermanent, buff, permanent, ctx);\n      });\n  };\n};\n\n/**\n * Counter data for counters used by game specs or shared by\n * multiple card effects. If a counter is defined and used only\n * for a specific card, it can be defined as part of the card\n * effect's counterData property and will be collated with these\n * counters to form the final counters database.\n */\nexport const COMMON_COUNTER_DATA: { [type in CounterType]?: CounterData } = {\n  [CounterType.BASE_GEMS]: {\n    handlers: {\n      [PermanentEventType.START_TURN]: (event) => {\n        const { permanent, counter, ctx } = event;\n        const { inspector, engine } = ctx;\n        if (counter === undefined) {\n          throw new Error(\"expect counter in counter event\");\n        }\n        if (counter.val === undefined) {\n          throw new Error(\"counter should have value\");\n        }\n        if (inspector.isTurnPending(permanent.owner)) {\n          engine.addGems(\n            permanent.owner,\n            new Array(counter.val).fill(ColorSymbol.RAINBOW)\n          );\n        }\n        return { expire: false };\n      },\n    },\n  },\n  [CounterType.POISON]: {\n    handlers: {\n      [PermanentEventType.START_TURN]: (event) => {\n        const { permanent, counter, ctx } = event;\n        const { inspector, engine } = ctx;\n        if (counter === undefined) {\n          throw new Error(\"expect counter in counter event\");\n        }\n        if (counter.val === undefined) {\n          throw new Error(\"poison counter should have value\");\n        }\n\n        // deal poison damage to the owning permanent on the start of its turn\n        if (inspector.isTurnPending(permanent.owner)) {\n          engine.damageUnattributed(permanent, counter.val);\n        }\n      },\n    },\n  },\n  // basic doom counter decrements by 1 each turn\n  // should handle val = 0 on a per-case basis\n  [CounterType.DOOM]: {\n    handlers: {\n      [PermanentEventType.END_TURN]: (event) => {\n        const { permanent, counter, counterIndex, ctx } = event;\n        const { engine, inspector } = ctx;\n        if (!inspector.isTurnPending(permanent.owner)) {\n          // Only apply on unit owner's turn\n          return;\n        }\n        if (counter == null || counterIndex == null) {\n          throw new Error(\"counter event should have counter specified\");\n        }\n        // decrement\n        const newVal = (counter.val || 0) - 1;\n\n        if (newVal <= 0) {\n          // implementer note, per-case basis: handle the behavior and remove counter manually on END_TURN\n          if (counter.val !== 0) {\n            engine.updateCounterVal(permanent, counterIndex, 0);\n          }\n        } else {\n          engine.updateCounterVal(permanent, counterIndex, newVal);\n        }\n      },\n    },\n  },\n  [CounterType.DESTROY_ON_END_OF_TURN]: {\n    handlers: {\n      [PermanentEventType.END_TURN]: (event) => {\n        const { permanent, ctx } = event;\n        const { engine } = ctx;\n        engine.destroy(permanent, permanent);\n      },\n    },\n  },\n};\n\n// Utility functions to quickly extract opt values.\n// These should already be validated during the validation phase.\nexport const extractOptPermanent = (\n  step: ActivateAbilityStepResolved,\n  index: number\n): Permanent => {\n  const opt = step.effectOptsResolved[index];\n  if (opt === undefined || opt.type !== EffectOptType.PERMANENT) {\n    throw new Error(\"expected permanent opt\");\n  }\n  return opt.permanent;\n};\nconst extractOptSlot = (\n  step: ActivateAbilityStepResolved,\n  index: number\n): Slot => {\n  const opt = step.effectOptsResolved[index];\n  if (opt === undefined || opt.type !== EffectOptType.SLOT) {\n    throw new Error(\"expected slot opt\");\n  }\n  return opt.slot;\n};\nexport const extractOptChoiceString = (\n  step: ActivateAbilityStepResolved,\n  index: number\n): string => {\n  const opt = step.effectOptsResolved[index];\n  if (opt === undefined || opt.type !== EffectOptType.ONE_CHOICE) {\n    throw new Error(\"expected one-choice string opt\");\n  }\n  return opt.choice;\n};\n\n/** Common ability hook that just performs an attack. */\nconst onAbilityAttack: OnAbilityHook = (step, opts) => {\n  const { engine } = opts;\n  const target = extractOptPermanent(step, 0);\n\n  engine.attack(step.permanent, target);\n};\n\n/* eslint sort-keys/sort-keys-fix: [\"warn\", \"asc\", { minKeys: 20 }] */\nexport const COMMON_CARD_EFFECTS: EffectsDB = {\n  \"bb-b\": {\n    // When an enemy Creature is destroyed, adjacent allied Creatures gain 1 health, and Create 1 Pleochroic Gem.\n    handlers: {\n      [PermanentEventType.OTHER_UNIT_DESTROYED]: (ev) => {\n        const { permanent, destroyedPermanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n\n        // only trigger on enemy creature destroyed\n        if (\n          permanent.owner !== inspector.getOpponentOf(destroyedPermanent.owner)\n        )\n          return;\n        if (inspector.getCardType(destroyedPermanent) !== CardType.CREATURE)\n          return;\n\n        inspector\n          .getPermanents({\n            owner: permanent.owner,\n            adjacentTo: permanent.slot,\n            type: CardType.CREATURE,\n          })\n          .forEach((p) => {\n            engine.adjustPermanentStats(p, 0, 1);\n          });\n\n        engine.addGems(permanent.owner, [ColorSymbol.RAINBOW]);\n        engine.announce(\n          `${inspector.getCardDisplayName(permanent)} Creates 1 Pie`\n        );\n      },\n    },\n  },\n  \"bee-rider\": {\n    onRepeatable: (step, ctx) => {\n      const { permanent } = step;\n      const { engine } = ctx;\n      const slot = extractOptSlot(step, 0);\n      engine.move(permanent, slot);\n      engine.addCounter(permanent, {\n        type: CounterType.FLEXED_THIS_TURN,\n        explanation: \"flexed this turn\",\n        expiry: PermanentEventType.END_TURN,\n      });\n    },\n  },\n  beeflector: {\n    handlers: {\n      // when created, change owner to opponent\n      [PermanentEventType.CREATED]: (ev) => {\n        const { engine } = ev.ctx;\n        engine.changePermanentOwner(ev.permanent);\n      },\n      // thorns 1\n      [PermanentEventType.AFTER_DAMAGED]: thornsHandler,\n    },\n  },\n  beeowulf: {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const attackTarget = extractOptPermanent(step, 0);\n      const moveTarget = extractOptSlot(step, 1);\n\n      engine.attack(step.permanent, attackTarget);\n      engine.move(attackTarget, moveTarget);\n    },\n  },\n  beethoven: {\n    adjustDamageReceived: (permanent, damage, _attacker, ctx) => {\n      const { inspector, engine } = ctx;\n      // General logic to ignore up to a maximum amount of damage\n      // across the entire turn.\n      const maxIgnore = 1;\n      const currentIgnored = inspector.getCounterValSum(\n        permanent,\n        CounterType.IGNORED_DAMAGE\n      );\n      const nextIgnored = Math.min(maxIgnore, currentIgnored + damage);\n      const ignoredDiff = nextIgnored - currentIgnored;\n      if (ignoredDiff > 0) {\n        engine.announce(\n          `${inspector.getCardDisplayName(\n            permanent\n          )} ignores ${ignoredDiff} damage!`\n        );\n        engine.addCounter(permanent, {\n          type: CounterType.IGNORED_DAMAGE,\n          val: ignoredDiff,\n          explanation: `ignored ${ignoredDiff} damage this turn`,\n          expiry: PermanentEventType.END_TURN,\n        });\n      }\n      return damage - ignoredDiff;\n    },\n  },\n  \"bell-flower\": {\n    handlers: {\n      [PermanentEventType.BEFORE_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.drawCard(permanent.owner);\n      },\n    },\n  },\n  blancmange: {\n    // On the turn this Creature is Summoned, it MUST\n    // Flex: give control of target other allied Creature to enemy,\n    // and reflect its position in the battlefield. Can only be done once.\n    // If you do not have any other Creatures when this is Summoned, or do not Flex, it is destroyed.\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n        // check for other creatures\n        const permanents = inspector.getPermanentsOf(permanent.owner);\n        const creatures = permanents.filter(\n          (p) => inspector.getCardType(p) === CardType.CREATURE\n        );\n        if (creatures.length <= 1) {\n          engine.destroy(permanent, permanent);\n          engine.announce(\n            `${inspector.getCardDisplayName(\n              permanent\n            )} destroys itself without a Creature to convert`\n          );\n          return;\n        }\n\n        engine.addCounter(permanent, {\n          type: CounterType.SUMMONED_THIS_TURN,\n          explanation: \"can Flex\",\n          expiry: PermanentEventType.END_TURN,\n        });\n      },\n      [PermanentEventType.END_TURN]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n        if (\n          inspector.doesPermanentHaveCounterType(\n            permanent,\n            CounterType.SUMMONED_THIS_TURN\n          )\n        ) {\n          engine.destroy(permanent, permanent);\n          engine.announce(\n            `${inspector.getCardDisplayName(\n              permanent\n            )} did not convert and destroys itself`\n          );\n        }\n      },\n    },\n    onRepeatable: (step, ctx) => {\n      const { inspector, engine } = ctx;\n      const target = extractOptPermanent(step, 0);\n\n      const reflectedSlot = inspector.getReflectedSlot(target.slot);\n      if (inspector.isSlotOccupied(reflectedSlot)) return;\n\n      // reflect and give to enemy\n      engine.move(target, reflectedSlot);\n      engine.changePermanentOwner(target);\n\n      // can only flex once\n      engine.removeCounterType(step.permanent, CounterType.SUMMONED_THIS_TURN);\n    },\n  },\n  \"boarnana-tree\": {\n    onRepeatable: (step, ctx) => {\n      const { engine, inspector } = ctx;\n      const { permanent } = step;\n\n      inspector\n        .getPermanents({\n          owner: permanent.owner,\n          row: permanent.slot.row,\n          except: permanent,\n          type: CardType.CREATURE,\n        })\n        .forEach((target) => {\n          buffPermanent(target, { health: 1 }, permanent, ctx);\n        });\n      engine.damage(permanent, permanent, 1);\n    },\n  },\n  camp: {\n    handlers: {\n      [PermanentEventType.CREATED]: (event) => {\n        event.ctx.engine.addCounter(event.permanent, {\n          type: CounterType.BASE_GEMS,\n          val: 1,\n        });\n      },\n    },\n  },\n  chicken: {\n    counterData: {\n      [CounterType.CAT_SPECIAL_PENDING]: {\n        handlers: {\n          [PermanentEventType.START_TURN]: (ev) => {\n            const { permanent, ctx } = ev;\n            const { engine } = ctx;\n            engine.addGems(permanent.owner, [ColorSymbol.RAINBOW]);\n            return { expire: true };\n          },\n        },\n      },\n    },\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      engine.addCounter(step.permanent, {\n        type: CounterType.CAT_SPECIAL_PENDING,\n        explanation: \"Get {?} at the start of next turn\",\n      });\n    },\n  },\n  \"chocolate-calf\": {\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      engine.addCounter(step.permanent, {\n        type: CounterType.POWER_ADJUSTMENT,\n        val: 1,\n        explanation: \"+1 power for the rest of the turn\",\n        expiry: PermanentEventType.END_TURN,\n      });\n    },\n  },\n  coloring: {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.addCounter(permanent, {\n          type: CounterType.SUMMONED_THIS_TURN,\n          explanation: \"can Flex\",\n          expiry: PermanentEventType.END_TURN,\n        });\n      },\n    },\n    onRepeatable: (step, ctx) => {\n      // On the turn this Creature is Summoned, it can\n      // Flex: Ready target other allied Creature. Can only be done once.\n      const { engine } = ctx;\n      const target = extractOptPermanent(step, 0);\n      engine.ready(target);\n      // can only flex once\n      engine.removeCounterType(step.permanent, CounterType.SUMMONED_THIS_TURN);\n    },\n  },\n  dargle: {\n    // When this Creature deals damage, it deals that amount of damage to itself, and increases its power by the same amount\n    // Whergle this Crergle deargle dargle, it deargle that argle of dargle to itsergle, and increargle its porgle by the sargle argle.\n    handlers: {\n      [PermanentEventType.AFTER_DEAL_DAMAGE]: (ev) => {\n        const { permanent, damage, ctx } = ev;\n        const { engine } = ctx;\n        // unattributed to avoid infinite loop\n        engine.damageUnattributed(permanent, damage);\n        engine.addCounter(permanent, {\n          type: CounterType.POWER_ADJUSTMENT,\n          val: damage,\n          explanation: `+${damage} porgle`,\n        });\n        engine.announce(\n          `${ctx.inspector.getCardDisplayName(\n            permanent\n          )} dargle itsergle for ${damage} and increargle its porgle by ${damage}`\n        );\n      },\n    },\n  },\n  \"dino-nugget\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev: CreatedPermanentEvent) => {\n        const { permanent, ctx } = ev;\n        const { inspector } = ctx;\n        inspector\n          .getPermanents({\n            row: permanent.slot.row,\n            type: CardType.CREATURE,\n            except: permanent,\n            custom: (permanent) => {\n              const color = inspector.getCardColor(permanent);\n              return color !== null && color === ColorSymbol.GREEN;\n            },\n          })\n          .forEach((target) => {\n            buffPermanent(target, { health: 1 }, permanent, ctx);\n          });\n      },\n    },\n  },\n  \"eager-beever\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.addCounter(permanent, {\n          type: CounterType.ALLOWS_MOVE_TO_ADJACENT,\n        });\n      },\n    },\n  },\n  \"flora-the-explora\": {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      engine.drawCard(step.permanent.owner);\n    },\n  },\n  giraffatitan: {\n    onSpecial: onAbilityAttack,\n  },\n  \"glass-of-moo\": {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      engine.addGems(permanent.owner, [ColorSymbol.WHITE, ColorSymbol.BLACK]);\n      engine.damage(permanent, permanent, 1);\n    },\n  },\n  \"glass-of-moocha\": {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      engine.addGems(permanent.owner, [ColorSymbol.BLACK, ColorSymbol.WHITE]);\n      engine.damage(permanent, permanent, 1);\n    },\n  },\n  \"hog-hog\": {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        ctx.engine.addCardToHand(permanent.owner, { name: \"hog\" });\n      },\n    },\n  },\n  \"hog-on-a-log\": {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        ctx.engine.spawn(\"log\", permanent.slot, permanent.owner);\n      },\n    },\n  },\n  \"hog-on-a-log-on-a\": {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        ctx.engine.spawn(\"log-on-a-hog-on-a\", permanent.slot, permanent.owner);\n      },\n    },\n  },\n  jabberwock: {\n    // Special: Prevent one instance of damage that would be dealt to allied Creature this turn.\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const target = extractOptPermanent(step, 0);\n      engine.addCounter(target, {\n        type: CounterType.DIVINE_SHIELD,\n        explanation: \"The next instance of damage this turn is prevented\",\n        expiry: PermanentEventType.END_TURN,\n      });\n    },\n  },\n  keep: {\n    handlers: {\n      [PermanentEventType.CREATED]: (event) => {\n        event.ctx.engine.addCounter(event.permanent, {\n          type: CounterType.BASE_GEMS,\n          val: 3,\n        });\n      },\n    },\n  },\n  \"king-bee\": {\n    handlers: {\n      [PermanentEventType.AFTER_DEAL_DAMAGE]: (ev) => {\n        const { defender, ctx } = ev;\n        const { engine } = ctx;\n        engine.addCounter(defender, {\n          type: CounterType.POWER_ADJUSTMENT,\n          explanation: \"-1 power\",\n          val: -1,\n        });\n      },\n    },\n  },\n  \"lady-jane\": {\n    onSpecial: (step, ctx) => {\n      const { inspector, engine } = ctx;\n      const { permanent } = step;\n      const attackTarget = extractOptPermanent(step, 0);\n\n      const power = inspector.getPower(permanent);\n      engine.damage(permanent, attackTarget, power + 1);\n    },\n  },\n  \"log-on-a-hog\": {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        ctx.engine.spawn(\"hog\", permanent.slot, permanent.owner);\n      },\n    },\n  },\n\n  \"log-on-a-hog-on-a\": {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { permanent, ctx } = ev;\n        ctx.engine.spawn(\"hog-on-a-log-on-a\", permanent.slot, permanent.owner);\n      },\n    },\n  },\n  \"miss-yu\": {\n    // When this creature gains health, ready it, and it gains one power.\n    handlers: {\n      [PermanentEventType.AFTER_DAMAGE_REMOVED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.ready(permanent);\n        engine.adjustPermanentStats(permanent, 1, 0);\n        engine.announce(\n          `${ctx.inspector.getCardDisplayName(\n            permanent\n          )} readies and gains 1 power`\n        );\n      },\n      [PermanentEventType.AFTER_STATS_CHANGED]: (ev) => {\n        if (ev.healthDelta <= 0) {\n          return;\n        }\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.ready(permanent);\n        engine.adjustPermanentStats(permanent, 1, 0);\n        engine.announce(\n          `${ctx.inspector.getCardDisplayName(\n            permanent\n          )} readies and gains 1 power`\n        );\n      },\n    },\n  },\n  \"mister-penny\": {\n    // Flex: deal 1 damage to allied Structure, and gain 1 Pleochroic Gem.\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      const permanent = step.permanent;\n      const target = extractOptPermanent(step, 0);\n\n      engine.damage(permanent, target, 1);\n      engine.addGems(permanent.owner, [ColorSymbol.RAINBOW]);\n    },\n  },\n  moonick: {\n    handlers: {\n      // When you Summon a Creature, if any of the top six cards of the deck share the name of the Summoned Creature,\n      // the first is immediately Summoned for no cost to a random empty slot, if possible.\n      [PermanentEventType.OTHER_UNIT_SPAWN]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n        const played = ev.spawnedPermanent;\n        const owner = permanent.owner;\n        // only allied summons\n        if (played.owner !== owner) return;\n        // 1. check top n deck cards of deck\n        const deck = inspector.getDrawPile(owner);\n        const SCRY_N = 7;\n\n        // top n deck cards, from top to bottom\n        let topN: readonly Card[];\n        if (deck.length === 0) return;\n        if (deck.length < SCRY_N) {\n          topN = deck.slice().reverse();\n        } else {\n          topN = deck.slice(deck.length - SCRY_N, deck.length).reverse();\n        }\n\n        const playedName = inspector.getCardName(played);\n\n        // try to summon to an empty slot. only do this if there is an empty slot.\n        const slots = inspector.getUnoccupiedSlots(owner);\n        if (slots.length === 0) return;\n\n        // get random slot\n        const slot = slots[Math.floor(Math.random() * slots.length)];\n\n        let index = deck.length - 1;\n        // from back to front, call engine.removeCardIndex\n        // need to remove from top to bottom to keep subsequent card indices same\n        for (const card of topN) {\n          // 2. filter name by name of played\n          if (inspector.getCardName(card) === playedName) {\n            // when on summon effects are triggered, the card index will change\n            // excavating-rat draws a card, which modifies the deck before we can remove\n            // so we remove the card first, then summon\n\n            // --- DEBUGGING ---\n            // const removeCard = inspector.getDrawPile(owner)[index];\n            // console.log(topFour);\n\n            // console.log(inspector.getDrawPile(owner));\n            // console.log(`removing card at ${index}}`);\n            // console.log(removeCard);\n            // console.log(`${inspector.getCardDisplayName(removeCard)}`);\n            // --- END DEBUGGING ---\n\n            engine.removeCardIndex(owner, index);\n\n            // 3. summon to empty slot\n            if (engine.spawn(inspector.getCardName(card), slot, owner)) {\n              engine.announce(\n                `${inspector.getCardDisplayName(\n                  permanent\n                )} Summons ${inspector.getCardDisplayName(card)}`\n              );\n            } else {\n              throw new Error(\"failed to summon\");\n            }\n            return;\n          }\n          index--;\n        }\n      },\n    },\n  },\n  murray: {\n    onRepeatable: (step, ctx) => {\n      onAbilityAttack(step, ctx);\n      ctx.engine.addCounter(step.permanent, {\n        type: CounterType.FLEXED_THIS_TURN,\n        explanation: \"flexed this turn\",\n        expiry: PermanentEventType.END_TURN,\n      });\n    },\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      const destroyTarget = extractOptPermanent(step, 0);\n\n      engine.destroy(permanent, destroyTarget);\n    },\n  },\n  \"nam-pam-bee\": {\n    handlers: {\n      [PermanentEventType.START_TURN]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine, inspector } = ctx;\n        if (\n          inspector.doesPermanentHaveCounterType(\n            permanent,\n            CounterType.DAMAGE_TAKEN\n          )\n        ) {\n          engine.addGems(permanent.owner, [ColorSymbol.YELLOW]);\n        }\n      },\n    },\n  },\n  \"nepeta-legion\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.drawCard(permanent.owner);\n      },\n    },\n  },\n  \"new-boarn\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n\n        // move to a random unoccupied slot\n        const slots = inspector.getUnoccupiedSlots(permanent.owner);\n        if (slots.length === 0) return;\n\n        const slot = slots[Math.floor(Math.random() * slots.length)];\n        engine.move(permanent, slot);\n      },\n    },\n  },\n  \"nice-cow\": {\n    onSpecial: (step, ctx) => {\n      const { engine, inspector } = ctx;\n      const { permanent } = step;\n      const attackTarget = extractOptPermanent(step, 0);\n\n      engine.attack(permanent, attackTarget);\n      inspector\n        .getPermanents({\n          owner: permanent.owner,\n          adjacentTo: permanent.slot,\n          type: CardType.CREATURE,\n        })\n        .forEach((adjacentPermanent) => {\n          buffPermanent(adjacentPermanent, { power: 1 }, permanent, ctx);\n        });\n    },\n  },\n  nightshade: {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        ev.ctx.engine.addCounter(ev.permanent, {\n          type: CounterType.CANNOT_ATTACK,\n        });\n      },\n    },\n    onSpecial: (step, ctx) => {\n      const { engine, inspector } = ctx;\n      if (engine.discardRandomCard(step.permanent.owner)) {\n        const victim = extractOptPermanent(step, 0);\n        engine.damage(\n          step.permanent,\n          victim,\n          inspector.getPower(step.permanent)\n        );\n      } else {\n        engine.announce(\"Nightshade had no card to discard and failed.\");\n      }\n    },\n  },\n  o: {\n    handlers: {\n      [PermanentEventType.CREATED]: buffAdjacentHandler(\n        { health: 1 },\n        (permanent: Permanent, ctx: EngineContext) => {\n          const color = ctx.inspector.getCardColor(permanent);\n          return (\n            color !== null &&\n            [ColorSymbol.WHITE, ColorSymbol.WHITEBLACK].includes(color)\n          );\n        }\n      ),\n    },\n  },\n  \"oklahoma-tusks\": {\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      engine.addCounter(step.permanent, {\n        type: CounterType.POWER_ADJUSTMENT,\n        val: 1,\n        explanation: \"+1 power for the rest of the turn\",\n        expiry: PermanentEventType.END_TURN,\n      });\n    },\n    onSpecial: (step, ctx) => {\n      const { inspector, engine } = ctx;\n      const { permanent } = step;\n      const player = permanent.owner;\n      const opponent = inspector.getOpponentOf(player);\n      const targets = inspector\n        .getPermanentsOf(opponent)\n        .filter(\n          (oppPermanent) =>\n            inspector.getCardType(oppPermanent) == CardType.CREATURE &&\n            oppPermanent.slot.column === permanent.slot.column\n        )\n        .sort((permanent1, permanent2) => {\n          // Attack the target creatures in a consistent order.\n          const slot1 = permanent1.slot;\n          const slot2 = permanent2.slot;\n          const terrain1 = inspector.getTerrainOf(slot1);\n          const terrain2 = inspector.getTerrainOf(slot2);\n          if (inspector.isRowInFrontOf(slot1.row, slot2.row, opponent))\n            return -1;\n          if (inspector.isRowInFrontOf(slot2.row, slot1.row, opponent))\n            return 1;\n          if (terrain1 === player && terrain2 !== player) return -1;\n          if (terrain2 === player && terrain1 !== player) return 1;\n          if (slot1.column !== slot2.column) {\n            return slot1.column - slot2.column;\n          }\n          // We should never reach here, but don't throw since it's\n          // not so critical that we don't.\n          return 0;\n        });\n      for (const target of targets) {\n        engine.attack(permanent, target);\n      }\n    },\n  },\n  othello: {\n    onSpecial: (step, ctx) => {\n      // Special: Summon a copy of target other allied Creature on an empty friendly slot.\n      // Give the copy \"Attacks for free. End of turn: Destroy me\" and ready it.\n\n      const { inspector, engine } = ctx;\n\n      const target = extractOptPermanent(step, 0);\n      const targetName = inspector.getCardName(target);\n      const slot = extractOptSlot(step, 1);\n\n      const beforePermanents = inspector.getAllPermanents();\n      engine.spawn(targetName, slot, step.permanent.owner);\n\n      let clone: Permanent | null = null;\n\n      // SPECIAL CASE FOR NEW BOARN\n      if (targetName === \"new-boarn\") {\n        const afterPermanents = inspector.getAllPermanents();\n        const newPermanents = afterPermanents.filter(\n          (p) =>\n            !beforePermanents.map((p) => p.id).includes(p.id) && // id is new\n            inspector.getCardName(p) === \"new-boarn\" // name is new boarn\n        );\n        if (newPermanents.length > 0) clone = newPermanents[0];\n      } else {\n        clone = inspector.getPermanentAtIfExists(slot);\n      }\n\n      if (clone) {\n        engine.addCounter(clone, {\n          type: CounterType.ATTACKS_FOR_FREE,\n          explanation: \"Attacks for free\",\n        });\n        engine.addCounter(clone, {\n          type: CounterType.DESTROY_ON_END_OF_TURN,\n          explanation: \"On end of turn, Destroy this Creature\",\n        });\n        engine.ready(clone);\n      }\n\n      engine.announce(\"Othello copies \" + inspector.getCardDisplayName(target));\n    },\n  },\n  payne: {\n    adjustDamageReceived: (_permanent, damage, attacker, ctx) => {\n      const { inspector } = ctx;\n      if (attacker) {\n        const attackerColor = inspector.getCardColor(attacker);\n        if (\n          attackerColor !== null &&\n          [ColorSymbol.WHITE, ColorSymbol.BLACK].includes(attackerColor)\n        ) {\n          return damage + 1;\n        }\n      }\n      return damage;\n    },\n  },\n  \"pbee---j\": {\n    handlers: {\n      [PermanentEventType.AFTER_DAMAGED]: thornsHandler,\n    },\n  },\n  \"petroleum-jelly\": {\n    adjustDamageReceived: (permanent, damage, attacker, ctx) => {\n      const { inspector, engine } = ctx;\n      if (attacker && permanent.slot.column === attacker.slot.column) {\n        engine.announce(\n          `${inspector.getCardDisplayName(permanent)} takes 1 less damage!`\n        );\n        return Math.max(damage - 1, 0);\n      }\n      return damage;\n    },\n  },\n  \"quail-aboard-fiery-steeds\": {\n    onSpecial: (step, ctx) => {\n      const { permanent } = step;\n      const { engine, inspector } = ctx;\n      inspector\n        .getPermanents({\n          ownedByOpponentOf: permanent.owner,\n          notProtectedFrom: permanent,\n          custom: (p) => Math.abs(p.slot.column - permanent.slot.column) <= 1,\n        })\n        .forEach((target) => {\n          engine.attack(permanent, target);\n        });\n    },\n  },\n  re: {\n    handlers: {\n      [PermanentEventType.CREATED]: buffAdjacentHandler(\n        { power: 1 },\n        (permanent: Permanent, ctx: EngineContext) => {\n          const color = ctx.inspector.getCardColor(permanent);\n          return (\n            color !== null &&\n            [ColorSymbol.BLACK, ColorSymbol.WHITEBLACK].includes(color)\n          );\n        }\n      ),\n    },\n  },\n  \"realistic-rex\": {\n    onSpecial: (step, opts) => {\n      const { engine } = opts;\n      const target1 = extractOptPermanent(step, 0);\n      const target2 = extractOptPermanent(step, 1);\n\n      engine.attack(step.permanent, target1);\n      engine.attack(step.permanent, target2);\n    },\n  },\n  \"reckless-medisaur\": {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      const base = extractOptPermanent(step, 0);\n      const target = extractOptPermanent(step, 1);\n      engine.damage(permanent, base, 2);\n      engine.removeDamage(target, target.damage);\n    },\n  },\n  robot: {\n    onSpecial: onAbilityAttack,\n  },\n  \"roe-doe-dendron\": {\n    onSpecial: (step, ctx) => {\n      const { inspector, engine } = ctx;\n      const { permanent } = step;\n      const attackTarget = extractOptPermanent(step, 0);\n      const behindTargets = inspector.getBehindFriendlyPermanents(attackTarget);\n      engine.attack(permanent, attackTarget);\n\n      if (behindTargets.length === 0) return;\n      const target = behindTargets[0];\n\n      // only attack creatures\n      if (inspector.getCardType(target) !== CardType.CREATURE) return;\n\n      engine.damage(permanent, behindTargets[0], 1);\n    },\n  },\n  \"rude-cow\": {\n    onSpecial: (step, ctx) => {\n      const { engine, inspector } = ctx;\n      const { permanent } = step;\n      const attackTarget = extractOptPermanent(step, 0);\n\n      engine.attack(permanent, attackTarget);\n      inspector\n        .getPermanents({\n          owner: permanent.owner,\n          adjacentTo: permanent.slot,\n          type: CardType.CREATURE,\n        })\n        .forEach((adjacentPermanent) => {\n          buffPermanent(adjacentPermanent, { health: 1 }, permanent, ctx);\n        });\n    },\n  },\n  \"sapphire-rose\": {\n    onRepeatable(step, ctx) {\n      const { permanent } = step;\n      const { engine } = ctx;\n      engine.drawCard(permanent.owner);\n      engine.damageUnattributed(permanent, 2);\n    },\n  },\n  \"slime--slime\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        // You may put any number of copies of this card into your deck.\n        // On Summon: draw a card.\n        // After Attacking: Create 1 P.\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.drawCard(permanent.owner);\n      },\n      [PermanentEventType.AFTER_DEAL_DAMAGE]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.addGems(permanent.owner, [ColorSymbol.RED]);\n      },\n    },\n  },\n  \"spelling-bee\": {\n    handlers: {\n      // In two turns, deals 2 damage to all Creatures in touching slots.\n      [PermanentEventType.CREATED]: (ev) => {\n        const { permanent, ctx } = ev;\n        const { engine } = ctx;\n        engine.addCounter(permanent, {\n          type: CounterType.DOOM,\n          val: 2 - 1, // 2 turns but the decrementer is slower than our checker\n          explanation: \"will explode\", // TODO: nice-to-have dynamic explanation\n        });\n      },\n      [PermanentEventType.END_TURN]: (ev) => {\n        // note this triggers before the counter itself decrements\n        // check for doom counter\n        const { permanent, ctx } = ev;\n        const { inspector, engine } = ctx;\n        if (\n          inspector.doesPermanentHaveCounterType(permanent, CounterType.DOOM)\n        ) {\n          if (inspector.getCounterValSum(permanent, CounterType.DOOM) === 0) {\n            // deal 2 damage to touching Creatures\n            const touchingCreatures = inspector.getPermanents({\n              touching: permanent.slot,\n              type: CardType.CREATURE,\n            });\n\n            touchingCreatures.forEach((creature) => {\n              engine.damage(permanent, creature, 2);\n            });\n\n            // destroy counter\n            engine.removeCounterType(permanent, CounterType.DOOM);\n            engine.announce(\n              `${inspector.getCardDisplayName(permanent)} explodes`\n            );\n          }\n        }\n      },\n    },\n  },\n  \"swarm-tactics\": {\n    handlers: {\n      [PermanentEventType.AFTER_DAMAGED]: thornsHandler,\n    },\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      engine.addCounter(step.permanent, {\n        type: CounterType.PROTECTS_ADJACENT_COLUMNS,\n        explanation: \"protecting adjacent columns\",\n        expiry: PermanentEventType.START_TURN,\n      });\n    },\n  },\n  \"switch-boar-d\": {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      const attackTarget = extractOptPermanent(step, 0);\n      const swapTarget = extractOptPermanent(step, 1);\n\n      engine.attack(permanent, attackTarget);\n      engine.swap(permanent, swapTarget);\n    },\n  },\n  thesaurus: {\n    handlers: {\n      [PermanentEventType.AFTER_DESTROY_UNIT]: (ev) => {\n        const { permanent, defender, ctx } = ev;\n        const { inspector, engine } = ctx;\n        if (inspector.getCardType(defender) === CardType.CREATURE) {\n          engine.addGems(permanent.owner, [ColorSymbol.RAINBOW]);\n        }\n      },\n    },\n  },\n  \"touch-grass\": {\n    onSpecial: onAbilityAttack,\n  },\n  \"tusk-enhancement\": {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev: CreatedPermanentEvent) => {\n        const { permanent, ctx } = ev;\n        ctx.inspector\n          .getPermanents({\n            column: permanent.slot.column,\n            type: CardType.CREATURE,\n            except: permanent,\n          })\n          .forEach((target) => {\n            buffPermanent(target, { power: 1 }, permanent, ctx);\n          });\n      },\n    },\n  },\n  \"two-bees\": {\n    adjustDamageReceived: (_, damage) => {\n      return Math.floor(damage / 2);\n    },\n  },\n  \"ultra-violet\": {\n    handlers: {\n      [PermanentEventType.AFTER_DEAL_DAMAGE]: (ev) => {\n        const { defender, ctx } = ev;\n        const { engine } = ctx;\n        engine.addCounter(defender, {\n          type: CounterType.FROZEN,\n          explanation: \"will not ready on its next turn\",\n          expiry: PermanentEventType.START_TURN,\n        });\n      },\n    },\n  },\n  \"vanilla-calf\": {\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      if (step.permanent.damage > 0) {\n        engine.removeDamage(step.permanent, 1);\n      }\n    },\n  },\n};\n/* eslint-disable sort-keys/sort-keys-fix */\n\n// --- Programmatic addition of cards for puzzles. ---\n\n// Puzzle 51\nfor (const cardName of PUZZLE_51_CARDS) {\n  COMMON_CARD_EFFECTS[cardName.toLocaleLowerCase().replace(/ /g, \"-\")] = {\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      engine.despawn(step.permanent);\n    },\n  };\n}\n\n/** Merges auxEffectsDB into effectsDB. */\nconst mergeEffectsDB = (\n  effectsDB: EffectsDB,\n  auxEffectsDB?: {\n    [cardName: string]: CardEffectsShared | CardEffects;\n  }\n): void => {\n  if (auxEffectsDB === undefined) return;\n  for (const [cardName, auxEffects] of Object.entries(auxEffectsDB)) {\n    effectsDB[cardName] = {\n      ...(effectsDB[cardName] ?? {}),\n      ...auxEffects,\n    };\n  }\n};\n\nexport const getEffectsDB = (\n  allSpecs: ReadonlyArray<GameSpec>,\n  cardsDB: CardsDB\n): EffectsDB => {\n  const effectsDB: EffectsDB = {};\n  for (const spec of allSpecs) {\n    mergeEffectsDB(effectsDB, spec.cardEffects);\n    mergeEffectsDB(effectsDB, spec.makeCardEffectsShared?.(cardsDB));\n    mergeEffectsDB(effectsDB, spec.cardEffectsShared);\n  }\n  return effectsDB;\n};\n\nexport type CountersDB = { [type in CounterType]?: CounterData };\n\n/**\n * Construct the counters DB from the game spec and effectsDB.\n * The effectsDB should already contain the effects defined in\n * the game spec.\n */\nexport const getCountersDB = (\n  allSpecs: ReadonlyArray<GameSpec>,\n  effectsDB: EffectsDB\n): CountersDB => {\n  const countersDB: CountersDB = {};\n  for (const spec of allSpecs) {\n    if (spec.counterData !== undefined) {\n      Object.assign(countersDB, spec.counterData);\n    }\n  }\n  for (const [, effects] of Object.entries(effectsDB)) {\n    if (effects.counterData) {\n      for (const [counterType, counterData] of Object.entries(\n        effects.counterData\n      )) {\n        countersDB[counterType as CounterType] = counterData;\n      }\n    }\n  }\n  return countersDB;\n};\n","import { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport {\n  COMMON_COUNTER_DATA,\n  COMMON_CARD_EFFECTS,\n} from \"engine/cards/card-effects\";\n\n// Note: If this ever uses ExtraState, it needs a separate extra state\n// buffer and a new hook to access it, since it is used simultaneously\n// with other game specs.\n\n/**\n * Common \"game spec\" used in all puzzles. Note that only some subset\n * of the game spec hooks are supported for the common spec.\n */\nexport const CommonSpec: GameSpecServerFragment = {\n  counterData: COMMON_COUNTER_DATA,\n  cardEffects: COMMON_CARD_EFFECTS,\n};\n","import { GameSpecServerFragment } from \"engine/types/game-specs\";\n\nexport const RadlandsSpec: GameSpecServerFragment = {};\n","import { Player } from \"engine/types/game-state\";\nimport { AbilityType, EffectOptType } from \"engine/types/effects\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\n\n// basic battle: summon a robot each turn, attack with all robots\nexport const RobotSpec: GameSpecServerFragment = {\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n\n    // TODO: give the AI as many gems as they need to attack\n\n    // play the robot somewhere\n    // TODO: retry if blocked and there's space somewhere else\n    // TODO: use some heuristic to play to 'most annoying' column\n\n    ai.trySpawn(\n      \"robot\",\n      Math.floor(Math.random() * 3),\n      Math.floor(Math.random() * 5)\n    );\n\n    // attack with all ready robots down their column\n    inspector.getPermanentsOf(Player.P2).forEach((permanent) => {\n      if (!permanent.ready) return;\n      const column = permanent.slot.column;\n\n      // use robot's special ability on first enemy below it\n      // TODO: reword card effect that robot only attacks this way, can't pick targets regularly\n      for (let row = permanent.slot.row + 1; row < 6; row++) {\n        const defender = inspector.getPermanentAtIfExists({\n          row,\n          column,\n        });\n        if (!defender || defender.owner !== Player.P1) continue;\n\n        const attackResolved = ai.tryActivateAbility(\n          permanent,\n          AbilityType.SPECIAL,\n          [\n            {\n              type: EffectOptType.PERMANENT,\n              permanentId: defender.id,\n            },\n          ]\n        );\n      }\n    });\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { CounterType } from \"engine/types/counters\";\nimport { StepType } from \"engine/types/steps\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { ColorSymbol } from \"engine/types/card-data\";\n\nexport const Tutorial1Spec: GameSpecServerFragment = {\n  disableNoBasesLossCondition: true,\n  beforeNewGame: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    engine.spawn(\"new-boarn\", 0, 0, Player.P2);\n\n    const enemyUnit = inspector.getPermanents({\n      name: \"new-boarn\",\n    })[0];\n    engine.damageUnattributed(enemyUnit, 3);\n    engine.addCounter(enemyUnit, { type: CounterType.CANNOT_MOVE });\n    engine.addCounter(enemyUnit, { type: CounterType.CANNOT_CREATE });\n    ai.setKeyframe(\"tutorial1-start-1\");\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) return;\n\n    const enemyUnits = inspector.getPermanentsOf(Player.P2);\n    if (enemyUnits.length !== 1)\n      throw new Error(\"expect one enemy unit in play\");\n    ai.tryAttackFirst(enemyUnits[0]);\n\n    switch (inspector.getTurnNumber()) {\n      case 2: {\n        ai.setKeyframe(\"tutorial1-start-2\");\n        break;\n      }\n    }\n  },\n  beforeStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (\n      step.type === StepType.ADVANCE_KEYFRAME &&\n      step.keyframeId === \"tutorial1-start-1\"\n    ) {\n      engine.spawn(\"yoshisaur-munchakoopas\", 1, 0, Player.P1);\n      const playerUnit = inspector.getPermanents({\n        name: \"yoshisaur-munchakoopas\",\n      })[0];\n      engine.addCounter(playerUnit, { type: CounterType.CANNOT_MOVE });\n      engine.addCounter(playerUnit, { type: CounterType.CANNOT_CREATE });\n    }\n    if (step.type === StepType.END_TURN && inspector.getTurnNumber() === 1) {\n      engine.clearKeyframe();\n    }\n    if (\n      step.type === StepType.ADVANCE_KEYFRAME &&\n      step.keyframeId === \"tutorial1-before-give-food\"\n    ) {\n      engine.addGems(Player.P1, [ColorSymbol.GREEN]);\n    }\n    if (step.type === StepType.ATTACK && inspector.getTurnNumber() === 3) {\n      engine.clearKeyframe();\n    }\n    return true;\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (step.type === StepType.ATTACK && inspector.getTurnNumber() === 3) {\n      ai.setKeyframe(\"tutorial1-start-3\");\n    }\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine } = ctx;\n    engine.clearKeyframe();\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { CounterType } from \"engine/types/counters\";\nimport { StepType } from \"engine/types/steps\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\n\nexport const Tutorial2Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  beforeNewGame: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    ai.setKeyframe(\"tutorial2-start-1\");\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) return;\n\n    const enemyUnits = inspector.getPermanentsOf(Player.P2);\n    for (const enemyUnit of enemyUnits) {\n      ai.tryAttackFirst(enemyUnit);\n    }\n\n    switch (inspector.getTurnNumber()) {\n      case 2: {\n        ai.setKeyframe(\"tutorial2-start-2\");\n        break;\n      }\n      case 4: {\n        ai.trySpawn(\"hog\", 1, 0);\n        ai.trySpawn(\"hamlet\", 2, 0);\n\n        const hog = inspector.getPermanents({\n          name: \"hog\",\n        })[0];\n        const hamlet = inspector.getPermanents({\n          name: \"hamlet\",\n        })[0];\n        engine.addCounter(hog, { type: CounterType.CANNOT_MOVE });\n        engine.addCounter(hog, { type: CounterType.CANNOT_CREATE });\n        engine.addCounter(hamlet, { type: CounterType.CANNOT_MOVE });\n        engine.addCounter(hamlet, { type: CounterType.CANNOT_CREATE });\n        ai.setKeyframe(\"tutorial2-start-3\");\n        break;\n      }\n    }\n  },\n  beforeStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (\n      step.type === StepType.ADVANCE_KEYFRAME &&\n      step.keyframeId === \"tutorial2-before-summon\"\n    ) {\n      engine.clearKeyframe();\n      engine.spawn(\"new-boarn\", 4, 0, Player.P1);\n      const playerUnit = inspector.getPermanents({\n        name: \"new-boarn\",\n      })[0];\n      engine.addCounter(playerUnit, { type: CounterType.CANNOT_MOVE });\n      engine.addCounter(playerUnit, { type: CounterType.CANNOT_CREATE });\n    }\n    return true;\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const { keyframe } = inspector.gameState;\n    if (step.type === StepType.ATTACK && inspector.getTurnNumber() === 3) {\n      ai.setKeyframe(\"tutorial2-end-turn-2\");\n    }\n    if (\n      inspector.getBases(Player.P2).length === 0 &&\n      (keyframe === undefined || keyframe.id === \"tutorial2-free-play\")\n    ) {\n      // this triggers game win for player 1\n      ai.setKeyframe(\"tutorial2-start-4\");\n    }\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine } = ctx;\n    engine.clearKeyframe();\n  },\n};\n","import { Player, areSlotsEqual } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { CardType } from \"engine/types/card-data\";\n\ntype ExtraState = {\n  phase: number;\n  wrongMove: boolean;\n  stampedeTurnStart?: number;\n  summonedAll: boolean;\n};\n\nexport const Tutorial3Spec: GameSpecServerFragment = {\n  disableP1NoBasesLossCondition: true,\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      phase: 1,\n      wrongMove: false,\n      summonedAll: false,\n    });\n  },\n  beforeNewGame: (ctx) => {\n    const { engine, ai } = ctx;\n    engine.spawn(\"yoshisaur-munchakoopas\", 3, 3, Player.P1);\n    engine.spawn(\"beeowulf\", 1, 1, Player.P2);\n    engine.spawn(\"beeowulf\", 1, 3, Player.P2);\n    ai.setKeyframe(\"tutorial3-start-1\");\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n    const { keyframe } = inspector.gameState;\n    const ext = engine.getExtraState() as ExtraState;\n\n    if (\n      step.type === StepType.ADVANCE_KEYFRAME &&\n      step.keyframeId === \"tutorial3-lose-1\" &&\n      ext.wrongMove\n    ) {\n      ai.setKeyframe(\"tutorial3-lose-1-wrong-move\");\n      return;\n    }\n\n    if (step.type === StepType.MOVE && turnNumber === 1) {\n      if (areSlotsEqual(step.slot, { row: 3, column: 2 })) {\n        ai.setKeyframe(\"tutorial3-after-move\");\n      } else {\n        ext.wrongMove = true;\n      }\n      return;\n    }\n\n    if (\n      step.type === StepType.ADVANCE_KEYFRAME &&\n      step.keyframeId === \"tutorial3-before-give-cards\"\n    ) {\n      engine.addCardToHand(Player.P1, { name: \"new-boarn\" });\n      engine.addCardToHand(Player.P1, { name: \"hog\" });\n      engine.addCardToHand(Player.P1, { name: \"hamlet\" });\n    }\n\n    if (\n      ext.phase === 3 &&\n      inspector.getPermanents({\n        name: \"new-boarn\",\n      }).length > 0\n    ) {\n      ai.setKeyframe(\"tutorial3-after-summon-new-boarn\");\n      ext.phase = 4;\n      return;\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n    const ext = engine.getExtraState() as ExtraState;\n\n    // Turn 1: Set player camp health to 1\n    if (inspector.getTurnNumber() == 0) {\n      const camp = inspector.getPermanentAtIfExists({ row: 5, column: 2 });\n      if (!camp) throw new Error(\"expect camp to exist\");\n      engine.adjustPermanentStats(camp, 0, -3);\n      return;\n    }\n\n    const aiCreatures = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.CREATURE,\n    });\n\n    for (const creature of aiCreatures) {\n      if (inspector.getBases(Player.P1).length === 0) break;\n      ai.tryAttackFirst(creature);\n    }\n\n    if (turnNumber === 2) {\n      if (inspector.getBases(Player.P1).length === 0) {\n        ai.setKeyframe(\"tutorial3-lose-1\");\n      } else {\n        ai.setKeyframe(\"tutorial3-start-2\");\n      }\n      return;\n    }\n\n    if (ext.phase === 1 && aiCreatures.length === 0) {\n      ai.setKeyframe(\"tutorial3-start-3\");\n      ext.stampedeTurnStart = turnNumber + 3 * 2;\n      ext.phase = 2;\n      return;\n    }\n\n    if (turnNumber === ext.stampedeTurnStart) {\n      engine.spawn(\"chocolate-calf\", 1, 0, Player.P2);\n      engine.spawn(\"chocolate-calf\", 1, 2, Player.P2);\n      engine.spawn(\"chocolate-calf\", 1, 4, Player.P2);\n      if (ext.phase === 4) {\n        ai.setKeyframe(\"tutorial3-stampede\");\n        ext.summonedAll = true;\n      } else {\n        ai.setKeyframe(\"tutorial3-stampede-fail\");\n      }\n      ext.phase = 5;\n      return;\n    }\n\n    const playerCreatures = inspector.getPermanents({\n      owner: Player.P1,\n      type: CardType.CREATURE,\n    });\n\n    if (ext.phase === 2 && playerCreatures.length === 3) {\n      ai.setKeyframe(\"tutorial3-start-5\");\n      ext.phase = 3;\n      return;\n    }\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine, ai } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n    if (winner === Player.P2 && ext.summonedAll) {\n      ai.setKeyframe(\"tutorial3-lose-2\");\n    }\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n    const { keyframe } = inspector.gameState;\n    const turnNumber = inspector.getTurnNumber();\n    if (player === Player.P1) {\n      return (\n        inspector.getBases(player).length === 0 &&\n        (turnNumber > 3 ||\n          (keyframe !== undefined &&\n            [\"tutorial3-lose-1-wrong-move\", \"tutorial3-lose-1-other\"].includes(\n              keyframe.id\n            )))\n      );\n    }\n    return false;\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { CardType } from \"engine/types/card-data\";\n\nexport const Tutorial4Spec: GameSpecServerFragment = {\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n\n    const playerCreatures = inspector.getPermanents({\n      owner: Player.P1,\n      type: CardType.CREATURE,\n    });\n    const aiCreatures = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.CREATURE,\n    });\n\n    switch (turnNumber) {\n      case 0: {\n        const base = inspector.getBases(Player.P2)[0];\n        engine.adjustPermanentStats(base, 0, -2);\n        ai.setKeyframe(\"tutorial4-start-1\");\n        return;\n      }\n      case 2: {\n        engine.spawn(\"pbee---j\", 1, 0, Player.P2);\n        engine.spawn(\"pbee---j\", 1, 1, Player.P2);\n        engine.spawn(\"two-bees\", 2, 2, Player.P2);\n        engine.spawn(\"pbee---j\", 1, 3, Player.P2);\n        engine.spawn(\"pbee---j\", 1, 4, Player.P2);\n        if (playerCreatures.length === 2) ai.setKeyframe(\"tutorial4-start-2\");\n        else ai.setKeyframe(\"tutorial4-start-2-not-all-summon\");\n        return;\n      }\n    }\n\n    // creature first attack\n    aiCreatures.forEach((creature) => {\n      ai.tryAttackFirst(creature, {\n        sort: [\n          \"creaturesFirst\",\n          \"health\",\n          { type: \"euclideanDistance\", slot: creature.slot },\n        ],\n      });\n    });\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { CardType } from \"engine/types/card-data\";\n\nexport const Tutorial5Spec: GameSpecServerFragment = {\n  beforeNewGame: (ctx) => {\n    const { engine, ai } = ctx;\n    engine.spawn(\"roe-doe-dendron\", 1, 0, Player.P2);\n    engine.spawn(\"flora-the-explora\", 2, 2, Player.P2);\n    engine.spawn(\"nepeta-legion\", 1, 4, Player.P2);\n    ai.setKeyframe(\"tutorial5-start\");\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n\n    const turnVal = inspector.getTurnNumber() / 2;\n    // Don't do anything on the first turn\n    if (turnVal == 0) return;\n\n    const card = [\"flora-the-explora\", \"roe-doe-dendron\", \"nepeta-legion\"][\n      (turnVal - 1) % 3\n    ];\n\n    // TODO: Tune this preference ordering better\n    const rowPref = [1, 2, 0];\n    const colPref = [1, 3, 2, 0, 4];\n\n    // Play a random dryad if possible\n    let cardPlayed = false;\n\n    // Strong preference for playing in column 1 and 3\n    for (let r = 0; r < 3; r++) {\n      for (let c = 0; c < 2; c++) {\n        const summonResolved = ai.trySpawn(card, rowPref[r], colPref[c]);\n        if (summonResolved) {\n          cardPlayed = true;\n          break;\n        }\n      }\n      if (cardPlayed) break;\n    }\n\n    // If columns 1 and 3 are unplayable, try playing in the other columns\n    if (!cardPlayed) {\n      for (let r = 0; r < 3; r++) {\n        for (let c = 2; c < 5; c++) {\n          const summonResolved = ai.trySpawn(card, rowPref[r], colPref[c]);\n          if (summonResolved) {\n            cardPlayed = true;\n            break;\n          }\n        }\n        if (cardPlayed) break;\n      }\n    }\n\n    // basic attack\n    const aiCreatures = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.CREATURE,\n    });\n\n    aiCreatures.forEach((creature) => {\n      ai.tryAttackFirst(creature);\n    });\n  },\n};\n","import { CardType } from \"engine/types/card-data\";\nimport { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\n\nexport const Tutorial6Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  beforeNewGame: (ctx) => {\n    const { engine, ai } = ctx;\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const { keyframe } = inspector.gameState;\n    if (\n      inspector.getBases(Player.P2).length === 0 &&\n      keyframe !== undefined &&\n      keyframe.id === \"tutorial6-start-2\"\n    ) {\n      // show a final keyframe before game end\n      ai.setKeyframe(\"tutorial6-end\");\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n\n    switch (turnNumber) {\n      case 0: {\n        const aiCamps = inspector.getPermanents({\n          name: \"camp\",\n          owner: Player.P2,\n        });\n        for (const camp of aiCamps) {\n          engine.adjustPermanentStats(camp, 0, -2);\n        }\n        if (inspector.gameState[Player.P1].hand.length <= 0) {\n          ai.setKeyframe(\"tutorial6-start-no-deck\");\n        } else {\n          ai.setKeyframe(\"tutorial6-start-1\");\n        }\n        return;\n      }\n      case 2: {\n        ai.trySpawn(\"o\", 1, 0);\n        ai.trySpawn(\"payne\", 1, 1);\n        ai.trySpawn(\"vanilla-calf\", 1, 3);\n        ai.trySpawn(\"re\", 1, 4);\n        ai.trySpawn(\"beethoven\", 2, 0);\n        ai.trySpawn(\"chicken\", 2, 1);\n        ai.trySpawn(\"petroleum-jelly\", 2, 3);\n        ai.trySpawn(\"log\", 2, 4);\n        ai.setKeyframe(\"tutorial6-start-2\");\n        break;\n      }\n    }\n\n    const aiCreatures = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.CREATURE,\n    });\n\n    aiCreatures.forEach((creature) => {\n      ai.tryAttackFirst(creature);\n    });\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine } = ctx;\n    if (solves[Player.P1] !== undefined) engine.clearKeyframe();\n  },\n};\n","import {\n  Player,\n  Slot,\n  Permanent,\n  areSlotsEqual,\n} from \"engine/types/game-state\";\nimport { EngineContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Step, StepType } from \"engine/types/steps\";\nimport { AbilityType, EffectOptResolved } from \"engine/types/effects\";\nimport { EffectOptType } from \"engine/types/effects\";\nimport { EffectOpt } from \"engine/types/effects\";\nimport { Inspector } from \"engine/Inspector\";\nimport { CounterType } from \"engine/types/counters\";\nimport { Role } from \"engine/types/updates\";\nimport { StepMaker } from \"engine/StepMaker\";\n\nconst reflectSlot = (slot: Slot, inspector: Inspector) =>\n  inspector.getReflectedSlot(slot);\n\nconst reflectPermanent = (permanent: Permanent, inspector: Inspector) =>\n  inspector\n    .getPermanentsAt(reflectSlot(permanent.slot, inspector))\n    .find(({ owner }) => owner !== permanent.owner);\n\n// check that reflected permanent is the same card\nconst areReflectionsEqual = (\n  permanent: Permanent,\n  reflection: Permanent,\n  inspector: Inspector\n) => inspector.getCardName(permanent) === inspector.getCardName(reflection);\n\nconst reflectOpt = (effectOpt: EffectOpt, inspector: Inspector): EffectOpt => {\n  if (effectOpt.type === EffectOptType.SLOT) {\n    const { slot } = effectOpt;\n    return {\n      type: EffectOptType.SLOT,\n      slot: reflectSlot(slot, inspector),\n    };\n  }\n  if (effectOpt.type === EffectOptType.PERMANENT) {\n    const { permanentId } = effectOpt;\n    const permanent = inspector.getPermanent(permanentId);\n    const newPermanent = reflectPermanent(permanent, inspector);\n    if (newPermanent) {\n      return {\n        type: EffectOptType.PERMANENT,\n        permanentId: newPermanent.id,\n      };\n    }\n  }\n  return effectOpt;\n};\n\nconst reflectOptResolved = (\n  effectOpt: EffectOptResolved,\n  inspector: Inspector\n): EffectOpt => {\n  if (effectOpt.type === EffectOptType.SLOT) {\n    const { slot } = effectOpt;\n    return {\n      type: EffectOptType.SLOT,\n      slot: reflectSlot(slot, inspector),\n    };\n  }\n  if (effectOpt.type === EffectOptType.PERMANENT) {\n    const { permanent } = effectOpt;\n    const newPermanent = reflectPermanent(permanent, inspector);\n    if (newPermanent) {\n      return {\n        type: EffectOptType.PERMANENT,\n        permanentId: newPermanent.id,\n      };\n    }\n  }\n  return effectOpt;\n};\n\n// (naively) checks if the defender is about to die from an attack from attacker\n//  should not affect the game state\n//  most of the logic is from engine.damagePermanent()\nconst isDefenderAboutToDie = (\n  attacker: Permanent,\n  defender: Permanent,\n  ctx: EngineContext\n) => {\n  const { inspector } = ctx;\n  const damage = inspector.getPower(attacker);\n  const health = inspector.getHealth(defender);\n  const isAlreadyDead = health <= 0;\n\n  // const effects = engine.getBackdoorEngine().getEffects(defender);\n  // const effectsAdjust = effects.adjustDamageReceived;\n  // const insteadOfDamaged = effects.insteadOfDamaged;\n\n  // NAH: beethoven's effect will trigger if this hook is called, so we have to be naive\n  // if (effectsAdjust) {\n  //   damage = effectsAdjust(defender, damage, attacker, ctx);\n  // }\n\n  if (damage <= 0) return isAlreadyDead;\n\n  if (\n    inspector.doesPermanentHaveCounterType(defender, CounterType.INVULNERABLE)\n  ) {\n    return isAlreadyDead;\n  }\n  // check for divine shield or cannot be destroyed\n  // divine shield pops on the first instance of damage\n  if (\n    inspector.doesPermanentHaveCounterType(\n      defender,\n      CounterType.DIVINE_SHIELD\n    ) ||\n    inspector.doesPermanentHaveCounterType(\n      defender,\n      CounterType.CANNOT_BE_DESTROYED\n    )\n  ) {\n    return isAlreadyDead;\n  }\n\n  // at this point, assume the attack will go through\n  return damage >= health;\n};\n\n// Hard-coded, needs to be kept in sync with card effects.\nconst UNITS_WITH_ATTACK_EFFECTS = new Set([\n  \"nice-cow\",\n  \"lady-jane\",\n  \"murray\",\n  \"rude-cow\",\n  \"giraffatitan\",\n  \"realistic-rex\",\n  \"touch-grass\",\n  \"roe-doe-dendron\",\n  \"switch-boar-d\",\n  \"oklahoma-tusks\",\n  \"quail-aboard-fiery-steeds\",\n  \"beeowulf\",\n  \"nightshade\",\n]) as ReadonlySet<string>;\n\ntype ExtraState = {\n  didCopyBeforeStep: boolean; // whether we copied an attack/special in the beforeStep\n};\n\nexport const Puzzle4Spec: GameSpecServerFragment = {\n  // if both players have no bases, then P1 loses\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n    const doesPlayerHaveBases = (player: Player) =>\n      inspector.getBases(player).length > 0;\n    if (player === Player.P2) {\n      // Check if P2 has no bases left and P1 has some base.\n      // This is necessary because afterStep gets evaluated\n      // before the lose checks.\n      return (\n        !doesPlayerHaveBases(player) &&\n        doesPlayerHaveBases(inspector.getOpponentOf(player))\n      );\n    }\n    return false;\n  },\n\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      didCopyBeforeStep: false,\n    } as ExtraState);\n  },\n  beforeNewGame: (ctx) => {\n    // copy P1's bases\n    const { inspector, engine } = ctx;\n    const bases = inspector.getDefaultBases(Player.P1);\n    const baseColumns = inspector.getBasePositions(Player.P2, bases.length);\n    for (let i = 0; i < bases.length; i++) {\n      const slot = {\n        row: inspector.getPlayerRowIndex(0, Player.P2),\n        column: baseColumns[i],\n      };\n      engine.spawn(bases[i], slot, Player.P2);\n    }\n  },\n  beforeStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n    const tryStep = (step: Step) => engine.getBackdoorEngine().aiTryStep(step);\n    const sm = new StepMaker(inspector, Player.P2, Role.GOD);\n\n    switch (step.type) {\n      case StepType.SUMMON: {\n        // const { player, slot, cardName } = step;\n        const { player, slot, handCardId, cardName } = step;\n        if (player !== Player.P1) break;\n\n        const resolvedCardName = (() => {\n          if (handCardId !== undefined) {\n            const handCard = inspector.getCardInHandIfExists(\n              player,\n              handCardId\n            );\n            if (!handCard) return null;\n            return inspector.getCardName(handCard);\n          }\n          return null;\n        })();\n\n        const spawnCardName = resolvedCardName ?? cardName;\n        if (spawnCardName) {\n          tryStep(sm.spawn(spawnCardName, reflectSlot(slot, inspector)));\n        }\n\n        // NAH: possibly we want two New Boarns to still attack each other from different slots?\n        // if so, then we can store state to create a 1:1 map between player's units and the copied units\n        break;\n      }\n      case StepType.MOVE: {\n        const { permanentId, slot } = step;\n        const permanent = inspector.getPermanent(permanentId);\n        if (permanent.owner !== Player.P1) break;\n        const reflectedPermanent = reflectPermanent(permanent, inspector);\n        const reflectedSlot = reflectSlot(slot, inspector);\n\n        if (\n          reflectedPermanent &&\n          areReflectionsEqual(permanent, reflectedPermanent, inspector)\n        ) {\n          tryStep(sm.move(reflectedPermanent, reflectedSlot));\n        }\n        break;\n      }\n      case StepType.ATTACK: {\n        const { attackerId, defenderId } = step;\n        const attacker = inspector.getPermanent(attackerId);\n        const defender = inspector.getPermanent(defenderId);\n        if (attacker.owner !== Player.P1) break;\n\n        // AI attacks first. however, if the AI is about to die, then it lets the player attack first, then clones to attack.\n        if (isDefenderAboutToDie(attacker, defender, ctx)) break;\n\n        const reflectAttacker = reflectPermanent(attacker, inspector);\n        const reflectDefender = reflectPermanent(defender, inspector);\n        let isSuccess = false;\n        if (reflectAttacker && reflectDefender) {\n          isSuccess = tryStep(sm.attack(reflectAttacker, reflectDefender));\n        }\n        if (isSuccess) ext.didCopyBeforeStep = true;\n\n        break;\n      }\n      case StepType.ACTIVATE_ABILITY: {\n        const { permanentId, abilityType, effectOpts } = step;\n        const permanent = inspector.getPermanent(permanentId);\n        if (permanent.owner !== Player.P1) break;\n\n        // TODO: uncurse this\n\n        // --- WARNING -- EXTREMELY CURSED ---\n        // check if the special involves an attack\n        // if so, assume that the permanent is attacking the first opt\n        //  and check isDefenderAboutToDie\n        // if so, then let the player attack first, then clone the special\n        const effects = engine.getBackdoorEngine().getEffects(permanent);\n        const effect =\n          abilityType === AbilityType.FLEX\n            ? effects.onRepeatable\n            : effects.onSpecial;\n\n        if (UNITS_WITH_ATTACK_EFFECTS.has(permanent.card.name || \"\")) {\n          const firstOpt = effectOpts[0];\n          if (!firstOpt) break;\n          if (firstOpt.type !== EffectOptType.PERMANENT) break;\n          const defender = inspector.getPermanent(firstOpt.permanentId);\n          if (isDefenderAboutToDie(permanent, defender, ctx)) break;\n        }\n\n        // --- END OF CURSED CODE ---\n\n        const reflectedPermanent = reflectPermanent(permanent, inspector);\n        const reflectedEffectOpts = effectOpts.map((opt) =>\n          reflectOpt(opt, inspector)\n        );\n        let isSuccess = false;\n        if (reflectedPermanent) {\n          isSuccess = tryStep(\n            sm.activateAbility(\n              reflectedPermanent,\n              abilityType,\n              reflectedEffectOpts\n            )\n          );\n        }\n        if (isSuccess) ext.didCopyBeforeStep = true;\n      }\n    }\n\n    // Revalidate whether we can execute the step, since the actions\n    // performed here may cause the step to no longer be valid.\n    const stepResolved = engine.getBackdoorEngine().resolve(step, Role.GOD);\n    return stepResolved !== null;\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n\n    const tryStep = (step: Step) => engine.getBackdoorEngine().aiTryStep(step);\n    const sm = new StepMaker(inspector, Player.P2, Role.GOD);\n\n    // Spawn a card to slot without announcing or triggering any SUMMON effects.\n    const silentSpawn = (\n      permToCopy: Permanent,\n      slot: Slot,\n      player: Player\n    ): boolean => {\n      if (!inspector.isSlotInBounds(slot)) return false;\n      if (inspector.isSlotOccupied(slot)) return false;\n      const cardName = permToCopy.card.name;\n      const permanent = engine\n        .getBackdoorEngine()\n        .cardToPermanent({ name: cardName }, player, slot);\n      engine.getBackdoorController().createPermanent(permanent);\n      for (const c of permToCopy.counters) {\n        engine.addCounter(permanent, c);\n      }\n      return true;\n    };\n\n    const reportCopyFailed = () => {\n      ai.speak(\"...copy failed... 🥀\");\n    };\n\n    switch (step.type) {\n      case StepType.SUMMON: {\n        // handled in beforeStep\n        break;\n      }\n      case StepType.ATTACK: {\n        // only execute if the attack wasn't already copied in the beforeStep\n        if (ext.didCopyBeforeStep) {\n          ext.didCopyBeforeStep = false;\n          break;\n        }\n        const { attacker, defender } = step;\n        if (attacker.owner !== Player.P1) break;\n\n        const newAttacker = reflectPermanent(attacker, inspector);\n        const newDefender = reflectPermanent(defender, inspector);\n\n        let isSuccess = false;\n        if (\n          newAttacker &&\n          newDefender &&\n          tryStep(sm.attack(newAttacker, newDefender))\n        )\n          isSuccess = true;\n\n        if (isSuccess) break;\n\n        const isDefenderAboutToDie =\n          defender.damage >= inspector.getMaxHealth(defender);\n        const isDefenderReflectedAttacker = areSlotsEqual(\n          defender.slot,\n          reflectSlot(attacker.slot, inspector)\n        );\n\n        if (\n          isDefenderAboutToDie &&\n          isDefenderReflectedAttacker &&\n          newDefender // need a target to attack\n        ) {\n          // spawn a temporary attacker to copy the attack, then kill it\n          // don't trigger any summon effects\n          if (\n            silentSpawn(\n              attacker,\n              reflectSlot(attacker.slot, inspector),\n              Player.P2\n            )\n          ) {\n            const tempAttacker = inspector.getPermanentAtIfExists(\n              reflectSlot(attacker.slot, inspector)\n            );\n\n            if (tempAttacker) {\n              engine.ready(tempAttacker);\n              if (tryStep(sm.attack(tempAttacker, newDefender)))\n                isSuccess = true;\n\n              // destroy temp attacker, attributed to P1's attacker\n              engine.destroy(attacker, tempAttacker);\n            }\n          }\n        }\n        if (!isSuccess) reportCopyFailed();\n        break;\n      }\n      case StepType.MOVE: {\n        // handled in beforeStep\n        break;\n      }\n      case StepType.ACTIVATE_ABILITY: {\n        // only execute if the attack wasn't already copied in the beforeStep\n        if (ext.didCopyBeforeStep) {\n          ext.didCopyBeforeStep = false;\n          break;\n        }\n        const { permanent, abilityType, effectOptsResolved } = step;\n        if (permanent.owner !== Player.P1) break;\n        const newPermanent = reflectPermanent(permanent, inspector);\n        const newEffectOpts = effectOptsResolved.map((opt) =>\n          reflectOptResolved(opt, inspector)\n        );\n\n        let isSuccess = false;\n        if (\n          newPermanent &&\n          tryStep(sm.activateAbility(newPermanent, abilityType, newEffectOpts))\n        )\n          isSuccess = true;\n\n        if (isSuccess) break;\n\n        // spawn a temporary attacker to copy the attack, then kill it\n        // don't trigger any summon effects\n        if (\n          silentSpawn(\n            permanent,\n            reflectSlot(permanent.slot, inspector),\n            Player.P2\n          )\n        ) {\n          const tempAttacker = inspector.getPermanentAtIfExists(\n            reflectSlot(permanent.slot, inspector)\n          );\n\n          if (tempAttacker) {\n            engine.ready(tempAttacker);\n            if (\n              tryStep(\n                sm.activateAbility(tempAttacker, abilityType, newEffectOpts)\n              )\n            )\n              isSuccess = true;\n\n            // destroy temp attacker, attributed to P1's permanent\n            engine.destroy(permanent, tempAttacker);\n          }\n        }\n\n        if (!isSuccess) reportCopyFailed();\n\n        break;\n      }\n    }\n  },\n  aiTurn: (ctx) => {\n    // do nothing, say something\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.speak(\n        \"...watchful gnomes... 🌹 ...mimic foe...\\n...leave no openings... 🌺 ...none shall pass...\"\n      );\n    }\n  },\n  afterTurnEnd: (player, ctx) => {\n    const { inspector, engine, ai } = ctx;\n\n    if (player === Player.P2) {\n      // P2 just ended turn. Ready all P2's units\n      const permanents = inspector.getPermanents({ owner: Player.P2 });\n      for (const permanent of permanents) {\n        engine.ready(permanent);\n      }\n    }\n  },\n};\n","import { CardType, ColorSymbol } from \"engine/types/card-data\";\nimport { CounterType } from \"engine/types/counters\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Player } from \"engine/types/game-state\";\n\n// attacking mint creatures deals damage based on attacker color & mint creature category\ntype DamageMap = { [color: string]: number };\nconst DAMAGE_MAPS: { [category: string]: DamageMap } = {\n  CAD: {\n    [ColorSymbol.PURPLE]: 10,\n    [ColorSymbol.GREEN]: 20,\n    [ColorSymbol.RED]: 50,\n  },\n  EUR: {\n    [ColorSymbol.WHITEBLACK]: 5,\n    [ColorSymbol.RED]: 10,\n    [ColorSymbol.GREEN]: 100,\n    [ColorSymbol.YELLOW]: 200,\n    [ColorSymbol.PURPLE]: 500,\n  },\n  AUD: {\n    [ColorSymbol.PURPLE]: 5,\n    [ColorSymbol.RED]: 20,\n    [ColorSymbol.YELLOW]: 50,\n    [ColorSymbol.GREEN]: 100,\n  },\n  KRW: {\n    [ColorSymbol.RED]: 5000,\n    [ColorSymbol.GREEN]: 10000,\n    [ColorSymbol.YELLOW]: 50000,\n  },\n  CHF: {\n    [ColorSymbol.YELLOW]: 10,\n    [ColorSymbol.RED]: 20,\n    [ColorSymbol.GREEN]: 50,\n    [ColorSymbol.PURPLE]: 1000,\n  },\n  SEK: {\n    [ColorSymbol.PURPLE]: 20,\n    [ColorSymbol.GREEN]: 200,\n    [ColorSymbol.RED]: 500,\n  },\n  THB: {\n    [ColorSymbol.GREEN]: 20,\n    [ColorSymbol.RED]: 100,\n    [ColorSymbol.PURPLE]: 500,\n  },\n  BRL: {\n    [ColorSymbol.PURPLE]: 5,\n    [ColorSymbol.RED]: 10,\n    [ColorSymbol.YELLOW]: 20,\n    [ColorSymbol.WHITEBLACK]: 200,\n  },\n};\n\n// map mintable creatures to their weaknesses\nconst mintCreatures: { [name: string]: DamageMap } = {\n  goose: DAMAGE_MAPS.CAD,\n  poutine: DAMAGE_MAPS.CAD,\n  wisent: DAMAGE_MAPS.EUR,\n  \"twelve-stars\": DAMAGE_MAPS.EUR,\n  \"consort-on-a-bull-deity\": DAMAGE_MAPS.EUR,\n  \"spicy-fermented-cabbage\": DAMAGE_MAPS.KRW,\n  hallyu: DAMAGE_MAPS.KRW,\n  \"wombat-mob\": DAMAGE_MAPS.AUD,\n  \"jar-of-vegemite\": DAMAGE_MAPS.AUD,\n  didgeridoo: DAMAGE_MAPS.AUD,\n  \"toblerone-dipped-in-fondue\": DAMAGE_MAPS.CHF,\n  \"plus-sign\": DAMAGE_MAPS.CHF,\n  \"army-knife\": DAMAGE_MAPS.CHF,\n  \"pungent-canned-herring\": DAMAGE_MAPS.SEK,\n  \"dala-horse\": DAMAGE_MAPS.SEK,\n  \"green-curry\": DAMAGE_MAPS.THB,\n  \"red-curry\": DAMAGE_MAPS.THB,\n  \"ka-api-ara\": DAMAGE_MAPS.BRL,\n  \"toasted-cassava\": DAMAGE_MAPS.BRL,\n  \"order-and-progress\": DAMAGE_MAPS.BRL,\n};\n\nexport const Puzzle8Spec: GameSpecServerFragment = {\n  adjustDamageReceived: (permanent, damage, attacker, ctx) => {\n    const { inspector, engine } = ctx;\n\n    if (!attacker) return damage;\n\n    const name = inspector.getCardName(permanent);\n    const weaknesses = mintCreatures[name];\n    if (!weaknesses) return damage; // all other creatures take normal damage\n\n    const defenderColor = inspector.getCardColor(permanent);\n    const attackerColor = inspector.getCardColor(attacker);\n\n    // non-existent color\n    if (!attackerColor || !defenderColor) return 0;\n\n    // if attacker same color, take 0\n    if (defenderColor === attackerColor) return 0;\n\n    // check damageMap\n    if (weaknesses[attackerColor]) {\n      return weaknesses[attackerColor];\n    }\n\n    // deal 0 damage otherwise\n    return 0;\n  },\n  afterStep: (step, ctx) => {\n    const { engine, inspector } = ctx;\n    const p2Creatures = inspector.getPermanents({\n      owner: Player.P2,\n      isBase: false,\n    });\n    if (p2Creatures.length === 0) {\n      const mints = inspector.getPermanents({\n        owner: Player.P2,\n        isBase: true,\n      });\n      for (const mint of mints) {\n        engine.removeCounterType(mint, CounterType.INVULNERABLE);\n      }\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.speak(\n        \"How did you GET in here? I swear this boar treasury is OFF-LIMITS to VISITORS, or my name isn’t MISTER PENNY!\"\n      );\n    }\n\n    // TODO: if lost, say \"nooo!! my life’s work... ruined! please don’t tell my wife...\"\n\n    // mints spawn\n    let mints = inspector.getPermanents({\n      owner: Player.P2,\n      name: \"mint\",\n    });\n\n    // spawn 1 creature for first 5 turns, then spawn 2\n    let numToSpawn = 1;\n\n    if (inspector.getTurnNumber() / 2 === 5) {\n      mints.forEach((mint) => {\n        engine.getBackdoorEngine().transformPermanent(mint, \"mint--overdrive-\");\n      });\n      ai.speak(\"ENTERING MINTY OVERDRIVE!!!\");\n    }\n\n    if (inspector.getTurnNumber() / 2 >= 5) {\n      numToSpawn = 2;\n      mints = inspector.getPermanents({\n        owner: Player.P2,\n        name: \"mint--overdrive-\",\n      });\n    }\n\n    const mintsRandom = mints.sort(() => Math.random() - 0.5);\n\n    let spawned = 0;\n\n    for (const mint of mintsRandom) {\n      const { row, column } = mint.slot;\n      const creatureNameRandom =\n        Object.keys(mintCreatures)[\n          Math.floor(Math.random() * Object.keys(mintCreatures).length)\n        ];\n      const success = ai.trySpawn(creatureNameRandom, row + 1, column);\n      if (success) {\n        spawned++;\n      }\n      if (spawned >= numToSpawn) {\n        break;\n      }\n    }\n\n    // Update mint invuln\n    if (spawned > 0) {\n      for (const mint of mints) {\n        engine.removeCounterType(mint, CounterType.INVULNERABLE);\n        engine.addCounter(mint, { type: CounterType.INVULNERABLE });\n      }\n    }\n\n    // move / attack with all units\n    const creatures = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.CREATURE,\n    });\n\n    for (const creature of creatures) {\n      let moved = false;\n      // move down to row 5, if unblocked\n      if (creature.slot.row < 4) {\n        moved = ai.tryMoveRel(creature, 1, 0);\n      }\n      if (!moved) {\n        ai.tryAttackFirst(creature);\n      }\n    }\n  },\n};\n","import { CounterType } from \"engine/types/counters\";\nimport { AbilityType } from \"engine/types/effects\";\nimport { Slot, Permanent, Player } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\nimport { Speaker } from \"engine/types/keyframes\";\nimport { GameSpecServerFragment, AIContext } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { specialThreatened } from \"engine/game-specs/puzzle-9-shared\";\n\ntype ExtraState = {\n  lastKnownKeepSlot: Slot;\n};\n\nconst UNIT_NAME_WHITE_PIECE = \"vanilla-calf\";\nconst UNIT_NAME_B = \"bell-flower\";\nconst UNIT_NAME_P = \"petroleum-jelly\";\nconst UNIT_NAME_Q = \"quail-aboard-fiery-steeds\";\nconst UNIT_NAME_R = \"realistic-rex\";\n\nconst unitAI: {\n  [cardName: string]: (unit: Permanent, ctx: AIContext) => void;\n} = {\n  [UNIT_NAME_P]: (unit, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    let here = unit.slot;\n    let unitAttacked = false;\n    for (const defender of inspector.getPermanentsOf(Player.P1)) {\n      if (ai.tryAttack(unit, defender)) {\n        unitAttacked = true;\n        break;\n      }\n    }\n    if (!unitAttacked) {\n      ai.tryMoveRel(unit, 1, 0);\n    }\n    here = unit.slot;\n    if (here.row == 5) {\n      engine.despawn(unit);\n      engine.spawn(UNIT_NAME_Q, here, Player.P2);\n    }\n  },\n  [UNIT_NAME_WHITE_PIECE]: (unit, ctx) => {\n    // Attack if possible, otherwise move toward center column, otherwise move forward\n    const { inspector, ai } = ctx;\n    ai.tryActivateAbility(unit, AbilityType.FLEX);\n    for (const defender of inspector.getPermanentsOf(Player.P1)) {\n      if (ai.tryAttack(unit, defender)) {\n        return true;\n      }\n    }\n    // Move toward center if possible, otherwise move forward\n    if (ai.tryMove(unit, unit.slot.row, [1, 2, 2, 2, 3][unit.slot.column]))\n      return true;\n    if (ai.tryMoveRel(unit, 1, 0)) return true;\n    return;\n  },\n  [UNIT_NAME_B]: (unit, ctx) => {\n    // Attack if possible, otherwise move away from center column, otherwise move forward\n    const { inspector, ai } = ctx;\n    ai.tryActivateAbility(unit, AbilityType.FLEX);\n    for (const defender of inspector.getPermanentsOf(Player.P1)) {\n      if (ai.tryAttack(unit, defender)) {\n        return true;\n      }\n    }\n    // Move away from center if possible, otherwise move forward\n\n    if (ai.tryMove(unit, unit.slot.row, [0, 0, 1, 4, 4][unit.slot.column]))\n      return true;\n    if (ai.tryMoveRel(unit, 1, 0)) return true;\n    return;\n  },\n  [UNIT_NAME_R]: (unit, ctx) => {\n    // Attack if possible, otherwise move toward center column, otherwise move forward\n    // TODO: Refine this? Maybe try to line up against the enemy Keep specifically\n    const { inspector, ai } = ctx;\n    for (const defender of inspector.getPermanentsOf(Player.P1)) {\n      if (ai.tryAttack(unit, defender)) {\n        return true;\n      }\n    }\n    // Move toward odd positions if possible, otherwise move backward\n\n    if (ai.tryMove(unit, unit.slot.row, 3)) {\n      return true;\n    }\n    if (ai.tryMoveRel(unit, -1, 0)) {\n      return true;\n    }\n    return;\n  },\n  [UNIT_NAME_Q]: (unit, ctx) => {\n    // Attack if possible, otherwise move toward center column, otherwise move forward\n    // TODO: Refine this? Maybe try to line up against the enemy Keep specifically\n    const { inspector, ai } = ctx;\n    for (const defender of inspector.getPermanentsOf(Player.P1)) {\n      if (ai.tryAttack(unit, defender)) {\n        return true;\n      }\n    }\n    // Move toward odd positions if possible, otherwise move backward\n\n    if (ai.tryMove(unit, unit.slot.row, 3)) {\n      return true;\n    }\n    if (ai.tryMoveRel(unit, -1, 0)) {\n      return true;\n    }\n    return;\n  },\n};\n\nexport const Puzzle9Spec: GameSpecServerFragment = {\n  counterData: {\n    [CounterType.BODY_SLAM]: {\n      handlers: {\n        [PermanentEventType.AFTER_DESTROY_UNIT]: (event) => {\n          const { permanent, defender, ctx } = event;\n          const { engine } = ctx;\n          engine.move(permanent, defender.slot);\n        },\n      },\n    },\n  },\n\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n    const units = inspector.getPermanentsOf(Player.P2);\n    if (turnNumber == 0) {\n      for (let c = 0; c < 5; c++) {\n        ai.trySpawn(UNIT_NAME_P, 1, c);\n      }\n      ai.speak(\n        \"Behold my confounding moo-gicks! Your Units won’t behave the same as normal here!\"\n      );\n      return;\n    }\n    // act with all present units\n    for (const unit of units) {\n      const unitAIFunc = unitAI[inspector.getCardName(unit)];\n      if (unitAIFunc) {\n        unitAIFunc(unit, ctx);\n      }\n    }\n    // TODO: Spawn more units on certain turns\n    switch (turnNumber) {\n      case 4: // After player's second turn\n        for (let c = 1; c < 4; c++) {\n          ai.trySpawn(UNIT_NAME_WHITE_PIECE, 1, c);\n        }\n        break;\n      case 8: // After the player's fourth turn\n        for (const col of [0, 4]) {\n          for (const row of [0, 1]) {\n            ai.trySpawn(UNIT_NAME_B, row, col);\n          }\n        }\n        break;\n      case 12: // After the player's sixth turn\n        for (let c = 0; c < 5; c++) {\n          ai.trySpawn(UNIT_NAME_P, 1, c);\n        }\n        break;\n      case 14: // After the player's seventh turn\n        for (let c = 0; c < 5; c++) {\n          if (ai.trySpawn(UNIT_NAME_R, 0, c)) {\n            break;\n          }\n        }\n        for (let c = 4; c >= 0; c--) {\n          if (ai.trySpawn(UNIT_NAME_R, 0, c)) {\n            break;\n          }\n        }\n        break;\n      default:\n        // Every three turns starting after the player's ninth turn\n        if (turnNumber >= 18 && turnNumber % 6 == 0) {\n          for (let c = 0; c < 5; c++) {\n            ai.trySpawn(UNIT_NAME_P, 1, c);\n            ai.trySpawn(\n              [UNIT_NAME_R, UNIT_NAME_B, UNIT_NAME_Q, UNIT_NAME_B, UNIT_NAME_R][\n                c\n              ],\n              0,\n              c\n            );\n          }\n        }\n    }\n    return true;\n  },\n  afterSummon: (permanent, ctx) => {\n    const { inspector, engine } = ctx;\n    if (\n      inspector\n        .getCardName(permanent)\n        .toLowerCase()\n        .match(/^[kqrbnp].*/)\n    ) {\n      engine.adjustPermanentStats(permanent, 1, 0);\n      engine.addCounter(permanent, { type: CounterType.BODY_SLAM });\n    }\n  },\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      lastKnownKeepSlot: { row: 0, column: 2 },\n    });\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine } = ctx;\n    const ourKeep = inspector\n      .getPermanentsOf(Player.P2)\n      .filter(\n        (permanent) => inspector.getSharedEffects(permanent).isBase ?? false\n      )[0];\n    if (!ourKeep) {\n      return; // this is the step that killed it!\n    }\n    const ext = engine.getExtraState() as ExtraState;\n    ext.lastKnownKeepSlot = ourKeep.slot;\n\n    // check for player pawn promotion\n    if (\n      step.type == StepType.MOVE &&\n      step.slot.row == 0 &&\n      step.permanent.owner == Player.P1 &&\n      (inspector.getCardName(step.permanent).toLowerCase().match(/^p.*/) ??\n        false)\n    ) {\n      engine.despawn(step.permanent);\n      engine.spawn(UNIT_NAME_Q, step.slot, Player.P1);\n    } else if (\n      step.type == StepType.ATTACK &&\n      step.attacker.owner == Player.P1 &&\n      step.attacker.slot.row == 0 &&\n      (inspector.getCardName(step.attacker).toLowerCase().match(/^p.*/) ??\n        false)\n    ) {\n      engine.despawn(step.attacker);\n      engine.spawn(UNIT_NAME_Q, step.attacker.slot, Player.P1);\n    }\n  },\n  extraSolveChecks: (player, winner, ctx) => {\n    const { inspector, engine } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n    const slot = ext.lastKnownKeepSlot;\n\n    // now check all 8-adjacent things of slot\n    for (const dr of [-1, 0, 1]) {\n      for (const dc of [-1, 0, 1]) {\n        if (dr === 0 && dc === 0) {\n          continue;\n        }\n        const adjSlot = { row: slot.row + dr, column: slot.column + dc };\n        if (!inspector.isSlotInBounds(adjSlot)) {\n          continue;\n        }\n        const blocker = inspector.getPermanentsAt(adjSlot);\n        if (blocker.length > 0) {\n          if (blocker[0].owner == Player.P2) {\n            // King blocked by ally\n            continue;\n          }\n        }\n        // TODO: If there is a Player.P1 piece blocking the space, we should\n        // check if the King can safely take it -- which is to say, the King can\n        // capture the piece without taking damage, and the piece is not\n        // guarded. The latter check just falls down to the logic below, but the\n        // check on whether the King can actually capture gets weird (weirder\n        // than a straight power-vs-health check) when random defensive\n        // abilities come into play.\n\n        // fake permanent, so we can reuse logic\n        // TODO: Make specialThreatened take in slots instead.\n        // Backdoor access to engine.engine here is a hack and is\n        // not supported.\n        const defender = engine\n          .getBackdoorEngine()\n          .cardToPermanent({ name: UNIT_NAME_P }, Player.P2, adjSlot);\n\n        let foundAttacker = false;\n        for (const attacker of inspector.getPermanentsOf(Player.P1)) {\n          if (specialThreatened(attacker, defender, ctx)) {\n            foundAttacker = true;\n            break;\n          }\n        }\n\n        if (!foundAttacker) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine, ai } = ctx;\n    if (!(solves[Player.P1] ?? false) && winner == Player.P1) {\n      ai.speak(\n        \"As you raised the uwuand, Blancmange slid away! It seems you failed to befriend it. How puzzling!\",\n        {\n          hideBattler: true,\n          speaker: Speaker.NARRATOR,\n        }\n      );\n    } else {\n      engine.clearKeyframe();\n    }\n  },\n};\n","import { Slot, Permanent } from \"engine/types/game-state\";\nimport { Inspector } from \"engine/Inspector\";\nimport { WALL_NAME } from \"./puzzle-22-data\";\n\nconst N = 100; // must be bigger than board size\nexport function slotToIndex(slot: Slot) {\n  return N * slot.row + slot.column;\n}\nexport function indexToSlot(index: number) {\n  return {\n    row: Math.floor(index / N),\n    column: index % N,\n  };\n}\n\nconst WALLS = new Set([WALL_NAME]);\n\nexport enum SokobanUpdateType {\n  MOVE,\n  APPLY_POWERUP,\n}\nexport type MoveDescription = {\n  type: SokobanUpdateType.MOVE;\n  permanent: Permanent;\n  rowDiff: number;\n  colDiff: number;\n};\nexport type ApplyPowerupDescription = {\n  type: SokobanUpdateType.APPLY_POWERUP;\n  permanent: Permanent;\n  powerupPermanent: Permanent;\n};\nexport type UpdateDescription = MoveDescription | ApplyPowerupDescription;\n\nexport class SokobanState {\n  // key = location (index), value = list of permanents at that slot\n  constructor(\n    private actors: { [index: number]: Permanent[] },\n    private inspector: Inspector\n  ) {}\n\n  static makeStateFromInspector(inspector: Inspector) {\n    const locations: { [index: number]: Permanent[] } = {};\n    for (const perm of inspector.getAllPermanents()) {\n      locations[slotToIndex(perm.slot)] ||= [];\n      locations[slotToIndex(perm.slot)].push(perm);\n    }\n    return new SokobanState(locations, inspector);\n  }\n\n  private get rows() {\n    return this.inspector.getNumRows();\n  }\n\n  private get cols() {\n    return this.inspector.getNumColumns();\n  }\n\n  // Return a list of updates, in order, that must be made to apply the push.\n  getPushResult(\n    maxPower: number,\n    permanent: Permanent,\n    rowDiff: number,\n    colDiff: number\n  ): UpdateDescription[] {\n    if (Math.abs(rowDiff) + Math.abs(colDiff) !== 1) {\n      // Unit is magically hopping, no pushing!\n      const nextSlot = this.getResultingSlot(permanent.slot, rowDiff, colDiff);\n      if (nextSlot == null || this.slotHasWall(nextSlot)) {\n        // wall (or boundary)! can't move.\n        return [];\n      }\n      const actorInWay = this.getActorAt(nextSlot);\n      if (actorInWay) {\n        return [];\n      }\n      return [\n        {\n          type: SokobanUpdateType.MOVE,\n          permanent,\n          rowDiff,\n          colDiff,\n        },\n      ];\n    }\n\n    const startSlot = permanent.slot;\n    let currSlot = startSlot;\n    const allSlots = [startSlot];\n    let currWeight = 0;\n    let canMove = false;\n    while (true) {\n      const nextSlot = this.getResultingSlot(currSlot, rowDiff, colDiff);\n      if (nextSlot == null || this.slotHasWall(nextSlot)) {\n        // wall (or boundary)! can't move.\n        break;\n      }\n\n      allSlots.push(nextSlot);\n\n      const thingToAttemptToPush = this.getActorAt(nextSlot);\n      if (!thingToAttemptToPush) {\n        canMove = true;\n        break;\n      }\n      // Attempt to push the next thing\n      const newWeight = currWeight + this.getWeightOf(thingToAttemptToPush);\n      if (newWeight > maxPower) {\n        break;\n      }\n      currWeight = newWeight;\n      currSlot = nextSlot;\n    }\n    if (!canMove) {\n      return [];\n    }\n    const allUpdates = [] as UpdateDescription[];\n    for (let i = 0; i < allSlots.length; i++) {\n      // Skip last spot\n      if (i == allSlots.length - 1) {\n        break;\n      }\n      const slot = allSlots[i];\n      const perm = this.getActorAt(slot);\n      if (!perm) {\n        throw new Error(\"error in sokoban logic :(\");\n      }\n      allUpdates.push({\n        type: SokobanUpdateType.MOVE,\n        permanent: perm,\n        rowDiff,\n        colDiff,\n      });\n    }\n    // Reverse the order, because moves should start from farther away\n    allUpdates.reverse();\n    return allUpdates;\n  }\n\n  getWeightOf(perm: Permanent) {\n    // please don't move camp\n    if (perm.card.name === \"camp\") {\n      return 99;\n    }\n    // This used to be the weight\n    return 1;\n  }\n\n  getActorsAt(slot: Slot) {\n    return this.actors[slotToIndex(slot)] || [];\n  }\n\n  getActorAt(slot: Slot) {\n    // return this.getActorsAt(slot).find(\n    //   (perm) => !STACKABLE.has(perm.card.name || \"\")\n    // );\n\n    // when stackables don't exist, this is just the actor on the slot.\n    return this.getActorsAt(slot).find((perm) => true);\n  }\n\n  slotHasWall(slot: Slot) {\n    return !!this.getActorsAt(slot).find((perm) =>\n      WALLS.has(perm.card.name || \"\")\n    );\n  }\n\n  isSlotInBounds(slot: Slot) {\n    return (\n      0 <= slot.row &&\n      slot.row < this.rows &&\n      0 <= slot.column &&\n      slot.column < this.cols\n    );\n  }\n\n  // The slot that moving in the given relative amount will result in,\n  // or null if that's out of bounds.\n  getResultingSlot(slot: Slot, rowDiff: number, colDiff: number) {\n    const newSlot = {\n      row: slot.row + rowDiff,\n      column: slot.column + colDiff,\n    };\n    if (!this.isSlotInBounds(newSlot)) {\n      return null;\n    }\n    return newSlot;\n  }\n}\n","import { CreatedPermanentEvent, PermanentEventType } from \"engine/server-hooks\";\nimport { CounterType } from \"engine/types/counters\";\nimport { EngineContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport {\n  ALL_AUTO_BATTLERS,\n  FIGHTER_ALLY_NAME,\n  WALL_NAME,\n  BOX_NAME,\n  LEVEL_INITERS,\n  LEVEL_INDICES,\n  ALL_PUSHERS,\n  EXPLOSIVES_NAME,\n  ZAP_PUSHER_NAME,\n  ARMORED_CAMP_NAME,\n  ARMORED_FIGHTER_ENEMY_NAME,\n} from \"./puzzle-22-data\";\nimport { SokobanState, SokobanUpdateType } from \"./puzzle-22-logic\";\nimport { Permanent } from \"engine/types/game-state\";\nimport { CardEffects } from \"engine/cards/card-effects\";\nimport { PermanentEffectOptResolved } from \"engine/types/effects\";\nimport { StepType } from \"engine/types/steps\";\n\nconst CARD_EFFECTS_BASE = {\n  [WALL_NAME]: {\n    handlers: {\n      [PermanentEventType.CREATED]: initWallCounters,\n    },\n  },\n  [FIGHTER_ALLY_NAME]: {\n    handlers: {\n      [PermanentEventType.CREATED]: initFriendlyUnitCounters,\n    },\n  },\n  [EXPLOSIVES_NAME]: {\n    handlers: {\n      [PermanentEventType.CREATED]: (ev) => {\n        ev.ctx.engine.addCounter(ev.permanent, {\n          type: CounterType.CANNOT_MOVE,\n        });\n        ev.ctx.engine.addCounter(ev.permanent, {\n          type: CounterType.CANNOT_ATTACK,\n        });\n        ev.ctx.engine.addCounter(ev.permanent, {\n          type: CounterType.CANNOT_CREATE,\n        });\n      },\n      [PermanentEventType.AFTER_DESTROYED]: (ev) => {\n        const { inspector, engine } = ev.ctx;\n\n        engine.announce(\"Explosives... explode!\");\n        for (const perm of inspector.getPermanents({\n          touching: ev.permanent.slot,\n        })) {\n          engine.damageUnattributed(perm, 2);\n        }\n      },\n    },\n  },\n  [ZAP_PUSHER_NAME]: {\n    onRepeatable(step, ctx) {\n      const effectOpt = step\n        .effectOptsResolved[0] as PermanentEffectOptResolved;\n      ctx.engine.damage(\n        step.permanent,\n        effectOpt.permanent,\n        ctx.inspector.getPower(step.permanent)\n      );\n      ctx.engine.damage(step.permanent, step.permanent, 1);\n    },\n  },\n  [ARMORED_CAMP_NAME]: {\n    adjustDamageReceived(_, damage) {\n      return Math.max(damage - 1, 0);\n    },\n  },\n  [ARMORED_FIGHTER_ENEMY_NAME]: {\n    adjustDamageReceived(_, damage) {\n      return Math.max(damage - 1, 0);\n    },\n  },\n} as { [cardName: string]: CardEffects };\nfor (const pusherName of ALL_PUSHERS) {\n  CARD_EFFECTS_BASE[pusherName] ||= {};\n  CARD_EFFECTS_BASE[pusherName].handlers = {\n    [PermanentEventType.CREATED]: initPusherCounters,\n  };\n}\n\nconst GAME_SPEC_BASE = {\n  cardEffects: CARD_EFFECTS_BASE,\n\n  afterTurnEnd: (player, ctx) => {\n    const { ai, inspector, engine } = ctx;\n    if (inspector.getTurnNumber() <= 1) {\n      return;\n    }\n\n    // Perform glorious combat.\n    const playerUnitsInOrder = inspector.getPermanents({\n      owner: player,\n      sort: [\n        (perm: Permanent) =>\n          -100 * inspector.getNthNearestRow(perm.slot.row, player) -\n          perm.slot.column,\n      ],\n    });\n\n    for (const playerUnit of playerUnitsInOrder) {\n      if (!ALL_AUTO_BATTLERS.has(playerUnit.card.name || \"\")) {\n        continue;\n      }\n      if (inspector.getPower(playerUnit) <= 0) {\n        continue;\n      }\n      const targetUnits = inspector.getPermanents({\n        column: playerUnit.slot.column,\n        rowInFrontOf: {\n          row: playerUnit.slot.row,\n          perspective: player,\n        },\n        sort: [\n          {\n            type: \"frontToBack\",\n            perspective: inspector.getOpponentOf(player),\n          },\n        ],\n      });\n      // Hit the first enemy unit seen.\n      for (const potentialTarget of targetUnits) {\n        // Boxes block all combat.\n        if (potentialTarget.card.name === BOX_NAME) {\n          break;\n        }\n        // Walls are ignored in combat (you can attack over them)\n        if (potentialTarget.card.name === WALL_NAME) {\n          continue;\n        }\n        // Skip past allied units.\n        if (potentialTarget.owner === player) {\n          continue;\n        }\n\n        engine.damage(\n          playerUnit,\n          potentialTarget,\n          inspector.getPower(playerUnit)\n        );\n        break;\n      }\n    }\n  },\n  overrideStep(step, ctx) {\n    // Only override move steps.\n    if (step.type !== StepType.MOVE) return false;\n\n    const { inspector, engine } = ctx;\n    const pusher = step.permanent;\n    if (!ALL_PUSHERS.has(pusher.card.name || \"\")) {\n      // Use normal move rules for non-pushers.\n      return false;\n    }\n\n    const oldSlot = pusher.slot;\n    const newSlot = step.slot;\n    const rowDiff = newSlot.row - oldSlot.row;\n    const colDiff = newSlot.column - oldSlot.column;\n\n    const state = SokobanState.makeStateFromInspector(inspector);\n    const updates = state.getPushResult(\n      1, // box weight that can be pushed\n      pusher,\n      rowDiff,\n      colDiff\n    );\n\n    for (const update of updates) {\n      if (update.type === SokobanUpdateType.MOVE) {\n        engine.moveRel(update.permanent, update.rowDiff, update.colDiff);\n      } else if (update.type === SokobanUpdateType.APPLY_POWERUP) {\n        // TODO: omnomnom\n      }\n    }\n\n    if (updates.length === 0) {\n      engine.announce(\"bonk.\");\n    }\n\n    return true;\n  },\n} as GameSpecServerFragment;\n\nexport const Puzzle22Specs: GameSpecServerFragment[] = LEVEL_INDICES.map(\n  (i) => {\n    const val = {\n      ...GAME_SPEC_BASE,\n\n      afterInitEngine(ctx: EngineContext) {\n        LEVEL_INITERS[i](ctx);\n      },\n    };\n    // Special cases, if any.\n    return val;\n  }\n);\n\nfunction initPusherCounters(ev: CreatedPermanentEvent) {\n  const { permanent, ctx } = ev;\n  const { engine } = ctx;\n  engine.addCounter(permanent, { type: CounterType.CANNOT_ATTACK });\n  engine.addCounter(permanent, { type: CounterType.CANNOT_CREATE });\n}\n\nfunction initFriendlyUnitCounters(ev: CreatedPermanentEvent) {\n  const { permanent, ctx } = ev;\n  const { engine } = ctx;\n  engine.addCounter(permanent, { type: CounterType.CANNOT_ATTACK });\n  engine.addCounter(permanent, { type: CounterType.CANNOT_CREATE });\n  engine.addCounter(permanent, { type: CounterType.CANNOT_MOVE });\n}\n\nfunction initWallCounters(ev: CreatedPermanentEvent) {\n  const { permanent, ctx } = ev;\n  const { engine } = ctx;\n  engine.addCounter(permanent, { type: CounterType.DOES_NOT_PROTECT });\n}\n","export type Puzzle28Game = {\n  final_6: string;\n  moves65: string;\n  moves54: string;\n  attks_6: string;\n  attks_5: string;\n  attks_4: string;\n};\n\nexport const GAMES: { [key: string]: Puzzle28Game } = {\n  \"0\": {\n    final_6: \".....b.b....w.w.....b.w.......\",\n    moves65: \".....D.X....R.D.....U.D.......\",\n    moves54: \"..........R..X.D...L.......R..\",\n    attks_6: \".s.s.!!!!!!s!!!!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!s!!!!!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!.s.!!sss!!!!s!ss!s!!!!!.s!!!\",\n  },\n  \"1\": {\n    final_6: \".....b...b.......w..bw..w.....\",\n    moves65: \".....U...L.......X..UD..L.....\",\n    moves54: \"S.......S......R.......D..X...\",\n    attks_6: \".s.s.!!!!!!s!!!!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!!!!!s!!!!!!s.\",\n    attks_4: \"!!!!!!!!!!!!s!!s!!!!s!ss!.!!!!\",\n  },\n  \"2\": {\n    final_6: \"......b.w..w.w.....b......b...\",\n    moves65: \"......X.U..R.S.....D......L...\",\n    moves54: \"...X........DD..........UR....\",\n    attks_6: \".s.s.s!!!!s!!!!s!!!!s!ss!.!!!!\",\n    attks_5: \"!!!!!!!!!!!!!!!!sss!!s!!!!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"3\": {\n    final_6: \"...w.......bwb.......w....b...\",\n    moves65: \"...L.......LDU.......X....L...\",\n    moves54: \"..X.....S.U......R.......R....\",\n    attks_6: \".!!!!s!ss!s!!!!s!!!!s!!!!.!!!!\",\n    attks_5: \".!!!!s!!!!!!!!!!s!!!!s!!!!!!!!\",\n    attks_4: \".s.s.!!!!s!ss!s!!s!ss!s!!.!!!!\",\n  },\n  \"4\": {\n    final_6: \"........wwb.b.......w....b....\",\n    moves65: \"........LSS.R.......X....R....\",\n    moves54: \".......U.XD..S............R...\",\n    attks_6: \".s.!!sss!!!!!!!!s!!!!s!!!!!!!!\",\n    attks_5: \"!!.!!!!!!!!!!!!s!!!!s!!!!.!!!!\",\n    attks_4: \"!!!!.!!!!s!!!!s!!!!sss!!!.s!!!\",\n  },\n  \"5\": {\n    final_6: \"......bww....w.....b......b...\",\n    moves65: \"......XDU....S.....D......L...\",\n    moves54: \"...X........DD..........UR....\",\n    attks_6: \".s.s.s!!!!s!!!!s!!!!s!ss!.!!!!\",\n    attks_5: \"!!!!!!!!!!!!!!!!sss!!s!!!!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"6\": {\n    final_6: \".....w.b.........b..bww.......\",\n    moves65: \".....R.U.........L..DXR.......\",\n    moves54: \"..S...X.........S......D.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"7\": {\n    final_6: \"..b.......b..w......b...w...w.\",\n    moves65: \"..X.......S..S......U...U...L.\",\n    moves54: \"..........S..S.R...L.......X..\",\n    attks_6: \".s!!!ss!!!!!!!s!ss!!!!!s!.s!!!\",\n    attks_5: \"!!!!!!s!!!!!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \".s.s.sssss!!!!!!!!!!!!sss!!.s.\",\n  },\n  \"8\": {\n    final_6: \".....w.b.........bw.b.w.......\",\n    moves65: \".....R.U.........LX.D.R.......\",\n    moves54: \"..S...X.........S......D.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"9\": {\n    final_6: \"b.....b.w.........wb.......w..\",\n    moves65: \"D.....D.L.........RX.......L..\",\n    moves54: \".....S.S...D.......U......X...\",\n    attks_6: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".s.!!!!!!!!!!!!!!s!!!!!!!!!!s.\",\n    attks_4: \".s.!!!!!!!!sss!!!!!!!!sss!!.s.\",\n  },\n  \"10\": {\n    final_6: \"b.w...b............b....w..w..\",\n    moves65: \"D.D...D............X....U..L..\",\n    moves54: \".....S.S...D.......U......X...\",\n    attks_6: \"!!!!.!!!!s!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".s.!!!!!!!!!!!!!!s!!!!!!!!!!s.\",\n    attks_4: \".s.!!!!!!!!sss!!!!!!!!sss!!.s.\",\n  },\n  \"11\": {\n    final_6: \"..w....b....w...w..b......b...\",\n    moves65: \"..X....U....L...L..S......R...\",\n    moves54: \"..R........S...X...S.......L..\",\n    attks_6: \".!!!!!!!!!!!!sss!!!!s!ss!.!!!!\",\n    attks_5: \".s!!!ss!s!!!!s!!s!!!!s!ss!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"12\": {\n    final_6: \".b.....b...ww.........b....w..\",\n    moves65: \".L.....L...XR.........L....S..\",\n    moves54: \"X.....D......D.......L.....R..\",\n    attks_6: \".!!!!s!!!!s!!ss!!!ss!!!!!.!!!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!s!!!!!!s!!!!.\",\n    attks_4: \"!!.s.!!sss!!!!s!ss!s!!!!!.s!!!\",\n  },\n  \"13\": {\n    final_6: \"b.w.........w....b..b.w.......\",\n    moves65: \"R.S.........X....R..U.D.......\",\n    moves54: \".DL............X..D........S..\",\n    attks_6: \"!!!!.!s!!s!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!!!s!!s!!!!.!!!!\",\n  },\n  \"14\": {\n    final_6: \".....b.......b.w..w.b.......w.\",\n    moves65: \".....D.......D.X..R.U.......L.\",\n    moves54: \"..........R....D..XL.......R..\",\n    attks_6: \".s!!.!!!!s!!!!s!!!!!!!!s!.s!!!\",\n    attks_5: \"!!!!!!s!!!!!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!.s.!!sss!!!!s!ss!s!!!!!.s!!!\",\n  },\n  \"15\": {\n    final_6: \".....w.b...........bbww.......\",\n    moves65: \".....S.R...........DDUX.......\",\n    moves54: \".....X..L.......U.......UR....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!!!!!s!!!!!!s.\",\n    attks_4: \"!!!!!!!!!!s!!sss!!!!s!ss!.!!!!\",\n  },\n  \"16\": {\n    final_6: \".w.......b..b...........wbw...\",\n    moves65: \".S.......X..R...........USR...\",\n    moves54: \".X...........D.....U.....R.R..\",\n    attks_6: \"!!!s.!s!!!!!!s!!!!s!!!!s!!!!!!\",\n    attks_5: \"!!!!!!!!!!!!!!!!sss!!ss!!!!!!.\",\n    attks_4: \".s.s.sss!!sss!!s!!!!s!ss!.!!!!\",\n  },\n  \"17\": {\n    final_6: \"...w...b...w......wb......b...\",\n    moves65: \"...S...X...R......UD......L...\",\n    moves54: \"...X........DD..........UR....\",\n    attks_6: \"!!!!!!!!!!s!!sss!!!!s!ss!.!!!!\",\n    attks_5: \"!!!!!!!!!!!!!!!!sss!!s!!!!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"18\": {\n    final_6: \"..b.........w...w..b....w.b...\",\n    moves65: \"..S.........L...L..S....X.R...\",\n    moves54: \"..D........S...X...S.......L..\",\n    attks_6: \"!!!s.!s!ss!!!sss!!!!s!ss!.!!!!\",\n    attks_5: \".s!!!ss!s!!!!s!!s!!!!s!ss!!!s.\",\n    attks_4: \"!!!!!!!!!!s!!sss!!!!s!ss!.!!!!\",\n  },\n  \"19\": {\n    final_6: \"..w...b........wb..b.......w..\",\n    moves65: \"..S...U........XL..L.......S..\",\n    moves54: \".DL............X..D........S..\",\n    attks_6: \"!!!!.!!!!s!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!!!s!!s!!!!.!!!!\",\n  },\n  \"20\": {\n    final_6: \"..........b.b.w.....b..ww.....\",\n    moves65: \"..........X.L.D.....D..LS.....\",\n    moves54: \"...........D.......S..X.SR....\",\n    attks_6: \".s!!.ss!!!!!!s!!s!!!!!!!!.s.!!\",\n    attks_5: \"!!.s.!!sss!!!!!!s!!!!s!!!!!!!!\",\n    attks_4: \".s.s.ssssssss!!s!!!!s!ss!.!!!!\",\n  },\n  \"21\": {\n    final_6: \"......wb........w..b....w.b...\",\n    moves65: \"......DU........L..S....X.R...\",\n    moves54: \"..R........S...X...S.......L..\",\n    attks_6: \".s.s.!!!ss!!!sss!!!!s!ss!.!!!!\",\n    attks_5: \".s!!!ss!s!!!!s!!s!!!!s!ss!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"22\": {\n    final_6: \".....b...b.......w..bw.w......\",\n    moves65: \".....U...L.......X..UD.S......\",\n    moves54: \"S.......S......R.......D..X...\",\n    attks_6: \".s.s.!!!!!!s!!!!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!!!!!s!!!!!!s.\",\n    attks_4: \"!!!!!!!!!!!!s!!s!!!!s!ss!.!!!!\",\n  },\n  \"23\": {\n    final_6: \"..b....w...ww......b......b...\",\n    moves65: \"..R....U...LX......D......L...\",\n    moves54: \"..XS......R.............UR....\",\n    attks_6: \"!!!s.!!!sss!!sss!!!!s!ss!.!!!!\",\n    attks_5: \".!!!.!!s!s!ss!!!sss!!s!!!!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"24\": {\n    final_6: \"..w..w...........b.bb.w.......\",\n    moves65: \"..S..X...........L.DD.U.......\",\n    moves54: \"..X.............SR......DR....\",\n    attks_6: \"!!!!.!s!!s!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!.!!!!s!!s!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"25\": {\n    final_6: \"b......ww.......b..b.......w..\",\n    moves65: \"R......UX.......L..L.......S..\",\n    moves54: \".DL............X..D........S..\",\n    attks_6: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!!!s!!s!!!!.!!!!\",\n  },\n  \"26\": {\n    final_6: \"b......w....b......w.w.....b..\",\n    moves65: \"D......R....L......S.D.....X..\",\n    moves54: \".....S..D..D.......L......X...\",\n    attks_6: \"!!!s.!s!ss!s!!!!!!s!!!!s!!!!!!\",\n    attks_5: \".s.s.!!!!!!!!!!!!s!!!!!!!!!!s.\",\n    attks_4: \".s.s.!!!ss!s!!!!!!!!!!sss!!.s.\",\n  },\n  \"27\": {\n    final_6: \".w...w.b.........b..b.w.......\",\n    moves65: \".X...S.U.........L..D.R.......\",\n    moves54: \"..S..X..........S......R.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"28\": {\n    final_6: \"......wbw........b..b.w.......\",\n    moves65: \"......SUX........L..D.R.......\",\n    moves54: \"..S...X.........S......D.R....\",\n    attks_6: \".!!!!s!!!!!!!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"29\": {\n    final_6: \"......b..w.........b.w..w.b...\",\n    moves65: \"......D..L.........S.L..X.R...\",\n    moves54: \"........X..D.......SR......L..\",\n    attks_6: \".s.!!s!!!!s!!!!s!!!!s!ss!.!!!!\",\n    attks_5: \"!!.!!!!s!!!!!!!!s!!!!s!ss!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"30\": {\n    final_6: \".....w.b....w....b..b.w.......\",\n    moves65: \".....R.U....X....L..D.R.......\",\n    moves54: \"..S...X.........S......R.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"31\": {\n    final_6: \"......b.w.......b.wb.......w..\",\n    moves65: \"......L.L.......U.RX.......L..\",\n    moves54: \".....S.S...D.......U......X...\",\n    attks_6: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".s.!!!!!!!!!!!!!!s!!!!!!!!!!s.\",\n    attks_4: \".s.!!!!!!!!sss!!!!!!!!sss!!.s.\",\n  },\n  \"32\": {\n    final_6: \"b..w....w.......b..b.......w..\",\n    moves65: \"R..L....X.......L..L.......S..\",\n    moves54: \".DL............X..D........S..\",\n    attks_6: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!!!s!!s!!!!.!!!!\",\n  },\n  \"33\": {\n    final_6: \"..ww.......b.b..........w.b...\",\n    moves65: \"..LX.......R.U..........S.L...\",\n    moves54: \".S......D...D...........UX....\",\n    attks_6: \".!!!!s!ss!s!!!!s!!!!s!!!!.!!!!\",\n    attks_5: \"!!!!!!!!!!!!!!!!s!!!!s!!!!!!!!\",\n    attks_4: \"!!!!!!!!!!!!!!!!!!s!ss!!!.s!!.\",\n  },\n  \"34\": {\n    final_6: \"b.w..........b......b...w...w.\",\n    moves65: \"R.S..........D......U...X...L.\",\n    moves54: \".RR............X..D........S..\",\n    attks_6: \"!!!!.!ss!s!!!!s!!!!!!!!s!.s!!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \".s!!!ss!s!ss!!!sss!!s!!!!.!!!!\",\n  },\n  \"35\": {\n    final_6: \".w....b.w.......b..b.......w..\",\n    moves65: \".R....U.X.......L..L.......S..\",\n    moves54: \".DS............X..R........S..\",\n    attks_6: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!.!!!!s!!sss!!!!!!!ss!.!!!!\",\n  },\n  \"36\": {\n    final_6: \".....b.wb...........b...w...w.\",\n    moves65: \".....U.XS...........U...U...L.\",\n    moves54: \"S.......S......R...X.......R..\",\n    attks_6: \".s.s.!!!!s!ss!s!ss!!!!!s!.s!!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!s!!!!s!ss!.!!!!\",\n  },\n  \"37\": {\n    final_6: \".wb........ww......b......b...\",\n    moves65: \".RX........RR......D......L...\",\n    moves54: \"..X.........DD..........UR....\",\n    attks_6: \"!!!s.!!!sss!!sss!!!!s!ss!.!!!!\",\n    attks_5: \"!!!!.!!!!s!!!!!!sss!!s!!!!!!s.\",\n    attks_4: \".s.s.sssssssssss!!!!s!ss!.!!!!\",\n  },\n  \"38\": {\n    final_6: \".....w.b.........b..b.w.w.....\",\n    moves65: \".....R.U.........L..D.X.L.....\",\n    moves54: \"..S...X.........S......D.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"39\": {\n    final_6: \"...w.b....w.b...........wb....\",\n    moves65: \"...L.D....R.R...........XR....\",\n    moves54: \"..R.......DX.S............R...\",\n    attks_6: \".s!!!!!!s!!s!!!!s!!!!s!!!!!!!!\",\n    attks_5: \"!!!!.!ss!!!!!!!s!!!!s!!!!.!!!!\",\n    attks_4: \"!!!!!!!!!!!!!!s!!!!sss!!!.s!!!\",\n  },\n  \"40\": {\n    final_6: \"...w.w.b.........b..b.w.......\",\n    moves65: \"...X.R.U.........L..D.R.......\",\n    moves54: \"..S...X.........S......D.R....\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \"!!!!!!!!s!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!!ss!s!ss!!!s!!!!s!ss!.!!!!\",\n  },\n  \"41\": {\n    final_6: \"...b....w..w.......b.w....b...\",\n    moves65: \"...L....X..U.......S.L....R...\",\n    moves54: \"..R...D............SX......L..\",\n    attks_6: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n    attks_5: \"!!!!!!!!s!!!!s!!s!!!!s!ss!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"42\": {\n    final_6: \"b..w....w........b..b.w.......\",\n    moves65: \"R..L....X........R..U.D.......\",\n    moves54: \".DS............X..R........S..\",\n    attks_6: \"!!!!!!s!!!!s!ss!s!!!!!!!!.s.!!\",\n    attks_5: \".!!!!s!!!!s!!!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!.!!!!s!!sss!!!!!!!ss!.!!!!\",\n  },\n  \"43\": {\n    final_6: \".....b..w...wb.....b.......w..\",\n    moves65: \".....S..R...XD.....D.......L..\",\n    moves54: \".....S...X........U.....U.R...\",\n    attks_6: \".s!!.!!!!s!!!!s!!!!!!!ss!.!!!!\",\n    attks_5: \".s.!!!!!!!!!!!!!!!!!!s!!!!!!s.\",\n    attks_4: \".s!!.!!!!s!!!!s!!!!!!!ss!.!!!!\",\n  },\n  \"44\": {\n    final_6: \".w.b....w..w.......b......b...\",\n    moves65: \".R.S....X..L.......D......L...\",\n    moves54: \"..XS......R.............UR....\",\n    attks_6: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n    attks_5: \".!!!.!!s!s!ss!!!sss!!s!!!!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"45\": {\n    final_6: \"b..b.........w......bw......w.\",\n    moves65: \"S..D.........X......UD......L.\",\n    moves54: \"S.......S......R..........XR..\",\n    attks_6: \"!!!!.!ss!s!ss!s!ss!!!!!s!.s!!!\",\n    attks_5: \"!!!!!!!!!!!!s!!!!!!!!ss!!!!!!.\",\n    attks_4: \"!!!!!!!!!!!!s!!s!!!!s!ss!.!!!!\",\n  },\n  \"46\": {\n    final_6: \"......wb........w..b......b.w.\",\n    moves65: \"......DU........L..S......R.X.\",\n    moves54: \"..R........S...X...S.......L..\",\n    attks_6: \".s.s.!!!ss!!!sss!!!!s!ss!.!!!!\",\n    attks_5: \".s!!!ss!s!!!!s!!s!!!!s!ss!!!s.\",\n    attks_4: \"!!!!.!!s!ss!!!ss!!!!s!ss!.!!!!\",\n  },\n  \"47\": {\n    final_6: \"..w...b.........b.wb.......w..\",\n    moves65: \"..D...L.........U.RX.......L..\",\n    moves54: \".....S.S...D.......U......X...\",\n    attks_6: \"!!!!.!!!!s!!sss!!!!!!!ss!.!!!!\",\n    attks_5: \".s.!!!!!!!!!!!!!!s!!!!!!!!!!s.\",\n    attks_4: \".s.!!!!!!!!sss!!!!!!!!sss!!.s.\",\n  },\n  \"48\": {\n    final_6: \".b.......w.b....w.......b.w...\",\n    moves65: \".L.......L.U....X.......U.R...\",\n    moves54: \"X.....S.S..........L.......L..\",\n    attks_6: \".!!!!s!ss!s!!!!!!!!!!s!!!!!!s.\",\n    attks_5: \"!!!!!!!!!!!!sss!!!!!!!ss!.!!!!\",\n    attks_4: \"!!!!!!!!!!!!sss!!!!s!ss!s!!!!.\",\n  },\n  \"49\": {\n    final_6: \".....bw.b.w..........b.....w..\",\n    moves65: \".....UX.L.S..........R.....L..\",\n    moves54: \"D......R..X...........L...R...\",\n    attks_6: \".s.s.!!!!s!!!!s!!!!s!!!!s!!!!.\",\n    attks_5: \"!!!!!!s!!!!s!ss!!!ss!!!!!!!!!!\",\n    attks_4: \".s.s.!!!!s!!!!s!!!!s!!!!s!!!!.\",\n  },\n};\n","import { CounterType } from \"engine/types/counters\";\nimport { Permanent, Player, Slot } from \"engine/types/game-state\";\nimport { GameSpecServerFragment, AIContext } from \"engine/types/game-specs\";\nimport { Inspector } from \"engine/Inspector\";\nimport { CardType } from \"engine/types/card-data\";\nimport { GAMES, Puzzle28Game } from \"engine/game-specs/puzzle-28-SPOILERS-data\";\n\nconst BLACK_NAME = \"chocolate\";\nconst WHITE_NAME = \"vanilla\";\nconst COW_NAME = \"cyclow\";\n\n// values double as cardname suffix\nenum cowsState {\n  SLEEPING = \"--sleeping-\", // do nothing\n  AWAKE = \"--awake-\", // about to attack\n  TIRED = \"--tired-\", // just attacked, weak\n  WEAK = \"--weak-\", // not used as state, just card art: (weak + vulnerable)\n  ANGRY = \"--angry-\", // final state, angry cow\n}\n\ntype ExtraState = {\n  cows: cowsState;\n  level: number; // there is no cow level\n  game: Puzzle28Game;\n};\n\nconst cowQuery = (inspector: Inspector) => ({\n  owner: Player.P2,\n  custom: (permanent: Permanent) => {\n    return isCow(inspector, permanent);\n  },\n});\n\nconst isCow = (inspector: Inspector, permanent: Permanent) => {\n  return inspector.getCardName(permanent).includes(COW_NAME);\n};\n\nconst transformCows = (\n  state: cowsState,\n  ctx: AIContext,\n  cows?: Permanent[]\n) => {\n  const { inspector, engine } = ctx;\n  if (!cows) {\n    cows = inspector.getPermanents(cowQuery(inspector));\n  }\n  cows.forEach((cow) => {\n    if (inspector.getCardName(cow).startsWith(WHITE_NAME)) {\n      engine\n        .getBackdoorEngine()\n        .transformPermanent(cow, WHITE_NAME + \"-\" + COW_NAME + state);\n    } else {\n      engine\n        .getBackdoorEngine()\n        .transformPermanent(cow, BLACK_NAME + \"-\" + COW_NAME + state);\n    }\n  });\n};\n\nconst getAttacks = (level: number, game: Puzzle28Game) => {\n  if (level === 6) {\n    return game.attks_6;\n  } else if (level === 5) {\n    return game.attks_5;\n  } else if (level === 4) {\n    return game.attks_4;\n  }\n\n  throw new Error(\"No attacks found for invalid level: \" + level);\n};\n\nconst getKillableSlot = (level: number, game: Puzzle28Game): Slot => {\n  let move = \"\";\n\n  if (level === 6) {\n    move = game.moves65;\n  } else if (level === 5) {\n    move = game.moves54;\n  }\n\n  for (let row = 0; row < 6; row++) {\n    for (let column = 0; column < 5; column++) {\n      const index = row * 5 + column;\n      if (move[index] === \"X\") {\n        return { row, column };\n      }\n    }\n  }\n\n  throw new Error(\"No killable slot found for level: \" + level);\n};\n\n// move (permanent) to the closest empty slot on their side\n// prioritizes unsafe spots to shove\nconst shovePermanent = (ctx: AIContext, permanent: Permanent) => {\n  const { inspector, engine } = ctx;\n  const ext = engine.getExtraState() as ExtraState;\n\n  const emptySlots = inspector.getUnoccupiedSlotsClosestTo(\n    permanent.owner,\n    permanent.slot\n  );\n  for (const slot of emptySlots) {\n    const attacks = getAttacks(ext.level - 1, ext.game); // check the next level's attacks\n    const index = slot.row * inspector.getNumColumns() + slot.column;\n    // first try to shove to unsafe spots\n    if (attacks[index] === \"!\" && engine.move(permanent, slot)) return;\n  }\n  for (const slot of emptySlots) {\n    // now try any slot\n    if (engine.move(permanent, slot)) return;\n  }\n};\n\nconst spawnCows = (ctx: AIContext, game: Puzzle28Game) => {\n  const { inspector, engine } = ctx;\n\n  for (let row = 0; row < 6; row++) {\n    for (let column = 0; column < 5; column++) {\n      const slot = { row, column };\n      const char = game.final_6[row * 5 + column];\n      if (char !== \".\") {\n        // check if blocked\n        const blockingPermanent = inspector.getPermanentAtIfExists(slot);\n        if (blockingPermanent) {\n          shovePermanent(ctx, blockingPermanent);\n        }\n        // spawn\n        const cowName =\n          (char === \"b\" ? BLACK_NAME : WHITE_NAME) +\n          \"-\" +\n          COW_NAME +\n          cowsState.SLEEPING;\n        engine.spawn(cowName, slot, Player.P2);\n      }\n    }\n  }\n\n  const units = inspector.getPermanentsOf(Player.P2);\n  units.forEach((unit) => {\n    engine.addCounter(unit, {\n      type: CounterType.INVULNERABLE,\n    });\n  });\n};\n\nconst moveCows = (ctx: AIContext, game: Puzzle28Game) => {\n  const { inspector, engine } = ctx;\n  const ext = engine.getExtraState() as ExtraState;\n  // move now\n  let moves = \"\";\n  if (ext.level === 6) {\n    moves = game.moves65;\n  } else if (ext.level === 5) {\n    moves = game.moves54;\n  }\n\n  type cowToMove = {\n    cow: Permanent;\n    from: Slot;\n    to: Slot;\n  };\n\n  const cowsToMove: cowToMove[] = [];\n\n  for (let row = 0; row < 6; row++) {\n    for (let column = 0; column < 5; column++) {\n      const from = { row, column };\n      const move = moves[row * 5 + column];\n      let to;\n      switch (move) {\n        case \"L\":\n          to = { row, column: column - 1 };\n          break;\n        case \"R\":\n          to = { row, column: column + 1 };\n          break;\n        case \"U\":\n          to = { row: row - 1, column };\n          break;\n        case \"D\":\n          to = { row: row + 1, column };\n          break;\n        default: // XS. all skip\n          continue;\n      }\n\n      // move the cow\n      const cow = inspector.getPermanentAtIfExists(from);\n      if (cow && isCow(inspector, cow)) {\n        cowsToMove.push({ cow, from, to });\n      }\n    }\n  }\n\n  // fix infinite loop\n  let tries = 0;\n  // queue to prevent shoving other cows\n  while (cowsToMove.length > 0 && tries < 10) {\n    tries++;\n    const cowToMove = cowsToMove.shift();\n    if (!cowToMove) continue;\n\n    const { cow, from, to } = cowToMove;\n    // check if blocked\n    const blockingPermanent = inspector.getPermanentAtIfExists(to);\n    if (blockingPermanent) {\n      if (isCow(inspector, blockingPermanent)) {\n        // blocked by a cow, skip\n        cowsToMove.push(cowToMove);\n        continue;\n      }\n      shovePermanent(ctx, blockingPermanent);\n    }\n    // move\n    engine.move(cow, to);\n  }\n\n  // this should never happen, but if it does, just let the cows be in bad positions instead of crashing server.\n  // if (cowsToMove.length > 0) {\n  //   console.log(game);\n  //   throw new Error(`Failed to move cows`);\n  // }\n};\n\nexport const Puzzle28Spec: GameSpecServerFragment = {\n  counterData: {},\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n\n    const turnNumber = inspector.getTurnNumber();\n\n    const cows = inspector.getPermanents(cowQuery(inspector));\n\n    if (turnNumber === 0) {\n      spawnCows(ctx, ext.game);\n      ai.speak(\n        \"Howdy! The name’s Miss Yu. This here’s my ranch! Mind the cows.\"\n      );\n    } else {\n      switch (ext.cows) {\n        case cowsState.SLEEPING: {\n          ext.cows = cowsState.AWAKE;\n          transformCows(cowsState.AWAKE, ctx);\n          if (ext.level === 6) {\n            ai.speak(\n              \"They like to curl up into li’l balls if ya wake ’em, ya see. Watch yer step!\"\n            );\n          } else {\n            ai.speak(\"Hope you know what’s comin’.\");\n          }\n          break;\n        }\n        case cowsState.AWAKE: {\n          const attacks = getAttacks(ext.level, ext.game);\n\n          // attack!!!\n          for (let row = 0; row < 6; row++) {\n            for (let column = 0; column < 5; column++) {\n              const i = row * 5 + column;\n              const attack = attacks[i];\n              if (attack === \"!\") {\n                // TODO show ALL slots attacked with explosions\n                // maybe we can hack this by adding a explosion creature to empty slots?\n                const permanent = inspector.getPermanentAtIfExists({\n                  row,\n                  column,\n                });\n                if (\n                  permanent &&\n                  permanent.owner === Player.P1 &&\n                  inspector.getCardType(permanent) === CardType.CREATURE\n                ) {\n                  engine.destroy(permanent, permanent);\n                }\n              }\n            }\n          }\n\n          if (ext.level === 6) {\n            ai.speak(\n              \"My husband always said, the cows won’t pay the bills!\\nLemme tell ya, he sure shut up after he saw\\nthis ’ere cow-ordinated lasso attack!\"\n            );\n          } else {\n            ai.speak(\"Take that!\");\n          }\n\n          ext.cows = cowsState.TIRED;\n          transformCows(cowsState.TIRED, ctx);\n\n          // remove counter from killable\n          if (ext.level <= 4) {\n            // all are killable\n            cows.forEach((cow) => {\n              engine.removeCounterType(cow, CounterType.INVULNERABLE);\n            });\n            transformCows(cowsState.WEAK, ctx);\n            break;\n          }\n          const killableSlot = getKillableSlot(ext.level, ext.game);\n          const killableCow = inspector.getPermanentAtIfExists(killableSlot);\n          if (killableCow) {\n            engine.removeCounterType(killableCow, CounterType.INVULNERABLE);\n            transformCows(cowsState.WEAK, ctx, [killableCow]);\n          }\n\n          break;\n        }\n        case cowsState.TIRED: {\n          if (ext.level > cows.length) {\n            // a cow was killed, switch to MOVING to move on the next turn\n\n            if (ext.level <= 4) {\n              // less than 4 cows left\n              // final angry transition\n              const barn: Permanent = inspector.getPermanents({\n                name: \"barn\",\n              })[0];\n\n              engine.removeCounterType(barn, CounterType.INVULNERABLE);\n\n              ext.level = 3;\n              ext.cows = cowsState.ANGRY;\n              transformCows(cowsState.ANGRY, ctx);\n              ai.speak(\"I’ve had it with you! Get off my ranch!\");\n\n              break;\n            }\n\n            moveCows(ctx, ext.game);\n            ext.level -= 1;\n\n            ext.cows = cowsState.SLEEPING;\n            transformCows(cowsState.SLEEPING, ctx);\n            ai.speak(\n              \"What in tarnation didya do to my cow? Yer gonna get milked!\"\n            );\n          } else {\n            ai.speak(\"They’re tired, don’t give ’em any trouble now.\");\n          }\n          break;\n        }\n        case cowsState.ANGRY: {\n          // all cows attack bases\n          for (const cow of cows) {\n            ai.tryAttackFirst(cow, {\n              sort: [\n                // attack bases, lowest health, closest\n                \"structuresFirst\",\n                \"health\",\n                { type: \"euclideanDistance\", slot: cow.slot },\n              ],\n            });\n          }\n        }\n      }\n    }\n  },\n  afterInitEngine: (ctx) => {\n    // GOOD STATE FOR TESTING\n    // const final_6 = \".......b...w.....b......w.bw..\";\n    // const moves65 = \".......R...L.....X......S.LR..\";\n    // const moves54 = \"........D.R.............UR..X.\";\n    // const attks_6 = \"!!!!!!!!!!s!!sss!!!!s!ss!.!!!!\";\n    // const attks_5 = \".s.s.!!!!s!ss!s!ss!!!sss!!!!!!\";\n    // const attks_4 = \".s.!!sss!!!!!!!!!ss!s!s!!.!!!.\";\n    // KEEP THE ABOVE ONE\n\n    // pick a random game\n    const gamesArr = Object.values(GAMES);\n    const gameIndex = Math.floor(Math.random() * gamesArr.length);\n    const game = gamesArr[gameIndex];\n    // const { final_6, moves65, moves54, attks_6, attks_5, attks_4 } = game;\n\n    ctx.engine.initExtraState({\n      cows: cowsState.SLEEPING,\n      level: 6,\n      game,\n    } as ExtraState);\n  },\n};\n","import { EffectOptType } from \"engine/types/effects\";\nimport { AbilityType } from \"engine/types/effects\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Player } from \"engine/types/game-state\";\n\ntype ExtraState = {\n  lastKnownBaseDamage: number;\n};\n\nexport const Puzzle31Spec: GameSpecServerFragment = {\n  // logic\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      lastKnownBaseDamage: 0,\n    });\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const aiBase = inspector.getPermanents({\n      owner: Player.P2,\n      isBase: true,\n    })[0];\n    if (aiBase !== undefined) {\n      const ext = engine.getExtraState() as ExtraState;\n      if (ext.lastKnownBaseDamage === 0 && aiBase.damage !== 0) {\n        ai.speak(\"i got hit... am i going to l, o, s, e again?\");\n        ext.lastKnownBaseDamage = aiBase.damage;\n      }\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    const units = inspector.getPermanentsOf(Player.P2);\n    const aiBase = units.filter(\n      (unit) => inspector.getSharedEffects(unit).isBase\n    )[0];\n    if (aiBase === undefined) return;\n\n    // on turn 0, try to spawn mirrors, and we're done\n    if (inspector.getTurnNumber() === 0) {\n      ai.speak(\n        \"if only i could w, i, n just once, i'd be so much braver. if only i had a f, r, i, e, n, d...\"\n      );\n      ai.trySpawn(\"beeflector\", 3, 0);\n      ai.trySpawn(\"beeflector\", 3, 1);\n      ai.trySpawn(\"beeflector\", 3, 2);\n      ai.trySpawn(\"beeflector\", 3, 3);\n      ai.trySpawn(\"beeflector\", 3, 4);\n      return;\n    }\n\n    for (const unit of units) {\n      // medics try to special anything that has taken damage\n      // and on failure, will attack \"smartly\"\n      if (inspector.getCardName(unit) === \"reckless-medisaur\") {\n        let healed = false;\n        // look at permanents in order of opponents > ours, then sorted\n        // by how much damage they've taken\n        const targets = inspector.getPermanents({\n          sort: [(p) => (p.owner === Player.P1 ? 0 : 1), (p) => -p.damage],\n        });\n        for (const target of targets) {\n          healed = ai.tryActivateAbility(unit, AbilityType.SPECIAL, [\n            { type: EffectOptType.PERMANENT, permanentId: aiBase.id },\n            { type: EffectOptType.PERMANENT, permanentId: target.id },\n          ]);\n          if (healed) break;\n        }\n        // attack nearest, prioritizing bases\n        if (!healed) {\n          ai.tryAttackFirst(unit, {\n            sort: [\n              \"structuresFirst\",\n              { type: \"euclideanDistance\", slot: unit.slot },\n            ],\n          });\n        }\n      } else if (!inspector.getSharedEffects(unit).isBase) {\n        // bb b might have a unit from blancmange, so those should attack too.\n        // attack nearest, prioritizing bases\n        ai.tryAttackFirst(unit, {\n          sort: [\n            \"structuresFirst\",\n            { type: \"euclideanDistance\", slot: unit.slot },\n          ],\n        });\n      }\n    }\n\n    // try to spawn a medic\n    for (const col of [1, 3, 0, 4, 2]) {\n      if (ai.trySpawn(\"reckless-medisaur\", 1, col)) break;\n    }\n    // try to spawn a mirror in opponent territory\n    let mirrorSpawns = 0;\n    for (const row of [3, 4, 5]) {\n      for (const col of [0, 2, 4, 1, 3]) {\n        if (ai.trySpawn(\"beeflector\", row, col)) {\n          mirrorSpawns += 1;\n        }\n        if (mirrorSpawns === 3) break;\n      }\n      if (mirrorSpawns === 3) break;\n    }\n  },\n  // solved iff ai won\n  disableBattleWonSolvedCondition: true,\n  extraSolveChecks: (_, winner) => {\n    return winner === Player.P2;\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine, ai } = ctx;\n    if (!(solves[Player.P1] ?? false)) {\n      ai.speak(\n        \"Before you got the chance to use the uwuand, bb b zipped away crying! Looks like you failed to befriend it.\",\n        {\n          hideBattler: true,\n        }\n      );\n    } else {\n      engine.clearKeyframe();\n    }\n  },\n};\n","import { CounterType } from \"engine/types/counters\";\nimport { Permanent, Player } from \"engine/types/game-state\";\nimport { Speaker } from \"engine/types/keyframes\";\nimport { GameSpecServerFragment, AIContext } from \"engine/types/game-specs\";\nimport {\n  PermanentEventHandlers,\n  PermanentEventType,\n} from \"engine/server-hooks\";\n\ntype ExtraState = {\n  slimeKilledOrder: string[];\n};\n\n// killed slime -> children slimes\n// order of this array determines the correct slimeKilledOrder\nconst slimeSpawnOrder = [\n  { parent: \"slime\", children: [\"yellow\", \"sepia\"] }, // *\n  { parent: \"yellow\", children: [\"lemon\", \"amber\"] }, // E\n  { parent: \"amber\", children: [\"ivory\", \"orange\"] }, // A\n  { parent: \"lemon\", children: [\"ebony\", \"turquoise\"] }, // I\n  { parent: \"ivory\", children: [\"harlequin\"] }, // R\n  { parent: \"harlequin\", children: [] }, // L\n  { parent: \"ebony\", children: [\"indigo\", \"mauve\"] }, // S\n  { parent: \"indigo\", children: [] }, // H\n  { parent: \"sepia\", children: [\"ecru\", \"emerald\"] }, // T\n  { parent: \"emerald\", children: [\"khaki\", \"apricot\"] }, // M\n  { parent: \"khaki\", children: [\"eggplant\", \"lavender\"] }, // G\n  { parent: \"ecru\", children: [\"auburn\", \"teal\"] }, // N\n  { parent: \"auburn\", children: [\"lava\", \"rust\"] }, // D\n  { parent: \"lava\", children: [] }, // B\n  { parent: \"teal\", children: [\"white\", \"saffron\"] }, // K\n  { parent: \"white\", children: [] }, // C\n  { parent: \"apricot\", children: [] }, // O\n  { parent: \"lavender\", children: [] }, // Q\n  { parent: \"turquoise\", children: [\"silver\"] }, // U\n  { parent: \"silver\", children: [] }, // F\n  { parent: \"mauve\", children: [] }, // V\n  { parent: \"orange\", children: [\"red\", \"lilac\"] }, // W\n  { parent: \"lilac\", children: [] }, // J\n  { parent: \"red\", children: [] }, // P\n  { parent: \"rust\", children: [] }, // X\n  { parent: \"saffron\", children: [] }, // Y\n  { parent: \"eggplant\", children: [] }, // Z\n];\n\n// dot slime\n//    adds a poison counter to any unit it attacks\nconst dotSlimes = [\n  \"yellow\",\n  \"lemon\",\n  \"ebony\",\n  \"indigo\",\n  \"silver\",\n  \"ivory\",\n  \"harlequin\",\n  \"red\",\n  \"ecru\",\n  \"auburn\",\n  \"lava\",\n  \"white\",\n  \"khaki\",\n  \"eggplant\",\n];\n\n// dash slime\n//   ready on summon. moves each turn\nconst dashSlimes = [\n  \"sepia\",\n  \"emerald\",\n  \"apricot\",\n  \"lavender\",\n  \"teal\",\n  \"saffron\",\n  \"rust\",\n  \"amber\",\n  \"orange\",\n  \"lilac\",\n  \"turquoise\",\n  \"mauve\",\n];\n\n// attack closest creature, then closest structure.\nconst slimeAttackAI = (unit: Permanent, ctx: AIContext) => {\n  const { inspector, ai } = ctx;\n\n  ai.tryAttackFirst(unit, {\n    sort: [\n      \"creaturesFirst\",\n      // nearest first\n      { type: \"euclideanDistance\", slot: unit.slot },\n    ],\n  });\n};\n\nconst dotSlimeAI = (unit: Permanent, ctx: AIContext) => {\n  slimeAttackAI(unit, ctx);\n};\n\n// dash slimes move randomly each turn, then attack\nconst dashSlimeAI = (unit: Permanent, ctx: AIContext) => {\n  const { engine } = ctx;\n\n  const directions = [\n    { x: 0, y: 1 },\n    { x: 0, y: -1 },\n    { x: 1, y: 0 },\n    { x: -1, y: 0 },\n  ];\n\n  // pick a random direction to move\n  while (directions.length > 0) {\n    const idx = Math.floor(Math.random() * directions.length);\n    const dir = directions.splice(idx, 1)[0];\n\n    // we use engine.moveRel instead of ai.tryMoveRel since we want slime to remain ready to attack.\n    if (engine.moveRel(unit, dir.x, dir.y)) break;\n  }\n\n  slimeAttackAI(unit, ctx);\n};\n\nconst slimeHandler: PermanentEventHandlers = {\n  /** TODO: currently, this event triggers before the slime is destroyed.\n  /*  so a new slime won't spawn in the same slot as the parent\n  /*  imo (amon's opinion), this looks cooler, but in the event of slime flood, \n  /*  we may want to allow this.\n  /*/\n  [PermanentEventType.BEFORE_DESTROYED]: (event) => {\n    const { inspector, engine } = event.ctx;\n    // spawn child slimes (usually 2)\n    const name = inspector.getCardName(event.permanent);\n    const slot = event.permanent.slot;\n    slimeSpawnOrder\n      .find((s) => name.startsWith(s.parent))\n      ?.children.forEach((child) => {\n        const emptySlots = inspector.getUnoccupiedSlotsClosestTo(\n          Player.P2,\n          slot\n        );\n\n        let spawnSlot = slot;\n        // try to spawn the child in the closest empty slot\n        for (const emptySlot of emptySlots) {\n          if (engine.spawn(child + \"-slime\", emptySlot, Player.P2)) {\n            spawnSlot = emptySlot;\n            break;\n          }\n        }\n\n        // dot-slimes start frozen for one turn\n        if (dotSlimes.includes(child)) {\n          const slime = inspector.getPermanentAtIfExists(spawnSlot);\n          if (!slime) return;\n          engine.addCounter(slime, {\n            type: CounterType.FROZEN,\n            explanation: \"will not ready on its next turn\",\n            expiry: PermanentEventType.START_TURN,\n          });\n        }\n        // TODO: trigger loss if out of slots?\n      });\n\n    // track order of slimes killed\n    const ext = engine.getExtraState() as ExtraState;\n    const namePrefix = name.split(\"-\")[0];\n    ext.slimeKilledOrder.push(namePrefix);\n  },\n};\n\nexport const Puzzle44Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  counterData: {},\n\n  cardEffects: {\n    slime: {\n      handlers: slimeHandler,\n    },\n    ...dotSlimes.reduce(\n      (acc: { [key: string]: { handlers: PermanentEventHandlers } }, curr) => {\n        acc[curr + \"-slime\"] = {\n          handlers: {\n            ...slimeHandler,\n            // dotSlime adds +1 poison to any unit it attacks\n            [PermanentEventType.AFTER_DEAL_DAMAGE]: (event) => {\n              const { defender, ctx } = event;\n              const { engine } = ctx;\n              engine.mergeValueCounter(\n                defender,\n                CounterType.POISON,\n                1,\n                (poison) => `On start of turn, takes ${poison} Damage.`\n              );\n            },\n          },\n        };\n        return acc;\n      },\n      {}\n    ),\n    // TODO: ready dashSlimes on Summon\n    ...dashSlimes.reduce(\n      (acc: { [key: string]: { handlers: PermanentEventHandlers } }, curr) => {\n        acc[curr + \"-slime\"] = { handlers: slimeHandler };\n        return acc;\n      },\n      {}\n    ),\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const turnNumber = inspector.getTurnNumber();\n    const units = inspector.getPermanentsOf(Player.P2);\n    if (turnNumber == 0) {\n      ai.trySpawn(\"slime\", 1, 2);\n    }\n    // act with all present units\n    for (const unit of units) {\n      const unitName = inspector.getCardName(unit);\n      if (dotSlimes.includes(unitName.split(\"-\")[0])) {\n        dotSlimeAI(unit, ctx);\n      } else if (dashSlimes.includes(unitName.split(\"-\")[0])) {\n        dashSlimeAI(unit, ctx);\n      } else if (unitName === \"slime\") {\n        slimeAttackAI(unit, ctx);\n      }\n    }\n  },\n  afterSummon: (permanent, ctx) => {\n    const { inspector, engine } = ctx;\n    const name = inspector.getCardName(permanent);\n    if (dashSlimes.includes(name.split(\"-\")[0])) {\n      // TODO: ready dashSlimes on Summon\n    }\n  },\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      slimeKilledOrder: [],\n    } as ExtraState);\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n  extraSolveChecks: (player, winner, ctx) => {\n    const { engine } = ctx;\n    const ext = engine.getExtraState() as ExtraState;\n    const slimeKilledOrder = ext.slimeKilledOrder;\n\n    // compare kill order with morse *EAIRLSHTMGNDBKCOQUFVWJPXYZ\n    // mapped to [\"slime\", \"yellow\", \"amber\", \"lemon\", ...]\n    const correctOrder = slimeSpawnOrder.map((slime) => slime.parent);\n    if (slimeKilledOrder.length !== correctOrder.length) return false;\n    for (let i = 0; i < slimeKilledOrder.length; i++) {\n      if (slimeKilledOrder[i] !== correctOrder[i]) return false;\n    }\n    return true;\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine, ai } = ctx;\n    if (!(solves[Player.P1] ?? false)) {\n      ai.speak(\n        \"The Slime disintegrated back into the sludge! It looks like you failed to befriend it. How puzzling!\",\n        {\n          hideBattler: true,\n          speaker: Speaker.NARRATOR,\n        }\n      );\n    }\n  },\n};\n","// import { CounterType } from \"engine/types/counters\";\nimport { Player } from \"engine/types/game-state\";\nimport { EngineContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { StepType } from \"engine/types/steps\";\nimport { SharedExtraState } from \"engine/game-specs/puzzle-46-shared\";\nimport { ColorSymbol } from \"engine/types/card-data\";\nimport { CounterType } from \"engine/types/counters\";\n\nconst BASE_SPEC: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  counterData: {\n    // using doom counter, decrements by 1 each turn\n    [CounterType.DOOM]: {\n      handlers: {\n        [PermanentEventType.END_TURN]: (event) => {\n          const { permanent, counter, counterIndex, ctx } = event;\n          const { engine, inspector, ai } = ctx;\n          if (!inspector.isTurnPending(permanent.owner)) {\n            // Only apply on unit owner's turn\n            return;\n          }\n          if (counter == null || counterIndex == null) {\n            throw new Error(\"counter event should have counter specified\");\n          }\n          const isBargle = inspector.getCardName(permanent) === \"bargle\";\n          const isSwargle = inspector.getCardName(permanent) === \"swargle\";\n\n          // decrement\n          const newVal = (counter.val || 0) - 1;\n\n          if (newVal <= 0) {\n            if (isBargle) {\n              // Out of time!\n              ai.speak(\"Orgle orgle tirgle!\");\n              for (const unit of inspector.getPermanentsOf(Player.P1)) {\n                engine.destroy(permanent, unit);\n              }\n            } else if (isSwargle) {\n              // swargle dies\n              engine.destroy(permanent, permanent);\n            }\n            return { expire: true };\n          } else {\n            if (isBargle) {\n              if (newVal === 1) {\n                // Last turn to beat this round!\n                ai.speak(`Largle turgle torgle bergle thirgle rorgle!`);\n              } else if (newVal === 6) {\n                // Round 4! ${newVal} turns to beat this round.\n                ai.speak(`${newVal} turgle torgle bergle thirgle rorgle.`);\n              } else {\n                // {newVal} turns to beat this round.\n                ai.speak(`${newVal} turgle torgle bergle thirgle rorgle.`);\n              }\n            }\n            engine.updateCounterVal(permanent, counterIndex, newVal);\n          }\n        },\n      },\n    },\n  },\n  afterInitEngine: (ctx) => {\n    const { engine } = ctx;\n    engine.initSharedExtraState({\n      canAttackMorgle: false,\n    } as SharedExtraState);\n  },\n  cardEffects: {\n    // If any Enemy Creature would deal damage from the first or last columns, destroy it instead\n    cargle: {\n      insteadOfDamaged(permanent, damage, attacker, ctx) {\n        const { engine } = ctx;\n        if (attacker?.slot.column === 0 || attacker?.slot.column === 4) {\n          // destroy the attacker (attributed to cargle)\n          engine.destroy(permanent, attacker);\n          return false;\n        }\n        return true;\n      },\n    },\n    // If any Enemy Creature would deal damage from the second or fourth columns, destroy it instead\n    dorgle: {\n      insteadOfDamaged(permanent, damage, attacker, ctx) {\n        const { engine } = ctx;\n        if (attacker?.slot.column === 1 || attacker?.slot.column === 3) {\n          // destroy the attacker (attributed to dorgle)\n          engine.destroy(permanent, attacker);\n          return false;\n        }\n\n        return true;\n      },\n    },\n    // This Creature can only be attacked if another Creature moved into its column this turn.\n    //  (intentionally left blank): using SharedExtraState because client needs to know this,\n    //  see afterStep below and adjustAttackChecks in puzzle-46-shared\n    morgle: {},\n    // When this Creature is damaged, destroy the attacking Creature unless the player controlling it has exactly three Gems.\n    corgle: {\n      handlers: {\n        [PermanentEventType.AFTER_DAMAGED]: (event) => {\n          const { inspector, engine } = event.ctx;\n          const attacker = event.attacker;\n          if (!attacker) return;\n\n          const gems = inspector.getPlayerGems(attacker.owner);\n          if (gems.length === 3) return;\n\n          // destroy the attacker (attributed to corgle)\n          engine.destroy(event.permanent, attacker);\n        },\n      },\n    },\n    // At the beginning of your turn, if this Base's health is not prime, destroy all Enemy Units.\n    //    (time limit of 7 turns or else you lose - let's use a explicit counter for this)\n    bargle: {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          const { engine } = event.ctx;\n          engine.addCounter(event.permanent, {\n            type: CounterType.DOOM,\n            val: 8, // first tick immediately goes to val - 1\n          });\n        },\n        [PermanentEventType.START_TURN]: (event) => {\n          const { inspector, engine } = event.ctx;\n\n          // primes up to bargle's health - make sure to add primes if bargle gets buffed\n          const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29];\n          if (primes.includes(inspector.getHealth(event.permanent))) return;\n\n          // destroy all enemy units\n          inspector.getPermanentsOf(Player.P1).forEach((permanent) => {\n            // destroy enemy unit (attributed to bargle)\n            engine.destroy(event.permanent, permanent);\n          });\n        },\n      },\n    },\n    // This Creature does not take damage from non-Green Creatures.\n    durgle: {\n      adjustDamageReceived(permanent, damage, attacker, ctx) {\n        const { inspector } = ctx;\n        if (!attacker) return 0;\n        const attackerColor = inspector.getCardColor(attacker);\n        if (attackerColor !== null && attackerColor === ColorSymbol.GREEN)\n          return damage;\n        return 0;\n      },\n    },\n    // This Creature takes ten times as much damage when it is attacked by Creatures with at least four health.\n    gorgle: {\n      adjustDamageReceived(permanent, damage, attacker, ctx) {\n        const { inspector } = ctx;\n        if (!attacker) return damage;\n        if (inspector.getHealth(attacker) >= 4) return damage * 10;\n        return damage;\n      },\n    },\n    // \"If this Creature takes damage, destroy all Enemy Units.\n    // This Creature dies automatically in six* turns\"\n    swargle: {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          const { engine } = event.ctx;\n          engine.addCounter(event.permanent, {\n            type: CounterType.DOOM,\n            val: 7, // first tick immediately goes to val - 1\n          });\n        },\n        [PermanentEventType.AFTER_DAMAGED]: (event) => {\n          const { inspector, engine } = event.ctx;\n\n          // destroy all enemy units\n          inspector.getPermanentsOf(Player.P1).forEach((permanent) => {\n            // destroy enemy unit (attributed to swargle)\n            engine.destroy(event.permanent, permanent);\n          });\n        },\n      },\n    },\n  },\n  afterStep(step, ctx) {\n    const { inspector, engine } = ctx;\n    // set canAttackMorgle true if a unit moved into its column\n    if (step.type !== StepType.MOVE) return;\n\n    const morgles = inspector.getPermanents({\n      owner: Player.P2,\n      name: \"morgle\",\n    });\n\n    // If the morgle has been destroyed, then there's nothing to do.\n    if (morgles.length === 0) return;\n    if (morgles.length > 1) throw new Error(\"multiple morgles found\");\n\n    const morgle = morgles[0];\n\n    if (step.slot.column === morgle.slot.column) {\n      engine.modifySharedExtraState({\n        canAttackMorgle: true,\n      } as SharedExtraState);\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      return;\n    }\n\n    const units = inspector.getPermanentsOf(Player.P2);\n\n    // clear canAttackMorgle\n    engine.modifySharedExtraState({\n      canAttackMorgle: false,\n    } as SharedExtraState);\n\n    for (const unit of units) {\n      // act with all present units, just use a basic attack\n      ai.tryAttackFirst(unit);\n    }\n  },\n\n  extraLoseChecks: (player, ctx) => {\n    const { inspector, engine } = ctx;\n\n    if (player === Player.P2) {\n      return inspector.getPermanentsOf(player).length === 0;\n    }\n    return false;\n  },\n};\n\nfunction spawnAt(\n  ctx: EngineContext,\n  name: string,\n  row: number,\n  column: number\n) {\n  ctx.engine.spawn(name, { row, column }, Player.P2);\n}\nexport const Puzzle46Spec_1: GameSpecServerFragment = {\n  ...BASE_SPEC,\n  beforeNewGame: (ctx) => {\n    spawnAt(ctx, \"cargle\", 1, 0);\n    spawnAt(ctx, \"dorgle\", 1, 4);\n  },\n};\nexport const Puzzle46Spec_2: GameSpecServerFragment = {\n  ...BASE_SPEC,\n  beforeNewGame: (ctx) => {\n    spawnAt(ctx, \"morgle\", 1, 2);\n  },\n};\nexport const Puzzle46Spec_3: GameSpecServerFragment = {\n  ...BASE_SPEC,\n  beforeNewGame: (ctx) => {\n    spawnAt(ctx, \"corgle\", 1, 2);\n  },\n};\nexport const Puzzle46Spec_4: GameSpecServerFragment = {\n  ...BASE_SPEC,\n  beforeNewGame: (ctx) => {\n    spawnAt(ctx, \"bargle\", 0, 2);\n  },\n};\nexport const Puzzle46Spec_5: GameSpecServerFragment = {\n  ...BASE_SPEC,\n  beforeNewGame: (ctx) => {\n    spawnAt(ctx, \"durgle\", 0, 0);\n    spawnAt(ctx, \"gorgle\", 0, 2);\n    spawnAt(ctx, \"swargle\", 0, 4);\n  },\n};\n","import { Inspector } from \"engine/Inspector\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { Check } from \"engine/types/action-validation\";\nimport { ColorSymbol } from \"engine/types/card-data\";\nimport { CounterType } from \"engine/types/counters\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Permanent, Player, Slot } from \"engine/types/game-state\";\n\nexport type Puzzle50ExtraState = {\n  globalConstraints: { id: string; health: number }[];\n  clues: { id: string; health: number; row: number; column: number }[];\n  answer: boolean[][];\n  showSolution: boolean;\n  passed: boolean;\n  isInvulnerable: boolean;\n};\n\nexport const Puzzle50CommonSpec: GameSpecServerFragment = {\n  cardEffects: {\n    \"b-w-copier\": {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          event.ctx.engine.addCounter(event.permanent, {\n            type: CounterType.BASE_GEMS,\n            val: 3,\n          });\n        },\n      },\n      onSpecial: (step, ctx) => {\n        const { inspector, engine } = ctx;\n        const { permanent } = step;\n        const currSlot = permanent.slot;\n        const r = currSlot.row;\n        for (let c = 0; c < inspector.getNumColumns(); c++) {\n          if (c != currSlot.column) {\n            const permanent = inspector.getPermanentAtIfExists({\n              row: r,\n              column: c,\n            });\n            if (!permanent) continue;\n            const color = inspector.getCardColor(permanent);\n            // Don't do anything to WHITEBLACK cards\n            if (\n              color !== null &&\n              [ColorSymbol.WHITE, ColorSymbol.BLACK].includes(color)\n            ) {\n              engine.addCardToHand(permanent.owner, permanent.card);\n            }\n          }\n        }\n      },\n    },\n    \"pasture-planner\": {\n      adjustAttackChecks: (failed) => {\n        // this base can attack!!\n        failed.delete(Check.CARD_TYPE);\n      },\n      handlers: {\n        [PermanentEventType.CREATED]: (ev) => {\n          const { permanent, ctx } = ev;\n          const { engine } = ctx;\n          engine.addCounter(permanent, {\n            type: CounterType.INVULNERABLE,\n          });\n        },\n        [PermanentEventType.OTHER_UNIT_SPAWN]: (ev) => {\n          const { permanent, ctx } = ev;\n          const { engine } = ctx;\n          const played = ev.spawnedPermanent;\n          const extraState = engine.getExtraState() as Puzzle50ExtraState;\n          if (permanent.owner == played.owner) {\n            if (extraState.isInvulnerable) {\n              engine.addCounter(played, {\n                type: CounterType.INVULNERABLE,\n              });\n            } else {\n              engine.addCounter(played, {\n                type: CounterType.CANNOT_BE_DESTROYED,\n              });\n            }\n            engine.addCounter(played, {\n              type: CounterType.CANNOT_MOVE,\n            });\n          }\n        },\n        [PermanentEventType.END_TURN]: (ev) => {\n          const { permanent, ctx } = ev;\n          const { inspector, ai } = ctx;\n          // check for doom counter\n          if (\n            !inspector.doesPermanentHaveCounterType(\n              permanent,\n              CounterType.DOOM\n            ) ||\n            !inspector.isTurnPending(Player.P2)\n          ) {\n            return;\n          }\n          const counterIndex = permanent.counters.findIndex(\n            (counter) => counter.type === CounterType.DOOM\n          );\n          const counter = permanent.counters[counterIndex];\n          // decrement counter\n          const newVal = (counter.val || 0) - 1;\n          const timer = Array(newVal).fill(\"⏳\").join(\" \");\n          if (newVal === 1) {\n            ai.speak(`Audit is coming!\\n${timer}`);\n          } else if (newVal > 1) {\n            ai.speak(`Audit in ${newVal} turns!\\n${timer}`);\n          }\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const extraState = engine.getExtraState() as Puzzle50ExtraState;\n    const { globalConstraints, clues, answer, showSolution } = extraState;\n    const turn = inspector.getTurnNumber() / 2;\n    const base = inspector\n      .getPermanentsOf(Player.P2)\n      .filter((permanent) => inspector.getSharedEffects(permanent).isBase)[0];\n    const playerBase = inspector\n      .getPermanentsOf(Player.P1)\n      .filter((permanent) => inspector.getSharedEffects(permanent).isBase)[0];\n\n    if (turn === 0) {\n      // Turn 0: place all global constraint cards on their home row (guaranteed that there are at most 4)\n      const slots: Slot[] = [\n        { row: 0, column: 0 },\n        { row: 0, column: 1 },\n        { row: 0, column: 3 },\n        { row: 0, column: 4 },\n      ];\n      for (const { id, health } of globalConstraints) {\n        const slot = slots.shift();\n        if (!slot) throw new Error(\"oops\");\n        ai.trySpawn(id, slot);\n        const permanent = inspector.getPermanentsAt(slot)[0];\n        engine.adjustPermanentStats(permanent, 0, health - 1);\n        // engine.addCounter(permanent, {\n        //   type: CounterType.MAX_HEALTH_ADJUSTMENT,\n        //   val: health - 1, // all start with 1 health already\n        // });\n      }\n    }\n\n    if (turn >= 1 && turn <= clues.length) {\n      // Turn 1~N: place one clue in the center per turn\n      const { id, health, row, column } = clues[turn - 1];\n      const slot = { row: row + 1, column };\n      for (const unit of inspector.getPermanentsAt(slot)) {\n        // destroying anything there first if occupied\n        engine.destroy(base, unit);\n      }\n      if (!ai.trySpawn(id, slot)) {\n        throw new Error(`why ${id} ${JSON.stringify(slot)}`);\n      }\n      const permanent = inspector.getPermanentsAt(slot)[0];\n      engine.adjustPermanentStats(permanent, 0, health - 1);\n      // engine.addCounter(permanent, {\n      //   type: CounterType.MAX_HEALTH_ADJUSTMENT,\n      //   val: health - 1, // all start with 1 health already\n      // });\n    }\n\n    if (turn === clues.length) {\n      // Turn N: add a DOOM counter to the AI base\n      if (clues.length <= 2) {\n        // If there are very few clues then give more turns\n        engine.addCounter(base, {\n          type: CounterType.DOOM,\n          val: 7 - clues.length,\n          explanation: \"Audit is coming\",\n        });\n      } else {\n        engine.addCounter(base, {\n          type: CounterType.DOOM,\n          val: 4,\n          explanation: \"Audit is coming\",\n        });\n      }\n    }\n\n    if (\n      turn > clues.length &&\n      inspector.getCounterValSum(base, CounterType.DOOM) === 1\n    ) {\n      /*\n      When DOOM counter hits zero, the AI base will \"activate\" all friendly cards,\n      and each card will check for the constraint it correspond to.\n      (Maybe it is easier to implement this check under each card instead of within the base?)\n      (If the center field is not completely filled with black or white cards, the base itself fails)\n      */\n      const failedPermanents = [];\n      const grid = convertToGrid(inspector);\n      if (grid === null) {\n        failedPermanents.push(base);\n      } else {\n        const components = splitComponents(grid);\n        for (const permanent of inspector.getPermanentsOf(Player.P2)) {\n          const getCheckerMakerId = (a: string) => {\n            const i = parseInt(a.split(\"-\").pop() ?? \"\");\n            return i % 2 === 1 ? `${i}-${i + 1}` : `${i - 1}-${i}`;\n          };\n          let ok = true;\n          if (permanent.card.name?.startsWith(\"puzzle-50-global-\")) {\n            ok = globalCheckerMakers[getCheckerMakerId(permanent.card.name)](\n              permanentToColor(inspector, permanent) ?? false\n            )(grid, components, inspector.getHealth(permanent), clues);\n          }\n          if (permanent.card.name?.startsWith(\"puzzle-50-local-\")) {\n            ok = localCheckerMakers[getCheckerMakerId(permanent.card.name)](\n              permanentToColor(inspector, permanent) ?? false\n            )(\n              grid,\n              components,\n              inspector.getHealth(permanent),\n              permanent.slot.row - 1,\n              permanent.slot.column\n            );\n          }\n          if (!ok) {\n            failedPermanents.push(permanent);\n          }\n        }\n      }\n      /*\n      Each failed card (local or global) gains 100 power.\n      If showSolution is set to True, the AI also destroys all incorrect cards that we placed\n      and replaces them with \"resident\" of the correct color (this includes any empty slots).\n      */\n      for (const permanent of failedPermanents) {\n        // Bypassing adjustPermanentStats because custom explanation\n        engine.addCounter(permanent, {\n          type: CounterType.POWER_ADJUSTMENT,\n          val: 100,\n          explanation: \"Failed audit!\",\n        });\n      }\n      if (showSolution) {\n        for (let i = 0; i < 5; i++) {\n          for (let j = 0; j < 5; j++) {\n            const slot = { row: i + 1, column: j };\n            const correct = answer[i][j];\n            for (const permanent of inspector.getPermanentsAt(slot)) {\n              if (permanentToColor(inspector, permanent) !== correct) {\n                engine.destroy(base, permanent);\n              }\n            }\n            ai.trySpawn(`puzzle-50-local-${correct ? 1 : 2}`, slot);\n          }\n        }\n      }\n\n      /*\n      All failed cards then attack our base (presumably destroying it).\n      If no card attacked, the AI base self-destructs (so we win).\n      */\n      for (const permanent of failedPermanents) {\n        ai.tryAttack(permanent, playerBase);\n      }\n      if (failedPermanents.length === 0) {\n        engine.destroy(base, base);\n      }\n    }\n  },\n  afterGameEnd: (winner, solves, ctx) => {\n    const { engine, ai } = ctx;\n    if (!(solves[Player.P1] ?? false)) {\n      ai.speak(\n        \"Audit failed! Violators shall be punished in accordance with the law!\"\n      );\n    } else {\n      engine.clearKeyframe();\n    }\n  },\n};\n\n// a connected component is a list of cells, each of the same color\ntype Cell = { row: number; column: number };\ntype Component = { color: boolean; cells: Cell[] };\n\ntype GlobalChecker = (\n  grid: boolean[][],\n  components: Component[],\n  health: number,\n  clues: Cell[]\n) => boolean;\n\ntype LocalChecker = (\n  grid: boolean[][],\n  components: Component[],\n  health: number,\n  row: number,\n  column: number\n) => boolean;\n\n// a CheckerMaker takes a color and makes its corresponding Checker\ntype GlobalCheckerMaker = (color: boolean) => GlobalChecker;\ntype LocalCheckerMaker = (color: boolean) => LocalChecker;\n\nconst permanentToColor = (inspector: Inspector, permanent: Permanent) => {\n  const color = inspector.getCardColor(permanent);\n  if (color === null) return null;\n  switch (color) {\n    case ColorSymbol.WHITE:\n      return false;\n    case ColorSymbol.BLACK:\n      return true;\n    default:\n      return null;\n  }\n};\n\nconst isInBounds = (cell: Cell): boolean => {\n  const { row, column } = cell;\n  return 0 <= row && row < 5 && 0 <= column && column < 5;\n};\n\nconst convertToGrid = (inspector: Inspector): boolean[][] | null => {\n  const grid: (boolean | null)[][] = Array(5)\n    .fill(null)\n    .map((_) => Array(5).fill(null));\n\n  inspector.getAllPermanents().forEach((permanent) => {\n    // Convert gameboard coordinate to grid coordinate (top-left = (1,0))\n    const row = permanent.slot.row - 1;\n    const column = permanent.slot.column;\n    if (isInBounds({ row, column })) {\n      grid[row][column] = permanentToColor(inspector, permanent);\n    }\n  });\n\n  return grid.every((a): a is boolean[] => a.every((a) => a !== null))\n    ? grid\n    : null;\n};\n\nconst isCellEqual = (a: Cell, b: Cell): boolean => {\n  return a.row === b.row && a.column === b.column;\n};\nconst hasEqualCell = (a: Cell[], b: Cell): boolean => {\n  return a.some((cell) => isCellEqual(cell, b));\n};\n\nconst splitComponentsMaker =\n  (neighborsOf: (cell: Cell) => Cell[]) =>\n  (grid: boolean[][]): Component[] => {\n    const colorOf = (grid: boolean[][], cell: Cell): boolean => {\n      return grid[cell.row][cell.column];\n    };\n    const result: Component[] = [];\n    const unseenCells: Cell[] = [];\n    for (let row = 0; row < 5; row++) {\n      for (let column = 0; column < 5; column++) {\n        unseenCells.push({ row, column });\n      }\n    }\n    while (unseenCells.length > 0) {\n      const cell = unseenCells[0];\n      const color = colorOf(grid, cell);\n      const cells: Cell[] = [];\n      const add = (cell: Cell) => {\n        const idx = unseenCells.findIndex((unseen) =>\n          isCellEqual(cell, unseen)\n        );\n        if (idx === -1) return;\n        unseenCells.splice(idx, 1);\n        cells.push(cell);\n        neighborsOf(cell)\n          .filter((neighbor) => colorOf(grid, neighbor) === color)\n          .forEach((neighbor) => add(neighbor));\n      };\n      add(cell);\n      result.push({ color, cells });\n    }\n    return result;\n  };\n\nconst splitComponents = splitComponentsMaker((cell: Cell) => {\n  const { row, column } = cell;\n  return [\n    { row: row + 1, column },\n    { row: row - 1, column },\n    { row, column: column + 1 },\n    { row, column: column - 1 },\n  ].filter(isInBounds);\n});\n\nconst globalCheckerMakers: { [id: string]: GlobalCheckerMaker } = {\n  // Must be orthogonally connected\n  \"1-2\": (color) => (grid, components, health, clues) => {\n    let count = 0;\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color == color) count++;\n    }\n    return count <= 1;\n  },\n  // Must be diagonally (including orthogonally) connected\n  \"3-4\": (color) => (grid) => {\n    const components = splitComponentsMaker((cell: Cell) => {\n      const { row, column } = cell;\n      return [\n        { row: row + 1, column },\n        { row: row - 1, column },\n        { row, column: column + 1 },\n        { row, column: column - 1 },\n        { row: row + 1, column: column + 1 },\n        { row: row - 1, column: column + 1 },\n        { row: row + 1, column: column - 1 },\n        { row: row - 1, column: column - 1 },\n      ].filter(isInBounds);\n    })(grid);\n    let count = 0;\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color == color) count++;\n    }\n    return count <= 1;\n  },\n  // Must be orthogonally connected to boundary\n  \"5-6\": (color) => (grid, components, health, clues) => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color == color) {\n        let connected = false;\n        for (const cell of components[i].cells) {\n          if (\n            cell.row == 0 ||\n            cell.row == 4 ||\n            cell.column == 0 ||\n            cell.column == 4\n          ) {\n            connected = true;\n            break;\n          }\n        }\n        if (!connected) return false;\n      }\n    }\n    return true;\n  },\n  // No 2x2 blocks\n  \"7-8\": (color) => (grid, components, health, clues) => {\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (\n          grid[r][c] == color &&\n          grid[r + 1][c] == color &&\n          grid[r][c + 1] == color &&\n          grid[r + 1][c + 1] == color\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  },\n  // Must be rectangles\n  \"9-10\": (color) => (grid, components, health, clues) => {\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        let count = 0;\n        // The condition is equivalent to \"No L-shape in a 2x2\"\n        if (grid[r][c] == color) count++;\n        if (grid[r][c + 1] == color) count++;\n        if (grid[r + 1][c] == color) count++;\n        if (grid[r + 1][c + 1] == color) count++;\n        if (count == 3) return false;\n      }\n    }\n    return true;\n  },\n  // Must be squares\n  \"11-12\": (color) => (grid, components, health, clues) => {\n    for (let r = 0; r < 5; r++) {\n      for (let c = 0; c < 5; c++) {\n        if (grid[r][c] != color) continue;\n        // every cell must see the same number of cells horizontally and vertically\n        let up, down, left, right;\n        up = down = left = right = 0;\n        for (let i = 1; i <= r; i++) {\n          if (grid[r - i][c] != color) break;\n          up++;\n        }\n        for (let i = 1; i <= 4 - r; i++) {\n          if (grid[r + i][c] != color) break;\n          down++;\n        }\n        for (let i = 1; i <= c; i++) {\n          if (grid[r][c - i] != color) break;\n          left++;\n        }\n        for (let i = 1; i <= 4 - c; i++) {\n          if (grid[r][c + i] != color) break;\n          right++;\n        }\n        if (up + down != left + right) return false;\n      }\n    }\n    return true;\n  },\n  // Must form paths\n  \"13-14\": (color) => (grid, components, health, clues) => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color != color) continue;\n      let numOnes = 0;\n      for (const cell of components[i].cells) {\n        const { row: r, column: c } = cell;\n        let count = 0;\n        if (r > 0 && grid[r - 1][c] == color) count++;\n        if (r < 4 && grid[r + 1][c] == color) count++;\n        if (c > 0 && grid[r][c - 1] == color) count++;\n        if (c < 4 && grid[r][c + 1] == color) count++;\n        if (count > 2 || count < 1) return false;\n        if (count == 1) numOnes++;\n      }\n      if (numOnes != 2) return false;\n    }\n    return true;\n  },\n  // Must form loops\n  \"15-16\": (color) => (grid, components, health, clues) => {\n    for (let r = 0; r < 5; r++) {\n      for (let c = 0; c < 5; c++) {\n        if (grid[r][c] != color) continue;\n        let count = 0;\n        if (r > 0 && grid[r - 1][c] == color) count++;\n        if (r < 4 && grid[r + 1][c] == color) count++;\n        if (c > 0 && grid[r][c - 1] == color) count++;\n        if (c < 4 && grid[r][c + 1] == color) count++;\n        if (count != 2) return false;\n      }\n    }\n    return true;\n  },\n  // Must have size N\n  \"17-18\": (color) => (grid, components, health, clues) => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color != color) continue;\n      if (components[i].cells.length != health) return false;\n    }\n    return true;\n  },\n  // Contains exactly N clues\n  \"19-20\": (color) => (grid, components, health, clues) => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color != color) continue;\n      let count = 0;\n      for (const cell of components[i].cells) {\n        if (hasEqualCell(clues, cell)) count++;\n      }\n      if (count != health) return false;\n    }\n    return true;\n  },\n  // Contains up to N clues\n  \"21-22\": (color) => (grid, components, health, clues) => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color != color) continue;\n      let count = 0;\n      for (const cell of components[i].cells) {\n        if (hasEqualCell(clues, cell)) count++;\n      }\n      if (count > health) return false;\n    }\n    return true;\n  },\n};\n\nconst localCheckerMakers: { [id: string]: LocalCheckerMaker } = {\n  // Nothing\n  \"1-2\": (color) => (grid, components, health, row, column) => {\n    return true;\n  },\n  // Number of neighboring cells with the same color\n  \"3-4\": (color) => (grid, components, health, row, column) => {\n    let count = 0;\n    if (row > 0 && grid[row - 1][column] == color) count++;\n    if (row < 4 && grid[row + 1][column] == color) count++;\n    if (column > 0 && grid[row][column - 1] == color) count++;\n    if (column < 4 && grid[row][column + 1] == color) count++;\n    return count == health;\n  },\n  // Number of surrounding cells with opposite color\n  \"5-6\": (color) => (grid, components, health, row, column) => {\n    let count = 0;\n    for (let r = Math.max(0, row - 1); r <= Math.min(4, row + 1); r++) {\n      for (let c = Math.max(0, column - 1); c <= Math.min(4, column + 1); c++) {\n        if (grid[r][c] != color) count++;\n      }\n    }\n    return count == health;\n  },\n  // Number of cells in this column with opposite color\n  \"7-8\": (color) => (grid, components, health, row, column) => {\n    let count = 0;\n    for (let r = 0; r < 5; r++) {\n      if (grid[r][column] != color) count++;\n    }\n    return count == health;\n  },\n  // Number of cells in this row with opposite color\n  \"9-10\": (color) => (grid, components, health, row, column) => {\n    let count = 0;\n    for (let c = 0; c < 5; c++) {\n      if (grid[row][c] != color) count++;\n    }\n    return count == health;\n  },\n  // Area of this region\n  \"11-12\": (color) => (grid, components, health, row, column) => {\n    for (let i = 0; i < components.length; i++) {\n      if (hasEqualCell(components[i].cells, { row, column })) {\n        return components[i].cells.length == health;\n      }\n    }\n    return false;\n  },\n  // Sum of areas of all neighboring regions\n  \"13-14\": (color) => (grid, components, health, row, column) => {\n    let count = 0;\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].color == color) continue;\n      if (\n        hasEqualCell(components[i].cells, { row: row - 1, column: column }) ||\n        hasEqualCell(components[i].cells, { row: row + 1, column: column }) ||\n        hasEqualCell(components[i].cells, { row: row, column: column - 1 }) ||\n        hasEqualCell(components[i].cells, { row: row, column: column + 1 })\n      ) {\n        count += components[i].cells.length;\n      }\n    }\n    return count == health;\n  },\n  // Number of cells with the same color that this cell can \"see\"\n  \"15-16\": (color) => (grid, components, health, row, column) => {\n    let up, down, left, right;\n    up = down = left = right = 0;\n    for (let i = 1; i <= row; i++) {\n      if (grid[row - i][column] != color) break;\n      up++;\n    }\n    for (let i = 1; i <= 4 - row; i++) {\n      if (grid[row + i][column] != color) break;\n      down++;\n    }\n    for (let i = 1; i <= column; i++) {\n      if (grid[row][column - i] != color) break;\n      left++;\n    }\n    for (let i = 1; i <= 4 - column; i++) {\n      if (grid[row][column + i] != color) break;\n      right++;\n    }\n    return up + down + left + right + 1 == health;\n  },\n  // Number of cells with opposite color that this cell can \"see\"\n  \"17-18\": (color) => (grid, components, health, row, column) => {\n    let up, down, left, right;\n    up = down = left = right = 0;\n    for (let i = 1; i <= row; i++) {\n      if (grid[row - i][column] == color) break;\n      up++;\n    }\n    for (let i = 1; i <= 4 - row; i++) {\n      if (grid[row + i][column] == color) break;\n      down++;\n    }\n    for (let i = 1; i <= column; i++) {\n      if (grid[row][column - i] == color) break;\n      left++;\n    }\n    for (let i = 1; i <= 4 - column; i++) {\n      if (grid[row][column + i] == color) break;\n      right++;\n    }\n    return up + down + left + right == health;\n  },\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [7, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [18, 8, 0, 4],\n        [18, 5, 1, 2],\n        [18, 2, 3, 3],\n        [18, 5, 4, 0],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, true, false, true, true],\n        [false, true, true, false, true],\n        [true, true, false, false, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 1, 0, 4],\n        [18, 7, 1, 4],\n        [18, 1, 3, 0],\n        [18, 5, 3, 1],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, true, true, true, false],\n        [false, true, false, true, true],\n        [false, false, true, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 0, 2],\n        [18, 7, 2, 1],\n        [18, 1, 3, 0],\n        [18, 2, 3, 4],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [false, true, true, false, false],\n        [false, false, true, true, true],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 1, 3],\n        [18, 8, 2, 2],\n        [18, 3, 3, 4],\n        [18, 4, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, true, false, true],\n        [true, true, false, true, true],\n        [true, false, true, false, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 1, 2],\n        [18, 5, 1, 3],\n        [18, 8, 2, 0],\n        [18, 1, 4, 2],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [true, true, false, false, true],\n        [false, true, true, true, true],\n        [true, true, false, true, false],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 2, 0, 0],\n        [18, 6, 2, 4],\n        [18, 6, 3, 1],\n        [18, 4, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, true, false, true, true],\n        [true, true, true, true, false],\n        [true, false, true, false, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 3, 0, 0],\n        [18, 1, 2, 3],\n        [18, 7, 4, 4],\n      ],\n      answer: [\n        [false, false, true, true, true],\n        [true, true, true, false, true],\n        [true, false, false, false, true],\n        [true, true, false, false, true],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 3, 0, 3],\n        [18, 4, 0, 4],\n        [18, 2, 1, 3],\n        [18, 6, 2, 1],\n        [18, 6, 3, 3],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, false, false, false, true],\n        [true, false, true, true, true],\n        [true, true, true, false, true],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 0, 3],\n        [18, 3, 1, 1],\n        [18, 1, 1, 2],\n        [18, 2, 2, 0],\n        [18, 3, 2, 2],\n        [18, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, true, false],\n        [false, true, false, true, false],\n        [true, true, true, true, false],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 2, 0, 1],\n        [18, 4, 1, 4],\n        [18, 7, 2, 1],\n        [18, 8, 3, 3],\n      ],\n      answer: [\n        [true, false, false, true, false],\n        [true, true, false, true, false],\n        [true, false, true, true, true],\n        [true, true, true, false, true],\n        [false, true, false, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [2, 1],\n    [5, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [16, 3, 0, 0],\n        [16, 6, 0, 2],\n        [16, 4, 1, 2],\n        [16, 7, 2, 0],\n        [16, 4, 3, 2],\n        [16, 5, 3, 4],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [true, true, false, true, false],\n        [false, false, false, false, false],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 6, 0, 1],\n        [16, 5, 0, 4],\n        [16, 7, 1, 2],\n        [16, 9, 3, 3],\n        [16, 7, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [true, false, false, false, true],\n        [true, true, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 2, 0, 1],\n        [16, 4, 0, 2],\n        [16, 4, 0, 4],\n        [16, 5, 2, 2],\n        [16, 3, 3, 3],\n      ],\n      answer: [\n        [true, false, false, true, false],\n        [true, true, false, true, false],\n        [true, true, false, false, false],\n        [true, true, true, false, false],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 5, 1, 0],\n        [16, 8, 2, 2],\n        [16, 5, 2, 4],\n        [16, 9, 4, 1],\n        [16, 8, 4, 2],\n        [16, 8, 4, 3],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [false, false, false, false, true],\n        [false, false, false, false, false],\n        [true, false, false, false, true],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 7, 0, 1],\n        [16, 6, 1, 0],\n        [16, 7, 2, 1],\n        [16, 6, 3, 2],\n        [16, 8, 3, 4],\n        [16, 5, 4, 4],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, false, true, true, false],\n        [false, false, false, true, false],\n        [false, false, false, false, false],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 8, 0, 0],\n        [16, 7, 1, 0],\n        [16, 4, 2, 0],\n        [16, 5, 3, 1],\n        [16, 5, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, true],\n        [false, true, true, true, true],\n        [false, false, false, false, true],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 6, 0, 3],\n        [16, 7, 1, 0],\n        [16, 5, 2, 1],\n        [16, 7, 2, 3],\n        [16, 6, 3, 2],\n        [16, 3, 4, 1],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, true],\n        [true, true, false, false, true],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 4, 0, 0],\n        [16, 3, 0, 2],\n        [16, 5, 0, 4],\n        [16, 5, 3, 3],\n        [16, 3, 4, 1],\n        [16, 6, 4, 3],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n        [false, false, true, false, true],\n        [true, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 5, 0, 3],\n        [16, 5, 1, 0],\n        [16, 6, 1, 1],\n        [16, 3, 1, 4],\n        [16, 7, 2, 1],\n        [16, 3, 4, 2],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, true, true, false],\n        [false, false, false, true, false],\n        [false, false, true, true, true],\n        [true, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 2, 0, 1],\n        [16, 3, 1, 0],\n        [16, 5, 3, 3],\n        [16, 6, 4, 1],\n        [16, 7, 4, 3],\n        [16, 8, 4, 4],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [false, true, true, false, false],\n        [false, false, true, false, false],\n        [true, false, true, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [2, 1],\n    [17, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [16, 9, 1, 3],\n        [16, 5, 1, 4],\n        [16, 2, 3, 0],\n        [16, 6, 4, 1],\n      ],\n      answer: [\n        [false, true, false, false, true],\n        [false, false, false, false, false],\n        [true, false, false, false, true],\n        [false, false, true, false, false],\n        [true, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 3, 1, 1],\n        [16, 6, 2, 1],\n        [16, 4, 4, 2],\n        [16, 3, 4, 4],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, false, true, false, true],\n        [false, false, false, false, false],\n        [false, true, false, false, false],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 7, 1, 4],\n        [16, 3, 2, 3],\n        [16, 3, 4, 2],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [true, false, false, false, false],\n        [false, false, true, false, false],\n        [false, false, false, true, false],\n        [false, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 3, 0, 0],\n        [16, 4, 0, 1],\n        [16, 4, 4, 3],\n        [16, 8, 4, 4],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [true, false, false, false, false],\n        [false, true, false, false, false],\n        [false, false, false, true, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 5, 0, 0],\n        [16, 9, 2, 3],\n        [16, 6, 2, 4],\n        [16, 8, 3, 3],\n        [16, 8, 4, 2],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [true, false, false, false, true],\n        [false, false, false, false, false],\n        [true, false, false, false, false],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 7, 1, 0],\n        [16, 5, 3, 1],\n        [16, 9, 3, 2],\n        [16, 7, 4, 3],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [false, false, false, false, true],\n        [false, true, false, false, false],\n        [false, false, false, false, false],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 5, 0, 1],\n        [16, 4, 2, 3],\n        [16, 8, 3, 0],\n        [16, 8, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, false, true, false],\n        [false, false, true, false, false],\n        [false, false, false, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 9, 0, 1],\n        [16, 5, 0, 2],\n        [16, 6, 1, 0],\n        [16, 6, 3, 4],\n        [16, 7, 4, 2],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, true, false, false],\n        [false, false, false, false, true],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 8, 1, 4],\n        [16, 7, 2, 2],\n        [16, 9, 2, 3],\n        [16, 9, 3, 0],\n        [16, 5, 4, 3],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 6, 0, 2],\n        [16, 5, 1, 1],\n        [16, 7, 2, 0],\n        [16, 3, 2, 4],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, false, false, false, true],\n        [false, false, false, true, false],\n        [false, true, false, false, false],\n        [false, false, true, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [14, 3, 0, 1],\n        [14, 7, 1, 1],\n        [14, 6, 1, 4],\n        [14, 4, 3, 4],\n        [14, 7, 4, 2],\n      ],\n      answer: [\n        [false, false, true, true, true],\n        [true, false, false, false, false],\n        [true, true, false, true, true],\n        [true, true, false, true, false],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 9, 0, 0],\n        [14, 9, 0, 2],\n        [14, 9, 1, 3],\n        [14, 10, 1, 4],\n        [14, 3, 2, 0],\n        [14, 10, 4, 3],\n      ],\n      answer: [\n        [false, true, false, false, true],\n        [false, true, true, false, false],\n        [false, false, true, true, true],\n        [true, true, false, true, true],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 1, 1, 0],\n        [14, 3, 1, 4],\n        [14, 1, 2, 2],\n        [14, 7, 3, 2],\n        [14, 4, 3, 4],\n      ],\n      answer: [\n        [true, false, false, true, true],\n        [false, false, true, false, false],\n        [false, false, false, false, true],\n        [true, true, false, true, false],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 8, 0, 0],\n        [14, 3, 0, 2],\n        [14, 2, 0, 4],\n        [14, 8, 2, 2],\n        [14, 2, 3, 3],\n        [14, 8, 4, 2],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [true, true, false, false, false],\n        [true, true, false, false, true],\n        [true, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 3, 0, 2],\n        [14, 2, 2, 1],\n        [14, 5, 2, 2],\n        [14, 7, 2, 4],\n        [14, 2, 3, 0],\n      ],\n      answer: [\n        [true, true, false, false, true],\n        [true, false, false, false, true],\n        [false, false, false, true, false],\n        [false, true, false, true, true],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 2, 0, 4],\n        [14, 8, 1, 4],\n        [14, 8, 2, 3],\n        [14, 2, 3, 0],\n        [14, 8, 3, 1],\n        [14, 8, 4, 4],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [true, false, false, false, false],\n        [true, false, true, false, true],\n        [false, false, true, true, true],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 1, 0, 0],\n        [14, 2, 1, 4],\n        [14, 3, 2, 1],\n        [14, 6, 2, 3],\n        [14, 2, 4, 1],\n        [14, 4, 4, 3],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, false, false, true, false],\n        [true, false, true, false, false],\n        [false, true, false, true, true],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 2, 0, 2],\n        [14, 3, 1, 2],\n        [14, 8, 1, 4],\n        [14, 9, 3, 0],\n        [14, 7, 4, 2],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, true, false],\n        [true, false, false, false, true],\n        [false, true, true, true, true],\n        [true, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 6, 0, 2],\n        [14, 9, 1, 3],\n        [14, 10, 1, 4],\n        [14, 9, 4, 0],\n      ],\n      answer: [\n        [true, true, false, false, true],\n        [true, true, false, false, false],\n        [true, true, false, true, true],\n        [false, false, true, true, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 3, 0, 2],\n        [14, 2, 0, 4],\n        [14, 1, 1, 0],\n        [14, 4, 2, 3],\n        [14, 2, 3, 0],\n        [14, 3, 3, 2],\n        [14, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, false, true, false, true],\n        [true, false, true, false, true],\n        [false, true, false, false, false],\n        [false, false, false, true, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [19, 1],\n    [20, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [12, 5, 0, 3],\n        [12, 3, 1, 0],\n        [11, 8, 1, 3],\n        [2, 1, 3, 3],\n        [1, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, true, false],\n        [false, true, true, true, true],\n        [true, false, false, false, true],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [1, 1, 0, 3],\n        [2, 1, 0, 4],\n        [12, 1, 1, 0],\n        [2, 1, 3, 0],\n        [11, 3, 3, 2],\n        [12, 6, 3, 3],\n        [1, 1, 3, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, true, true, true],\n        [true, true, false, false, false],\n        [false, false, true, false, true],\n        [false, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [2, 1, 1, 1],\n        [11, 3, 1, 2],\n        [12, 3, 2, 3],\n        [1, 1, 4, 0],\n        [12, 1, 4, 1],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, false, true, true, true],\n        [true, true, false, false, false],\n        [true, true, true, true, true],\n        [true, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 1, 2],\n        [2, 1, 2, 0],\n        [11, 3, 2, 1],\n        [12, 4, 2, 2],\n        [11, 1, 2, 4],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, true, true, false],\n        [false, true, false, false, true],\n        [false, true, true, false, false],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 0],\n        [12, 9, 1, 1],\n        [12, 1, 1, 4],\n        [11, 8, 2, 1],\n        [2, 1, 4, 3],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [false, false, false, true, false],\n        [false, true, false, false, true],\n        [false, true, true, true, true],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 1, 2]],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 7, 1, 4],\n        [12, 2, 2, 3],\n        [1, 1, 3, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [true, true, false, false, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 7, 0, 1],\n        [12, 4, 0, 2],\n        [1, 1, 0, 3],\n        [2, 1, 0, 4],\n        [12, 9, 2, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [true, false, false, true, true],\n        [true, true, false, true, false],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 1, 2],\n        [12, 5, 2, 0],\n        [12, 7, 2, 4],\n        [1, 1, 3, 0],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [false, true, false, true, false],\n        [false, false, true, true, false],\n        [true, false, true, false, false],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 4, 2, 2],\n        [12, 9, 3, 3],\n        [1, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n        [true, true, true, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [6, 3, 0, 0],\n        [6, 5, 0, 3],\n        [6, 5, 2, 2],\n        [6, 2, 2, 4],\n        [6, 2, 3, 0],\n        [6, 2, 3, 4],\n        [6, 4, 4, 2],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [true, true, true, true, true],\n        [false, false, false, false, false],\n        [false, true, true, false, false],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 4, 0, 1],\n        [6, 3, 0, 4],\n        [6, 5, 1, 1],\n        [6, 3, 2, 0],\n        [6, 2, 3, 0],\n        [6, 5, 3, 4],\n        [6, 3, 4, 1],\n      ],\n      answer: [\n        [true, false, true, true, false],\n        [true, false, true, true, true],\n        [false, true, false, true, true],\n        [false, true, true, true, false],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 0, 2],\n        [6, 3, 1, 1],\n        [6, 3, 1, 4],\n        [6, 2, 2, 0],\n        [6, 5, 2, 3],\n        [6, 5, 3, 1],\n        [6, 3, 4, 1],\n        [6, 3, 4, 2],\n        [6, 3, 4, 4],\n      ],\n      answer: [\n        [false, true, false, true, true],\n        [false, false, false, true, false],\n        [false, true, true, false, false],\n        [true, false, true, true, true],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 2, 0, 2],\n        [6, 3, 1, 0],\n        [6, 5, 1, 1],\n        [6, 4, 1, 3],\n        [6, 5, 2, 3],\n        [6, 4, 3, 0],\n        [6, 4, 4, 1],\n        [6, 5, 4, 3],\n      ],\n      answer: [\n        [true, false, false, true, true],\n        [false, false, true, false, false],\n        [true, true, true, false, false],\n        [false, true, true, true, true],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 0, 1],\n        [6, 1, 0, 4],\n        [6, 3, 1, 0],\n        [6, 6, 1, 2],\n        [6, 3, 2, 0],\n        [6, 1, 2, 4],\n        [6, 5, 3, 1],\n        [6, 6, 3, 3],\n      ],\n      answer: [\n        [true, false, true, true, false],\n        [false, true, false, false, false],\n        [false, true, true, true, false],\n        [true, false, true, false, false],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 1, 0, 0],\n        [6, 4, 0, 3],\n        [6, 5, 1, 3],\n        [6, 3, 2, 1],\n        [6, 2, 2, 4],\n        [6, 3, 4, 0],\n        [6, 2, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, false, true, false, true],\n        [false, false, false, true, false],\n        [true, true, false, false, false],\n        [false, true, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 1, 1, 0],\n        [6, 2, 1, 2],\n        [6, 2, 1, 3],\n        [6, 1, 1, 4],\n        [6, 3, 3, 1],\n        [6, 3, 3, 2],\n        [6, 1, 3, 3],\n        [6, 1, 4, 2],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [false, false, false, false, false],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 1, 0, 0],\n        [6, 2, 0, 1],\n        [6, 2, 0, 2],\n        [6, 3, 1, 3],\n        [6, 3, 3, 1],\n        [6, 5, 3, 2],\n        [6, 1, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, true, false, false],\n        [false, true, true, true, false],\n        [false, false, false, true, false],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 2, 0, 0],\n        [6, 6, 1, 1],\n        [6, 6, 1, 3],\n        [6, 4, 1, 4],\n        [6, 4, 3, 1],\n        [6, 4, 3, 4],\n        [6, 4, 4, 3],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [true, false, true, false, false],\n        [true, true, false, true, true],\n        [false, false, true, true, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 0, 4],\n        [6, 4, 1, 0],\n        [6, 7, 1, 1],\n        [6, 3, 3, 0],\n        [6, 2, 3, 4],\n        [6, 1, 4, 1],\n        [6, 3, 4, 2],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, false, true, true, true],\n        [true, true, true, false, false],\n        [false, true, false, true, false],\n        [false, false, false, true, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [4, 1],\n    [7, 1],\n    [10, 1],\n    [22, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [12, 4, 0, 4],\n        [12, 2, 1, 0],\n        [12, 4, 3, 3],\n        [12, 4, 4, 1],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [false, false, true, false, false],\n        [true, true, false, true, true],\n        [false, false, true, false, false],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 3, 1, 0],\n        [12, 2, 1, 3],\n        [12, 2, 3, 1],\n        [12, 4, 3, 4],\n      ],\n      answer: [\n        [false, true, false, true, true],\n        [false, true, true, false, false],\n        [false, true, false, true, true],\n        [true, false, true, false, false],\n        [true, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 3, 1, 1],\n        [12, 2, 1, 4],\n        [12, 2, 3, 4],\n        [12, 4, 4, 2],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, false, false, true, false],\n        [true, true, true, false, true],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 0, 2],\n        [12, 2, 1, 0],\n        [12, 1, 1, 4],\n        [12, 2, 3, 0],\n        [12, 2, 3, 4],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [false, false, true, true, false],\n        [true, true, false, false, true],\n        [false, false, true, true, false],\n        [true, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 0, 0],\n        [12, 4, 1, 4],\n        [12, 8, 4, 3],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [true, false, false, false, false],\n        [false, true, true, true, true],\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 2, 0, 0],\n        [12, 1, 0, 3],\n        [12, 4, 3, 1],\n        [12, 4, 3, 3],\n        [12, 1, 4, 2],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [true, true, false, true, true],\n        [false, false, true, false, false],\n        [false, false, true, false, false],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 8, 0, 3],\n        [12, 1, 2, 1],\n      ],\n      answer: [\n        [true, false, true, false, false],\n        [false, true, true, false, false],\n        [true, false, true, false, false],\n        [false, true, true, false, false],\n        [true, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 0, 2],\n        [12, 1, 0, 4],\n        [12, 3, 1, 0],\n        [12, 2, 2, 2],\n        [12, 3, 4, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, true, false, true],\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [true, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 3, 2, 2],\n        [12, 3, 2, 4],\n        [12, 3, 3, 0],\n        [12, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [false, true, true, false, true],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 4, 1, 1],\n        [12, 2, 2, 4],\n        [12, 3, 3, 1],\n        [12, 1, 4, 0],\n        [12, 1, 4, 4],\n      ],\n      answer: [\n        [true, false, false, true, true],\n        [true, false, false, true, false],\n        [false, true, true, true, false],\n        [true, false, false, false, true],\n        [false, true, true, true, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [7, 1],\n    [20, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [2, 1, 0, 4],\n        [12, 3, 1, 2],\n        [12, 1, 2, 1],\n        [12, 6, 3, 4],\n      ],\n      answer: [\n        [true, false, false, true, false],\n        [true, true, false, true, false],\n        [true, false, true, true, true],\n        [true, true, true, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 0, 0],\n        [12, 1, 1, 1],\n        [12, 4, 4, 1],\n        [12, 10, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [true, false, true, false, false],\n        [true, true, true, false, false],\n        [false, false, true, false, false],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 0],\n        [2, 1, 0, 2],\n        [12, 1, 0, 4],\n        [12, 1, 3, 1],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, true, false, true, true],\n        [true, true, false, false, true],\n        [true, false, true, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 2, 1, 0],\n        [2, 1, 1, 2],\n        [12, 6, 3, 0],\n        [12, 6, 3, 4],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, true, false, true, false],\n        [true, true, true, true, false],\n        [false, false, false, true, false],\n        [false, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 6, 0, 3],\n        [2, 1, 1, 2],\n        [12, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n        [true, true, false, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 0, 4],\n        [12, 3, 1, 0],\n        [12, 6, 3, 4],\n        [12, 2, 4, 2],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [false, true, false, true, true],\n        [false, true, false, false, false],\n        [true, true, true, true, false],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 4, 1, 3],\n        [12, 1, 2, 4],\n        [2, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, true, false, true, false],\n        [false, true, true, true, true],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [12, 1, 1, 0],\n        [12, 2, 1, 3],\n        [12, 3, 3, 3],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [false, true, false, false, true],\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 7, 2, 2],\n        [12, 5, 3, 0],\n        [2, 1, 3, 3],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [false, true, false, false, false],\n        [false, true, false, true, true],\n        [false, true, true, false, true],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 2, 0, 3],\n        [12, 4, 1, 0],\n        [12, 1, 1, 2],\n        [12, 1, 2, 3],\n        [12, 1, 4, 3],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [false, true, false, true, true],\n        [false, true, true, false, true],\n        [false, false, true, true, true],\n        [true, true, true, false, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [6, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [3, 3, 0, 1],\n        [4, 4, 1, 3],\n        [3, 2, 3, 1],\n        [3, 1, 3, 2],\n        [4, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, true, false, false, false],\n        [true, false, false, false, false],\n        [true, true, true, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [3, 2, 0, 2],\n        [3, 2, 1, 0],\n        [3, 3, 1, 1],\n        [4, 2, 2, 0],\n        [4, 1, 2, 1],\n        [3, 1, 2, 3],\n        [4, 2, 4, 0],\n        [3, 1, 4, 3],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, true, true, false, false],\n        [false, false, true, true, false],\n        [false, true, true, false, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [3, 2, 0, 1],\n        [3, 2, 1, 2],\n        [3, 1, 2, 0],\n        [4, 4, 2, 3],\n        [4, 2, 2, 4],\n        [4, 3, 3, 3],\n        [3, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, true, true, false, true],\n        [true, true, false, false, false],\n        [false, true, true, false, false],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [4, 2, 1, 0],\n        [4, 3, 1, 2],\n        [4, 2, 2, 4],\n        [3, 1, 3, 0],\n        [4, 2, 3, 1],\n        [4, 1, 3, 2],\n        [4, 1, 3, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [true, true, true, true, false],\n        [true, false, false, true, false],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [3, 3, 0, 2],\n        [3, 2, 0, 4],\n        [4, 3, 1, 0],\n        [3, 3, 1, 2],\n        [4, 2, 2, 1],\n        [3, 1, 2, 4],\n        [4, 2, 3, 0],\n        [3, 3, 4, 2],\n        [3, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, false, true, true, true],\n        [false, false, true, false, true],\n        [false, true, true, false, false],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [4, 2, 0, 1],\n        [3, 3, 1, 4],\n        [4, 3, 2, 1],\n        [4, 4, 2, 2],\n        [4, 1, 2, 3],\n        [3, 1, 3, 0],\n        [3, 2, 3, 4],\n      ],\n      answer: [\n        [false, false, true, true, true],\n        [false, false, false, true, true],\n        [false, false, false, false, true],\n        [true, true, false, true, true],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [4, 2, 0, 1],\n        [3, 1, 0, 2],\n        [4, 1, 1, 1],\n        [3, 1, 1, 3],\n        [4, 2, 2, 3],\n        [3, 4, 3, 1],\n        [3, 1, 4, 1],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [true, false, true, true, false],\n        [true, true, true, false, false],\n        [true, true, true, false, false],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [3, 2, 0, 2],\n        [3, 1, 0, 3],\n        [3, 1, 2, 0],\n        [4, 1, 2, 2],\n        [4, 4, 2, 3],\n        [4, 1, 4, 0],\n        [3, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [false, true, true, false, false],\n        [true, true, false, false, false],\n        [false, true, true, false, false],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [3, 1, 1, 0],\n        [4, 3, 1, 3],\n        [3, 2, 1, 4],\n        [4, 3, 2, 1],\n        [4, 3, 2, 2],\n        [3, 3, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [true, false, false, false, true],\n        [true, false, false, false, true],\n        [true, false, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [4, 2, 0, 2],\n        [4, 1, 1, 3],\n        [3, 1, 2, 1],\n        [3, 3, 3, 1],\n        [3, 3, 3, 2],\n        [3, 3, 4, 1],\n        [3, 2, 4, 4],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, false, false, false, true],\n        [false, true, false, true, true],\n        [false, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [6, 1],\n    [13, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [3, 1, 0, 0],\n        [8, 1, 0, 3],\n        [10, 2, 2, 3],\n        [10, 2, 3, 4],\n        [8, 1, 4, 4],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, false, true, true, true],\n        [true, false, true, false, false],\n        [true, false, true, false, false],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [8, 3, 0, 1],\n        [10, 2, 1, 2],\n        [8, 3, 1, 3],\n        [10, 3, 3, 2],\n        [10, 4, 4, 4],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, true, false, false, true],\n        [true, true, false, false, true],\n        [true, false, false, true, true],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [3, 1, 1, 1],\n        [8, 3, 1, 3],\n        [3, 1, 3, 2],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, true, false, false, true],\n        [false, false, false, true, true],\n        [false, false, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [8, 1, 1, 0],\n        [10, 1, 2, 0],\n        [8, 4, 4, 3],\n        [3, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, false, false, true, false],\n        [false, false, false, true, false],\n        [false, false, false, true, true],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [3, 2, 0, 3],\n        [8, 3, 1, 0],\n        [3, 1, 1, 1],\n        [10, 3, 2, 4],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, true, false, true, false],\n        [true, true, false, true, false],\n        [true, false, false, true, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [3, 1, 0, 0],\n        [10, 4, 1, 4],\n        [8, 3, 2, 2],\n        [10, 3, 3, 4],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, true, true, true, false],\n        [false, false, false, true, false],\n        [true, false, true, true, false],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [8, 3, 0, 0],\n        [8, 1, 0, 1],\n        [3, 1, 1, 0],\n        [3, 2, 1, 3],\n        [8, 1, 2, 2],\n        [10, 2, 2, 3],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [true, false, false, true, true],\n        [true, false, false, false, true],\n        [true, true, true, true, true],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [8, 1, 0, 3],\n        [3, 1, 1, 2],\n        [10, 4, 1, 3],\n        [3, 2, 1, 4],\n        [10, 3, 3, 2],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [true, true, true, false, true],\n        [true, false, false, false, true],\n        [true, true, false, false, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [3, 1, 1, 3],\n        [10, 2, 2, 2],\n        [8, 3, 4, 0],\n        [3, 1, 4, 1],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [true, false, false, true, false],\n        [true, true, false, false, false],\n        [false, true, false, false, false],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [10, 2, 0, 0],\n        [10, 2, 1, 2],\n        [10, 1, 2, 3],\n        [10, 3, 4, 3],\n        [8, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [true, true, false, false, false],\n        [true, false, false, false, false],\n        [true, false, true, true, true],\n        [true, true, true, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [2, 1],\n    [11, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [14, 2, 0, 1],\n        [14, 1, 0, 2],\n        [14, 4, 2, 4],\n        [14, 5, 4, 2],\n      ],\n      answer: [\n        [true, false, false, true, false],\n        [false, true, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, true, true],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 1, 0, 1],\n        [14, 4, 1, 4],\n        [14, 6, 2, 1],\n        [14, 1, 4, 4],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [false, false, true, true, false],\n        [true, false, true, true, false],\n        [false, true, false, false, false],\n        [false, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 1, 0, 4],\n        [14, 1, 1, 2],\n        [14, 2, 2, 0],\n        [14, 2, 2, 2],\n        [14, 1, 3, 0],\n        [14, 2, 4, 3],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [true, false, false, false, true],\n        [false, true, false, true, false],\n        [false, false, false, false, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 5, 2, 1],\n        [14, 2, 2, 3],\n        [14, 1, 2, 4],\n        [14, 1, 4, 2],\n        [14, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, true, false, true, false],\n        [false, false, true, false, false],\n        [false, false, false, false, true],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 9, 1, 0],\n        [14, 9, 1, 4],\n        [14, 9, 4, 1],\n        [14, 9, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 5, 1, 3],\n        [14, 2, 2, 4],\n        [14, 2, 3, 1],\n        [14, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, true, true, false, true],\n        [false, false, false, false, false],\n        [true, false, true, false, true],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 5, 0, 3],\n        [14, 1, 4, 0],\n        [14, 4, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n        [true, false, true, true, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 5, 1, 3],\n        [14, 1, 3, 1],\n        [14, 2, 3, 2],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, true, true, false, true],\n        [false, false, false, false, false],\n        [true, false, false, true, false],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 2, 2, 0],\n        [14, 5, 2, 2],\n        [14, 1, 3, 4],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [true, false, true, true, false],\n        [false, false, false, false, false],\n        [true, false, true, false, false],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 2, 0, 3],\n        [14, 2, 1, 1],\n        [14, 4, 2, 3],\n        [14, 2, 3, 1],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [true, false, false, false, false],\n        [false, true, false, false, false],\n        [false, false, false, true, true],\n        [false, true, false, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [2, 1],\n    [7, 1],\n    [8, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [1, 1, 0, 0],\n        [2, 1, 0, 1],\n        [1, 1, 0, 3],\n        [1, 1, 1, 2],\n        [2, 1, 3, 2],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [true, false, true, false, true],\n        [true, false, true, false, true],\n        [true, false, false, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 2],\n        [2, 1, 0, 3],\n        [1, 1, 1, 1],\n        [1, 1, 2, 2],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [false, true, true, true, false],\n        [false, false, true, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 0],\n        [2, 1, 2, 1],\n        [2, 1, 2, 2],\n        [2, 1, 3, 2],\n        [2, 1, 3, 3],\n        [2, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [false, true, false, false, true],\n        [false, false, false, true, true],\n        [false, true, false, false, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [1, 1, 0, 3],\n        [2, 1, 0, 4],\n        [1, 1, 2, 2],\n        [1, 1, 3, 2],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [false, true, true, true, false],\n        [false, false, true, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 1, 2],\n        [1, 1, 2, 3],\n        [1, 1, 2, 4],\n        [2, 1, 3, 2],\n        [2, 1, 4, 1],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, true, false, true, true],\n        [false, true, false, false, true],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 3],\n        [2, 1, 1, 1],\n        [2, 1, 1, 2],\n        [2, 1, 2, 2],\n        [1, 1, 3, 0],\n        [2, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, false, false, true, false],\n        [true, true, false, true, false],\n        [true, false, false, true, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 1, 2],\n        [1, 1, 1, 4],\n        [1, 1, 3, 1],\n        [1, 1, 3, 3],\n        [1, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, false, true, false, false],\n        [true, true, true, true, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 4],\n        [2, 1, 1, 2],\n        [1, 1, 2, 4],\n        [1, 1, 3, 1],\n        [1, 1, 4, 0],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, false, true, false],\n        [false, true, false, true, true],\n        [false, true, false, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 1],\n        [2, 1, 1, 2],\n        [2, 1, 1, 3],\n        [2, 1, 4, 1],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, true, false, false, true],\n        [false, true, true, true, true],\n        [false, true, false, false, true],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 2, 0],\n        [2, 1, 2, 3],\n        [2, 1, 3, 1],\n        [1, 1, 3, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, false, true, false, false],\n        [true, false, true, true, false],\n        [true, true, true, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [6, 1, 0, 1],\n        [3, 2, 0, 3],\n        [4, 2, 2, 0],\n        [4, 4, 2, 2],\n        [6, 3, 2, 3],\n        [6, 3, 3, 0],\n        [3, 2, 3, 4],\n        [6, 2, 4, 2],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [true, false, false, true, false],\n        [false, false, false, false, true],\n        [false, true, false, false, true],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [3, 1, 0, 3],\n        [5, 2, 1, 1],\n        [3, 1, 2, 0],\n        [6, 8, 2, 3],\n        [6, 7, 3, 1],\n        [6, 2, 4, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, true, true, true],\n        [true, true, true, false, true],\n        [false, false, true, true, true],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 1, 0, 0],\n        [4, 1, 0, 4],\n        [5, 4, 1, 2],\n        [3, 1, 1, 4],\n        [6, 1, 2, 0],\n        [5, 3, 2, 3],\n        [5, 7, 3, 1],\n        [6, 5, 3, 2],\n        [3, 1, 3, 4],\n        [5, 3, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, false, true, true, true],\n        [false, false, false, true, false],\n        [false, true, false, true, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [4, 1, 0, 0],\n        [3, 1, 0, 2],\n        [3, 1, 0, 4],\n        [3, 3, 1, 1],\n        [4, 4, 2, 3],\n        [3, 3, 3, 0],\n        [5, 4, 3, 4],\n        [6, 3, 4, 2],\n        [3, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [true, true, true, false, true],\n        [true, true, false, false, false],\n        [true, true, true, false, true],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [5, 4, 0, 1],\n        [6, 3, 0, 2],\n        [6, 4, 1, 1],\n        [6, 3, 1, 3],\n        [5, 4, 2, 0],\n        [3, 1, 2, 4],\n        [4, 1, 3, 0],\n        [5, 4, 3, 2],\n        [3, 1, 3, 4],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, false, true, false, false],\n        [true, true, false, false, true],\n        [false, false, true, false, true],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 5, 0, 3],\n        [3, 2, 1, 0],\n        [3, 2, 1, 1],\n        [4, 1, 2, 2],\n        [5, 3, 3, 0],\n        [6, 5, 3, 4],\n        [6, 5, 4, 2],\n      ],\n      answer: [\n        [true, false, true, false, true],\n        [true, true, true, true, true],\n        [false, false, false, true, true],\n        [true, true, true, true, false],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 4, 0, 3],\n        [5, 2, 1, 1],\n        [5, 2, 1, 2],\n        [3, 3, 1, 3],\n        [5, 1, 2, 0],\n        [6, 7, 2, 2],\n        [5, 1, 3, 0],\n        [3, 2, 3, 3],\n        [4, 1, 3, 4],\n        [5, 2, 4, 2],\n        [6, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [true, true, true, true, true],\n        [true, true, false, true, true],\n        [true, false, true, true, false],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [5, 1, 0, 2],\n        [6, 3, 0, 4],\n        [5, 3, 1, 1],\n        [6, 5, 2, 0],\n        [5, 3, 2, 2],\n        [6, 7, 3, 3],\n        [4, 1, 4, 1],\n        [5, 2, 4, 2],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [true, true, false, true, true],\n        [false, true, true, false, true],\n        [true, true, true, false, true],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [5, 4, 0, 1],\n        [4, 4, 1, 2],\n        [6, 3, 1, 4],\n        [3, 1, 2, 0],\n        [6, 4, 3, 0],\n        [6, 7, 3, 2],\n        [6, 3, 3, 4],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [false, false, false, false, false],\n        [true, true, false, true, false],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 4, 0, 2],\n        [3, 1, 0, 3],\n        [6, 2, 1, 0],\n        [4, 2, 2, 0],\n        [3, 1, 2, 2],\n        [5, 3, 2, 3],\n        [6, 3, 3, 1],\n        [4, 2, 4, 2],\n        [4, 2, 4, 3],\n        [3, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, true, false, true, true],\n        [false, false, true, true, true],\n        [true, false, false, false, true],\n        [false, true, false, false, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [10, 2, 0, 1],\n        [7, 2, 0, 2],\n        [8, 1, 1, 0],\n        [10, 2, 1, 3],\n        [9, 1, 2, 1],\n        [7, 1, 2, 4],\n        [9, 4, 3, 0],\n        [10, 3, 4, 1],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [false, true, false, false, true],\n        [false, true, true, true, true],\n        [true, false, false, false, false],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [10, 3, 0, 3],\n        [10, 3, 1, 1],\n        [7, 3, 1, 4],\n        [7, 1, 2, 0],\n        [9, 1, 2, 1],\n        [7, 4, 2, 3],\n        [10, 1, 3, 0],\n        [7, 2, 4, 1],\n        [9, 2, 4, 4],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, false, true, false, true],\n        [true, true, true, true, false],\n        [false, false, true, false, false],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [10, 4, 0, 4],\n        [8, 4, 1, 0],\n        [8, 4, 1, 3],\n        [8, 2, 1, 4],\n        [9, 1, 2, 2],\n        [9, 3, 3, 0],\n        [8, 2, 4, 1],\n        [8, 3, 4, 2],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, true, true, false, false],\n        [true, false, true, true, true],\n        [true, false, false, true, false],\n        [true, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [9, 3, 0, 2],\n        [10, 2, 1, 1],\n        [8, 2, 1, 4],\n        [9, 4, 2, 2],\n        [7, 3, 3, 0],\n        [10, 4, 3, 3],\n        [7, 2, 4, 1],\n        [10, 4, 4, 2],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, false, true, true, false],\n        [false, false, true, false, false],\n        [true, true, true, false, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [9, 2, 0, 0],\n        [10, 4, 1, 0],\n        [9, 2, 2, 0],\n        [9, 2, 2, 1],\n        [9, 2, 2, 4],\n        [10, 4, 3, 4],\n        [7, 1, 4, 1],\n        [9, 2, 4, 2],\n        [7, 2, 4, 3],\n      ],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, true, true, true],\n        [true, true, false, false, true],\n        [true, true, true, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [10, 3, 0, 2],\n        [9, 3, 1, 1],\n        [7, 4, 1, 4],\n        [9, 3, 2, 1],\n        [10, 2, 3, 2],\n        [9, 1, 4, 1],\n        [7, 4, 4, 2],\n        [7, 3, 4, 3],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, false, false, true],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [10, 1, 0, 1],\n        [8, 1, 0, 4],\n        [10, 3, 1, 0],\n        [7, 4, 1, 2],\n        [9, 3, 2, 1],\n        [9, 3, 2, 3],\n        [10, 2, 3, 1],\n        [8, 3, 3, 3],\n        [10, 2, 4, 0],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [false, true, true, true, false],\n        [false, true, false, true, false],\n        [true, false, false, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [9, 1, 0, 3],\n        [10, 4, 1, 0],\n        [9, 1, 2, 2],\n        [10, 2, 3, 0],\n        [8, 3, 3, 1],\n        [9, 4, 4, 1],\n        [8, 2, 4, 3],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [false, true, true, true, true],\n        [true, true, true, false, true],\n        [false, false, true, false, true],\n        [false, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [8, 2, 0, 2],\n        [10, 4, 1, 1],\n        [7, 4, 1, 4],\n        [8, 4, 2, 0],\n        [8, 2, 2, 3],\n        [9, 2, 3, 0],\n        [7, 4, 4, 1],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, false, true, true, true],\n        [false, false, false, false, false],\n        [true, false, true, true, false],\n        [true, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [10, 3, 0, 0],\n        [7, 2, 0, 4],\n        [10, 2, 1, 1],\n        [8, 4, 1, 2],\n        [9, 3, 2, 3],\n        [7, 2, 3, 1],\n        [10, 4, 3, 3],\n        [8, 2, 4, 0],\n        [9, 3, 4, 2],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [true, false, false, false, true],\n        [false, false, true, true, false],\n        [true, true, true, false, true],\n        [false, true, true, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [16, 3, 0, 0],\n        [18, 2, 0, 3],\n        [17, 2, 1, 2],\n        [17, 5, 1, 3],\n        [16, 5, 3, 2],\n        [15, 2, 3, 4],\n        [15, 2, 4, 0],\n        [17, 4, 4, 1],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [false, false, true, true, false],\n        [true, true, true, false, true],\n        [false, false, false, false, true],\n        [true, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 1, 0, 2],\n        [18, 5, 1, 0],\n        [15, 1, 1, 4],\n        [15, 5, 3, 0],\n        [15, 7, 4, 1],\n        [15, 6, 4, 3],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [false, true, true, false, true],\n        [true, true, false, true, false],\n        [true, true, true, true, false],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 0, 1],\n        [15, 2, 1, 2],\n        [18, 2, 1, 3],\n        [17, 6, 2, 0],\n        [18, 1, 2, 3],\n        [17, 5, 3, 2],\n        [17, 4, 4, 4],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [false, false, true, false, false],\n        [true, false, false, false, true],\n        [false, false, true, false, true],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 6, 0, 2],\n        [18, 2, 1, 3],\n        [17, 3, 1, 4],\n        [17, 7, 3, 0],\n        [16, 6, 3, 3],\n        [15, 4, 3, 4],\n        [17, 3, 4, 1],\n      ],\n      answer: [\n        [false, false, false, true, false],\n        [false, true, false, false, true],\n        [false, false, false, false, true],\n        [true, false, false, false, true],\n        [false, true, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 2, 0, 1],\n        [16, 5, 1, 2],\n        [15, 1, 1, 4],\n        [17, 7, 3, 0],\n        [15, 6, 4, 0],\n        [17, 4, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, true, false, false, true],\n        [false, true, false, false, false],\n        [true, false, false, false, false],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 6, 0, 3],\n        [18, 4, 1, 0],\n        [18, 4, 1, 2],\n        [15, 6, 3, 1],\n        [15, 3, 3, 2],\n        [17, 2, 4, 4],\n      ],\n      answer: [\n        [true, true, true, false, true],\n        [false, true, false, true, true],\n        [true, true, false, true, false],\n        [true, true, true, false, false],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [18, 4, 0, 3],\n        [17, 5, 1, 4],\n        [15, 1, 2, 1],\n        [16, 1, 2, 4],\n        [17, 4, 3, 2],\n        [15, 6, 4, 0],\n      ],\n      answer: [\n        [true, true, true, false, true],\n        [false, false, false, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [17, 4, 0, 1],\n        [18, 5, 0, 2],\n        [16, 6, 0, 3],\n        [16, 5, 1, 0],\n        [17, 4, 1, 2],\n        [15, 3, 3, 4],\n        [16, 4, 4, 1],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [false, false, true, false, true],\n        [false, true, true, false, true],\n        [false, false, true, false, true],\n        [false, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [17, 2, 0, 0],\n        [17, 4, 0, 3],\n        [18, 3, 2, 2],\n        [15, 4, 3, 1],\n        [15, 3, 3, 4],\n        [15, 5, 4, 0],\n        [18, 6, 4, 4],\n      ],\n      answer: [\n        [true, false, false, true, false],\n        [true, false, false, false, false],\n        [false, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [18, 2, 0, 2],\n        [18, 3, 1, 2],\n        [16, 2, 1, 4],\n        [15, 1, 2, 0],\n        [18, 2, 2, 3],\n        [15, 2, 3, 2],\n        [17, 3, 4, 4],\n      ],\n      answer: [\n        [true, true, false, false, true],\n        [false, false, false, true, false],\n        [true, false, true, false, false],\n        [false, false, true, false, true],\n        [true, false, false, false, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [],\n  puzzles: [\n    {\n      clues: [\n        [14, 13, 1, 1],\n        [13, 1, 2, 4],\n        [14, 5, 3, 0],\n        [12, 7, 3, 2],\n        [11, 8, 4, 2],\n      ],\n      answer: [\n        [true, true, false, false, true],\n        [true, false, true, true, false],\n        [true, true, false, true, true],\n        [false, false, false, false, true],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 9, 0, 3],\n        [11, 8, 1, 2],\n        [13, 5, 3, 3],\n        [12, 2, 4, 1],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [true, true, true, false, true],\n        [true, false, false, false, true],\n        [true, true, false, true, true],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [13, 6, 0, 0],\n        [14, 11, 0, 3],\n        [14, 14, 3, 3],\n        [13, 11, 3, 4],\n        [13, 4, 4, 0],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, true, true, true, false],\n        [true, true, true, true, false],\n        [true, false, false, false, true],\n        [true, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [14, 9, 0, 2],\n        [11, 1, 0, 3],\n        [12, 4, 3, 2],\n        [14, 15, 4, 0],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [true, true, true, false, false],\n        [true, true, false, true, true],\n        [true, false, false, false, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 12, 1, 2],\n        [14, 9, 3, 1],\n        [12, 9, 4, 0],\n        [14, 7, 4, 2],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, false, false, true, false],\n        [true, false, true, false, true],\n        [true, false, true, true, true],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [13, 3, 0, 1],\n        [12, 3, 1, 3],\n        [12, 1, 3, 4],\n        [14, 14, 4, 0],\n        [11, 5, 4, 4],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, false, true, false, false],\n        [true, true, true, false, true],\n        [true, false, false, true, false],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [12, 2, 0, 1],\n        [12, 5, 0, 3],\n        [14, 10, 2, 0],\n        [14, 7, 2, 3],\n        [14, 13, 4, 2],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [true, true, true, false, true],\n        [false, true, true, false, false],\n        [true, false, true, false, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 5, 1, 2],\n        [13, 9, 3, 0],\n        [13, 10, 3, 3],\n        [14, 8, 3, 4],\n        [11, 8, 4, 4],\n      ],\n      answer: [\n        [false, false, true, true, true],\n        [false, false, true, false, true],\n        [false, false, false, true, false],\n        [true, true, false, true, false],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [13, 3, 0, 1],\n        [12, 5, 0, 3],\n        [14, 1, 0, 4],\n        [14, 9, 3, 3],\n        [14, 9, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, true, false, false, true],\n        [false, true, false, true, false],\n        [true, true, true, false, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [14, 1, 1, 4],\n        [12, 1, 2, 2],\n        [13, 13, 3, 3],\n        [11, 8, 4, 2],\n        [14, 8, 4, 4],\n      ],\n      answer: [\n        [true, false, false, false, true],\n        [false, false, true, false, false],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [19, 1],\n    [20, 1],\n  ],\n  puzzles: [\n    {\n      clues: [[2, 1, 1, 0]],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 0, 2]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 4, 4]],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 4, 4]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [[1, 1, 3, 1]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [[1, 1, 2, 2]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 2, 0]],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [[2, 1, 1, 2]],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 4, 1]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [[1, 1, 4, 0]],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [17, 1],\n    [18, 1],\n  ],\n  puzzles: [\n    {\n      clues: [[1, 1, 0, 1]],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 0, 4]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[1, 1, 2, 2]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[1, 1, 0, 4]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 0, 3]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 4, 2]],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 0, 0]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      clues: [[2, 1, 4, 4]],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [[1, 1, 1, 4]],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [[2, 1, 0, 1]],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [9, 1],\n    [10, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [1, 1, 0, 4],\n        [2, 1, 1, 2],\n        [2, 1, 2, 4],\n        [2, 1, 3, 0],\n        [1, 1, 3, 1],\n        [2, 1, 3, 3],\n        [2, 1, 4, 1],\n        [2, 1, 4, 2],\n        [2, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n        [false, true, true, false, true],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [2, 1, 0, 3],\n        [2, 1, 0, 4],\n        [1, 1, 1, 1],\n        [2, 1, 1, 4],\n        [2, 1, 2, 4],\n        [1, 1, 3, 0],\n        [2, 1, 3, 3],\n        [2, 1, 4, 2],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [1, 1, 1, 3],\n        [1, 1, 2, 1],\n        [1, 1, 2, 2],\n        [1, 1, 2, 3],\n        [1, 1, 3, 0],\n        [2, 1, 3, 3],\n        [1, 1, 4, 2],\n        [2, 1, 4, 4],\n      ],\n      answer: [\n        [true, false, false, false, true],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [true, false, false, false, true],\n        [false, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 1],\n        [1, 1, 0, 3],\n        [2, 1, 1, 0],\n        [2, 1, 2, 3],\n        [2, 1, 2, 4],\n        [2, 1, 3, 2],\n        [1, 1, 3, 3],\n        [1, 1, 4, 0],\n        [1, 1, 4, 1],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [false, false, true, false, false],\n        [false, false, true, false, false],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 1],\n        [2, 1, 0, 2],\n        [2, 1, 1, 0],\n        [2, 1, 1, 2],\n        [1, 1, 2, 2],\n        [1, 1, 2, 3],\n        [2, 1, 3, 1],\n        [1, 1, 3, 4],\n        [1, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, false, false],\n        [true, false, true, true, true],\n        [true, false, true, true, true],\n        [true, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 3],\n        [2, 1, 0, 4],\n        [2, 1, 1, 1],\n        [1, 1, 1, 2],\n        [1, 1, 2, 3],\n        [2, 1, 3, 0],\n        [2, 1, 4, 0],\n        [2, 1, 4, 1],\n        [1, 1, 4, 3],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 4],\n        [1, 1, 1, 0],\n        [2, 1, 1, 1],\n        [2, 1, 1, 3],\n        [2, 1, 2, 0],\n        [1, 1, 3, 1],\n        [2, 1, 3, 4],\n        [1, 1, 4, 0],\n        [2, 1, 4, 2],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [true, false, false, false, true],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [true, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 0],\n        [2, 1, 1, 2],\n        [2, 1, 1, 4],\n        [1, 1, 2, 4],\n        [2, 1, 3, 0],\n        [2, 1, 3, 3],\n        [1, 1, 4, 0],\n        [2, 1, 4, 1],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, false, false],\n        [true, false, true, true, true],\n        [false, true, false, false, false],\n        [true, false, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 3],\n        [2, 1, 1, 0],\n        [2, 1, 1, 2],\n        [2, 1, 2, 3],\n        [1, 1, 3, 1],\n        [1, 1, 3, 2],\n        [1, 1, 3, 3],\n        [2, 1, 4, 3],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [false, false, false, false, true],\n        [false, false, false, false, true],\n        [true, true, true, true, false],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 0],\n        [1, 1, 1, 0],\n        [1, 1, 1, 1],\n        [2, 1, 1, 4],\n        [2, 1, 2, 4],\n        [2, 1, 3, 0],\n        [1, 1, 3, 3],\n        [1, 1, 4, 2],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n        [false, false, true, true, true],\n        [false, false, true, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [11, 1],\n    [12, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [1, 1, 2, 3],\n        [2, 1, 4, 0],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 4],\n        [1, 1, 3, 2],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 3, 0],\n        [2, 1, 3, 1],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 1, 3],\n        [1, 1, 4, 3],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 2, 2],\n        [1, 1, 3, 2],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 2, 1],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 1, 0],\n        [2, 1, 4, 0],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 3, 3],\n        [1, 1, 4, 3],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 1],\n        [2, 1, 2, 4],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 1, 2],\n        [1, 1, 4, 2],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [\n    [1, 1],\n    [2, 1],\n    [13, 1],\n    [14, 1],\n  ],\n  puzzles: [\n    {\n      clues: [\n        [1, 1, 2, 2],\n        [2, 1, 2, 4],\n        [2, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, false],\n        [true, false, true, true, false],\n        [true, false, false, true, false],\n        [true, true, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 1, 1],\n        [2, 1, 3, 3],\n        [2, 1, 4, 2],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, false, true, false, true],\n        [true, true, true, false, true],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 2],\n        [2, 1, 1, 3],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [true, true, true, false, true],\n        [true, false, true, false, true],\n        [true, false, false, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 2, 2],\n        [1, 1, 3, 3],\n        [2, 1, 4, 1],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, false, true, false, true],\n        [true, false, true, true, true],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 1, 4],\n        [1, 1, 2, 3],\n        [1, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, false, true, true, true],\n        [true, false, false, false, false],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 0, 0],\n        [2, 1, 1, 3],\n        [2, 1, 2, 0],\n        [1, 1, 4, 3],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [false, true, false, false, true],\n        [false, true, true, false, true],\n        [false, false, false, false, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 2],\n        [1, 1, 1, 3],\n        [1, 1, 3, 3],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [false, false, false, true, false],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [2, 1, 1, 1],\n        [2, 1, 1, 4],\n        [2, 1, 2, 1],\n        [2, 1, 4, 2],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, false, true, true, false],\n        [true, false, false, true, false],\n        [true, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 2, 0],\n        [2, 1, 2, 3],\n        [1, 1, 3, 3],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, false, false, true],\n        [true, false, true, false, true],\n        [true, false, true, true, true],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [1, 1, 0, 2],\n        [1, 1, 1, 3],\n        [2, 1, 3, 2],\n      ],\n      answer: [\n        [true, true, true, true, false],\n        [true, false, false, true, false],\n        [true, false, true, true, false],\n        [true, false, false, false, false],\n        [true, true, true, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [[13, 1]],\n  puzzles: [\n    {\n      clues: [\n        [6, 8, 0, 3],\n        [6, 6, 1, 2],\n        [6, 2, 1, 4],\n        [6, 2, 2, 1],\n        [6, 3, 2, 4],\n        [6, 2, 3, 2],\n        [6, 2, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, true, false, true, false],\n        [false, false, true, true, false],\n        [false, false, false, false, true],\n        [false, false, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 1, 0],\n        [6, 4, 1, 1],\n        [6, 2, 1, 3],\n        [6, 1, 1, 4],\n        [6, 2, 2, 2],\n        [6, 9, 2, 4],\n        [6, 5, 3, 0],\n        [6, 3, 3, 2],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n        [true, true, false, false, false],\n        [false, true, false, false, true],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 8, 0, 0],\n        [6, 5, 1, 3],\n        [6, 1, 2, 2],\n        [6, 2, 3, 0],\n        [6, 1, 4, 2],\n        [6, 2, 4, 3],\n      ],\n      answer: [\n        [false, true, true, true, true],\n        [true, true, false, false, true],\n        [false, false, false, false, true],\n        [false, false, false, false, true],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 2, 0, 0],\n        [6, 4, 0, 2],\n        [6, 1, 1, 4],\n        [6, 3, 3, 3],\n        [6, 10, 3, 4],\n        [6, 5, 4, 1],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n        [true, true, true, false, false],\n        [true, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 10, 0, 1],\n        [6, 1, 1, 2],\n        [6, 2, 1, 3],\n        [6, 4, 3, 4],\n        [6, 1, 4, 1],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, true, false, false, true],\n        [false, false, false, false, true],\n        [false, false, true, true, false],\n        [false, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 2, 0, 3],\n        [6, 7, 1, 1],\n        [6, 4, 2, 2],\n        [6, 5, 3, 2],\n        [6, 2, 4, 1],\n        [6, 9, 4, 4],\n      ],\n      answer: [\n        [true, true, true, false, false],\n        [true, false, true, false, false],\n        [true, true, false, true, true],\n        [false, true, false, false, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 0, 3],\n        [6, 9, 1, 0],\n        [6, 2, 2, 3],\n        [6, 2, 2, 4],\n        [6, 6, 3, 1],\n        [6, 3, 3, 3],\n        [6, 3, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, false, false, false, true],\n        [true, true, false, false, false],\n        [true, false, false, false, true],\n        [true, true, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [6, 1, 1, 0],\n        [6, 3, 1, 2],\n        [6, 1, 2, 3],\n        [6, 9, 3, 1],\n        [6, 1, 4, 3],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, false, false, false, false],\n        [false, true, true, false, false],\n        [true, false, false, false, false],\n        [true, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 2, 0, 4],\n        [6, 4, 1, 0],\n        [6, 4, 1, 1],\n        [6, 4, 1, 4],\n        [6, 5, 3, 1],\n        [6, 2, 4, 0],\n        [6, 9, 4, 3],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, false, false, true, false],\n        [true, true, false, true, true],\n        [true, false, false, false, true],\n        [false, true, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [6, 3, 0, 1],\n        [6, 4, 1, 1],\n        [6, 4, 1, 3],\n        [6, 3, 1, 4],\n        [6, 2, 3, 0],\n        [6, 8, 3, 2],\n        [6, 3, 3, 4],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [true, false, false, false, false],\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [false, false, true, true, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [[2, 1]],\n  puzzles: [\n    {\n      clues: [\n        [16, 8, 0, 4],\n        [16, 5, 1, 1],\n        [16, 5, 1, 2],\n        [16, 7, 1, 3],\n        [16, 11, 3, 4],\n        [16, 5, 4, 0],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [true, false, false, false, false],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n        [false, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 3, 0, 3],\n        [16, 6, 1, 1],\n        [16, 3, 2, 2],\n        [16, 5, 3, 0],\n        [16, 6, 4, 3],\n        [16, 11, 4, 4],\n      ],\n      answer: [\n        [true, false, true, false, false],\n        [false, false, true, false, false],\n        [false, false, false, true, false],\n        [false, false, true, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 4, 0, 0],\n        [16, 4, 1, 1],\n        [16, 2, 1, 3],\n        [16, 11, 2, 2],\n        [16, 2, 4, 0],\n      ],\n      answer: [\n        [false, false, false, false, true],\n        [true, false, true, false, true],\n        [true, false, false, true, true],\n        [false, false, true, true, true],\n        [false, true, true, true, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 11, 1, 1],\n        [16, 4, 2, 1],\n        [16, 4, 2, 4],\n        [16, 5, 3, 3],\n        [16, 5, 4, 0],\n        [16, 7, 4, 4],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, false, true, false, true],\n        [true, false, true, false, false],\n        [true, false, true, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 3, 0, 2],\n        [16, 5, 1, 1],\n        [16, 11, 1, 4],\n        [16, 6, 2, 0],\n        [16, 7, 2, 2],\n        [16, 9, 2, 3],\n        [16, 4, 4, 2],\n      ],\n      answer: [\n        [true, false, false, false, true],\n        [false, false, true, false, false],\n        [false, false, false, false, false],\n        [true, false, false, false, false],\n        [true, true, false, false, true],\n      ],\n    },\n    {\n      clues: [\n        [16, 10, 0, 1],\n        [16, 6, 1, 4],\n        [16, 3, 2, 0],\n        [16, 5, 3, 2],\n        [16, 9, 3, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [true, false, true, false, false],\n        [false, false, true, false, false],\n        [false, false, false, false, false],\n        [true, false, true, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 5, 0, 1],\n        [16, 8, 1, 2],\n        [16, 8, 2, 3],\n        [16, 9, 2, 4],\n        [16, 10, 3, 2],\n        [16, 8, 4, 4],\n      ],\n      answer: [\n        [true, false, true, true, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [true, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 12, 0, 1],\n        [16, 8, 1, 4],\n        [16, 5, 2, 1],\n        [16, 7, 3, 3],\n        [16, 9, 4, 4],\n      ],\n      answer: [\n        [true, false, true, true, false],\n        [true, false, false, false, false],\n        [true, false, true, false, false],\n        [true, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 7, 0, 4],\n        [16, 3, 1, 0],\n        [16, 7, 1, 4],\n        [16, 12, 3, 4],\n        [16, 9, 4, 3],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, false, false],\n        [false, false, false, false, false],\n        [true, true, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [16, 8, 0, 3],\n        [16, 5, 1, 1],\n        [16, 4, 2, 4],\n        [16, 10, 3, 0],\n        [16, 9, 4, 3],\n      ],\n      answer: [\n        [true, false, false, false, false],\n        [false, false, false, false, true],\n        [false, true, true, false, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n  ],\n};\n","export default {\n  global_constraint: [[9, 1]],\n  puzzles: [\n    {\n      clues: [\n        [11, 13, 3, 1],\n        [11, 8, 4, 4],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 1, 0, 1],\n        [11, 11, 1, 2],\n        [11, 2, 1, 4],\n        [11, 6, 3, 0],\n        [11, 3, 3, 3],\n      ],\n      answer: [\n        [false, true, false, false, true],\n        [false, false, true, false, true],\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [11, 2, 0, 0],\n        [11, 11, 2, 0],\n        [11, 1, 3, 1],\n        [11, 10, 3, 4],\n        [11, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [false, false, false, true, true],\n        [true, false, false, true, true],\n        [false, true, false, true, true],\n        [true, false, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 10, 1, 1],\n        [11, 11, 2, 3],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n        [true, true, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [11, 11, 0, 1],\n        [11, 1, 0, 4],\n        [11, 4, 1, 3],\n        [11, 1, 2, 0],\n        [11, 3, 4, 2],\n        [11, 1, 4, 4],\n      ],\n      answer: [\n        [false, true, false, false, true],\n        [false, false, true, true, false],\n        [true, false, true, true, false],\n        [false, false, false, false, false],\n        [true, true, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 2, 1, 1],\n        [11, 3, 2, 0],\n        [11, 11, 3, 3],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n        [true, false, false, true, false],\n      ],\n    },\n    {\n      clues: [\n        [11, 4, 0, 3],\n        [11, 6, 1, 0],\n        [11, 11, 3, 2],\n        [11, 2, 4, 0],\n      ],\n      answer: [\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, false, false, false],\n        [false, false, true, true, true],\n        [true, true, false, false, false],\n      ],\n    },\n    {\n      clues: [\n        [11, 10, 2, 0],\n        [11, 13, 4, 3],\n      ],\n      answer: [\n        [true, true, false, false, false],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 3, 0, 1],\n        [11, 1, 0, 3],\n        [11, 11, 4, 1],\n        [11, 3, 4, 4],\n      ],\n      answer: [\n        [false, true, false, true, false],\n        [false, true, false, false, false],\n        [false, true, false, false, true],\n        [false, false, false, false, true],\n        [true, true, true, false, true],\n      ],\n    },\n    {\n      clues: [\n        [11, 5, 1, 4],\n        [11, 11, 3, 0],\n        [11, 1, 3, 2],\n        [11, 1, 4, 1],\n        [11, 2, 4, 3],\n      ],\n      answer: [\n        [false, false, false, false, false],\n        [true, true, true, true, true],\n        [false, false, false, false, false],\n        [true, false, true, false, false],\n        [false, true, false, true, true],\n      ],\n    },\n  ],\n};\n","export default {\n  puzzles: [\n    {\n      global_constraint: [[11, 1]],\n      clues: [\n        [14, 9, 0, 1],\n        [13, 4, 2, 4],\n        [5, 8, 3, 1],\n        [6, 1, 4, 0],\n      ],\n      answer: [\n        [false, false, true, true, true],\n        [false, false, true, true, true],\n        [true, false, true, true, true],\n        [false, true, false, false, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [8, 1],\n        [17, 1],\n      ],\n      clues: [\n        [9, 4, 0, 2],\n        [14, 5, 1, 2],\n        [7, 4, 1, 3],\n        [9, 4, 3, 0],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [false, true, false, true, false],\n        [false, false, true, false, true],\n        [true, false, false, false, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [18, 1],\n        [1, 1],\n      ],\n      clues: [\n        [15, 7, 0, 3],\n        [15, 11, 2, 0],\n        [5, 3, 2, 3],\n        [3, 1, 4, 2],\n        [3, 2, 4, 3],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [true, true, false, true, false],\n        [true, true, true, true, true],\n        [true, true, false, true, true],\n        [true, false, true, true, false],\n      ],\n    },\n    {\n      global_constraint: [[11, 1]],\n      clues: [\n        [14, 1, 0, 1],\n        [9, 4, 0, 4],\n        [13, 6, 1, 4],\n        [4, 4, 3, 3],\n        [12, 3, 4, 0],\n      ],\n      answer: [\n        [false, false, false, true, true],\n        [false, true, false, true, true],\n        [true, false, true, false, false],\n        [false, true, false, false, false],\n        [false, false, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [22, 1],\n        [2, 1],\n      ],\n      clues: [\n        [3, 4, 1, 3],\n        [13, 8, 2, 1],\n        [6, 4, 2, 3],\n      ],\n      answer: [\n        [true, true, true, true, true],\n        [true, true, false, true, false],\n        [true, true, false, false, false],\n        [true, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [6, 1],\n        [10, 1],\n      ],\n      clues: [\n        [12, 3, 0, 4],\n        [11, 5, 3, 0],\n        [13, 8, 3, 1],\n        [10, 4, 4, 2],\n      ],\n      answer: [\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n        [false, false, true, true, false],\n        [true, true, false, true, true],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [5, 1],\n        [14, 1],\n        [10, 1],\n      ],\n      clues: [\n        [11, 2, 0, 4],\n        [11, 3, 2, 0],\n        [7, 3, 3, 2],\n      ],\n      answer: [\n        [true, false, true, false, true],\n        [true, false, true, false, true],\n        [true, false, true, true, false],\n        [false, true, true, true, false],\n        [false, true, false, false, true],\n      ],\n    },\n    {\n      global_constraint: [[11, 1]],\n      clues: [\n        [17, 1, 0, 1],\n        [16, 4, 0, 2],\n        [18, 2, 1, 4],\n        [15, 4, 3, 1],\n        [10, 1, 4, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [true, true, false, false, false],\n        [false, false, false, true, true],\n        [false, true, false, true, true],\n        [false, false, true, false, false],\n      ],\n    },\n    {\n      global_constraint: [[11, 1]],\n      clues: [\n        [15, 8, 2, 2],\n        [17, 2, 3, 0],\n        [6, 2, 3, 4],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [false, false, true, true, true],\n        [false, false, true, true, true],\n        [true, true, false, false, false],\n        [true, true, false, false, false],\n      ],\n    },\n    {\n      global_constraint: [\n        [4, 1],\n        [10, 1],\n        [7, 1],\n      ],\n      clues: [\n        [17, 4, 0, 3],\n        [4, 2, 1, 0],\n        [6, 7, 3, 2],\n        [13, 5, 3, 3],\n        [12, 2, 4, 1],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, false, true, false, true],\n        [false, false, true, false, true],\n        [true, true, false, true, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      global_constraint: [[12, 1]],\n      clues: [\n        [4, 4, 0, 0],\n        [17, 2, 0, 4],\n        [16, 1, 2, 3],\n        [13, 1, 3, 4],\n        [11, 1, 4, 1],\n      ],\n      answer: [\n        [false, false, true, false, true],\n        [false, false, true, true, false],\n        [true, true, true, false, true],\n        [true, false, true, true, true],\n        [false, true, false, true, false],\n      ],\n    },\n    {\n      global_constraint: [\n        [3, 1],\n        [21, 1],\n        [13, 1],\n      ],\n      clues: [\n        [10, 6, 0, 2],\n        [4, 1, 1, 3],\n        [4, 2, 2, 2],\n        [13, 6, 3, 2],\n        [12, 1, 3, 4],\n      ],\n      answer: [\n        [false, true, false, true, true],\n        [false, true, true, false, true],\n        [true, false, false, false, true],\n        [true, false, true, true, false],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [8, 1],\n        [13, 1],\n        [10, 1],\n      ],\n      clues: [\n        [14, 8, 1, 4],\n        [12, 5, 3, 0],\n        [16, 1, 4, 3],\n      ],\n      answer: [\n        [false, true, false, true, true],\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [false, true, false, true, true],\n        [false, true, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [14, 1],\n        [22, 1],\n      ],\n      clues: [\n        [15, 2, 0, 1],\n        [10, 1, 1, 0],\n        [9, 3, 2, 4],\n        [18, 2, 3, 1],\n        [14, 4, 4, 3],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [false, false, false, true, false],\n        [true, true, false, true, true],\n        [false, false, true, false, true],\n        [true, false, true, false, false],\n      ],\n    },\n    {\n      global_constraint: [\n        [5, 1],\n        [11, 1],\n      ],\n      clues: [\n        [13, 3, 1, 3],\n        [15, 1, 4, 0],\n        [6, 4, 4, 3],\n      ],\n      answer: [\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, true],\n        [true, false, true, false, false],\n      ],\n    },\n    {\n      global_constraint: [[11, 1]],\n      clues: [\n        [10, 3, 0, 0],\n        [17, 9, 2, 3],\n        [4, 2, 3, 4],\n        [16, 6, 4, 1],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, true, true, false, false],\n        [false, false, false, true, false],\n        [false, true, false, false, false],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [1, 1],\n        [7, 1],\n        [22, 1],\n      ],\n      clues: [\n        [6, 2, 1, 4],\n        [13, 6, 2, 1],\n        [5, 6, 2, 2],\n        [7, 3, 4, 2],\n        [5, 3, 4, 3],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, true, false],\n        [false, true, true, true, false],\n        [false, true, false, true, false],\n        [false, false, true, true, false],\n      ],\n    },\n    {\n      global_constraint: [\n        [10, 1],\n        [21, 1],\n      ],\n      clues: [\n        [9, 2, 0, 0],\n        [16, 2, 1, 3],\n        [6, 6, 2, 1],\n        [14, 8, 3, 1],\n        [15, 2, 4, 4],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, false, true, false, true],\n        [false, false, true, false, true],\n        [false, false, true, true, false],\n        [true, true, false, true, true],\n      ],\n    },\n    {\n      global_constraint: [[12, 1]],\n      clues: [\n        [3, 3, 1, 2],\n        [15, 4, 1, 4],\n        [17, 2, 2, 2],\n        [13, 3, 3, 4],\n        [15, 1, 4, 0],\n      ],\n      answer: [\n        [true, true, false, true, false],\n        [false, true, true, true, true],\n        [true, false, true, true, false],\n        [false, true, false, true, true],\n        [true, false, true, true, false],\n      ],\n    },\n    {\n      global_constraint: [\n        [9, 1],\n        [7, 1],\n      ],\n      clues: [\n        [14, 6, 0, 3],\n        [6, 3, 1, 0],\n        [14, 7, 3, 0],\n        [11, 2, 4, 4],\n      ],\n      answer: [\n        [false, true, true, false, true],\n        [false, false, false, false, true],\n        [true, true, true, true, false],\n        [false, false, false, false, true],\n        [true, true, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [9, 1],\n        [7, 1],\n      ],\n      clues: [\n        [11, 6, 1, 1],\n        [7, 2, 1, 3],\n        [16, 4, 1, 4],\n        [4, 2, 3, 3],\n        [11, 2, 4, 3],\n      ],\n      answer: [\n        [false, true, false, false, false],\n        [false, true, false, true, false],\n        [false, true, false, true, false],\n        [false, true, false, false, false],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [21, 1],\n        [3, 1],\n        [8, 1],\n      ],\n      clues: [\n        [16, 5, 0, 1],\n        [4, 1, 0, 3],\n        [14, 4, 2, 0],\n        [4, 2, 3, 3],\n        [4, 1, 4, 1],\n        [17, 4, 4, 4],\n      ],\n      answer: [\n        [false, false, true, false, false],\n        [true, false, true, true, false],\n        [false, true, false, true, false],\n        [true, true, false, false, false],\n        [false, false, true, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [21, 1],\n        [1, 1],\n      ],\n      clues: [\n        [18, 3, 0, 3],\n        [15, 9, 1, 1],\n        [8, 2, 2, 0],\n        [18, 9, 3, 4],\n        [18, 4, 4, 2],\n      ],\n      answer: [\n        [false, true, true, false, false],\n        [true, true, true, true, true],\n        [false, true, false, false, true],\n        [true, true, true, true, false],\n        [false, true, false, true, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [7, 1],\n        [12, 1],\n      ],\n      clues: [\n        [11, 1, 0, 0],\n        [12, 4, 0, 3],\n        [15, 3, 2, 0],\n        [14, 6, 2, 3],\n        [11, 4, 3, 3],\n      ],\n      answer: [\n        [true, false, true, false, true],\n        [false, true, false, true, false],\n        [true, false, true, false, true],\n        [true, true, false, true, true],\n        [true, false, true, false, true],\n      ],\n    },\n    {\n      global_constraint: [\n        [4, 1],\n        [18, 1],\n      ],\n      clues: [\n        [3, 3, 0, 3],\n        [11, 4, 1, 1],\n        [3, 6, 3, 3],\n        [5, 2, 4, 0],\n      ],\n      answer: [\n        [true, false, true, true, true],\n        [true, true, false, true, true],\n        [true, false, true, true, true],\n        [false, true, true, true, true],\n        [true, true, true, true, true],\n      ],\n    },\n  ],\n};\n","import { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Puzzle50CommonSpec, Puzzle50ExtraState } from \"./puzzle-50-common\";\n\nimport CanalView from \"./puzzle-50-data/canalview\";\nimport Cave from \"./puzzle-50-data/cave\";\nimport Kurodoko from \"./puzzle-50-data/kurodoko\";\nimport Kurotto from \"./puzzle-50-data/kurotto\";\nimport LightAndShadow from \"./puzzle-50-data/lightandshadow\";\nimport Minesweeper from \"./puzzle-50-data/minesweeper\";\nimport Mochikoro from \"./puzzle-50-data/mochikoro\";\nimport Nurikabe from \"./puzzle-50-data/nurikabe\";\nimport Slitherlink from \"./puzzle-50-data/slitherlink\";\nimport Snake from \"./puzzle-50-data/snake\";\nimport Tasquare from \"./puzzle-50-data/tasquare\";\nimport YinYang from \"./puzzle-50-data/yinyang\";\n\nimport Neighbors from \"./puzzle-50-data/neighbors\";\nimport RowColumn from \"./puzzle-50-data/rowcolumn\";\nimport Visions from \"./puzzle-50-data/visions\";\nimport Areas from \"./puzzle-50-data/areas\";\n\nimport Single from \"./puzzle-50-data/single\";\nimport Ones from \"./puzzle-50-data/ones\";\n// import Fives from \"./puzzle-50-data/fives\";\nimport Rectangles from \"./puzzle-50-data/rectangles\";\n// import NarrowRectangles from \"./puzzle-50-data/narrowrectangles\";\n// import OutsideRectangles from \"./puzzle-50-data/outsiderectangles\";\nimport Squares from \"./puzzle-50-data/squares\";\nimport TwoSnakes from \"./puzzle-50-data/twosnakes\";\n\nimport TouchingPaths from \"./puzzle-50-data/touchingpaths\";\nimport ConnectedVision from \"./puzzle-50-data/connectedvision\";\nimport RectangleAreas from \"./puzzle-50-data/rectangleareas\";\n\nimport Final from \"./puzzle-50-data/final\";\n\nconst shuffle = <T>(a: T[]) => {\n  const array = a.slice();\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst makePuzzle50Spec = (\n  INFO: {\n    global_constraint: number[][];\n    puzzles: {\n      clues: number[][];\n      answer: boolean[][];\n    }[];\n  },\n  showSolution: boolean,\n  isInvulnerable: boolean\n): GameSpecServerFragment => ({\n  ...Puzzle50CommonSpec,\n  beforeNewGame: (ctx) => {\n    // TODO: seed?\n    // choose a puzzle nondeterministically\n    const puzzleId = Math.floor(Math.random() * INFO.puzzles.length);\n    ctx.engine.initExtraState({\n      globalConstraints: INFO.global_constraint.map((a) => ({\n        id: `puzzle-50-global-${a[0]}`,\n        health: a[1],\n      })),\n      // shuffle clues\n      clues: shuffle(\n        INFO.puzzles[puzzleId].clues.map((a) => ({\n          id: `puzzle-50-local-${a[0]}`,\n          health: a[1],\n          row: a[2],\n          column: a[3],\n        }))\n      ),\n      cluesPlaced: 0,\n      answer: INFO.puzzles[puzzleId].answer,\n      showSolution: showSolution,\n      passed: false,\n      isInvulnerable: isInvulnerable,\n    } as Puzzle50ExtraState);\n  },\n});\n\nconst makePuzzle50FinalSpec = (\n  INFO: {\n    puzzles: {\n      global_constraint: number[][];\n      clues: number[][];\n      answer: boolean[][];\n    }[];\n  },\n  showSolution: boolean,\n  isInvulnerable: boolean\n): GameSpecServerFragment => ({\n  ...Puzzle50CommonSpec,\n  beforeNewGame: (ctx) => {\n    // TODO: seed?\n    // choose a puzzle nondeterministically\n    const puzzleId = Math.floor(Math.random() * INFO.puzzles.length);\n    ctx.engine.initExtraState({\n      globalConstraints: INFO.puzzles[puzzleId].global_constraint.map((a) => ({\n        id: `puzzle-50-global-${a[0]}`,\n        health: a[1],\n      })),\n      // shuffle clues\n      clues: shuffle(\n        INFO.puzzles[puzzleId].clues.map((a) => ({\n          id: `puzzle-50-local-${a[0]}`,\n          health: a[1],\n          row: a[2],\n          column: a[3],\n        }))\n      ),\n      cluesPlaced: 0,\n      answer: INFO.puzzles[puzzleId].answer,\n      showSolution: showSolution,\n      passed: false,\n      isInvulnerable: isInvulnerable,\n    } as Puzzle50ExtraState);\n  },\n});\n\n// Stage 1\nexport const Puzzle50_1Spec = makePuzzle50Spec(Minesweeper, true, true);\nexport const Puzzle50_2Spec = makePuzzle50Spec(YinYang, true, true);\nexport const Puzzle50_3Spec = makePuzzle50Spec(LightAndShadow, true, true);\nexport const Puzzle50_4Spec = makePuzzle50Spec(Nurikabe, true, true);\nexport const Puzzle50_5Spec = makePuzzle50Spec(Kurotto, true, true);\nexport const Puzzle50_6Spec = makePuzzle50Spec(Kurodoko, true, true);\nexport const Puzzle50_7Spec = makePuzzle50Spec(Cave, true, true);\nexport const Puzzle50_8Spec = makePuzzle50Spec(Slitherlink, true, true);\nexport const Puzzle50_9Spec = makePuzzle50Spec(CanalView, true, true);\nexport const Puzzle50_10Spec = makePuzzle50Spec(Snake, true, true);\nexport const Puzzle50_11Spec = makePuzzle50Spec(Mochikoro, true, true);\nexport const Puzzle50_12Spec = makePuzzle50Spec(Tasquare, true, true);\n\n// Stage 2A\nexport const Puzzle50_13Spec = makePuzzle50Spec(Neighbors, false, true);\nexport const Puzzle50_14Spec = makePuzzle50Spec(RowColumn, false, true);\nexport const Puzzle50_15Spec = makePuzzle50Spec(Visions, false, true);\nexport const Puzzle50_16Spec = makePuzzle50Spec(Areas, false, true);\n\n// Stage 2B\nexport const Puzzle50_17Spec = makePuzzle50Spec(Single, false, true);\nexport const Puzzle50_18Spec = makePuzzle50Spec(Ones, false, true);\n// export const Puzzle50_19Spec = makePuzzle50Spec(Fives, false, true);\nexport const Puzzle50_19Spec = makePuzzle50Spec(Rectangles, false, true);\n// export const Puzzle50_21Spec = makePuzzle50Spec(NarrowRectangles, false, true);\n// export const Puzzle50_22Spec = makePuzzle50Spec(OutsideRectangles, false, true);\nexport const Puzzle50_20Spec = makePuzzle50Spec(Squares, false, true);\nexport const Puzzle50_21Spec = makePuzzle50Spec(TwoSnakes, false, true);\n\n// Stage 3\nexport const Puzzle50_22Spec = makePuzzle50Spec(TouchingPaths, false, false);\nexport const Puzzle50_23Spec = makePuzzle50Spec(ConnectedVision, false, false);\nexport const Puzzle50_24Spec = makePuzzle50Spec(RectangleAreas, false, false);\n\n// Final\nexport const Puzzle50_FinalSpec = makePuzzle50FinalSpec(Final, false, false);\n","export const OLYMPIC_WINTER_SPORTS = new Set([\n  \"BIATHLON\",\n  \"BOBSLED\",\n  \"CURLING\",\n  \"LUGE\",\n  \"LUGING\",\n  \"SKATING\",\n  \"SKELETON\",\n  \"SKIING\",\n]);\n\nexport const FIRST_151_POKEMON = new Set([\n  \"IVYSAUR\",\n  \"VENUSAUR\",\n  \"SQUIRTLE\",\n  \"CATERPIE\",\n  \"METAPOD\",\n  \"WEEDLE\",\n  \"KAKUNA\",\n  \"BEEDRILL\",\n  \"PIDGEY\",\n  \"PIDGEOT\",\n  \"RATTATA\",\n  \"RATICATE\",\n  \"SPEAROW\",\n  \"FEAROW\",\n  \"EKANS\",\n  \"ARBOK\",\n  \"PIKACHU\",\n  \"RAICHU\",\n  \"NIDORAN\",\n  \"NIDORINA\",\n  \"NIDORAN\",\n  \"NIDORINO\",\n  \"NIDOKING\",\n  \"CLEFAIRY\",\n  \"CLEFABLE\",\n  \"VULPIX\",\n  \"ZUBAT\",\n  \"GOLBAT\",\n  \"ODDISH\",\n  \"GLOOM\",\n  \"PARAS\",\n  \"PARASECT\",\n  \"VENONAT\",\n  \"VENOMOTH\",\n  \"DIGLETT\",\n  \"DUGTRIO\",\n  \"MEOWTH\",\n  \"PERSIAN\",\n  \"PSYDUCK\",\n  \"GOLDUCK\",\n  \"MANKEY\",\n  \"PRIMEAPE\",\n  \"ARCANINE\",\n  \"POLIWAG\",\n  \"ABRA\",\n  \"KADABRA\",\n  \"ALAKAZAM\",\n  \"MACHOP\",\n  \"MACHOKE\",\n  \"MACHAMP\",\n  \"GEODUDE\",\n  \"GRAVELER\",\n  \"GOLEM\",\n  \"PONYTA\",\n  \"RAPIDASH\",\n  \"SLOWPOKE\",\n  \"SLOWBRO\",\n  \"MAGNETON\",\n  \"DODUO\",\n  \"DODRIO\",\n  \"SEEL\",\n  \"DEWGONG\",\n  \"GRIMER\",\n  \"MUK\",\n  \"SHELLDER\",\n  \"CLOYSTER\",\n  \"GASTLY\",\n  \"HAUNTER\",\n  \"GENGAR\",\n  \"ONIX\",\n  \"DROWZEE\",\n  \"HYPNO\",\n  \"KRABBY\",\n  \"KINGLER\",\n  \"VOLTORB\",\n  \"CUBONE\",\n  \"MAROWAK\",\n  \"KOFFING\",\n  \"WEEZING\",\n  \"RHYHORN\",\n  \"RHYDON\",\n  \"CHANSEY\",\n  \"TANGELA\",\n  \"HORSEA\",\n  \"SEADRA\",\n  \"GOLDEEN\",\n  \"SEAKING\",\n  \"STARYU\",\n  \"STARMIE\",\n  \"MRMIME\",\n  \"SCYTHER\",\n  \"JYNX\",\n  \"MAGMAR\",\n  \"PINSIR\",\n  \"TAUROS\",\n  \"MAGIKARP\",\n  \"GYARADOS\",\n  \"LAPRAS\",\n  \"DITTO\",\n  \"EEVEE\",\n  \"VAPOREON\",\n  \"JOLTEON\",\n  \"FLAREON\",\n  \"PORYGON\",\n  \"OMANYTE\",\n  \"OMASTAR\",\n  \"KABUTO\",\n  \"KABUTOPS\",\n  \"SNORLAX\",\n  \"ARTICUNO\",\n  \"ZAPDOS\",\n  \"MOLTRES\",\n  \"DRATINI\",\n  \"MEWTWO\",\n  \"MEW\",\n]);\n\nexport const COLORS = new Set([\n  \"AERO\",\n  \"ALIZARIN\",\n  \"ALMOND\",\n  \"AMAZON\",\n  \"AMBER\",\n  \"AMETHYST\",\n  \"APRICOT\",\n  \"AQUA\",\n  \"AUREOLIN\",\n  \"AZURE\",\n  \"BEAVER\",\n  \"BEIGE\",\n  \"BISQUE\",\n  \"BISTRE\",\n  \"BLACK\",\n  \"BLUE\",\n  \"BLUSH\",\n  \"BOLE\",\n  \"BONE\",\n  \"BRONZE\",\n  \"BROWN\",\n  \"BUFF\",\n  \"BURGUNDY\",\n  \"CAFNOIR\",\n  \"CAMEL\",\n  \"CANARY\",\n  \"CARDINAL\",\n  \"CARMINE\",\n  \"CATAWBA\",\n  \"CELADON\",\n  \"CELESTE\",\n  \"CERISE\",\n  \"CERULEAN\",\n  \"CHARCOAL\",\n  \"CHESTNUT\",\n  \"CINNABAR\",\n  \"CITRINE\",\n  \"CITRON\",\n  \"CLARET\",\n  \"COFFEE\",\n  \"COOLGREY\",\n  \"COPPER\",\n  \"CORAL\",\n  \"CORDOVAN\",\n  \"CORN\",\n  \"CREAM\",\n  \"CRIMSON\",\n  \"CYAN\",\n  \"CYCLAMEN\",\n  \"DENIM\",\n  \"DESERT\",\n  \"EBONY\",\n  \"ECRU\",\n  \"EGGPLANT\",\n  \"EGGSHELL\",\n  \"EMERALD\",\n  \"EMINENCE\",\n  \"ERIN\",\n  \"FALLOW\",\n  \"FANDANGO\",\n  \"FAWN\",\n  \"FINN\",\n  \"FLAME\",\n  \"FLAX\",\n  \"FLIRT\",\n  \"FUCHSIA\",\n  \"FULVOUS\",\n  \"GAMBOGE\",\n  \"GLAUCOUS\",\n  \"GOLD\",\n  \"GRAY\",\n  \"GREEN\",\n  \"GUNMETAL\",\n  \"HEATWAVE\",\n  \"ICEBERG\",\n  \"INCHWORM\",\n  \"INDIGO\",\n  \"IVORY\",\n  \"JASMINE\",\n  \"JET\",\n  \"JONQUIL\",\n  \"JUNEBUD\",\n  \"KEPPEL\",\n  \"KHAKI\",\n  \"KOBE\",\n  \"KOBI\",\n  \"LAVA\",\n  \"LAVENDER\",\n  \"LEMON\",\n  \"LIBERTY\",\n  \"LILAC\",\n  \"LIME\",\n  \"LINEN\",\n  \"LION\",\n  \"LIVER\",\n  \"LIVID\",\n  \"MAGENTA\",\n  \"MAGNOLIA\",\n  \"MAHOGANY\",\n  \"MAIZE\",\n  \"MANATEE\",\n  \"MANDARIN\",\n  \"MANGO\",\n  \"MANTIS\",\n  \"MAROON\",\n  \"MAUVE\",\n  \"MELON\",\n  \"MIDNIGHT\",\n  \"MINDARO\",\n  \"MING\",\n  \"MINT\",\n  \"MONALISA\",\n  \"MULBERRY\",\n  \"MUSTARD\",\n  \"MYSTIC\",\n  \"NEWCAR\",\n  \"NICKEL\",\n  \"NYANZA\",\n  \"OCHRE\",\n  \"OLDLACE\",\n  \"OLIVE\",\n  \"OLIVINE\",\n  \"ONYX\",\n  \"OPAL\",\n  \"ORANGE\",\n  \"ORCHID\",\n  \"OXBLOOD\",\n  \"PAUA\",\n  \"PEACH\",\n  \"PEAR\",\n  \"PHLOX\",\n  \"PINETREE\",\n  \"PINK\",\n  \"PLATINUM\",\n  \"PLUM\",\n  \"POPSTAR\",\n  \"PRUNE\",\n  \"PUCE\",\n  \"PUMPKIN\",\n  \"PURPLE\",\n  \"RAJAH\",\n  \"RED\",\n  \"RHYTHM\",\n  \"ROCKET\",\n  \"ROSE\",\n  \"RUBER\",\n  \"RUBY\",\n  \"RUFOUS\",\n  \"RUSSET\",\n  \"RUST\",\n  \"SAFFRON\",\n  \"SAGE\",\n  \"SALMON\",\n  \"SAND\",\n  \"SAPPHIRE\",\n  \"SCARLET\",\n  \"SEANCE\",\n  \"SEASHELL\",\n  \"SECRET\",\n  \"SEPIA\",\n  \"SHADOW\",\n  \"SIENNA\",\n  \"SILVER\",\n  \"SINOPIA\",\n  \"SMITTEN\",\n  \"SNOW\",\n  \"STRAW\",\n  \"SUNGLOW\",\n  \"SUNRAY\",\n  \"SUNSET\",\n  \"TAN\",\n  \"TAUPE\",\n  \"TAWNY\",\n  \"TEAL\",\n  \"TENNE\",\n  \"THISTLE\",\n  \"TOMATO\",\n  \"TUSCAN\",\n  \"UMBER\",\n  \"VANILLA\",\n  \"VERONICA\",\n  \"VIOLET\",\n  \"VIRIDIAN\",\n  \"VOLT\",\n  \"WHEAT\",\n  \"WHITE\",\n  \"WINE\",\n  \"WISTERIA\",\n  \"XANADU\",\n  \"XANTHIC\",\n  \"XANTHOUS\",\n  \"YELLOW\",\n  \"ZAFFRE\",\n  \"ZOMP\",\n]);\n\nexport const FRUITS = new Set([\n  \"ABIU\",\n  \"ACAI\",\n  \"ACEROLA\",\n  \"ACKEE\",\n  \"AKEBI\",\n  \"APPLE\",\n  \"APRICOT\",\n  \"ARATILES\",\n  \"ARAZA\",\n  \"ATIS\",\n  \"AVOCADO\",\n  \"BANANA\",\n  \"BILBERRY\",\n  \"BRINJAL\",\n  \"CACAO\",\n  \"CANISTEL\",\n  \"CATMON\",\n  \"CEMPEDAK\",\n  \"CHERRY\",\n  \"COCONUT\",\n  \"CUCUMBER\",\n  \"CURRANT\",\n  \"DAMSON\",\n  \"DATE\",\n  \"DURIAN\",\n  \"EGGFRUIT\",\n  \"EGGPLANT\",\n  \"FEIJOA\",\n  \"FIG\",\n  \"GACFRUIT\",\n  \"GRAPE\",\n  \"GUAVA\",\n  \"GUYABANO\",\n  \"HONEYDEW\",\n  \"JALAPENO\",\n  \"JAMBUL\",\n  \"JUJUBE\",\n  \"KIWANO\",\n  \"KUMQUAT\",\n  \"LANZONES\",\n  \"LEMON\",\n  \"LIME\",\n  \"LONGAN\",\n  \"LOQUAT\",\n  \"LULO\",\n  \"LYCHEE\",\n  \"MACOPA\",\n  \"MANGO\",\n  \"MEDLAR\",\n  \"MELON\",\n  \"MULBERRY\",\n  \"NANCE\",\n  \"OLIVE\",\n  \"ORANGE\",\n  \"PAPAYA\",\n  \"PAWPAW\",\n  \"PEA\",\n  \"PITAYA\",\n  \"PLANTAIN\",\n  \"PLINIA\",\n  \"PLUM\",\n  \"PLUOT\",\n  \"POMELO\",\n  \"PRUNE\",\n  \"PUMPKIN\",\n  \"QUINCE\",\n  \"RAISIN\",\n  \"RAMBUTAN\",\n  \"SALAK\",\n  \"SAMPALOC\",\n  \"SANTOL\",\n  \"SAPOTE\",\n  \"SATSUMA\",\n  \"SOURSOP\",\n  \"SQUASH\",\n  \"TAMARIND\",\n  \"TAMBIS\",\n  \"TANGELO\",\n  \"TAYBERRY\",\n  \"TOMATO\",\n  \"XIMENIA\",\n  \"YUZU\",\n  \"ZUCCHINI\",\n]);\n\nexport const DAY_OF_WEEK_ABBREVIATIONS = new Set([\n  \"MON\",\n  \"TUE\",\n  \"WED\",\n  \"THU\",\n  \"FRI\",\n  \"SAT\",\n  \"SUN\",\n]);\n\nexport const IATA_AIRPORT_CODES_FLORIDA = new Set([\n  \"DAB\",\n  \"FLL\",\n  \"RSW\",\n  \"VPS\",\n  \"GNV\",\n  \"JAX\",\n  \"EYW\",\n  \"MLB\",\n  \"MIA\",\n  \"MCO\",\n  \"ECP\",\n  \"PNS\",\n  \"PGD\",\n  \"SFB\",\n  \"SRQ\",\n  \"PIE\",\n  \"TLH\",\n  \"TPA\",\n  \"PBI\",\n  \"FXE\",\n  \"VRB\",\n  \"BCT\",\n  \"CLW\",\n  \"FMY\",\n  \"HWO\",\n  \"CRG\",\n  \"ISM\",\n  \"LAL\",\n  \"TMB\",\n  \"OPF\",\n  \"ORL\",\n  \"SPG\",\n  \"TPF\",\n  \"VNC\",\n  \"LNA\",\n  \"AAF\",\n  \"AVO\",\n  \"BOW\",\n  \"CDK\",\n  \"CEW\",\n  \"CTY\",\n  \"DSI\",\n  \"FPR\",\n  \"IMM\",\n  \"NZC\",\n  \"LCQ\",\n  \"LEE\",\n  \"MTH\",\n  \"MRK\",\n  \"COI\",\n  \"TNT\",\n  \"MPB\",\n  \"APF\",\n  \"OCF\",\n  \"OBE\",\n  \"PHK\",\n  \"FPY\",\n  \"PPM\",\n  \"SEF\",\n  \"UST\",\n  \"SUA\",\n  \"TIX\",\n  \"GIF\",\n  \"ZPH\",\n  \"OCA\",\n  \"COF\",\n  \"EGI\",\n  \"HST\",\n  \"NIP\",\n  \"NEN\",\n  \"NQX\",\n  \"NRB\",\n  \"NSE\",\n  \"PAM\",\n  \"NPA\",\n  \"NUN\",\n  \"MCF\",\n  \"VPS\",\n]);\n\nexport const NFL_TEAM_NAMES = new Set([\n  \"BILLS\",\n  \"DOLPHINS\",\n  \"PATRIOTS\",\n  \"JETS\",\n  \"RAVENS\",\n  \"BENGALS\",\n  \"BROWNS\",\n  \"STEELERS\",\n  \"TEXANS\",\n  \"COLTS\",\n  \"JAGUARS\",\n  \"TITANS\",\n  \"BRONCOS\",\n  \"CHIEFS\",\n  \"RAIDERS\",\n  \"CHARGERS\",\n  \"COWBOYS\",\n  \"GIANTS\",\n  \"EAGLES\",\n  \"BEARS\",\n  \"LIONS\",\n  \"PACKERS\",\n  \"VIKINGS\",\n  \"FALCONS\",\n  \"PANTHERS\",\n  \"SAINTS\",\n  \"RAMS\",\n  \"SEAHAWKS\",\n]);\n\nexport const CURRENCY_CODES = new Set([\n  \"AFN\",\n  \"ALL\",\n  \"DZD\",\n  \"USD\",\n  \"EUR\",\n  \"AOA\",\n  \"XCD\",\n  \"XCD\",\n  \"ARS\",\n  \"AMD\",\n  \"AWG\",\n  \"AUD\",\n  \"EUR\",\n  \"AZN\",\n  \"BSD\",\n  \"BHD\",\n  \"BDT\",\n  \"BBD\",\n  \"BYN\",\n  \"EUR\",\n  \"BZD\",\n  \"XOF\",\n  \"BMD\",\n  \"BTN\",\n  \"INR\",\n  \"BOB\",\n  \"BOV\",\n  \"USD\",\n  \"BAM\",\n  \"BWP\",\n  \"NOK\",\n  \"BRL\",\n  \"USD\",\n  \"BND\",\n  \"BGN\",\n  \"XOF\",\n  \"BIF\",\n  \"CVE\",\n  \"KHR\",\n  \"XAF\",\n  \"CAD\",\n  \"KYD\",\n  \"XAF\",\n  \"XAF\",\n  \"CLF\",\n  \"CLP\",\n  \"CNY\",\n  \"AUD\",\n  \"AUD\",\n  \"COP\",\n  \"COU\",\n  \"KMF\",\n  \"CDF\",\n  \"XAF\",\n  \"NZD\",\n  \"CRC\",\n  \"HRK\",\n  \"CUC\",\n  \"CUP\",\n  \"ANG\",\n  \"EUR\",\n  \"CZK\",\n  \"XOF\",\n  \"DKK\",\n  \"DJF\",\n  \"XCD\",\n  \"DOP\",\n  \"USD\",\n  \"EGP\",\n  \"SVC\",\n  \"USD\",\n  \"XAF\",\n  \"ERN\",\n  \"EUR\",\n  \"ETB\",\n  \"EUR\",\n  \"FKP\",\n  \"DKK\",\n  \"FJD\",\n  \"EUR\",\n  \"EUR\",\n  \"EUR\",\n  \"XPF\",\n  \"EUR\",\n  \"XAF\",\n  \"GMD\",\n  \"GEL\",\n  \"EUR\",\n  \"GHS\",\n  \"GIP\",\n  \"EUR\",\n  \"DKK\",\n  \"XCD\",\n  \"EUR\",\n  \"USD\",\n  \"GTQ\",\n  \"GBP\",\n  \"GNF\",\n  \"XOF\",\n  \"GYD\",\n  \"HTG\",\n  \"USD\",\n  \"AUD\",\n  \"EUR\",\n  \"HNL\",\n  \"HKD\",\n  \"HUF\",\n  \"ISK\",\n  \"INR\",\n  \"IDR\",\n  \"XDR\",\n  \"IRR\",\n  \"IQD\",\n  \"EUR\",\n  \"GBP\",\n  \"ILS\",\n  \"EUR\",\n  \"JMD\",\n  \"JPY\",\n  \"GBP\",\n  \"JOD\",\n  \"KZT\",\n  \"KES\",\n  \"AUD\",\n  \"KPW\",\n  \"KRW\",\n  \"KWD\",\n  \"KGS\",\n  \"LAK\",\n  \"EUR\",\n  \"LBP\",\n  \"LSL\",\n  \"ZAR\",\n  \"LRD\",\n  \"LYD\",\n  \"CHF\",\n  \"EUR\",\n  \"EUR\",\n  \"MOP\",\n  \"MGA\",\n  \"MWK\",\n  \"MYR\",\n  \"MVR\",\n  \"XOF\",\n  \"EUR\",\n  \"USD\",\n  \"EUR\",\n  \"MRU\",\n  \"MUR\",\n  \"EUR\",\n  \"XUA\",\n  \"MXN\",\n  \"MXV\",\n  \"USD\",\n  \"MDL\",\n  \"EUR\",\n  \"MNT\",\n  \"EUR\",\n  \"XCD\",\n  \"MAD\",\n  \"MZN\",\n  \"MMK\",\n  \"NAD\",\n  \"ZAR\",\n  \"AUD\",\n  \"NPR\",\n  \"EUR\",\n  \"XPF\",\n  \"NZD\",\n  \"NIO\",\n  \"XOF\",\n  \"NGN\",\n  \"NZD\",\n  \"AUD\",\n  \"USD\",\n  \"NOK\",\n  \"OMR\",\n  \"PKR\",\n  \"USD\",\n  \"PAB\",\n  \"USD\",\n  \"PGK\",\n  \"PYG\",\n  \"PEN\",\n  \"PHP\",\n  \"NZD\",\n  \"PLN\",\n  \"EUR\",\n  \"USD\",\n  \"QAR\",\n  \"MKD\",\n  \"RON\",\n  \"RUB\",\n  \"RWF\",\n  \"EUR\",\n  \"EUR\",\n  \"SHP\",\n  \"XCD\",\n  \"XCD\",\n  \"EUR\",\n  \"EUR\",\n  \"XCD\",\n  \"WST\",\n  \"EUR\",\n  \"STN\",\n  \"SAR\",\n  \"XOF\",\n  \"RSD\",\n  \"SCR\",\n  \"SLE\",\n  \"SGD\",\n  \"ANG\",\n  \"XSU\",\n  \"EUR\",\n  \"EUR\",\n  \"SBD\",\n  \"SOS\",\n  \"ZAR\",\n  \"SSP\",\n  \"EUR\",\n  \"LKR\",\n  \"SDG\",\n  \"SRD\",\n  \"NOK\",\n  \"SZL\",\n  \"SEK\",\n  \"CHE\",\n  \"CHF\",\n  \"CHW\",\n  \"SYP\",\n  \"TWD\",\n  \"TJS\",\n  \"TZS\",\n  \"THB\",\n  \"USD\",\n  \"XOF\",\n  \"NZD\",\n  \"TOP\",\n  \"TTD\",\n  \"TND\",\n  \"TRY\",\n  \"TMT\",\n  \"USD\",\n  \"AUD\",\n  \"UGX\",\n  \"UAH\",\n  \"AED\",\n  \"GBP\",\n  \"USD\",\n  \"USD\",\n  \"USN\",\n  \"UYI\",\n  \"UYU\",\n  \"UZS\",\n  \"VUV\",\n  \"VEF\",\n  \"VED\",\n  \"VND\",\n  \"USD\",\n  \"USD\",\n  \"XPF\",\n  \"MAD\",\n  \"YER\",\n  \"ZMW\",\n  \"ZWL\",\n  \"EUR\",\n]);\n\nexport const SYNONYMS_FOR_TRICKED = new Set([\n  \"BEGUILED\",\n  \"BILKED\",\n  \"BURNED\",\n  \"CHEATED\",\n  \"CONFUSED\",\n  \"CONNED\",\n  \"DECEIVED\",\n  \"DELUDED\",\n  \"DUPED\",\n  \"FINESSED\",\n  \"FOOLED\",\n  \"HAD\",\n  \"MISLED\",\n  \"MISTAKEN\",\n  \"SCAMMED\",\n  \"SWINDLED\",\n  \"TAKENIN\",\n  \"TOOKIN\",\n  \"WRONGED\",\n]);\n\n// Note: any number will contain one of these as a substring.\nexport const ONES_DIGITS: [string, number][] = [\n  [\"ONE\", 1],\n  [\"TWO\", 2],\n  [\"THREE\", 3],\n  [\"FOUR\", 4],\n  [\"FIVE\", 5],\n  [\"SIX\", 6],\n  [\"SEVEN\", 7],\n  [\"EIGHT\", 8],\n  [\"NINE\", 9],\n];\n\nexport const TENS_DIGITS: [string, number][] = [\n  [\"TWENTY\", 20],\n  [\"THIRTY\", 30],\n  [\"FORTY\", 40],\n  [\"FIFTY\", 50],\n  [\"SIXTY\", 60],\n  [\"SEVENTY\", 70],\n  [\"EIGHTY\", 80],\n  [\"NINETY\", 90],\n];\n\nexport const STANDALONE_NUMBERS: [string, number][] = [\n  [\"ZERO\", 0],\n  [\"TEN\", 10],\n  [\"ELEVEN\", 11],\n  [\"TWELVE\", 12],\n  [\"THIRTEEN\", 13],\n  [\"FOURTEEN\", 14],\n  [\"FIFTEEN\", 15],\n  [\"SIXTEEN\", 16],\n  [\"SEVENTEEN\", 17],\n  [\"EIGHTEEN\", 18],\n  [\"NINETEEN\", 19],\n  // These are too long for any concatenations to be used in the puzzle.\n  [\"HUNDRED\", 100],\n  [\"THOUSAND\", 1000],\n  [\"MILLION\", 1000000],\n  [\"BILLION\", 1000000000],\n  [\"TRILLION\", 1000000000000],\n];\n\nexport const WEAPONS = new Set([\n  \"ABUS\",\n  \"ACINACES\",\n  \"ADZE\",\n  \"AIKUCHI\",\n  \"AKINAKA\",\n  \"AKLYS\",\n  \"AKRAFENA\",\n  \"AMIRRE\",\n  \"ANELACE\",\n  \"ANGON\",\n  \"ANKUS\",\n  \"ARBALEST\",\n  \"ARBIR\",\n  \"ARBLAST\",\n  \"ARIT\",\n  \"ARQUEBUS\",\n  \"ARUVAL\",\n  \"ASA\",\n  \"ASSEGAI\",\n  \"ATGEIR\",\n  \"ATHAME\",\n  \"ATLATL\",\n  \"AXE\",\n  \"AYLLO\",\n  \"BADIK\",\n  \"BAGHNAKH\",\n  \"BAKATWA\",\n  \"BALARAO\",\n  \"BALISONG\",\n  \"BALLISTA\",\n  \"BANGKAW\",\n  \"BANGKUNG\",\n  \"BANYAL\",\n  \"BARDICHE\",\n  \"BARONG\",\n  \"BASELARD\",\n  \"BASILARD\",\n  \"BASILISK\",\n  \"BATANGAS\",\n  \"BATON\",\n  \"BAYONET\",\n  \"BHUJ\",\n  \"BICHUWA\",\n  \"BICUCO\",\n  \"BILL\",\n  \"BISENTO\",\n  \"BLADE\",\n  \"BLAKAS\",\n  \"BLOWPIPE\",\n  \"BLOWTUBE\",\n  \"BLUDGEON\",\n  \"BO\",\n  \"BRIQUET\",\n  \"CAESTUS\",\n  \"CAMBUK\",\n  \"CANE\",\n  \"CANNON\",\n  \"CARBINE\",\n  \"CATAPULT\",\n  \"CELURIT\",\n  \"CESTRUS\",\n  \"CESTUS\",\n  \"CETBANG\",\n  \"CHAIN\",\n  \"CHAKO\",\n  \"CHAPE\",\n  \"CHICOTTE\",\n  \"CHOKUTO\",\n  \"CHUI\",\n  \"CHURIKA\",\n  \"CIMPABA\",\n  \"CLAYMORE\",\n  \"CLUB\",\n  \"CORVO\",\n  \"CROP\",\n  \"CUDGEL\",\n  \"CULVERIN\",\n  \"CUTLASS\",\n  \"DAIKYU\",\n  \"DAO\",\n  \"DART\",\n  \"DHA\",\n  \"DIRK\",\n  \"DISACKN\",\n  \"DOLOIRE\",\n  \"DORY\",\n  \"DOTANUKI\",\n  \"DUSACK\",\n  \"DUSAGGE\",\n  \"DUSEGG\",\n  \"DUSSACK\",\n  \"DYSACK\",\n  \"EKU\",\n  \"EMEICI\",\n  \"EPEE\",\n  \"ESPADON\",\n  \"ESTOC\",\n  \"FACON\",\n  \"FALARICA\",\n  \"FALCATA\",\n  \"FALCHION\",\n  \"FALCONET\",\n  \"FALX\",\n  \"FAN\",\n  \"FARANGI\",\n  \"FAUCHARD\",\n  \"FIRANGI\",\n  \"FIREARM\",\n  \"FIRINGHA\",\n  \"FIRINGI\",\n  \"FLAIL\",\n  \"FLYSSA\",\n  \"FOIL\",\n  \"FORK\",\n  \"FU\",\n  \"GAIZAZ\",\n  \"GAR\",\n  \"GAUNTLET\",\n  \"GAYANG\",\n  \"GEIRR\",\n  \"GER\",\n  \"GINGAL\",\n  \"GINSU\",\n  \"GLADIUS\",\n  \"GLAIVE\",\n  \"GOLOK\",\n  \"GRENADE\",\n  \"GUISARME\",\n  \"GUN\",\n  \"HAKAPIK\",\n  \"HALADIE\",\n  \"HALBERD\",\n  \"HAMMER\",\n  \"HANKYU\",\n  \"HARPE\",\n  \"HARPI\",\n  \"HARPOON\",\n  \"HASTA\",\n  \"HATCHET\",\n  \"HOWITZER\",\n  \"HUDUNPAO\",\n  \"HUOCHE\",\n  \"HUOCHONG\",\n  \"HURLBAT\",\n  \"HWAL\",\n  \"HWANDO\",\n  \"IDA\",\n  \"IKLWA\",\n  \"IKUL\",\n  \"IMVUBU\",\n  \"ITAK\",\n  \"JAMBIA\",\n  \"JAMBIYA\",\n  \"JAMBYA\",\n  \"JANBIA\",\n  \"JANBIYA\",\n  \"JANJAL\",\n  \"JI\",\n  \"JO\",\n  \"JUTTE\",\n  \"KABEALA\",\n  \"KAIKEN\",\n  \"KALIS\",\n  \"KAMA\",\n  \"KAMPILAN\",\n  \"KARABELA\",\n  \"KARD\",\n  \"KASKARA\",\n  \"KASTANE\",\n  \"KASUYU\",\n  \"KATANA\",\n  \"KATAR\",\n  \"KERALA\",\n  \"KESTROS\",\n  \"KETERIYA\",\n  \"KHANDA\",\n  \"KHANJALI\",\n  \"KHANJAR\",\n  \"KHUKRI\",\n  \"KILA\",\n  \"KILIJ\",\n  \"KILONDA\",\n  \"KINJAL\",\n  \"KIRPAN\",\n  \"KLEWANG\",\n  \"KNIFE\",\n  \"KNOUT\",\n  \"KOPIS\",\n  \"KOTIATE\",\n  \"KRABI\",\n  \"KRIS\",\n  \"KUDI\",\n  \"KUJANG\",\n  \"KUKRI\",\n  \"KUNAI\",\n  \"KURBASH\",\n  \"LABRYS\",\n  \"LANCE\",\n  \"LANTAKA\",\n  \"LARIAT\",\n  \"LASSO\",\n  \"LATHI\",\n  \"LELA\",\n  \"LITHOS\",\n  \"LITUPA\",\n  \"LIWI\",\n  \"LUWUK\",\n  \"MACANA\",\n  \"MACE\",\n  \"MACHETE\",\n  \"MADUVU\",\n  \"MAHERA\",\n  \"MALLET\",\n  \"MAMBELE\",\n  \"MAMELUKE\",\n  \"MANDAU\",\n  \"MARU\",\n  \"MATTOCK\",\n  \"MERE\",\n  \"MESSER\",\n  \"MINE\",\n  \"MISSILE\",\n  \"MNIGOLO\",\n  \"MONSMEG\",\n  \"MOPLAH\",\n  \"MORTAR\",\n  \"MUBUCHAE\",\n  \"MUCHAN\",\n  \"MUSKET\",\n  \"MYRMEX\",\n  \"NAGAIKA\",\n  \"NAGAMAKI\",\n  \"NAGINATA\",\n  \"NAGYKA\",\n  \"NAIR\",\n  \"NANDAKA\",\n  \"NANGSUN\",\n  \"NAVAJA\",\n  \"NAYAR\",\n  \"NGAO\",\n  \"NIHONTO\",\n  \"NIMCHA\",\n  \"NINJATO\",\n  \"NOGAIKA\",\n  \"NSAPO\",\n  \"NUNCHAKU\",\n  \"NYEPEL\",\n  \"ODACHI\",\n  \"ONO\",\n  \"ONZIL\",\n  \"OTSUCHI\",\n  \"OTTA\",\n  \"OXYBELES\",\n  \"PALITAI\",\n  \"PALUPAD\",\n  \"PANABA\",\n  \"PANDAT\",\n  \"PARANG\",\n  \"PARANKI\",\n  \"PARTISAN\",\n  \"PATA\",\n  \"PATU\",\n  \"PELEKYS\",\n  \"PERNACH\",\n  \"PETRONEL\",\n  \"PEURAWOT\",\n  \"PHURBA\",\n  \"PICK\",\n  \"PIKE\",\n  \"PILUM\",\n  \"PINUTI\",\n  \"PIRAH\",\n  \"PIRANGI\",\n  \"PIRANKI\",\n  \"PISTOL\",\n  \"PLUMBATA\",\n  \"POIGNAL\",\n  \"POLEARM\",\n  \"POTDEFER\",\n  \"PRANGA\",\n  \"PRANGI\",\n  \"PRANGU\",\n  \"PRANKI\",\n  \"PRANKU\",\n  \"PUGIO\",\n  \"PULWAR\",\n  \"PUNAL\",\n  \"PUNYAL\",\n  \"PUUKKO\",\n  \"QAMA\",\n  \"QIANG\",\n  \"QUAMA\",\n  \"RABAULD\",\n  \"RAM\",\n  \"RANSEUR\",\n  \"RAPIER\",\n  \"RAWCON\",\n  \"RESOLZA\",\n  \"REVOLVER\",\n  \"RIBAULT\",\n  \"RICASSO\",\n  \"RIFLE\",\n  \"ROCKET\",\n  \"ROMFEA\",\n  \"ROMPHEA\",\n  \"ROPE\",\n  \"RUDUS\",\n  \"RUNGU\",\n  \"RUNKA\",\n  \"SABER\",\n  \"SABRE\",\n  \"SAI\",\n  \"SAKER\",\n  \"SARISSA\",\n  \"SCHNEPF\",\n  \"SCIMITAR\",\n  \"SCYTHE\",\n  \"SEAX\",\n  \"SEME\",\n  \"SENGESE\",\n  \"SFERE\",\n  \"SHAMSHIR\",\n  \"SHIV\",\n  \"SHOTEL\",\n  \"SHOUM\",\n  \"SHUCKRA\",\n  \"SHURIKEN\",\n  \"SIBAT\",\n  \"SICA\",\n  \"SICKLE\",\n  \"SIDEARM\",\n  \"SLAPJACK\",\n  \"SLING\",\n  \"SOVNYA\",\n  \"SPADE\",\n  \"SPADONE\",\n  \"SPADROON\",\n  \"SPATHA\",\n  \"SPEAR\",\n  \"SPETUM\",\n  \"STAFF\",\n  \"STAVE\",\n  \"STILETTO\",\n  \"SUBURITO\",\n  \"SUMBLING\",\n  \"SURIK\",\n  \"SUWAIYA\",\n  \"SWORD\",\n  \"SZABLA\",\n  \"TABARZIN\",\n  \"TACHI\",\n  \"TAIAHA\",\n  \"TAKOBA\",\n  \"TALWAR\",\n  \"TASER\",\n  \"TEGHA\",\n  \"TEKKAN\",\n  \"TEKKO\",\n  \"TEKPI\",\n  \"TESAK\",\n  \"TOMAHAWK\",\n  \"TONFA\",\n  \"TONGI\",\n  \"TORADAR\",\n  \"TORADOR\",\n  \"TORPEDO\",\n  \"TRIDENT\",\n  \"TRUMBASH\",\n  \"TSURUGI\",\n  \"TUCK\",\n  \"TUMI\",\n  \"TUSECKN\",\n  \"ULFBERHT\",\n  \"ULU\",\n  \"URUMI\",\n  \"UURGA\",\n  \"VEL\",\n  \"VERUTUM\",\n  \"VEUGLAIR\",\n  \"VOULGE\",\n  \"WADDY\",\n  \"WEDUNG\",\n  \"WHIP\",\n  \"WOLDO\",\n  \"WOOMERA\",\n  \"XANADU\",\n  \"XIFOS\",\n  \"XIPHOS\",\n  \"XIXIA\",\n  \"YARI\",\n  \"YATAGAN\",\n  \"YAWARI\",\n  \"ZANBATO\",\n  \"ZAPPOZAP\",\n]);\n\nexport const OPTICAL_COMPONENTS = new Set([\n  \"ASPHERE\",\n  \"AXICON\",\n  \"DIFFUSER\",\n  \"ETALON\",\n  \"FILTER\",\n  \"GLASS\",\n  \"GRATE\",\n  \"GRATING\",\n  \"GRISM\",\n  \"ISOLATER\",\n  \"LENS\",\n  \"MIRROR\",\n  \"NULLER\",\n  \"PINHOLE\",\n  \"PRISM\",\n  \"QPLATE\",\n  \"RETICLE\",\n  \"SPLITTER\",\n  \"WINDOW\",\n]);\n\nexport const KENTUCKY_DERBY_WINNERS = new Set([\n  \"MAGE\",\n  \"JUSTIFY\",\n  \"NYQUIST\",\n  \"ORB\",\n  \"BIGBROWN\",\n  \"BARBARO\",\n  \"GIACOMO\",\n  \"GOFORGIN\",\n  \"SEAHERO\",\n  \"LILETEE\",\n  \"ALYSHEBA\",\n  \"SWALE\",\n  \"AFFIRMED\",\n  \"TOMYLEE\",\n  \"TIMTAM\",\n  \"NEEDLES\",\n  \"SWAPS\",\n  \"DARKSTAR\",\n  \"HILLGAIL\",\n  \"PONDER\",\n  \"CITATION\",\n  \"JETPILOT\",\n  \"ASSAULT\",\n  \"HOOPJR\",\n  \"PENSIVE\",\n  \"SHUTOUT\",\n  \"LAWRIN\",\n  \"OMAHA\",\n  \"WHISKERY\",\n  \"ZEV\",\n  \"MORVICH\",\n  \"REGRET\",\n  \"DONERAIL\",\n  \"WORTH\",\n  \"MERIDIAN\",\n  \"DONAU\",\n  \"PINKSTAR\",\n  \"SIRHUON\",\n  \"AGILE\",\n  \"ELWOOD\",\n  \"BABEHURD\",\n]);\n\nexport const SUMMER_OLYMPIC_SPORTS = new Set([\n  \"ARCHERY\",\n  \"BASEBALL\",\n  \"SOFTBALL\",\n  \"BOXING\",\n  \"BREAKING\",\n  \"CANOE\",\n  \"CANOEING\",\n  \"CYCLING\",\n  \"DIVING\",\n  \"FENCING\",\n  \"FOOTBALL\",\n  \"GOLF\",\n  \"HANDBALL\",\n  \"HOCKEY\",\n  \"JUDO\",\n  \"KARATE\",\n  \"ROWING\",\n  \"RUGBY\",\n  \"SAILING\",\n  \"SHOOTING\",\n  \"SURFING\",\n  \"SWIMMING\",\n  \"TENNIS\",\n]);\n\nexport const LEAGUE_OF_LEGENDS_CHAMPIONS = new Set([\n  \"AATROX\",\n  \"AHRI\",\n  \"AKALI\",\n  \"AKSHAN\",\n  \"ALISTAR\",\n  \"AMUMU\",\n  \"ANNIE\",\n  \"APHELIOS\",\n  \"ASHE\",\n  \"AZIR\",\n  \"BARD\",\n  \"BELVETH\",\n  \"BRAND\",\n  \"BRAUM\",\n  \"CAITLYN\",\n  \"CAMILLE\",\n  \"CHOGATH\",\n  \"CORKI\",\n  \"DARIUS\",\n  \"DIANA\",\n  \"DRAVEN\",\n  \"EKKO\",\n  \"ELISE\",\n  \"EVELYNN\",\n  \"EZREAL\",\n  \"FIORA\",\n  \"FIZZ\",\n  \"GALIO\",\n  \"GAREN\",\n  \"GNAR\",\n  \"GRAGAS\",\n  \"GRAVES\",\n  \"GWEN\",\n  \"HECARIM\",\n  \"ILLAOI\",\n  \"IRELIA\",\n  \"IVERN\",\n  \"JANNA\",\n  \"JAX\",\n  \"JAYCE\",\n  \"JHIN\",\n  \"JINX\",\n  \"KAISA\",\n  \"KALISTA\",\n  \"KARMA\",\n  \"KARTHUS\",\n  \"KASSADIN\",\n  \"KATARINA\",\n  \"KAYLE\",\n  \"KAYN\",\n  \"KENNEN\",\n  \"KHAZIX\",\n  \"KINDRED\",\n  \"KLED\",\n  \"KOGMAW\",\n  \"KSANTE\",\n  \"LEBLANC\",\n  \"LEESIN\",\n  \"LEONA\",\n  \"LILLIA\",\n  \"LUCIAN\",\n  \"LULU\",\n  \"LUX\",\n  \"MALPHITE\",\n  \"MALZAHAR\",\n  \"MAOKAI\",\n  \"MILIO\",\n  \"MORGANA\",\n  \"NAAFIRI\",\n  \"NAMI\",\n  \"NASUS\",\n  \"NAUTILUS\",\n  \"NEEKO\",\n  \"NIDALEE\",\n  \"NILAH\",\n  \"NOCTURNE\",\n  \"OLAF\",\n  \"ORIANNA\",\n  \"ORNN\",\n  \"PANTHEON\",\n  \"POPPY\",\n  \"PYKE\",\n  \"QIYANA\",\n  \"QUINN\",\n  \"RAKAN\",\n  \"RAMMUS\",\n  \"REKSAI\",\n  \"RELL\",\n  \"RENEKTON\",\n  \"RENGAR\",\n  \"RIVEN\",\n  \"RUMBLE\",\n  \"RYZE\",\n  \"SAMIRA\",\n  \"SEJUANI\",\n  \"SENNA\",\n  \"SETT\",\n  \"SHACO\",\n  \"SHEN\",\n  \"SHYVANA\",\n  \"SINGED\",\n  \"SION\",\n  \"SKARNER\",\n  \"SONA\",\n  \"SORAKA\",\n  \"SWAIN\",\n  \"SYLAS\",\n  \"SYNDRA\",\n  \"TALIYAH\",\n  \"TALON\",\n  \"TARIC\",\n  \"TEEMO\",\n  \"THRESH\",\n  \"TRISTANA\",\n  \"TRUNDLE\",\n  \"TWITCH\",\n  \"UDYR\",\n  \"URGOT\",\n  \"VARUS\",\n  \"VAYNE\",\n  \"VEIGAR\",\n  \"VELKOZ\",\n  \"VEX\",\n  \"VI\",\n  \"VLADIMIR\",\n  \"VOLIBEAR\",\n  \"WARWICK\",\n  \"WUKONG\",\n  \"XAYAH\",\n  \"XERATH\",\n  \"XINZHAO\",\n  \"YASUO\",\n  \"YONE\",\n  \"YORICK\",\n  \"YUUMI\",\n  \"ZAC\",\n  \"ZED\",\n  \"ZERI\",\n  \"ZIGGS\",\n  \"ZILEAN\",\n  \"ZOE\",\n  \"ZYRA\",\n]);\n\nexport const US_STATES = new Set([\n  \"ALABAMA\",\n  \"ALASKA\",\n  \"ARIZONA\",\n  \"ARKANSAS\",\n  \"CALIFORNIA\",\n  \"COLORADO\",\n  \"CONNECTICUT\",\n  \"DELAWARE\",\n  \"FLORIDA\",\n  \"GEORGIA\",\n  \"HAWAII\",\n  \"IDAHO\",\n  \"ILLINOIS\",\n  \"INDIANA\",\n  \"IOWA\",\n  \"KANSAS\",\n  \"KENTUCKY\",\n  \"LOUISIANA\",\n  \"MAINE\",\n  \"MARYLAND\",\n  \"MASSACHUSETTS\",\n  \"MICHIGAN\",\n  \"MINNESOTA\",\n  \"MISSISSIPPI\",\n  \"MISSOURI\",\n  \"MONTANA\",\n  \"NEBRASKA\",\n  \"NEVADA\",\n  \"NEWHAMPSHIRE\",\n  \"NEWJERSEY\",\n  \"NEWMEXICO\",\n  \"NEWYORK\",\n  \"NORTHCAROLINA\",\n  \"NORTHDAKOTA\",\n  \"OHIO\",\n  \"OKLAHOMA\",\n  \"OREGON\",\n  \"PENNSYLVANIA\",\n  \"RHODEISLAND\",\n  \"SOUTHCAROLINA\",\n  \"SOUTHDAKOTA\",\n  \"TENNESSEE\",\n  \"TEXAS\",\n  \"UTAH\",\n  \"VERMONT\",\n  \"VIRGINIA\",\n  \"WASHINGTON\",\n  \"WESTVIRGINIA\",\n  \"WISCONSIN\",\n  \"WYOMING\",\n]);\n\nexport const MONTHS = new Set([\n  \"JANUARY\",\n  \"FEBRUARY\",\n  \"MARCH\",\n  \"APRIL\",\n  \"MAY\",\n  \"JUNE\",\n  \"JULY\",\n  \"AUGUST\",\n  \"SEPTEMBER\",\n  \"OCTOBER\",\n  \"NOVEMBER\",\n  \"DECEMBER\",\n]);\n\nexport const TREES = new Set([\n  \"ACACIA\",\n  \"ALDER\",\n  \"ALMOND\",\n  \"APPLE\",\n  \"APRICOT\",\n  \"ARBUTUS\",\n  \"ARECA\",\n  \"ARGAN\",\n  \"ASH\",\n  \"ASPEN\",\n  \"AVOCADO\",\n  \"BALSA\",\n  \"BAMBOO\",\n  \"BANYAN\",\n  \"BAOBAB\",\n  \"BASSWOOD\",\n  \"BAY\",\n  \"BEADTREE\",\n  \"BEECH\",\n  \"BIRCH\",\n  \"BOOJUM\",\n  \"BUCKEYE\",\n  \"CACAO\",\n  \"CAMPHOR\",\n  \"CATALPA\",\n  \"CEDAR\",\n  \"CEIBA\",\n  \"CHERRY\",\n  \"CHESTNUT\",\n  \"CINCHONA\",\n  \"CINNAMON\",\n  \"CITRUS\",\n  \"COCONUT\",\n  \"COFFEE\",\n  \"CYCAD\",\n  \"CYPRESS\",\n  \"DODO\",\n  \"DOGWOOD\",\n  \"DURIAN\",\n  \"ELDER\",\n  \"ELM\",\n  \"EUCALYPT\",\n  \"EUCOMMIA\",\n  \"FIG\",\n  \"FIR\",\n  \"FOXGLOVE\",\n  \"GINKGO\",\n  \"GUAVA\",\n  \"GURJAN\",\n  \"HACKBERRY\",\n  \"HAWTHORN\",\n  \"HAZEL\",\n  \"HEMLOCK\",\n  \"HICKORY\",\n  \"HOLLY\",\n  \"HORNBEAM\",\n  \"IPE\",\n  \"IRONWOOD\",\n  \"JACARANDA\",\n  \"JOSHUA\",\n  \"JUJUBE\",\n  \"KALYNA\",\n  \"KAPOK\",\n  \"KAURI\",\n  \"KUMQUAT\",\n  \"LAPACHO\",\n  \"LARCH\",\n  \"LAUREL\",\n  \"LEMON\",\n  \"LIME\",\n  \"LINDEN\",\n  \"LYCHEE\",\n  \"MAGNOLIA\",\n  \"MAHOE\",\n  \"MAHOGANY\",\n  \"MANGO\",\n  \"MANGROVE\",\n  \"MAPLE\",\n  \"MIRO\",\n  \"MORINGA\",\n  \"MULBERRY\",\n  \"MYALL\",\n  \"MYRTLE\",\n  \"NARRA\",\n  \"NEEM\",\n  \"NUTMEG\",\n  \"OAK\",\n  \"OLIVE\",\n  \"ORANGE\",\n  \"ORCHID\",\n  \"PALM\",\n  \"PAPAYA\",\n  \"PAWPAW\",\n  \"PEACH\",\n  \"PEAR\",\n  \"PECAN\",\n  \"PEREPAT\",\n  \"PERSIMMON\",\n  \"PINE\",\n  \"PISTACHIO\",\n  \"PLANE\",\n  \"PLUM\",\n  \"POPLAR\",\n  \"REDWOOD\",\n  \"RIMU\",\n  \"ROWAN\",\n  \"RUBBER\",\n  \"SAKHUA\",\n  \"SAL\",\n  \"SARAI\",\n  \"SASSAFRAS\",\n  \"SEQUOIA\",\n  \"SHALA\",\n  \"SOURSOP\",\n  \"SPRUCE\",\n  \"STOPPER\",\n  \"SUGI\",\n  \"SUMAC\",\n  \"SWEETGUM\",\n  \"SYCAMORE\",\n  \"TAMARACK\",\n  \"TEA\",\n  \"THUJA\",\n  \"TOTARA\",\n  \"TULIP\",\n  \"TUPELO\",\n  \"ULLIRI\",\n  \"WALNUT\",\n  \"WILLOW\",\n  \"WINGNUT\",\n  \"YEW\",\n  \"YUCCA\",\n]);\n","import { Permanent, Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Inspector } from \"engine/Inspector\";\nimport { ColorSymbol } from \"engine/types/card-data\";\nimport {\n  COLORS,\n  CURRENCY_CODES,\n  DAY_OF_WEEK_ABBREVIATIONS,\n  FIRST_151_POKEMON,\n  FRUITS,\n  IATA_AIRPORT_CODES_FLORIDA,\n  KENTUCKY_DERBY_WINNERS,\n  LEAGUE_OF_LEGENDS_CHAMPIONS,\n  MONTHS,\n  NFL_TEAM_NAMES,\n  OLYMPIC_WINTER_SPORTS,\n  ONES_DIGITS,\n  OPTICAL_COMPONENTS,\n  STANDALONE_NUMBERS,\n  SUMMER_OLYMPIC_SPORTS,\n  SYNONYMS_FOR_TRICKED,\n  TENS_DIGITS,\n  TREES,\n  US_STATES,\n  WEAPONS,\n} from \"./puzzle-51-server-data\";\nimport { CounterType } from \"engine/types/counters\";\nimport { EffectsDB, extractOptChoiceString } from \"engine/cards/card-effects\";\nimport { PUZZLE_51_CARDS } from \"./puzzle-51-shared\";\nimport {\n  PermanentEventHandlers,\n  PermanentEventType,\n} from \"engine/server-hooks\";\nimport { StepType } from \"engine/types/steps\";\nimport { AbilityType } from \"engine/types/effects\";\n\nconst AI_BASE_ID = \"bearhive\";\nconst BEEHIVE_ID = \"beehive\";\nconst LARVA_ID = \"larva\";\nconst NUM_STARTING_GEMS = 15;\nconst AI_CARD_IDS = [\n  \"luge-bear\", // 0\n  \"stufful-bear\", // 1\n  \"black-bear\", // 2\n  \"banana-bear\", // 3\n  \"sun-bear\", // 4\n  \"ord-bear\", // 5\n  \"bears-bear\", // 6\n  \"confused-bear\", // 7\n  \"eur-bear\", // 8\n  \"three-bear\", // 9\n  \"bludgeon-bear\", // 10\n  \"four-bear\", // 11\n  \"grism-bear\", // 12\n  \"assault-bear\", // 13\n  \"archery-bear\", // 14\n  \"oak-bear\", // 15\n  \"december-bear\", // 16\n  \"alabama-bear\", // 17\n  \"rammus-bear\", // 18\n];\nconst NUMBERS = ONES_DIGITS.concat(TENS_DIGITS).concat(STANDALONE_NUMBERS);\n\ntype Puzzle51ExtraState = {\n  firstNumber: undefined | number;\n  usedDraw: boolean;\n  usedSpecial: boolean;\n};\n\n/**\n * Returns all strings available by reading across or down. Blank grid spaces break strings.\n * All letters are in upper case.\n *\n * @param inspector\n * @returns\n */\nfunction getAllStrings(inspector: Inspector): Set<string> {\n  const rows = inspector.getNumRows();\n  const cols = inspector.getNumColumns();\n  const permanents = inspector.getAllPermanents();\n  const grid: (Permanent | undefined)[][] = [];\n  for (let r = 0; r < rows; r++) {\n    const row: (Permanent | undefined)[] = [];\n    for (let c = 0; c < cols; c++) {\n      row.push(undefined);\n    }\n    grid.push(row);\n  }\n  for (const p of permanents) {\n    grid[p.slot.row][p.slot.column] = p;\n  }\n  // Read across.\n  const res = new Set<string>();\n  for (let r = 0; r < rows; r++) {\n    let string = \"\";\n    for (let c = 0; c < cols; c++) {\n      const p = grid[r][c];\n      if (p === undefined || p.card.name === LARVA_ID) {\n        res.add(string);\n        string = \"\";\n      } else {\n        string += p.card.name?.charAt(0).toUpperCase();\n      }\n    }\n    // When you reach the end of the column, add whatever you have.\n    res.add(string);\n  }\n  // Read down.\n  for (let c = 0; c < cols; c++) {\n    let string = \"\";\n    for (let r = 0; r < rows; r++) {\n      const p = grid[r][c];\n      if (p === undefined || p.card.name === LARVA_ID) {\n        res.add(string);\n        string = \"\";\n      } else {\n        string += p.card.name?.charAt(0).toUpperCase();\n      }\n    }\n    // When you reach the end of the row, add whatever you have.\n    res.add(string);\n  }\n  return res;\n}\n\n/**\n * Returns true iff one of the items in shouldContain is contained within the grid (reading across or down, breaking at empty space).\n * Requires that all entries of shouldContain are in upper case.\n *\n * @param shouldContain The set of strings where we want to know if one of them is present on the board.\n * @param allStringsBeforeAnyDespawns The set of all strings that are present before any despawns.\n */\nfunction containsOneOf(\n  shouldContain: Set<string>,\n  allStringsBeforeAnyDespawns: Set<string>\n): boolean {\n  for (const string of allStringsBeforeAnyDespawns) {\n    for (const substring of shouldContain) {\n      if (string.includes(substring)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nconst beeOrLarvaHandlers: PermanentEventHandlers = {\n  [PermanentEventType.CREATED]: (ev) => {\n    const { ctx, permanent } = ev;\n    ctx.engine.addCounter(permanent, { type: CounterType.CANNOT_CREATE });\n    ctx.engine.addCounter(permanent, { type: CounterType.CANNOT_ATTACK });\n    ctx.engine.addCounter(permanent, { type: CounterType.CANNOT_MOVE });\n  },\n};\nconst cardEffects: EffectsDB = {\n  larva: {\n    onSpecial: (step, ctx) => {\n      const { engine } = ctx;\n      const { permanent } = step;\n      const newPermanentName = extractOptChoiceString(step, 0);\n      const newPermanentId = newPermanentName.toLowerCase().replace(/ /g, \"-\");\n      const slot = permanent.slot;\n      const owner = permanent.owner;\n\n      engine.despawn(permanent);\n      engine.spawn(newPermanentId, slot, owner);\n    },\n    handlers: beeOrLarvaHandlers,\n  },\n};\n\nfor (const cardName of PUZZLE_51_CARDS) {\n  cardEffects[cardName.toLocaleLowerCase().replace(/ /g, \"-\")] = {\n    onRepeatable: (step, ctx) => {\n      const { engine } = ctx;\n      engine.despawn(step.permanent);\n    },\n    handlers: beeOrLarvaHandlers,\n  };\n}\n\nexport const Puzzle51Spec: GameSpecServerFragment = {\n  afterInitEngine: (ctx) => {\n    const { engine } = ctx;\n    engine.initExtraState({\n      firstNumber: undefined,\n      usedDraw: false,\n      usedSpecial: false,\n    } as Puzzle51ExtraState);\n  },\n  afterTurnEnd: (player, ctx) => {\n    const { inspector, engine } = ctx;\n    if (player === Player.P2) {\n      const amt = inspector\n        .getPermanentsOf(Player.P1)\n        .filter((p) => p.card.name !== BEEHIVE_ID).length;\n      engine.addGems(Player.P1, new Array(amt).fill(ColorSymbol.YELLOW));\n    }\n    // if (player === Player.P1) {\n    //   engine.checkpoint();\n    // }\n  },\n  beforeNewGame: (ctx) => {\n    const { ai, engine } = ctx;\n    engine.addGems(\n      Player.P1,\n      new Array(NUM_STARTING_GEMS).fill(ColorSymbol.YELLOW)\n    );\n    ai.speak(\n      \"The B, E, A, R, S are looking rather down today. Help us C, H, E, E, R them up!\\nWe’ll keep the H, O, N, E, Y fresh, so it won’t reset between T, U, R, N, S!\"\n    );\n  },\n  cardEffects,\n  aiTurn: (ctx) => {\n    const { ai, engine, inspector } = ctx;\n    const extraState = engine.getExtraState() as Puzzle51ExtraState;\n    const aiTurnNumber = inspector.getTurnNumber() / 2;\n    const allStringsBeforeAnyDespawns = getAllStrings(inspector);\n\n    const bearhive = inspector\n      .getPermanentsOf(Player.P2)\n      .find((p) => p.card.name === AI_BASE_ID);\n\n    // Set up the bearhive.\n    if (aiTurnNumber === 0) {\n      if (bearhive === undefined) return;\n      engine.addCounter(bearhive, { type: CounterType.HAPPY_BEARS, val: 0 });\n      engine.addCounter(bearhive, { type: CounterType.SAD_BEARS, val: 0 });\n    }\n\n    const bearResults: string[] = [];\n    const completeBear = (isHappy: boolean, permanent?: Permanent) => {\n      if (bearhive === undefined) return;\n      const bearName =\n        permanent === undefined\n          ? \"Bear\"\n          : inspector.getCardDisplayName(permanent);\n      engine.mergeValueCounter(\n        bearhive,\n        isHappy ? CounterType.HAPPY_BEARS : CounterType.SAD_BEARS,\n        1\n      );\n      bearResults.push(\n        `${bearName} is ${isHappy ? \"H, A, P, P, Y!\" : \"S, A, D :(\"}`\n      );\n    };\n    function despawnAndUpdateCounters(cardId: string, category: Set<string>) {\n      const cardToDespawn = inspector\n        .getPermanentsOf(Player.P2)\n        .find((p) => p.card.name === cardId);\n      const bearName =\n        cardToDespawn === undefined\n          ? \"Bear\"\n          : inspector.getCardDisplayName(cardToDespawn);\n\n      completeBear(\n        containsOneOf(category, allStringsBeforeAnyDespawns),\n        cardToDespawn\n      );\n\n      if (cardToDespawn !== undefined) {\n        engine.despawn(cardToDespawn);\n      }\n    }\n\n    // De-spawn everything.\n    switch (aiTurnNumber) {\n      case 2:\n        despawnAndUpdateCounters(AI_CARD_IDS[0], OLYMPIC_WINTER_SPORTS);\n        break;\n      case 5:\n        despawnAndUpdateCounters(AI_CARD_IDS[1], FIRST_151_POKEMON);\n        break;\n      case 6:\n        despawnAndUpdateCounters(AI_CARD_IDS[2], COLORS);\n        break;\n      case 7:\n        despawnAndUpdateCounters(AI_CARD_IDS[3], FRUITS);\n        break;\n      case 8:\n        despawnAndUpdateCounters(AI_CARD_IDS[4], DAY_OF_WEEK_ABBREVIATIONS);\n        despawnAndUpdateCounters(AI_CARD_IDS[5], IATA_AIRPORT_CODES_FLORIDA);\n        break;\n      case 9:\n        despawnAndUpdateCounters(AI_CARD_IDS[6], NFL_TEAM_NAMES);\n        break;\n      case 10:\n        despawnAndUpdateCounters(AI_CARD_IDS[7], SYNONYMS_FOR_TRICKED);\n        despawnAndUpdateCounters(AI_CARD_IDS[8], CURRENCY_CODES);\n        break;\n      case 11: {\n        // Get the smallest number present on the board.\n        const allStrings = getAllStrings(inspector);\n        let minimumValue = undefined;\n        for (const [number, value] of NUMBERS) {\n          for (const string of allStrings) {\n            if (\n              string.includes(number) &&\n              (minimumValue === undefined || minimumValue > value)\n            ) {\n              minimumValue = value;\n            }\n          }\n        }\n        // If a number was spelled out, despawn the correct AI card and store the firstNumber in extraState.\n        const cardToDespawn = inspector\n          .getPermanentsOf(Player.P2)\n          .find((p) => p.card.name === AI_CARD_IDS[9]);\n\n        const isSatisfied = minimumValue !== undefined;\n        if (isSatisfied) extraState.firstNumber = minimumValue;\n        completeBear(isSatisfied, cardToDespawn);\n\n        if (cardToDespawn !== undefined) engine.despawn(cardToDespawn);\n        // Despawn based on spelled weapons.\n        despawnAndUpdateCounters(AI_CARD_IDS[10], WEAPONS);\n        break;\n      }\n      case 13: {\n        // Get the largest number present on the board.\n        const allStrings2 = getAllStrings(inspector);\n        let maximumValue = undefined;\n        const generatedNumbers: [string, number][] = [];\n        for (const [tensDigit, tensValue] of TENS_DIGITS) {\n          for (const [onesDigit, onesValue] of ONES_DIGITS) {\n            generatedNumbers.push([\n              tensDigit + onesDigit,\n              tensValue + onesValue,\n            ]);\n          }\n        }\n        for (const [number, value] of NUMBERS.concat(generatedNumbers)) {\n          for (const string of allStrings2) {\n            if (\n              string.includes(number) &&\n              (maximumValue === undefined || maximumValue < value)\n            ) {\n              maximumValue = value;\n            }\n          }\n        }\n        // If a larger number was spelled out, despawn the correct AI card.\n        const cardToDespawn = inspector\n          .getPermanentsOf(Player.P2)\n          .find((p) => p.card.name === AI_CARD_IDS[11]);\n\n        const isSatisfied =\n          maximumValue !== undefined &&\n          extraState.firstNumber !== undefined &&\n          maximumValue > extraState.firstNumber;\n        completeBear(isSatisfied, cardToDespawn);\n\n        if (cardToDespawn !== undefined) engine.despawn(cardToDespawn);\n\n        // Despawn based on geometric shapes & Kentucky Derby winners.\n        despawnAndUpdateCounters(AI_CARD_IDS[12], OPTICAL_COMPONENTS);\n        despawnAndUpdateCounters(AI_CARD_IDS[13], KENTUCKY_DERBY_WINNERS);\n        break;\n      }\n      case 15:\n        despawnAndUpdateCounters(AI_CARD_IDS[14], SUMMER_OLYMPIC_SPORTS);\n        despawnAndUpdateCounters(AI_CARD_IDS[15], TREES);\n        despawnAndUpdateCounters(AI_CARD_IDS[16], MONTHS);\n        despawnAndUpdateCounters(AI_CARD_IDS[17], US_STATES);\n        despawnAndUpdateCounters(AI_CARD_IDS[18], LEAGUE_OF_LEGENDS_CHAMPIONS);\n        break;\n    }\n\n    const showHint =\n      aiTurnNumber === 3 &&\n      !(engine.getExtraState() as Puzzle51ExtraState).usedDraw;\n\n    const hintDialogue =\n      \"Oh yeah, a certain M, A, S, T, E, R, Y might bee very helpful for this battle!\";\n    if (bearResults.length > 0 || showHint) {\n      ai.speak(\n        [\n          ...(bearResults.length > 0\n            ? [\n                bearResults.join(\n                  showHint || bearResults.length > 4 ? \" \" : \"\\n\"\n                ),\n              ]\n            : []),\n          ...(showHint ? [hintDialogue] : []),\n        ].join(\"\\n\")\n      );\n    }\n\n    function clear(row: number, col: number) {\n      inspector\n        .getAllPermanents()\n        .filter((p) => p.slot.column === col && p.slot.row === row)\n        .forEach((p) => engine.despawn(p));\n    }\n\n    // Now do new spawns.\n    switch (aiTurnNumber) {\n      case 1:\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[0], 2, 2);\n        break;\n      case 4:\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[1], 2, 2);\n        break;\n      case 5:\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[2], 2, 2);\n        break;\n      case 6:\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[3], 2, 2);\n        break;\n      case 7:\n        clear(2, 2);\n        clear(2, 3);\n        ai.trySpawn(AI_CARD_IDS[4], 2, 2);\n        ai.trySpawn(AI_CARD_IDS[5], 2, 3);\n        break;\n      case 8:\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[6], 2, 2);\n        break;\n      case 9:\n        clear(2, 2);\n        clear(2, 3);\n        ai.trySpawn(AI_CARD_IDS[7], 2, 2);\n        ai.trySpawn(AI_CARD_IDS[8], 2, 3);\n        break;\n      case 10:\n        clear(2, 3);\n        clear(2, 2);\n        ai.trySpawn(AI_CARD_IDS[9], 2, 3);\n        ai.trySpawn(AI_CARD_IDS[10], 2, 2); // Needed for 1st letter.\n        break;\n      case 12:\n        clear(2, 2);\n        clear(2, 3);\n        clear(2, 4);\n        ai.trySpawn(AI_CARD_IDS[11], 2, 2);\n        ai.trySpawn(AI_CARD_IDS[12], 2, 3);\n        ai.trySpawn(AI_CARD_IDS[13], 2, 4);\n        break;\n      case 14:\n        clear(1, 2);\n        clear(2, 2);\n        clear(0, 5);\n        clear(1, 5);\n        clear(2, 5);\n        // Letter placements important.\n        ai.trySpawn(AI_CARD_IDS[14], 1, 2);\n        ai.trySpawn(AI_CARD_IDS[15], 2, 2);\n        ai.trySpawn(AI_CARD_IDS[16], 0, 5);\n        ai.trySpawn(AI_CARD_IDS[17], 1, 5);\n        ai.trySpawn(AI_CARD_IDS[18], 2, 5);\n        break;\n    }\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n    const bearhive = inspector\n      .getPermanentsOf(Player.P2)\n      .find((p) => p.card.name === AI_BASE_ID);\n    const noSadBears =\n      (bearhive?.counters.find((c) => c.type === CounterType.SAD_BEARS)?.val ??\n        0) === 0;\n    return (\n      inspector.getTurnNumber() >= 31 &&\n      // P2 loses if there are no sad bears;\n      // P1 loses if there are sad bears.\n      noSadBears === (player === Player.P2)\n    );\n  },\n  afterStep: (step, ctx) => {\n    if (step.type === StepType.DRAW) {\n      (ctx.engine.getExtraState() as Puzzle51ExtraState).usedDraw = true;\n      return;\n    }\n    const { ai, engine } = ctx;\n    const extraState = engine.getExtraState() as Puzzle51ExtraState;\n    if (extraState.usedSpecial) return;\n    if (step.type !== StepType.ACTIVATE_ABILITY) return;\n    if (step.abilityType !== AbilityType.SPECIAL) return;\n    extraState.usedSpecial = true;\n    ai.speak(\n      \"This battle has a S, P, E, C, I, A, L hotkey! When transforming a Larva into a bee, you can type any letter key to select the bee type whose first letter matches!\"\n    );\n  },\n};\n","import {\n  CreatedPermanentEvent,\n  EndTurnPermanentEvent,\n  PermanentEventType,\n} from \"engine/server-hooks\";\nimport { CardType } from \"engine/types/card-data\";\nimport { CounterType } from \"engine/types/counters\";\nimport { AIContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Player } from \"engine/types/game-state\";\nimport { UpdateType } from \"engine/types/updates\";\nimport { CardEffects } from \"engine/cards/card-effects\";\nimport { Puzzle76SharedExtraState } from \"engine/game-specs/puzzle-76-shared\";\n\nconst LAST_WAVE = 6;\n\n// make sure to modify the card's text in Deck sheet as well\nconst DINOSAUR_TAIL_TURNS = 5;\nconst BOAR_TUSKS_TURNS = 2;\nconst DRYAD_HORNS_TURNS = 14;\nconst COW_UDDER_TURNS = 4;\nconst BEE_WINGS_TURNS = 3;\nconst KERO_TURNS = 5;\n\nconst announceDoom = (ctx: AIContext, dialogue: string, turnsLeft: number) => {\n  const { ai } = ctx;\n  ai.speak(`${dialogue}\\n${Array(turnsLeft).fill(\"⏳\").join(\" \")}`);\n};\n\nconst summonDoomHandler = (turns: number) => (event: CreatedPermanentEvent) => {\n  const { permanent, ctx } = event;\n  const { engine } = ctx;\n\n  engine.addCounter(permanent, {\n    type: CounterType.DOOM,\n    val: turns,\n  });\n};\n\nconst endTurnDoomHandler =\n  (turns: number) => (event: EndTurnPermanentEvent) => {\n    // note this triggers before the counter itself decrements\n    // check for doom counter\n    const { permanent, ctx } = event;\n    const { inspector, engine, ai } = ctx;\n    const sharedExt =\n      inspector.getSharedExtraState() as Puzzle76SharedExtraState;\n\n    if (inspector.doesPermanentHaveCounterType(permanent, CounterType.DOOM)) {\n      const doomValue = inspector.getCounterValSum(permanent, CounterType.DOOM);\n      // console.log(`doom counter exists with ${doomValue}`);\n\n      const beforeMyCardDestroysYou = `before my ${inspector.getCardDisplayName(\n        permanent\n      )} destroys you!`;\n\n      if (doomValue === turns) {\n        // ai.speak(\n        //   `Wave ${sharedExt.keroPhase}: ${doomValue} turns left ${beforeMyCardDestroysYou}`\n        // );\n      } else if (doomValue > 1) {\n        // ai.speak(`${doomValue} turns left ${beforeMyCardDestroysYou}`);\n      } else if (doomValue === 1) {\n        // ai.speak(`Last turn ${beforeMyCardDestroysYou}`);\n      } else if (doomValue === 0) {\n        // destroy all enemy units\n        const enemyUnits = inspector.getPermanents({\n          ownedByOpponentOf: permanent.owner,\n        });\n\n        enemyUnits.forEach((unit) => {\n          engine.destroy(permanent, unit);\n        });\n\n        // destroy counter\n        engine.removeCounterType(permanent, CounterType.DOOM);\n        engine.announce(\n          `${inspector.getCardDisplayName(permanent)} destroys all enemy units`\n        );\n      }\n    }\n  };\n\nconst cowLegEffects: CardEffects = {\n  // Whenever an allied unit dies, gain +0/+1.\n  handlers: {\n    [PermanentEventType.AFTER_DAMAGED]: (event) => {\n      const { permanent, attacker, ctx } = event;\n      const { inspector, engine } = ctx;\n      // Attack back only if the damage comes from an attacker.\n      if (attacker) {\n        engine.announce(\n          `${inspector.getCardDisplayName(\n            permanent\n          )} attacks back for 1 damage!`\n        );\n        // Do not attribute damage to prevent triggering other card effects.\n        engine.damageUnattributed(attacker, 1);\n      }\n    },\n    [PermanentEventType.OTHER_UNIT_DESTROYED]: (event) => {\n      const { permanent, destroyedPermanent, ctx } = event;\n      const { inspector, engine } = ctx;\n\n      if (permanent.owner === destroyedPermanent.owner) {\n        engine.adjustPermanentStats(permanent, 0, 1);\n      }\n      engine.announce(\n        `${inspector.getCardDisplayName(permanent)} gains +1 max health`\n      );\n    },\n  },\n};\n\nexport const Puzzle76Spec: GameSpecServerFragment = {\n  // counterData: {},\n  cardEffects: {\n    \"kero-dos\": {\n      handlers: {\n        [PermanentEventType.CREATED]: (ev) => {\n          const { permanent, ctx } = ev;\n          const { engine } = ctx;\n          engine.addCounter(permanent, { type: CounterType.INVULNERABLE });\n        },\n      },\n    },\n    // wave 1\n    \"dinosaur-tail\": {\n      // Takes at most 1 damage from any single source of damage.\n      adjustDamageReceived: (permanent, damage, attacker, ctx) => {\n        if (damage >= 1) return 1;\n        return damage;\n      },\n      // After 3 turns, destroy all enemy units.\n      handlers: {\n        [PermanentEventType.CREATED]: summonDoomHandler(DINOSAUR_TAIL_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(DINOSAUR_TAIL_TURNS),\n      },\n    },\n    // wave 2\n    \"boar-tusks\": {\n      // Creatures that do damage to this Creature take 3 damage.\n      // After 2 turns, destroy all enemy units.\n      handlers: {\n        [PermanentEventType.AFTER_DAMAGED]: (event) => {\n          const { permanent, attacker, ctx } = event;\n          const { inspector, engine } = ctx;\n          // Attack back only if the damage comes from an attacker.\n          if (attacker) {\n            engine.announce(\n              `${inspector.getCardDisplayName(\n                permanent\n              )} attacks back for 3 damage!`\n            );\n            // Do not attribute damage to prevent triggering other card effects.\n            engine.damageUnattributed(attacker, 3);\n          }\n        },\n        [PermanentEventType.CREATED]: summonDoomHandler(BOAR_TUSKS_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(BOAR_TUSKS_TURNS),\n      },\n    },\n    // wave 3\n    \"dryad-horns\": {\n      handlers: {\n        [PermanentEventType.CREATED]: summonDoomHandler(DRYAD_HORNS_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(DRYAD_HORNS_TURNS),\n      },\n    },\n    // wave 4\n    \"cow-leg-white\": cowLegEffects,\n    \"cow-leg-black\": cowLegEffects,\n    \"cow-udder\": {\n      handlers: {\n        [PermanentEventType.CREATED]: summonDoomHandler(COW_UDDER_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(COW_UDDER_TURNS),\n        // Whenever an allied unit dies, gain +0/+1.\n        [PermanentEventType.AFTER_DAMAGED]: (event) => {\n          const { permanent, attacker, ctx } = event;\n          const { inspector, engine } = ctx;\n          // Attack back only if the damage comes from an attacker.\n          if (attacker) {\n            engine.announce(\n              `${inspector.getCardDisplayName(\n                permanent\n              )} attacks back for 1 damage!`\n            );\n            // Do not attribute damage to prevent triggering other card effects.\n            engine.damageUnattributed(attacker, 1);\n          }\n        },\n        [PermanentEventType.OTHER_UNIT_DESTROYED]: (event) => {\n          const { permanent, destroyedPermanent, ctx } = event;\n          const { inspector, engine } = ctx;\n\n          if (permanent.owner === destroyedPermanent.owner) {\n            engine.adjustPermanentStats(permanent, 0, 1);\n          }\n          engine.announce(\n            `${inspector.getCardDisplayName(permanent)} gains +1 max health`\n          );\n        },\n      },\n    },\n    // wave 5\n    \"bee-wings\": {\n      handlers: {\n        [PermanentEventType.CREATED]: summonDoomHandler(BEE_WINGS_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(BEE_WINGS_TURNS),\n      },\n      // Platinum Archangel doesn't take damage from enemy units.\n      insteadOfDamaged: (permanent, damage, attacker, ctx) => {\n        const { inspector } = ctx;\n        if (\n          attacker &&\n          permanent.owner === inspector.getOpponentOf(attacker.owner)\n        )\n          return false;\n        return true;\n      },\n    },\n    // wave 6\n    kero: {\n      // After this creature takes damage, double its remaining health.\n      handlers: {\n        [PermanentEventType.CREATED]: summonDoomHandler(KERO_TURNS),\n        [PermanentEventType.END_TURN]: endTurnDoomHandler(KERO_TURNS),\n        [PermanentEventType.AFTER_DAMAGED]: (event) => {\n          const { permanent, ctx } = event;\n          const { inspector, engine } = ctx;\n          const me = inspector.getPermanents({\n            name: \"kero\",\n            owner: Player.P2,\n          })[0];\n          if (!me) {\n            return;\n          }\n          const health = inspector.getHealth(me);\n          engine.adjustPermanentStats(me, 0, health);\n          engine.announce(`Kero increases its Health by ${health}`);\n        },\n      },\n    },\n  },\n  afterInitEngine: (ctx) => {\n    const { inspector, engine } = ctx;\n    engine.initSharedExtraState({\n      keroPhase: 0,\n    } as Puzzle76SharedExtraState);\n  },\n  afterStep: (step, ctx) => {\n    const { inspector, engine } = ctx;\n    const sharedExt =\n      inspector.getSharedExtraState() as Puzzle76SharedExtraState;\n    if (sharedExt.keroPhase === 4) {\n      // cow leg phase only\n      const udder = inspector.getPermanents({\n        owner: Player.P2,\n        name: \"cow-udder\",\n      })[0];\n      if (!udder) {\n        return;\n      }\n      const numLegs =\n        inspector.getPermanents({\n          owner: Player.P2,\n          name: \"cow-leg-white\",\n        }).length +\n        inspector.getPermanents({\n          owner: Player.P2,\n          name: \"cow-leg-black\",\n        }).length;\n      if (numLegs === 0) {\n        engine.removeCounterType(udder, CounterType.INVULNERABLE);\n      }\n    }\n\n    // If Kero Dos (and Kero) has been destroyed, the battle has ended.\n    const enemyUnits = inspector.getPermanentsOf(Player.P2);\n    if (enemyUnits.length === 0) {\n      engine.modifySharedExtraState({\n        keroPhase: sharedExt.keroPhase + 1,\n      } as Puzzle76SharedExtraState);\n      engine.getBackdoorController().broadcastAndApply({\n        type: UpdateType.WAIT_ANIMATE,\n        waitTime: 4000,\n      });\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const units = inspector.getPermanentsOf(Player.P2);\n    const sharedExt =\n      inspector.getSharedExtraState() as Puzzle76SharedExtraState;\n\n    const hasCreatures = units.some(\n      (unit) => inspector.getCardType(unit) === CardType.CREATURE\n    );\n\n    // new round if no Creatures left\n    if (!hasCreatures) {\n      engine.modifySharedExtraState({\n        keroPhase: sharedExt.keroPhase + 1,\n      } as Puzzle76SharedExtraState);\n\n      // Only unit left is Kero Dos.\n      const base = units[0];\n\n      if (sharedExt.keroPhase > 1) {\n        // deal 1 damage to kero dos\n        engine.damageUnattributed(\n          base,\n          Math.round(inspector.getMaxHealth(base) / 6),\n          true\n        );\n      }\n\n      // set up new round\n      // clear board of player's creatures\n      inspector.getPermanentsOf(Player.P1).forEach((permanent) => {\n        if (inspector.getCardType(permanent) === CardType.CREATURE) {\n          engine.despawn(permanent);\n        }\n      });\n\n      switch (sharedExt.keroPhase) {\n        case 1:\n          // // TEST to draw all cards\n          // while (inspector.getDrawPile(Player.P1).length > 0)\n          //   engine.drawCard(Player.P1);\n          ai.trySpawn(\"dinosaur-tail\", 1, 2);\n          break;\n        case 2:\n          ai.trySpawn(\"boar-tusks\", 1, 2);\n          break;\n        case 3:\n          ai.trySpawn(\"dryad-horns\", 1, 2);\n          break;\n        case 4: {\n          ai.trySpawn(\"cow-udder\", 1, 2);\n          for (let row = 1; row < 3; row++) {\n            for (let col = 0; col < 5; col++) {\n              ai.trySpawn(\n                (row + col) % 2 === 0 ? \"cow-leg-white\" : \"cow-leg-black\",\n                row,\n                col\n              );\n            }\n          }\n          const udder = inspector.getPermanents({\n            owner: Player.P2,\n            name: \"cow-udder\",\n          })[0];\n          if (udder) {\n            engine.addCounter(udder, { type: CounterType.INVULNERABLE });\n          }\n          break;\n        }\n        case 5:\n          ai.trySpawn(\"bee-wings\", 1, 2);\n          break;\n        case 6: {\n          engine.despawn(base);\n          engine.spawn(\"kero\", 0, 2, Player.P2);\n          break;\n        }\n      }\n    }\n\n    const doomUnit = inspector.getPermanents({\n      hasCounter: CounterType.DOOM,\n    })[0];\n    const turnsToDoom =\n      doomUnit === undefined\n        ? 0\n        : inspector.getCounterValSum(doomUnit, CounterType.DOOM);\n    switch (sharedExt.keroPhase) {\n      case 1: {\n        announceDoom(\n          ctx,\n          \"How dare y'all turn against me?\\nAfter everything we've been thruwu!\\nHand over the cards, or...\\nI'll smash all of you to bits with my tail! ( •̀_•́)💢\",\n          turnsToDoom\n        );\n        break;\n      }\n      case 2: {\n        announceDoom(\n          ctx,\n          \"You... destroyed my tail? How is that possible?!\\nThe power of all our Dino friends was stored within it!\\nNo matter. I still have power from all the other Factions!\\nI'll destroy youwu with my tusks!! (╬ Ò﹏Ó)\",\n          turnsToDoom\n        );\n        break;\n      }\n      case 3: {\n        announceDoom(\n          ctx,\n          \"STOP IT!!! I'll destroy ALL of you! ヽ(#`Д´)ﾉ\\nI'll destroy the whole uwuorld!\\nIf these horns would just — *cough* 🌷 — charge up a little faster...\\nAll the cards... will be MINE! MY FRIENDS!!! FOREVER!!!!\",\n          turnsToDoom\n        );\n        break;\n      }\n      case 4: {\n        announceDoom(\n          ctx,\n          \"What, no!!! GIVE THEM BACK!!! (ง ‵□′)ง\\nYou were my FRIEND! ALL of you were my FRIENDS!!!\\nWe were so close... the UWU... Just... give up already!!!\\nI'll- I'll share some of the UWU with you, I promise!!!\",\n          turnsToDoom\n        );\n        break;\n      }\n      case 5: {\n        announceDoom(\n          ctx,\n          \"No... (๑′°︿°๑) I don't wanna...\\nI don't wanna go back to being a fish again...\\nI don't... I CAN'T go back in that box again...\\nNot another 1000 years... alone...\",\n          turnsToDoom\n        );\n        break;\n      }\n      case 6: {\n        announceDoom(\n          ctx,\n          \"Nouwu~! Everything... EVERYTHING IS RUWUINED!!! (ಥ﹏ಥ)\\nI... No, I can't give up, not nouwu...!\\nI don't need you, I NEVER needed you!\\nNot youwu, not cards... just the power... of UWU...\",\n          turnsToDoom\n        );\n        break;\n      }\n    }\n\n    // TODO: uncomment\n    // for (const unit of units) {\n    //   // act with all present units, just use a basic attack\n    //   ai.tryAttackFirst(unit);\n    // }\n  },\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: (player, ctx) => {\n    const { inspector, engine } = ctx;\n    const sharedExt =\n      inspector.getSharedExtraState() as Puzzle76SharedExtraState;\n    return player === Player.P2 && sharedExt.keroPhase === 7;\n  },\n};\n","import { CardColor, ColorSymbol } from \"engine/types/card-data\";\nimport { Permanent, Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Inspector } from \"engine/Inspector\";\nimport {\n  PermanentEventHandlers,\n  PermanentEventType,\n} from \"engine/server-hooks\";\n\ntype Puzzle80ExtraState = {\n  // Transient state (cleared at the end of each turn) to store\n  // damage mappings to announce.\n  damageMappings: {\n    [gostakName: string]: {\n      targetName: string;\n      damage: number;\n    }[];\n  };\n};\n\nfunction manhattanDistance(a: Permanent, b: Permanent) {\n  return (\n    Math.abs(a.slot.row - b.slot.row) + Math.abs(a.slot.column - b.slot.column)\n  );\n}\n\nfunction puzzleLength(s: string) {\n  let count = 0;\n  for (const c of s) {\n    if (/[0-9a-zA-Z]/.test(c)) {\n      count += 1;\n    }\n  }\n  return count;\n}\n\nfunction a1color(color: CardColor | null) {\n  if (color === null) return 0;\n  // WHITEBLACK is Gray\n  if (color === ColorSymbol.WHITEBLACK) return 7;\n  if (!/^[A-Z]/.test(color)) return 0;\n  return color.charCodeAt(0) - \"A\".charCodeAt(0) + 1;\n}\n\nconst damageFuncs = [\n  [\n    function (inspector: Inspector, _me: Permanent, target: Permanent) {\n      return inspector.getPower(target);\n    },\n  ],\n  [\n    function (inspector: Inspector, _me: Permanent, target: Permanent) {\n      return inspector.getMaxHealth(target);\n    },\n  ],\n  [\n    function (inspector: Inspector, _me: Permanent, target: Permanent) {\n      return Math.abs(\n        inspector.getPower(target) - inspector.getMaxHealth(target)\n      );\n    },\n  ],\n  [\n    function (inspector: Inspector, _me: Permanent, target: Permanent) {\n      return Math.abs(\n        inspector.getPower(target) -\n          puzzleLength(inspector.getCardDisplayName(target))\n      );\n    },\n  ],\n  [\n    function (inspector: Inspector, me: Permanent, target: Permanent) {\n      return Math.abs(\n        manhattanDistance(me, target) - a1color(inspector.getCardColor(target))\n      );\n    },\n  ],\n  [\n    function (inspector: Inspector, me: Permanent, target: Permanent) {\n      return Math.abs(\n        puzzleLength(inspector.getCardDisplayName(target)) -\n          manhattanDistance(me, target) *\n            a1color(inspector.getCardColor(target))\n      );\n    },\n  ],\n  [\n    function (inspector: Inspector, me: Permanent, target: Permanent) {\n      return Math.abs(\n        inspector.getMaxHealth(target) *\n          puzzleLength(inspector.getCardDisplayName(target)) -\n          manhattanDistance(me, target)\n      );\n    },\n    function (inspector: Inspector, _me: Permanent, target: Permanent) {\n      return (\n        Math.floor(inspector.getTurnNumber() / 2) *\n        Math.abs(\n          inspector.getMaxHealth(target) -\n            puzzleLength(inspector.getCardDisplayName(target))\n        )\n      );\n    },\n  ],\n];\n\nfunction makeGostakHandler(\n  damageFuncs: ((\n    inspector: Inspector,\n    me: Permanent,\n    target: Permanent\n  ) => number)[]\n): PermanentEventHandlers {\n  return {\n    [PermanentEventType.START_TURN]: (event) => {\n      const me = event.permanent;\n      const { inspector, engine } = event.ctx;\n      const ext = engine.getExtraState() as Puzzle80ExtraState;\n      const gostakName = inspector.getCardDisplayName(me);\n      for (const func of damageFuncs) {\n        const targets = inspector\n          .getPermanentsOf(inspector.getOpponentOf(me.owner))\n          .filter((perm) => !inspector.isProtectedFrom(perm, me));\n        for (const perm of targets) {\n          const damage = func(inspector, me, perm);\n          const targetName = inspector.getCardDisplayName(perm);\n          engine.announce(`The gostak attacks ${targetName} for ${damage}...`);\n          ext.damageMappings[gostakName] ??= [];\n          ext.damageMappings[gostakName].push({\n            targetName,\n            damage,\n          });\n          engine.damage(me, perm, damage);\n        }\n      }\n    },\n  };\n}\n\nexport const Puzzle80Specs: GameSpecServerFragment[] = damageFuncs.map(\n  (f, i) => {\n    const gostakName = `gostak${i + 1}`;\n    return {\n      disableP2NoBasesLossCondition: true,\n      counterData: {},\n      cardEffects: {\n        [gostakName]: {\n          handlers: makeGostakHandler(f),\n        },\n      },\n      afterInitEngine: (ctx) => {\n        ctx.engine.initExtraState({\n          damageMappings: {},\n        } as Puzzle80ExtraState);\n      },\n      aiTurn: (ctx) => {\n        const { inspector, engine, ai } = ctx;\n        const ext = engine.getExtraState() as Puzzle80ExtraState;\n        if (inspector.getTurnNumber() === 0) {\n          ai.trySpawn(gostakName, 0, 2);\n        }\n        if (Object.keys(ext.damageMappings).length > 0) {\n          ai.speak(\n            `A portion of damage to every foe!\\n${Object.entries(\n              ext.damageMappings\n            )\n              .map(([gostakName, damages]) =>\n                damages\n                  .map(({ targetName, damage }) => `${targetName}, ${damage}.`)\n                  .join(\" \")\n              )\n              .join(\"\\n\")}`\n          );\n          ext.damageMappings = {};\n        } else {\n          engine.clearKeyframe();\n        }\n      },\n      extraLoseChecks: (player, ctx) => {\n        const { inspector } = ctx;\n\n        if (player === Player.P2) {\n          // if P2 has no creatures they lose\n          return inspector.getPermanentsOf(Player.P2).length === 0;\n        }\n        return false;\n      },\n    };\n  }\n);\n","import { CounterType } from \"engine/types/counters\";\nimport { Player } from \"engine/types/game-state\";\nimport { Speaker } from \"engine/types/keyframes\";\nimport {\n  AIContext,\n  EngineContext,\n  GameSpecServerFragment,\n} from \"engine/types/game-specs\";\nimport {\n  PermanentEventType,\n  StartTurnPermanentEvent,\n} from \"engine/server-hooks\";\nimport {\n  ASTEROID_1_NAME,\n  ASTEROID_2_NAME,\n  ASTEROID_3_NAME,\n} from \"./puzzle-82-shared\";\n\nconst announceAsteroidLand = (ctx: AIContext, plural: boolean) => {\n  const { ai } = ctx;\n  ai.speak(\n    `Good heavens! The ${\n      plural ? \"asteroids are\" : \"asteroid is\"\n    } here! Doom, doom to us all!`,\n    { hideBattler: true, speaker: Speaker.DINO }\n  );\n};\n\nconst announceAsteroidTime = (ctx: AIContext, val: number) => {\n  const { ai } = ctx;\n  ai.speak(\n    `The asteroid approches. ${val} ${\n      val === 1 ? \"turn remains\" : \"turns remain\"\n    }!\\n${Array(val).fill(\"⏳\").join(\" \")}`,\n    { speaker: Speaker.DINO }\n  );\n};\n\n// basic battle: DPS race\nexport const Puzzle82_1Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: loseCheck,\n  beforeNewGame(ctx) {\n    const { engine } = ctx;\n    engine.spawn(ASTEROID_1_NAME, { row: 0, column: 2 }, Player.P2);\n  },\n  counterData: {\n    [CounterType.DOOM]: {\n      handlers: {\n        [PermanentEventType.START_TURN]: makeDecrementer(asteroidExplanation),\n      },\n    },\n  },\n  cardEffects: {\n    [ASTEROID_1_NAME]: {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          event.ctx.engine.addCounter(event.permanent, {\n            type: CounterType.DOOM,\n            val: 11, // first tick immediately goes to val - 1\n          });\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine, ai } = ctx;\n    const perms = inspector.getPermanentsOf(Player.P2);\n    const asteroidWithDoom = perms.find((p) =>\n      inspector.doesPermanentHaveCounterType(p, CounterType.DOOM)\n    );\n    if (asteroidWithDoom) {\n      announceAsteroidTime(\n        ctx,\n        inspector.getCounterValSum(asteroidWithDoom, CounterType.DOOM)\n      );\n      return;\n    }\n    const asteroid = perms.find((p) => p.card.name === ASTEROID_1_NAME);\n    for (const perm of inspector.getPermanentsOf(Player.P1)) {\n      if (asteroid) {\n        engine.destroy(asteroid, perm);\n      } else {\n        engine.despawn(perm);\n      }\n    }\n    announceAsteroidLand(ctx, false);\n  },\n};\n\nexport const Puzzle82_2Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: loseCheck,\n  beforeNewGame(ctx) {\n    const { engine } = ctx;\n    engine.spawn(ASTEROID_2_NAME, { row: 0, column: 0 }, Player.P2);\n    engine.spawn(ASTEROID_2_NAME, { row: 1, column: 1 }, Player.P2);\n    engine.spawn(ASTEROID_2_NAME, { row: 2, column: 2 }, Player.P2);\n    engine.spawn(ASTEROID_2_NAME, { row: 1, column: 3 }, Player.P2);\n    engine.spawn(ASTEROID_2_NAME, { row: 0, column: 4 }, Player.P2);\n  },\n  counterData: {\n    [CounterType.DOOM]: {\n      handlers: {\n        [PermanentEventType.START_TURN]: makeDecrementer(asteroidExplanation),\n      },\n    },\n  },\n  cardEffects: {\n    [ASTEROID_2_NAME]: {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          event.ctx.engine.addCounter(event.permanent, {\n            type: CounterType.DOOM,\n            val: 11, // first tick immediately goes to val - 1\n          });\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine } = ctx;\n    const perms = inspector.getPermanentsOf(Player.P2);\n    const asteroidWithDoom = perms.find((p) =>\n      inspector.doesPermanentHaveCounterType(p, CounterType.DOOM)\n    );\n    if (asteroidWithDoom) {\n      announceAsteroidTime(\n        ctx,\n        inspector.getCounterValSum(asteroidWithDoom, CounterType.DOOM)\n      );\n      return;\n    }\n    const asteroid = perms.find((p) => p.card.name === ASTEROID_2_NAME);\n    for (const perm of inspector.getPermanentsOf(Player.P1)) {\n      if (asteroid) {\n        engine.destroy(asteroid, perm);\n      } else {\n        engine.despawn(perm);\n      }\n    }\n    announceAsteroidLand(ctx, true);\n  },\n};\n\nexport const Puzzle82_3Spec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: loseCheck,\n  beforeNewGame(ctx) {\n    const { engine } = ctx;\n    engine.spawn(ASTEROID_3_NAME, { row: 0, column: 2 }, Player.P2);\n  },\n  counterData: {\n    [CounterType.DOOM]: {\n      handlers: {\n        [PermanentEventType.START_TURN]: makeDecrementer(asteroidExplanation),\n      },\n    },\n  },\n  cardEffects: {\n    [ASTEROID_3_NAME]: {\n      handlers: {\n        [PermanentEventType.CREATED]: (event) => {\n          event.ctx.engine.addCounter(event.permanent, {\n            type: CounterType.DOOM,\n            val: 11, // first tick immediately goes to val - 1\n          });\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, engine } = ctx;\n    const perms = inspector.getPermanentsOf(Player.P2);\n    const asteroidWithDoom = perms.find((p) =>\n      inspector.doesPermanentHaveCounterType(p, CounterType.DOOM)\n    );\n    if (asteroidWithDoom) {\n      announceAsteroidTime(\n        ctx,\n        inspector.getCounterValSum(asteroidWithDoom, CounterType.DOOM)\n      );\n      return;\n    }\n    const asteroid = perms.find((p) => p.card.name === ASTEROID_3_NAME);\n    if (!asteroid) {\n      return;\n    }\n    const power = inspector.getPower(asteroid);\n    engine.removeDamage(asteroid, inspector.getBaseHealth(asteroid));\n    const startingHealth = inspector.getHealth(asteroid);\n    const adjustment = power - startingHealth;\n    if (adjustment !== 0) {\n      engine.adjustPermanentStats(asteroid, 0, adjustment);\n    }\n    let currentHealth = power;\n    for (const perm of inspector.getPermanents({\n      owner: Player.P1,\n      sort: [\"creaturesFirst\", { type: \"frontToBack\", perspective: Player.P1 }],\n    })) {\n      const healthToRemove = inspector.getHealth(perm);\n      if (healthToRemove > currentHealth) {\n        engine.announce(`${perm.card.name} catches the Meaty Ore!`);\n        engine.damage(perm, asteroid, healthToRemove);\n        break;\n      }\n      engine.damage(perm, asteroid, healthToRemove);\n      engine.adjustPermanentStats(asteroid, -healthToRemove, 0);\n      engine.destroy(asteroid, perm);\n      currentHealth -= healthToRemove;\n    }\n    if (inspector.getPermanents({ name: ASTEROID_3_NAME }).length !== 0)\n      announceAsteroidLand(ctx, false);\n  },\n};\n\nfunction loseCheck(player: Player, ctx: EngineContext): boolean {\n  const { inspector } = ctx;\n\n  // player is P2, the AI. Check for any units\n  return player === Player.P2 && inspector.getPermanentsOf(player).length === 0;\n}\n\nfunction makeDecrementer(explanation: (val: number) => string) {\n  return (event: StartTurnPermanentEvent) => {\n    const { permanent, counter, counterIndex, ctx } = event;\n    const { engine, inspector } = ctx;\n    if (!inspector.isTurnPending(permanent.owner)) {\n      // Only apply on unit owner's turn\n      return;\n    }\n    if (counter == null || counterIndex == null) {\n      throw new Error(\"counter event should have counter specified\");\n    }\n    const newVal = (counter.val || 0) - 1;\n    if (newVal <= 0) {\n      return { expire: true };\n    } else {\n      engine.updateCounterVal(permanent, counterIndex, newVal, explanation);\n    }\n  };\n}\n\nfunction asteroidExplanation(val: number) {\n  switch (val) {\n    case 0:\n      return \"BOOM!!!!!!!\";\n    case 1:\n      return \"This asteroid lands in 1 turn!\";\n    default:\n      return `This asteroid lands in ${val} turns.`;\n  }\n}\n\nfunction asteroidAnnounce1(val: number) {\n  switch (val) {\n    case 0:\n      return \"BOOM!!!!!!!\";\n    case 1:\n      return \"The asteroid lands in 1 turn!\";\n    default:\n      return `The asteroid lands in ${val} turns!`;\n  }\n}\n\nfunction asteroidAnnounce2(val: number) {\n  switch (val) {\n    case 0:\n      return \"BOOM!!!!!!!\";\n    case 1:\n      return \"The asteroids land in 1 turn!\";\n    default:\n      return `The asteroids land in ${val} turns!`;\n  }\n}\n","import { CardEffects } from \"engine/cards/card-effects\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { CounterType } from \"engine/types/counters\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { areSlotsEqual } from \"engine/types/game-state\";\nimport { Slot } from \"engine/types/game-state\";\nimport { Player } from \"engine/types/game-state\";\nimport { StepType } from \"engine/types/steps\";\n\nconst ALL_CARDS = [\n  \"arvada\",\n  \"burlington\",\n  \"centennial\",\n  \"grover\",\n  \"cow-butte\",\n  \"ramsey-peak\",\n  \"saddle-mountain\",\n  \"finger-rock\",\n] as ReadonlyArray<string>;\nconst NUM_UNITS = 8;\n\nconst OUR_DESTINATION: { [id: string]: [number, number] } = {\n  arvada: [0, 4],\n  grover: [2, 0],\n  burlington: [0, 2],\n  centennial: [3, 4],\n  \"cow-butte\": [3, 3],\n  \"ramsey-peak\": [3, 1],\n  \"saddle-mountain\": [0, 1],\n  \"finger-rock\": [0, 3],\n};\n\nconst ENEMY_DESTINATION: { [id: string]: [number, number] } = {\n  arvada: [1, 3],\n  grover: [0, 4],\n  burlington: [1, 6],\n  centennial: [1, 4],\n  \"cow-butte\": [2, 5],\n  \"ramsey-peak\": [0, 3],\n  \"saddle-mountain\": [2, 1],\n  \"finger-rock\": [0, 2],\n};\n\nconst toSlot = (a: [number, number]): Slot => ({ row: a[0], column: a[1] });\n\nconst BASE_EFFECT: CardEffects = {\n  handlers: {\n    [PermanentEventType.CREATED]: (event) => {\n      event.ctx.engine.addCounter(event.permanent, {\n        type: CounterType.BASE_GEMS,\n        val: 1,\n      });\n    },\n  },\n};\n\ninterface ExtraState {\n  isAngry: boolean;\n}\n\nexport const Puzzle90Spec: GameSpecServerFragment = {\n  cardEffects: {\n    arvada: BASE_EFFECT,\n    burlington: BASE_EFFECT,\n    centennial: BASE_EFFECT,\n  },\n  disableNoBasesLossCondition: true,\n  afterInitEngine: (ctx) => {\n    ctx.engine.initExtraState({\n      isAngry: false,\n    });\n  },\n  beforeNewGame: (ctx) => {\n    for (const name of ALL_CARDS) {\n      ctx.engine.addCardToHand(Player.P1, { name });\n      ctx.engine.spawn(name, toSlot(ENEMY_DESTINATION[name]), Player.P2);\n    }\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n    if (player === Player.P1) {\n      const stillAlive =\n        inspector.getPermanentsOf(player).length +\n          inspector.gameState[player].hand.length ===\n        NUM_UNITS;\n      if (!stillAlive) {\n        ctx.ai.speak(\"...you have no hope of victory now...\");\n      }\n      return !stillAlive;\n    }\n    // P2\n    const cards = inspector.getPermanentsOf(Player.P1);\n    const checkDestination = (dest: typeof OUR_DESTINATION) => {\n      return (\n        cards.length >= NUM_UNITS &&\n        // every card...\n        cards.every((card) => {\n          if (!card.card.name) throw new Error(\"oops\");\n          const destination = dest[card.card.name];\n          // has a destination and is in that destination\n          return destination && areSlotsEqual(card.slot, toSlot(destination));\n        })\n      );\n    };\n    if (checkDestination(OUR_DESTINATION)) {\n      ctx.ai.speak(\"\");\n      return true;\n    }\n    return false;\n  },\n  afterStep: (step, ctx) => {\n    // anger check\n    const extraState = ctx.engine.getExtraState() as ExtraState;\n    if (!extraState.isAngry) {\n      if (ctx.inspector.getPermanentsOf(Player.P2).length !== NUM_UNITS) {\n        ctx.ai.speak(\n          \"...must coordinate troops... ...partition the land... ...degree by degree...\"\n        );\n        extraState.isAngry = true;\n      }\n    }\n\n    if (step.type !== StepType.ATTACK) {\n      return;\n    }\n    if (ctx.inspector.getPermanentsOf(Player.P2).length === 0) {\n      ctx.ai.speak(\n        \"...my strength is gone... ...but you won’t take me... ...not with that formation...\"\n      );\n    }\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (!(ctx.engine.getExtraState() as ExtraState).isAngry) {\n      return;\n    }\n\n    // for each unit we own...\n    const sneakyPower = 0;\n    const totalPower = 0;\n    for (const unit of inspector.getPermanentsOf(Player.P2)) {\n      if (!unit.ready) {\n        continue;\n      }\n      const power = inspector.getPower(unit);\n      if (power <= 0) {\n        continue;\n      }\n\n      ctx.ai.tryAttackFirst(unit, {\n        sort: [\"health\"],\n      });\n      // const isSneaky = unit.slot.row >= 2;\n      // totalPower += power;\n      // if (isSneaky) {\n      //   sneakyPower += power;\n      // }\n    }\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\n\nexport const Puzzle98RampSpec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  cardEffects: {\n    \"miracle-growth\": {\n      handlers: {\n        [PermanentEventType.OTHER_UNIT_SPAWN]: (event) => {\n          const me = event.permanent;\n          const { inspector, engine } = event.ctx;\n          const power = inspector.getPower(me);\n          if (power > 0) {\n            engine.adjustPermanentStats(me, power, 0);\n          }\n          const maxHealth = inspector.getMaxHealth(me);\n          const health = inspector.getHealth(me);\n          engine.adjustPermanentStats(me, 0, maxHealth);\n          if (maxHealth - health) {\n            engine.damageUnattributed(me, maxHealth - health);\n          }\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.trySpawn(\"miracle-growth\", 0, 2);\n    }\n\n    inspector.getPermanentsOf(Player.P2).forEach((permanent) =>\n      ai.tryAttackFirst(permanent, {\n        sort: [\n          {\n            type: \"weighted\",\n            weights: [\n              // prioritize higher power, since they are scarier\n              { criterion: \"-power\", weight: 1 },\n              // prioritize lower health, since they are faster to kill off\n              { criterion: \"health\", weight: 1 },\n            ],\n          },\n          // tiebreak by nearest first\n          { type: \"euclideanDistance\", slot: permanent.slot },\n        ],\n      })\n    );\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    // if P2 has no creatures they lose\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { CardType } from \"engine/types/card-data\";\n\nexport const Puzzle98ShadowSpec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  cardEffects: {\n    \"leech-seed\": {\n      handlers: {\n        [PermanentEventType.START_TURN]: (event) => {\n          const me = event.permanent;\n          const { inspector, engine } = event.ctx;\n          const totalPower = inspector\n            .getPermanents({ type: CardType.CREATURE })\n            .map((permanent) => inspector.getPower(permanent))\n            .reduce((a, b) => a + b, 0);\n          if (totalPower > 0) {\n            engine.adjustPermanentStats(me, 0, totalPower);\n          }\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.trySpawn(\"leech-seed\", 0, 2);\n    }\n\n    inspector\n      .getPermanentsOf(Player.P2)\n      .forEach((permanent) => ai.tryAttackFirst(permanent));\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    // if P2 has no creatures they lose\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\n\nexport const Puzzle98SplitterSpec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  cardEffects: {\n    \"wild-weed\": {\n      handlers: {\n        [PermanentEventType.OTHER_UNIT_SPAWN]: (event) => {\n          const { permanent: me, spawnedPermanent } = event;\n          if (me.owner !== spawnedPermanent.owner) {\n            const { engine, inspector } = event.ctx;\n            let toSpawn = inspector.getPower(spawnedPermanent);\n            if (!toSpawn) return;\n            const emptySlots = inspector.getUnoccupiedSlotsClosestTo(\n              Player.P2,\n              me.slot\n            );\n            for (const emptySlot of emptySlots) {\n              if (engine.spawn(\"wild-weed\", emptySlot, Player.P2)) {\n                toSpawn--;\n                if (toSpawn === 0) break;\n              }\n            }\n          }\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.trySpawn(\"wild-weed\", 0, 2);\n    }\n\n    inspector.getPermanentsOf(Player.P2).forEach((permanent) =>\n      ai.tryAttackFirst(permanent, {\n        sort: [\n          {\n            type: \"weighted\",\n            weights: [\n              // prioritize higher power, since they are scarier\n              { criterion: \"-power\", weight: 1 },\n              // prioritize lower health, since they are faster to kill off\n              { criterion: \"health\", weight: 1 },\n            ],\n          },\n          // tiebreak by nearest first\n          { type: \"euclideanDistance\", slot: permanent.slot },\n        ],\n      })\n    );\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    // if P2 has no creatures they lose\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { CounterType } from \"engine/types/counters\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\n\nexport const Puzzle98YinYangSpec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  cardEffects: {\n    \"spirit-of-the-vines\": {\n      handlers: {\n        [PermanentEventType.START_TURN]: (event) => {\n          const { permanent } = event;\n          const { engine } = event.ctx;\n          engine.adjustPermanentStats(permanent, 0, 2);\n        },\n        [PermanentEventType.OTHER_UNIT_DESTROYED]: (event) => {\n          const { permanent: me, destroyedPermanent } = event;\n          const { engine } = event.ctx;\n          if (destroyedPermanent.owner === me.owner) {\n            engine.adjustPermanentStats(me, 10000, 10000);\n          }\n        },\n      },\n    },\n    \"overgrown-vines\": {\n      handlers: {\n        [PermanentEventType.OTHER_UNIT_SPAWN]: (event) => {\n          const { spawnedPermanent } = event;\n          const { engine } = event.ctx;\n          engine.addCounter(spawnedPermanent, {\n            type: CounterType.CANNOT_MOVE,\n            explanation: \"Immobile.\",\n          });\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.trySpawn(\"spirit-of-the-vines\", 0, 2);\n      ai.trySpawn(\"overgrown-vines\", 1, 2);\n    }\n\n    inspector\n      .getPermanentsOf(Player.P2)\n      .forEach((permanent) => ai.tryAttackFirst(permanent));\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    // if P2 has no creatures they lose\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n};\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\n\nexport const Puzzle98VultureSpec: GameSpecServerFragment = {\n  disableP2NoBasesLossCondition: true,\n  cardEffects: {\n    \"venus-bee-trap\": {\n      handlers: {\n        [PermanentEventType.START_TURN]: (event) => {\n          const { permanent } = event;\n          const { engine } = event.ctx;\n          engine.adjustPermanentStats(permanent, 0, 3);\n        },\n        [PermanentEventType.OTHER_UNIT_DESTROYED]: (event) => {\n          const { permanent: me } = event;\n          const { engine } = event.ctx;\n          engine.adjustPermanentStats(me, 10000, 10000);\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.trySpawn(\"venus-bee-trap\", 0, 2);\n    }\n\n    inspector.getPermanentsOf(Player.P2).forEach((permanent) =>\n      ai.tryAttackFirst(permanent, {\n        sort: [\n          \"creaturesFirst\",\n          // lowest first since we \"win\" if we kill anybody\n          \"health\",\n          // tiebreak by nearest first\n          { type: \"euclideanDistance\", slot: permanent.slot },\n        ],\n      })\n    );\n  },\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n\n    // if P2 has no creatures they lose\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n};\n","import { PermanentEventType } from \"engine/server-hooks\";\nimport { CardType, ColorSymbol } from \"engine/types/card-data\";\nimport { AbilityType, EffectOptType } from \"engine/types/effects\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Player, getSlotsEuclideanDistance } from \"engine/types/game-state\";\n\nexport const Puzzle53Spec: GameSpecServerFragment = {\n  cardEffects: {\n    yurt: {\n      handlers: {\n        [PermanentEventType.START_TURN]: (event) => {\n          const { permanent, ctx } = event;\n          const { inspector, engine } = ctx;\n          if (inspector.isTurnPending(permanent.owner)) {\n            engine.addGems(permanent.owner, [ColorSymbol.YELLOW]);\n          }\n        },\n      },\n    },\n  },\n  adjustDamageReceived: (permanent, damage, attacker, ctx) => {\n    const { inspector, engine, ai } = ctx;\n    if (!attacker) {\n      return damage;\n    }\n    if (Math.abs(attacker.slot.row - permanent.slot.row) > 6) {\n      engine.announce(\n        `${inspector.getCardDisplayName(\n          attacker\n        )} failed to damage ${inspector.getCardDisplayName(\n          permanent\n        )} because it was too far.`\n      );\n      return 0;\n    }\n    return damage;\n  },\n  disableP2NoBasesLossCondition: true,\n  extraLoseChecks: (player, ctx) => {\n    const { inspector } = ctx;\n    // ai loses iff no permanents\n    return (\n      player === Player.P2 && inspector.getPermanentsOf(player).length === 0\n    );\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n\n    // first turn: spawn a bunch of stuff\n    if (inspector.getTurnNumber() === 0) {\n      for (let row = 0; row <= 6; row++) {\n        for (let column = 0; column <= 4; column++) {\n          ai.trySpawn(\"bee-rider\", { row, column });\n        }\n      }\n      return;\n    }\n\n    // try spawning horse riders next to yurts\n    inspector\n      .getPermanentsOf(Player.P2)\n      .filter((permanent) => inspector.getSharedEffects(permanent).isBase)\n      .forEach((yurt) => {\n        const { row, column } = yurt.slot;\n        for (let dr = -1; dr <= 1; dr++) {\n          for (let dc = -1; dc <= 1; dc++) {\n            ai.trySpawn(\"bee-rider\", { row: row + dr, column: column + dc });\n          }\n        }\n      });\n\n    // permanents sorted from bottom to top\n    inspector\n      .getPermanents({\n        owner: Player.P2,\n        type: CardType.CREATURE,\n        sort: [(permanent) => -permanent.slot.row],\n      })\n      .forEach((permanent) => {\n        const { row, column } = permanent.slot;\n        // try move down\n        ai.tryActivateAbility(permanent, AbilityType.FLEX, [\n          {\n            type: EffectOptType.SLOT,\n            slot: { row: row + 1, column },\n          },\n        ]);\n        // try move down (again)\n        ai.tryMoveRel(permanent, 1, 0);\n        // if still ready, try attacking something near\n        ai.tryAttackFirst(permanent, {\n          owner: Player.P1,\n          notProtectedFrom: permanent,\n          custom: (target) =>\n            getSlotsEuclideanDistance(permanent.slot, target.slot) < 2,\n        });\n      });\n  },\n};\n","import { AIContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { Permanent, Player } from \"engine/types/game-state\";\n\nconst round1Specs: GameSpecServerFragment = {\n  beforeNewGame: (ctx) => {\n    const { engine } = ctx;\n    engine.spawn(\"hog-factory\", { row: 0, column: 1 }, Player.P2);\n    engine.spawn(\"log-factory\", { row: 0, column: 3 }, Player.P2);\n  },\n  aiTurn: (ctx) => {\n    if (ctx.inspector.getTurnNumber() === 0) {\n      return;\n    }\n    spawnHogsAndLogs(ctx);\n    performAttacksOrHogMoves(ctx);\n  },\n};\nconst round2Specs: GameSpecServerFragment = {\n  beforeNewGame: (ctx) => {\n    const { engine } = ctx;\n    engine.spawn(\"hog-factory\", { row: 0, column: 0 }, Player.P2);\n    engine.spawn(\"log-factory\", { row: 0, column: 4 }, Player.P2);\n    engine.spawn(\"stacktory\", { row: 0, column: 2 }, Player.P2);\n  },\n  aiTurn: (ctx) => {\n    const bases = getAIBases(ctx);\n    // Spawn.\n    if (bases.length == 3) {\n      spawnStacks(ctx);\n    } else {\n      spawnHogsAndLogs(ctx);\n    }\n    // Attack!\n    if (ctx.inspector.getTurnNumber() === 0) {\n      return;\n    }\n    performAttacksOrHogMoves(ctx);\n  },\n};\nconst round4Specs: GameSpecServerFragment = {\n  beforeNewGame: (ctx) => {\n    const { engine } = ctx;\n    engine.spawn(\"stackstack-tory\", { row: 0, column: 2 }, Player.P2);\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      return;\n    }\n\n    const stacktory = inspector.getPermanents({\n      owner: Player.P2,\n      name: \"stackstack-tory\",\n    })[0];\n\n    if (stacktory) {\n      const col = stacktory.slot.column;\n      for (const row of [0, 1, 2]) {\n        const success = ai.trySpawn(\"hog-on-a-log-on-a\", row, col);\n        if (success) {\n          break;\n        }\n      }\n    }\n    performAttacksOrHogMoves(ctx);\n  },\n};\nconst round3Specs: GameSpecServerFragment = {\n  beforeNewGame: (ctx) => {\n    const { engine } = ctx;\n    engine.spawn(\"hog-factorytorytory\", { row: 0, column: 0 }, Player.P2);\n    engine.spawn(\"log-factorytorytory\", { row: 0, column: 1 }, Player.P2);\n  },\n  aiTurn: (ctx) => {\n    const { inspector, ai } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      return;\n    }\n    const aiUnitsInOrder = inspector.getPermanents({\n      owner: Player.P2,\n      sort: [(perm: Permanent) => 100 * perm.slot.row + perm.slot.column],\n    });\n    // spawn stuff\n    for (const unit of aiUnitsInOrder) {\n      const unitToSpawn = getFactoryOutput(unit.card.name);\n      if (unitToSpawn) {\n        let spawned = false;\n        for (const slotToSpawn of emptyAiSlotsInOrder(ctx)) {\n          const summonResolved = ai.trySpawn(unitToSpawn, slotToSpawn);\n          if (summonResolved) {\n            spawned = true;\n            break;\n          }\n        }\n        if (!spawned) {\n          // Stop trying to spawn all other units\n          break;\n        }\n      }\n    }\n    performAttacksOrHogMoves(ctx);\n  },\n};\nexport const Puzzle101Specs: GameSpecServerFragment[] = [\n  round1Specs,\n  round2Specs,\n  round3Specs,\n  round4Specs,\n];\n\nfunction hogAttackAI(unit: Permanent, ctx: AIContext) {\n  // Boar Smart. Boar Attack down column.\n  const success = ctx.ai.tryAttackFirst(unit, {\n    column: unit.slot.column,\n    sort: [{ type: \"frontToBack\", perspective: Player.P2 }],\n  });\n  if (success) {\n    return true;\n  }\n\n  const attackableUnits = ctx.inspector.getPermanents({\n    owner: Player.P1,\n    notProtectedFrom: unit,\n    sort: [(p: Permanent) => Math.abs(p.slot.column - unit.slot.column)],\n  });\n\n  if (attackableUnits[0]) {\n    const colDelta = attackableUnits[0].slot.column > unit.slot.column ? 1 : -1;\n    ctx.ai.tryMoveRel(unit, 0, colDelta);\n  }\n\n  return false;\n}\n\nfunction logAttackAI(unit: Permanent, ctx: AIContext) {\n  return ctx.ai.tryAttackFirst(unit);\n}\n\nfunction attackAI(unit: Permanent, ctx: AIContext) {\n  if ((unit.card.name || \"\").startsWith(\"hog\")) {\n    return hogAttackAI(unit, ctx);\n  }\n  return logAttackAI(unit, ctx);\n}\n\nfunction performAttacksOrHogMoves(ctx: AIContext) {\n  const { inspector } = ctx;\n  // hogs (or hog on x)s first, then logs\n  const units = inspector.getPermanents({\n    owner: Player.P2,\n    sort: [\n      (p) => ((p.card.name || \"\").startsWith(\"h\") ? 0 : 1),\n      (p) => -10 * p.slot.row + p.slot.column,\n    ],\n  });\n  for (const unit of units) {\n    if (inspector.getPower(unit) <= 0) {\n      continue;\n    }\n    if (!unit.ready) {\n      continue;\n    }\n    attackAI(unit, ctx);\n  }\n}\n\nconst BASES = new Set([\n  \"hog-factory\",\n  \"log-factory\",\n  \"stacktory\",\n  \"stackstack-tory\",\n]);\n\nfunction getAIBases(ctx: AIContext) {\n  const { inspector } = ctx;\n  return inspector\n    .getPermanentsOf(Player.P2)\n    .filter((p) => BASES.has(p.card.name || \"\"));\n}\n\nfunction* slotsInPreferenceOrder(ctx: AIContext) {\n  const bases = getAIBases(ctx);\n  const baseCols = new Set(bases.map((p) => p.slot.column));\n\n  for (const row of [1, 2, 0]) {\n    for (let column = 0; column <= 4; column++) {\n      if (baseCols.has(column)) {\n        yield { row, column };\n      }\n    }\n  }\n  for (const row of [1, 2, 0]) {\n    for (let column = 0; column <= 4; column++) {\n      if (!baseCols.has(column)) {\n        yield { row, column };\n      }\n    }\n  }\n}\n\nfunction* emptyAiSlotsInOrder(ctx: AIContext) {\n  for (let row = 0; row < 3; row++) {\n    for (let column = 0; column < 5; column++) {\n      if (!ctx.inspector.isSlotOccupied({ row, column })) {\n        yield { row, column };\n      }\n    }\n  }\n}\n\nfunction getFactoryOutput(name: string | undefined) {\n  switch (name) {\n    case \"hog-factory\":\n      return \"hog\";\n    case \"hog-factorytory\":\n      return \"hog-factory\";\n    case \"hog-factorytorytory\":\n      return \"hog-factorytory\";\n    case \"log-factory\":\n      return \"log\";\n    case \"log-factorytory\":\n      return \"log-factory\";\n    case \"log-factorytorytory\":\n      return \"log-factorytory\";\n    default:\n      return null;\n  }\n}\n\nfunction spawnHogsAndLogs(ctx: AIContext) {\n  const { inspector, ai } = ctx;\n  const units = inspector.getPermanentsOf(Player.P2);\n  let mustPlayHog = !!units.find((unit) => unit.card.name === \"hog-factory\");\n  let mustPlayLog = !!units.find((unit) => unit.card.name === \"log-factory\");\n\n  for (const slot of slotsInPreferenceOrder(ctx)) {\n    if (!mustPlayHog && !mustPlayLog) {\n      break;\n    }\n    const summonResolved = ai.trySpawn(mustPlayHog ? \"hog\" : \"log\", slot);\n    if (summonResolved) {\n      if (mustPlayHog) {\n        mustPlayHog = false;\n      } else {\n        mustPlayLog = false;\n      }\n    }\n  }\n}\n\nfunction spawnStacks(ctx: AIContext) {\n  const { inspector, ai } = ctx;\n\n  const turnNumber = inspector.getTurnNumber();\n  const cardName = (turnNumber / 2) % 2 === 0 ? \"hog-on-a-log\" : \"log-on-a-hog\";\n\n  for (const slot of slotsInPreferenceOrder(ctx)) {\n    const summonResolved = ai.trySpawn(cardName, slot);\n\n    if (summonResolved) {\n      break;\n    }\n  }\n}\n","import { Permanent, Player, Slot } from \"engine/types/game-state\";\nimport { AIContext, GameSpecServerFragment } from \"engine/types/game-specs\";\nimport { PermanentEventType } from \"engine/server-hooks\";\nimport { BASE1, BASE2, BOAR } from \"./puzzle-109-shared\";\nimport { CardType } from \"engine/types/card-data\";\n\nexport const Puzzle109Spec: GameSpecServerFragment = {\n  cardEffects: {\n    [BASE1]: {\n      handlers: {\n        [PermanentEventType.END_TURN]: (ev) => {\n          const { engine, inspector } = ev.ctx;\n          const { permanent } = ev;\n          for (const otherP of inspector.getPermanents({\n            column: permanent.slot.column,\n            type: CardType.CREATURE,\n          })) {\n            engine.adjustPermanentStats(otherP, 1, 0);\n          }\n        },\n      },\n    },\n    [BOAR]: {\n      handlers: {\n        [PermanentEventType.END_TURN]: (ev) => {\n          const { engine } = ev.ctx;\n          const { permanent } = ev;\n          engine.adjustPermanentStats(permanent, 1, 0);\n        },\n      },\n    },\n  },\n  aiTurn: (ctx) => {\n    const { ai, engine, inspector } = ctx;\n    if (inspector.getTurnNumber() === 0) {\n      ai.speak(\n        \"What are y’all trespassers DOING on my FARM?\\nGIT yer butts OUTTA here and keep yer hands off my dang BOARRIES!\"\n      );\n      ai.trySpawn(BOAR, { row: 2, column: 2 });\n      return;\n    }\n\n    const boar = inspector.getPermanents({ name: BOAR, owner: Player.P2 })[0];\n\n    // boar is dead. sad :(\n    if (!boar) {\n      return;\n    }\n    const boarAtk = inspector.getPower(boar);\n\n    const bases = inspector.getPermanents({\n      owner: Player.P2,\n      type: CardType.STRUCTURE,\n    });\n    const hasTrain = !!bases.find((p) => p.card.name === BASE2);\n\n    // Prioritize\n    // 1: Units\n    // 2: Invading units (in friendly territory)\n    // 3: Killable\n    // 4: Highest Power\n    // 5: Closest, column-wise (mostly for if we must move)\n    const attackableUnits = inspector.getPermanents({\n      owner: Player.P1,\n      notProtectedFrom: boar,\n      sort: [\n        \"creaturesFirst\",\n        (p: Permanent) =>\n          inspector.getTerrainOf(p.slot) === Player.P2 ? 0 : 1,\n        (p: Permanent) => (inspector.getHealth(p) <= boarAtk ? 0 : 1),\n        \"-power\",\n        (p: Permanent) => Math.abs(p.slot.column - boar.slot.column),\n      ],\n    });\n\n    if (hasTrain) {\n      const victim = attackableUnits[0];\n      if (!victim) {\n        // um, how could this happen ???\n        return;\n      }\n      if (inspector.getTerrainOf(victim.slot) === Player.P2) {\n        // free to move anywhere! let's take a power boost, from our weakest farm.\n        const farms = inspector.getPermanents({\n          owner: Player.P2,\n          name: BASE1,\n          sort: [\"health\"],\n        });\n        let success = false;\n        for (const farm of farms) {\n          for (const row of [2, 1, 0]) {\n            success = tryFreeMove(ctx, boar, { column: farm.slot.column, row });\n            if (success) {\n              break;\n            }\n          }\n          if (success) {\n            break;\n          }\n        }\n        ai.tryAttack(boar, victim);\n        return;\n      }\n      // Unit is on P1's terrain. Move to attack this unit!\n      if (victim.slot.column !== boar.slot.column) {\n        let success = false;\n        for (const row of [2, 1, 0]) {\n          success = tryFreeMove(ctx, boar, { column: victim.slot.column, row });\n          if (success) {\n            break;\n          }\n        }\n      }\n      ai.tryAttack(boar, victim);\n    } else {\n      // doesn't have train.\n      // If we can attack without moving, let's do that.\n      const attackableWithoutMovingUnit = attackableUnits.find(\n        (p) =>\n          p.slot.column === boar.slot.column ||\n          inspector.getTerrainOf(p.slot) === Player.P2\n      );\n      if (attackableWithoutMovingUnit) {\n        ai.tryAttack(boar, attackableWithoutMovingUnit);\n        return;\n      }\n      // Move towards closest unit\n      const victim = attackableUnits[0];\n      if (!victim) {\n        // um, how could this happen ???\n        return;\n      }\n      const colDelta = victim.slot.column > boar.slot.column ? 1 : -1;\n      ai.tryMoveRel(boar, 0, colDelta);\n    }\n  },\n};\n\nfunction tryFreeMove(ctx: AIContext, boar: Permanent, slot: Slot): boolean {\n  const success = ctx.ai.tryMove(boar, slot);\n  if (success) {\n    ctx.engine.ready(boar);\n  }\n  return success;\n}\n","import { Player } from \"engine/types/game-state\";\nimport { GameSpecServerFragment } from \"engine/types/game-specs\";\n\nexport const TestBattleSpec: GameSpecServerFragment = {\n  extraLoseChecks: (player, ctx) => {\n    return player === Player.P2 && ctx.inspector.getTurnNumber() >= 2 * 1;\n  },\n};\n","import { GameSpecServerFragment, GameSpec } from \"engine/types/game-specs\";\nimport { ALL_SHARED_GAME_SPECS } from \"engine/all-shared-game-specs\";\nimport { PUZ_NAME_COMMON } from \"engine/game-specs/common-shared\";\nimport { CommonSpec } from \"engine/game-specs/common\";\nimport { RadlandsSpec } from \"engine/game-specs/radlands\";\nimport { RobotSpec } from \"engine/game-specs/robot\";\nimport { Tutorial1Spec } from \"engine/game-specs/tutorial1\";\nimport { Tutorial2Spec } from \"engine/game-specs/tutorial2\";\nimport { Tutorial3Spec } from \"engine/game-specs/tutorial3\";\nimport { Tutorial4Spec } from \"engine/game-specs/tutorial4\";\nimport { Tutorial5Spec } from \"engine/game-specs/tutorial5\";\nimport { Tutorial6Spec } from \"engine/game-specs/tutorial6\";\nimport { Puzzle4Spec } from \"engine/game-specs/puzzle-4\";\nimport { Puzzle8Spec } from \"engine/game-specs/puzzle-8\";\nimport { Puzzle9Spec } from \"engine/game-specs/puzzle-9\";\nimport { Puzzle22Specs } from \"engine/game-specs/puzzle-22\";\nimport { Puzzle28Spec } from \"engine/game-specs/puzzle-28\";\nimport { Puzzle31Spec } from \"./game-specs/puzzle-31\";\nimport { Puzzle44Spec } from \"engine/game-specs/puzzle-44\";\nimport {\n  Puzzle46Spec_1,\n  Puzzle46Spec_2,\n  Puzzle46Spec_3,\n  Puzzle46Spec_4,\n  Puzzle46Spec_5,\n} from \"engine/game-specs/puzzle-46\";\nimport {\n  Puzzle50_1Spec,\n  Puzzle50_2Spec,\n  Puzzle50_3Spec,\n  Puzzle50_4Spec,\n  Puzzle50_5Spec,\n  Puzzle50_6Spec,\n  Puzzle50_7Spec,\n  Puzzle50_8Spec,\n  Puzzle50_9Spec,\n  Puzzle50_10Spec,\n  Puzzle50_11Spec,\n  Puzzle50_12Spec,\n  Puzzle50_13Spec,\n  Puzzle50_14Spec,\n  Puzzle50_15Spec,\n  Puzzle50_16Spec,\n  Puzzle50_17Spec,\n  Puzzle50_18Spec,\n  Puzzle50_19Spec,\n  Puzzle50_20Spec,\n  Puzzle50_21Spec,\n  Puzzle50_22Spec,\n  Puzzle50_23Spec,\n  Puzzle50_24Spec,\n  Puzzle50_FinalSpec,\n} from \"engine/game-specs/puzzle-50\";\nimport { Puzzle51Spec } from \"./game-specs/puzzle-51\";\nimport { Puzzle76Spec } from \"./game-specs/puzzle-76\";\nimport { Puzzle80Specs } from \"./game-specs/puzzle-80\";\nimport {\n  Puzzle82_1Spec,\n  Puzzle82_2Spec,\n  Puzzle82_3Spec,\n} from \"./game-specs/puzzle-82\";\nimport { Puzzle93Spec } from \"./game-specs/puzzle-93\";\nimport { Puzzle90Spec } from \"./game-specs/puzzle-90\";\nimport { Puzzle98RampSpec } from \"./game-specs/puzzle-98-ramp\";\nimport { Puzzle98ShadowSpec } from \"./game-specs/puzzle-98-shadow\";\nimport { Puzzle98SplitterSpec } from \"./game-specs/puzzle-98-splitter\";\nimport { Puzzle98YinYangSpec } from \"./game-specs/puzzle-98-yinyang\";\nimport { Puzzle98VultureSpec } from \"./game-specs/puzzle-98-vulture\";\nimport { Puzzle53Spec } from \"./game-specs/puzzle-53\";\nimport { Puzzle101Specs } from \"./game-specs/puzzle-101\";\nimport { Puzzle109Spec } from \"./game-specs/puzzle-109\";\nimport { TestBattleSpec } from \"./game-specs/test-battle\";\n\nconst makeSimpleCutsceneSpec = (\n  firstKeyframe: string\n): GameSpecServerFragment => ({\n  beforeNewGame: (ctx) => {\n    ctx.ai.setKeyframe(firstKeyframe);\n  },\n});\n\ntype GameSpecServerFragments = {\n  [puzName: string]: GameSpecServerFragment;\n};\n\nconst ALL_SERVER_ONLY_GAME_SPECS: GameSpecServerFragments = {\n  [PUZ_NAME_COMMON]: CommonSpec,\n  vanilla: RadlandsSpec,\n  pvp: RadlandsSpec,\n  intra_pvp_1: RadlandsSpec,\n  intra_pvp_2: RadlandsSpec,\n  robot: RobotSpec,\n  tutorial1: Tutorial1Spec,\n  tutorial2: Tutorial2Spec,\n  tutorial3: Tutorial3Spec,\n  tutorial4: Tutorial4Spec,\n  tutorial5: Tutorial5Spec,\n  tutorial6: Tutorial6Spec,\n  gnutmeg_tree: Puzzle4Spec,\n  mister_penny: Puzzle8Spec,\n  blancmange: Puzzle9Spec,\n  beebay_fulfillment_center_1: Puzzle22Specs[0],\n  beebay_fulfillment_center_2: Puzzle22Specs[1],\n  beebay_fulfillment_center_3: Puzzle22Specs[2],\n  beebay_fulfillment_center_4: Puzzle22Specs[3],\n  beebay_fulfillment_center_5: Puzzle22Specs[4],\n  beebay_fulfillment_center_6: Puzzle22Specs[5],\n  beebay_fulfillment_center_7: Puzzle22Specs[6],\n  beebay_fulfillment_center_8: Puzzle22Specs[7],\n  beebay_fulfillment_center_9: Puzzle22Specs[8],\n  beebay_fulfillment_center_10: Puzzle22Specs[9],\n  beebay_fulfillment_center_11: Puzzle22Specs[10],\n  beebay_fulfillment_center_12: Puzzle22Specs[11],\n  beebay_fulfillment_center_13: Puzzle22Specs[12],\n  miss_yu: Puzzle28Spec,\n  bb_b: Puzzle31Spec,\n  slime: Puzzle44Spec,\n  dargle_1: Puzzle46Spec_1,\n  dargle_2: Puzzle46Spec_2,\n  dargle_3: Puzzle46Spec_3,\n  dargle_4: Puzzle46Spec_4,\n  dargle_5: Puzzle46Spec_5,\n  moonick_1: Puzzle50_1Spec,\n  moonick_2: Puzzle50_2Spec,\n  moonick_3: Puzzle50_3Spec,\n  moonick_4: Puzzle50_4Spec,\n  moonick_5: Puzzle50_5Spec,\n  moonick_6: Puzzle50_6Spec,\n  moonick_7: Puzzle50_7Spec,\n  moonick_8: Puzzle50_8Spec,\n  moonick_9: Puzzle50_9Spec,\n  moonick_10: Puzzle50_10Spec,\n  moonick_11: Puzzle50_11Spec,\n  moonick_12: Puzzle50_12Spec,\n  moonick_13: Puzzle50_13Spec,\n  moonick_14: Puzzle50_14Spec,\n  moonick_15: Puzzle50_15Spec,\n  moonick_16: Puzzle50_16Spec,\n  moonick_17: Puzzle50_17Spec,\n  moonick_18: Puzzle50_18Spec,\n  moonick_19: Puzzle50_19Spec,\n  moonick_20: Puzzle50_20Spec,\n  moonick_21: Puzzle50_21Spec,\n  moonick_22: Puzzle50_22Spec,\n  moonick_23: Puzzle50_23Spec,\n  moonick_24: Puzzle50_24Spec,\n  moonick_final: Puzzle50_FinalSpec,\n  spelling_bee: Puzzle51Spec,\n  the_swarm: Puzzle53Spec,\n  kero: Puzzle76Spec,\n  jabberwock_1: Puzzle80Specs[0],\n  jabberwock_2: Puzzle80Specs[1],\n  jabberwock_3: Puzzle80Specs[2],\n  jabberwock_4: Puzzle80Specs[3],\n  jabberwock_5: Puzzle80Specs[4],\n  jabberwock_6: Puzzle80Specs[5],\n  jabberwock_7: Puzzle80Specs[6],\n  asteroid_1: Puzzle82_1Spec,\n  asteroid_2: Puzzle82_2Spec,\n  asteroid_3: Puzzle82_3Spec,\n  coloring: Puzzle90Spec,\n  othello: Puzzle93Spec,\n  spirit_of_the_vines_1: Puzzle98RampSpec,\n  spirit_of_the_vines_2: Puzzle98ShadowSpec,\n  spirit_of_the_vines_3: Puzzle98SplitterSpec,\n  spirit_of_the_vines_4: Puzzle98VultureSpec,\n  spirit_of_the_vines_5: Puzzle98YinYangSpec,\n  infinitely_many_hogs_and_logs_1: Puzzle101Specs[0],\n  infinitely_many_hogs_and_logs_2: Puzzle101Specs[1],\n  infinitely_many_hogs_and_logs_3: Puzzle101Specs[2],\n  infinitely_many_hogs_and_logs_4: Puzzle101Specs[3],\n  angry_boarry_farmer: Puzzle109Spec,\n  test_battle: TestBattleSpec,\n  treasure_chest: makeSimpleCutsceneSpec(\"intro-start\"),\n  first_answer: makeSimpleCutsceneSpec(\"masteries-start\"),\n  first_legendary: makeSimpleCutsceneSpec(\"legendary-start\"),\n  entering_the_water: makeSimpleCutsceneSpec(\"pre-final-battle-start\"),\n  the_end: makeSimpleCutsceneSpec(\"post-final-battle-start\"),\n};\n\nexport const getGameSpec = (puzName: string): GameSpec => {\n  const sharedGameSpec = ALL_SHARED_GAME_SPECS[puzName];\n  const gameSpec = ALL_SERVER_ONLY_GAME_SPECS[puzName];\n\n  if (sharedGameSpec === undefined && gameSpec === undefined) {\n    throw new Error(`unknown puzzle name ${puzName} requested`);\n  }\n\n  return {\n    ...(sharedGameSpec ?? {}),\n    ...(gameSpec ?? {}),\n  };\n};\n","import {\n  Card,\n  Permanent,\n  Slot,\n  Player,\n  DevKnobs,\n  GamePhase,\n  GameState,\n} from \"engine/types/game-state\";\nimport { Counter } from \"engine/types/counters\";\nimport {\n  Role,\n  UpdateType,\n  Update,\n  UpdateDrawCard,\n  UpdateRemoveFromDrawPile,\n} from \"engine/types/updates\";\nimport { GemColor } from \"engine/types/card-data\";\nimport { WSErrorCode, WSError } from \"game-server/ws\";\nimport { UpdatesMulticaster } from \"game-server/UpdatesMulticaster\";\nimport { Keyframe } from \"./types/keyframes\";\n\n/**\n * Controller is a thin utility wrapper around UpdatesMulticaster.\n * It handles raw Update creation, as well as ensuring that the\n * right broadcastAndApply functions are called for asymmetric updates.\n *\n * Each Controller function should generate at most a single update.\n */\nexport class Controller {\n  multicaster: UpdatesMulticaster;\n\n  constructor(multicaster: UpdatesMulticaster) {\n    this.multicaster = multicaster;\n  }\n\n  stepAck(roomMemberId: string, err?: WSError) {\n    this.multicaster.send(roomMemberId, {\n      type: UpdateType.STEP_ACK,\n      err,\n    });\n  }\n\n  respSuccess(roomMemberId: string) {\n    this.stepAck(roomMemberId);\n  }\n\n  respInvalidStep(roomMemberId: string) {\n    this.stepAck(roomMemberId, { errCode: WSErrorCode.INVALID_STEP });\n  }\n\n  advancePhase(phase: GamePhase) {\n    this.broadcastAndApply({\n      type: UpdateType.ADVANCE_PHASE,\n      phase,\n    });\n  }\n\n  startTurn(player: Player) {\n    this.broadcastAndApply({\n      type: UpdateType.START_TURN,\n      player: player,\n      startTurnTime: new Date().getTime(),\n    });\n  }\n\n  endTurn(player: Player) {\n    this.broadcastAndApply({\n      type: UpdateType.END_TURN,\n      player: player,\n      endTurnTime: new Date().getTime(),\n    });\n  }\n\n  setDrawPile(player: Player, drawPile: ReadonlyArray<Card>) {\n    // TODO: This should error out if it is ever used while clients\n    // are connected, since players should not have access to even\n    // their own draw pile. If we ever really need to use this\n    // while users are connected, make sure to only send the\n    // pile size/top card to clients, and the full draw pile only\n    // to the reducer.\n    this.broadcastAndApply({\n      type: UpdateType.SET_DRAW_PILE,\n      player,\n      drawPile,\n    });\n  }\n\n  setDevKnobs(devKnobs: DevKnobs) {\n    this.broadcastAndApply({\n      type: UpdateType.SET_DEV_KNOBS,\n      devKnobs: devKnobs,\n    });\n  }\n\n  addGems(player: Player, gems: GemColor[]) {\n    this.broadcastAndApply({\n      type: UpdateType.ADD_GEMS,\n      player,\n      gems,\n    });\n  }\n\n  removeGems(player: Player, gems: GemColor[]) {\n    this.broadcastAndApply({\n      type: UpdateType.REMOVE_GEMS,\n      player,\n      gems,\n    });\n  }\n\n  clearGems(player: Player) {\n    this.broadcastAndApply({\n      type: UpdateType.CLEAR_GEMS,\n      player,\n    });\n  }\n\n  /**\n   * Create a permanent on the board. This just adds the permanent to\n   * the board and does not trigger any effects.\n   */\n  createPermanent(permanent: Permanent, handCardId?: string) {\n    // This function does not propagate in-game effects that care about\n    // summoning, e.g. on-summon effects. To do those things, call\n    // Engine.summonPermanent instead.\n    this.broadcastAndApply({\n      type: UpdateType.CREATE_PERMANENT,\n      handCardId,\n      permanent: JSON.parse(JSON.stringify(permanent)) as Permanent,\n    });\n  }\n\n  readyPermanent(permanentId: string) {\n    this.broadcastAndApply({\n      type: UpdateType.READY_PERMANENT,\n      permanentId,\n    });\n  }\n\n  unreadyPermanent(permanentId: string) {\n    this.broadcastAndApply({\n      type: UpdateType.UNREADY_PERMANENT,\n      permanentId,\n    });\n  }\n\n  changePermanentOwner(permanentId: string, owner: Player) {\n    this.broadcastAndApply({\n      type: UpdateType.CHANGE_PERMANENT_OWNER,\n      permanentId,\n      owner,\n    });\n  }\n\n  transformPermanent(permanentId: string, newCardName: string) {\n    this.broadcastAndApply({\n      type: UpdateType.TRANSFORM_PERMANENT,\n      permanentId,\n      newCardName,\n    });\n  }\n\n  move(permanentId: string, slot: Slot) {\n    this.broadcastAndApply({\n      type: UpdateType.MOVE,\n      permanentId,\n      slot,\n    });\n  }\n\n  swap(permanent1Id: string, permanent2Id: string) {\n    this.broadcastAndApply({\n      type: UpdateType.SWAP,\n      permanent1Id,\n      permanent2Id,\n    });\n  }\n\n  drawCard(\n    player: Player,\n    card: Card,\n    handCardId: string,\n    nextTopCard?: Card | null,\n    shouldPopDrawPile?: boolean\n  ) {\n    const fullUpd: UpdateDrawCard = {\n      type: UpdateType.DRAW_CARD,\n      player,\n      card,\n      handCardId,\n      nextTopCard,\n      shouldPopDrawPile: shouldPopDrawPile ?? true, // pop from draw pile by default\n    };\n    this.broadcastAndApplyAsymmetric(player, fullUpd, {\n      ...fullUpd,\n      nextTopCard: undefined,\n      card: {},\n    });\n  }\n\n  removeFromDrawPile(\n    player: Player,\n    drawPileIndex: number,\n    nextTopCard?: Card | null\n  ) {\n    const fullUpd: UpdateRemoveFromDrawPile = {\n      type: UpdateType.REMOVE_FROM_DRAW_PILE,\n      player,\n      drawPileIndex,\n      nextTopCard,\n    };\n    this.broadcastAndApplyAsymmetric(player, fullUpd, {\n      ...fullUpd,\n      nextTopCard: undefined,\n    });\n  }\n\n  discardCard(player: Player, handCardId: string) {\n    this.broadcastAndApply({\n      type: UpdateType.DISCARD_CARD,\n      player,\n      handCardId,\n    });\n  }\n\n  damagePermanent(permanentId: string, damage: number, attackerId?: string) {\n    this.broadcastAndApply({\n      type: UpdateType.DAMAGE_PERMANENT,\n      permanentId,\n      damage,\n      attackerId,\n    });\n  }\n\n  removePermanent(permanentId: string, discard?: boolean) {\n    this.broadcastAndApply({\n      type: UpdateType.REMOVE_PERMANENT,\n      permanentId,\n      discard,\n    });\n  }\n\n  addCounter(permanentId: string, counter: Counter) {\n    this.broadcastAndApply({\n      type: UpdateType.ADD_COUNTER,\n      permanentId,\n      counter,\n    });\n  }\n\n  removeCounter(permanentId: string, counterIndex: number) {\n    this.broadcastAndApply({\n      type: UpdateType.REMOVE_COUNTER,\n      permanentId,\n      counterIndex,\n    });\n  }\n\n  setCounter(\n    permanentId: string,\n    counterIndex: number,\n    counterVal?: number,\n    explanation?: string\n  ) {\n    this.broadcastAndApply({\n      type: UpdateType.SET_COUNTER,\n      permanentId,\n      counterIndex,\n      counterVal,\n      explanation,\n    });\n  }\n\n  setKeyframe(keyframe: Keyframe) {\n    this.broadcastAndApply({\n      type: UpdateType.SET_KEYFRAME,\n      keyframe,\n    });\n  }\n\n  clearKeyframe() {\n    this.broadcastAndApply({\n      type: UpdateType.SET_KEYFRAME,\n      keyframe: null,\n    });\n  }\n\n  announce(message: string) {\n    this.broadcastAndApply({\n      type: UpdateType.ANNOUNCE,\n      message,\n    });\n  }\n\n  announceSummonPermanent(player: Player, cardName: string) {\n    this.broadcastAndApply({\n      type: UpdateType.ANNOUNCE_SUMMON_PERMANENT,\n      player,\n      cardName,\n    });\n  }\n\n  announceMove(player: Player, cardName: string) {\n    this.broadcastAndApply({\n      type: UpdateType.ANNOUNCE_MOVE,\n      player: player,\n      cardName: cardName,\n    });\n  }\n\n  announceAttackCard(cardName: string, damage: number, targetName: string) {\n    this.broadcastAndApply({\n      type: UpdateType.ANNOUNCE_ATTACK_CARD,\n      cardName: cardName,\n      target: targetName,\n      damage: damage,\n    });\n  }\n\n  overrideState(\n    roomId: string,\n    fullState: GameState,\n    p1State: GameState,\n    p2State: GameState\n  ) {\n    this.multicaster.broadcastPerRoleAndApply({\n      [Role.GOD]: {\n        type: UpdateType.OVERRIDE_STATE,\n        roomId,\n        state: fullState,\n      },\n      [Role.P1]: {\n        type: UpdateType.OVERRIDE_STATE,\n        roomId,\n        state: p1State,\n      },\n      [Role.P2]: {\n        type: UpdateType.OVERRIDE_STATE,\n        roomId,\n        state: p2State,\n      },\n    });\n  }\n\n  respOverrideState(roomMemberId: string, roomId: string, state: GameState) {\n    this.multicaster.send(roomMemberId, {\n      type: UpdateType.OVERRIDE_STATE,\n      roomId,\n      state: state,\n    });\n  }\n\n  // Internal methods\n\n  notifySystem(upd: Update): void {\n    this.multicaster.notifySystem(upd);\n  }\n\n  broadcastAndApply(upd: Update): void {\n    this.multicaster.broadcastAndApply(upd);\n  }\n\n  // Broadcast and apply an asymmetric update.\n  // The full update `upd` is broadcast to all roles with full\n  // information about `player`, while `updHidden` is broadcast\n  // to all other roles. If `updHidden` is null, then nothing\n  // is broadcast to other roles.\n  broadcastAndApplyAsymmetric(\n    player: Player,\n    upd: Update,\n    updHidden: Update | null\n  ): void {\n    this.multicaster.broadcastAndApplyAsymmetric(player, upd, updHidden);\n  }\n}\n","import { DeckSelection, deckToCardList } from \"engine/types/decks\";\nimport {\n  LoadoutResolved,\n  DevKnobs,\n  Card,\n  Permanent,\n  CardLike,\n  Slot,\n  Player,\n  PlayerState,\n  PlayerStateTeamData,\n  GamePhase,\n  GameState,\n  EngineGameState,\n  FullGameState,\n  MutableGameState,\n  MutableEngineOnlyGameState,\n  makeInitGameState,\n} from \"engine/types/game-state\";\nimport { CounterType, ValueCounterType } from \"engine/types/counters\";\nimport {\n  PermanentEventType,\n  PermanentEvent,\n  PermanentEventHandlers,\n  PermanentEventHandlerResult,\n  HooksEngineAPI,\n  HooksAIAPI,\n  HooksOutOfTurnAIAPI,\n} from \"engine/server-hooks\";\nimport {\n  StepType,\n  Step,\n  StepResolved,\n  AttackStepResolved,\n  SummonStepResolved,\n  MoveStepResolved,\n  ActivateAbilityStepResolved,\n  EndTurnStep,\n  CreateGemsStepResolved,\n  DrawStepResolved,\n  RemoveStepResolved,\n  AdvanceKeyframeStepResolved,\n  stepToPlayer,\n  SystemStep,\n} from \"engine/types/steps\";\nimport { ColorSymbol } from \"engine/types/card-data\";\nimport {\n  SCRY_TOP_CARD_MASTERY_ID,\n  PRIORITY_CARD_MASTERY_ID,\n} from \"engine/puzzles/mastery-data\";\nimport { AbilityType } from \"engine/types/effects\";\nimport { Keyframe } from \"engine/types/keyframes\";\nimport { Role, UpdateType } from \"engine/types/updates\";\nimport { CardsDB } from \"engine/cards/CardsDB\";\nimport { GameSpec, EngineContext, AIContext } from \"engine/types/game-specs\";\nimport { Inspector } from \"engine/Inspector\";\nimport { Reducer } from \"engine/Reducer\";\nimport { Controller } from \"engine/Controller\";\nimport { CardEffects, EffectsDB, CountersDB } from \"engine/cards/card-effects\";\nimport { RoomMember } from \"game-server/Room\";\nimport {\n  LoseReason,\n  TeamCard,\n} from \"game-server/backend-interface/BackendInterface\";\nimport { doesCardColorBelongToFaction } from \"engine/types/factions\";\nimport { UpdatesMulticaster } from \"game-server/UpdatesMulticaster\";\n\n//\n// constants\n//\n\nconst STARTING_HAND_SIZE = 4;\n\ntype CheckpointHandler = (engine: Engine, slots: number[]) => void;\ntype CutsceneChoiceHandler = (\n  engine: Engine,\n  keyframeId: string,\n  dialogOptionIndex: number\n) => void;\n\nexport class Engine {\n  multicaster: UpdatesMulticaster;\n  puzName: string;\n  roomId: string;\n\n  /** The primary game spec. */\n  gameSpec: GameSpec;\n  /** All the mods to apply, including the common spec and primary spec. */\n  allSpecs: ReadonlyArray<GameSpec>;\n  /** Function to get the card unlocks for player if solved. */\n  getCardUnlocks: (player: Player) => string[];\n  cardsDB: CardsDB;\n  effectsDB: EffectsDB;\n  countersDB: CountersDB;\n  keyframes: Keyframe[];\n\n  // This should be treated as readonly outside controller methods.\n  // TODO: should this be removed in favor of inspector?\n  gameState: EngineGameState;\n\n  inspector: Inspector;\n  controller: Controller;\n\n  hooksApi: HooksEngineAPI;\n  hooksAiApi: HooksAIAPI;\n  hooksOutOfTurnAiApi: HooksOutOfTurnAIAPI;\n\n  /**\n   * Whether a checkpoint should be created once the current step\n   * has finished processing.\n   * This should only be transiently used while processing a step.\n   */\n  needCheckpoint: number[];\n  checkpointHandler: CheckpointHandler;\n\n  cutsceneChoiceHandler: CutsceneChoiceHandler;\n\n  constructor(\n    multicaster: UpdatesMulticaster,\n    puzName: string,\n    roomId: string,\n    allSpecs: ReadonlyArray<GameSpec>,\n    getCardUnlocks: (player: Player) => string[],\n    cardsDB: CardsDB,\n    effectsDB: EffectsDB,\n    countersDB: CountersDB,\n    keyframes: Keyframe[],\n    teamData: { [player in Player]?: PlayerStateTeamData },\n    deckSelections: { [player in Player]?: DeckSelection },\n    checkpointHandler: CheckpointHandler,\n    cutsceneChoiceHandler: CutsceneChoiceHandler,\n    devKnobs?: DevKnobs,\n    gameStateOpt?: MutableGameState\n  ) {\n    this.multicaster = multicaster;\n    this.puzName = puzName;\n    this.roomId = roomId;\n    this.allSpecs = allSpecs;\n    this.gameSpec = this.allSpecs[1];\n    this.getCardUnlocks = getCardUnlocks;\n\n    this.cardsDB = cardsDB;\n    this.effectsDB = effectsDB;\n    this.countersDB = countersDB;\n    this.keyframes = keyframes;\n\n    // Safety check that all card effects correspond to actual cards.\n    // This would help catch problems with card renaming.\n    for (const cardName of Object.keys(this.effectsDB)) {\n      if (this.cardsDB[cardName] === undefined) {\n        throw new Error(\n          `card ${cardName} not found in cards database -- perhaps the card names in the deck sheet and code got out of sync, or a card name was misspelled.`\n        );\n      }\n    }\n\n    const gameState =\n      gameStateOpt ??\n      (() => {\n        const gameState = makeInitGameState(this.puzName, this.gameSpec);\n        for (const [kPlayer, playerTeamData] of Object.entries(teamData)) {\n          const player = kPlayer as Player;\n          gameState[player].teamData = playerTeamData;\n        }\n        gameState.devKnobs = devKnobs;\n        gameState.engineOnly.deckSelections = deckSelections;\n        return gameState;\n      })();\n    this.gameState = gameState;\n\n    // The engine uses a separate Inspector from its Reducer\n    // since it has access to all card and effects data.\n    this.inspector = new Inspector(\n      this.gameSpec,\n      this.allSpecs,\n      this.cardsDB,\n      this.effectsDB,\n      this.gameState\n    );\n\n    const reducer = new Reducer(this.gameSpec, this.allSpecs, gameState);\n    this.multicaster.setApplyUpdateFunc((upd) => {\n      reducer.applyUpdate(upd);\n    });\n    this.controller = new Controller(this.multicaster);\n\n    this.hooksApi = new HooksEngineAPI(this);\n    this.hooksAiApi = new HooksAIAPI(this);\n    this.hooksOutOfTurnAiApi = new HooksOutOfTurnAIAPI(this.hooksAiApi);\n\n    this.needCheckpoint = [];\n    this.checkpointHandler = checkpointHandler;\n    this.cutsceneChoiceHandler = cutsceneChoiceHandler;\n  }\n\n  /**\n   * A separate init allows creating the Engine with a pre-defined\n   * gameState, as required by backend-saved game loading.\n   */\n  init() {\n    for (const spec of this.allSpecs) {\n      if (spec.afterInitEngine) {\n        spec.afterInitEngine(this.makeContext());\n      }\n    }\n\n    this.startNewGame();\n\n    if (!this.inspector.isGameActive())\n      throw new Error(\"expect game to still be active after starting\");\n  }\n\n  //\n  // helpers\n  //\n\n  /**\n   * Access point to allow game specs to trigger game behavior on specified\n   * events.\n   */\n  makeContext(): EngineContext {\n    return {\n      inspector: this.inspector,\n      engine: this.hooksApi,\n      ai: this.hooksOutOfTurnAiApi,\n    };\n  }\n\n  makeAIContext(): AIContext {\n    return {\n      ...this.makeContext(),\n      ai: this.hooksAiApi,\n    };\n  }\n\n  getEffects(arg: CardLike): CardEffects {\n    const effects = this.effectsDB[this.inspector.getCardName(arg)];\n    return effects ? effects : {};\n  }\n\n  /**\n   * Get the engine-only portion of the game state.\n   * Since this is not used by the client, we are allowed to\n   * mutate it directly in the Engine.\n   */\n  getEngineOnly(): MutableEngineOnlyGameState {\n    const engineOnly = this.gameState.engineOnly;\n    if (engineOnly === undefined) {\n      throw new Error(\"engine should have access to engine-only state\");\n    }\n    return engineOnly;\n  }\n\n  /**\n   * If the game should end or has ended, returns the game's winner.\n   * Otherwise, returns null.\n   */\n  getWinner(): Player | null {\n    const isLoser = (player: Player): boolean => {\n      if (\n        !(this.gameSpec.disableNoBasesLossCondition ?? false) &&\n        !(\n          player === Player.P1 &&\n          (this.gameSpec.disableP1NoBasesLossCondition ?? false)\n        ) &&\n        !(\n          player === Player.P2 &&\n          (this.gameSpec.disableP2NoBasesLossCondition ?? false)\n        ) &&\n        this.inspector.getBases(player).length === 0\n      )\n        return true;\n      if (\n        this.gameSpec.extraLoseChecks &&\n        this.gameSpec.extraLoseChecks(player, this.makeContext())\n      ) {\n        return true;\n      }\n      return false;\n    };\n\n    if (isLoser(Player.P2)) return Player.P1;\n    if (isLoser(Player.P1)) return Player.P2;\n    return null;\n  }\n\n  /**\n   * Checks if the puzzle is solved, once the game has ended.\n   */\n  getIsSolved(player: Player, winner: Player): boolean {\n    // Currently, only AI battles have a \"solved\" concept.\n    if (!this.inspector.hasAI()) return false;\n    if (player !== Player.P1) return false;\n    if (!this.gameSpec.disableBattleWonSolvedCondition && winner !== player) {\n      return false;\n    }\n    if (\n      this.gameSpec.extraSolveChecks &&\n      !this.gameSpec.extraSolveChecks(player, winner, this.makeContext())\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Turn a card to an initially-played permanent.\n   * This has to go here since it might be overriden by a game spec.\n   */\n  cardToPermanent(card: Card, owner: Player, slot: Slot): Permanent {\n    return {\n      id: (this.getEngineOnly().nextPermanentId++).toString(),\n      card,\n      damage: 0,\n      counters: [],\n      // Cards are summoned unready by default (\"summoning sickness\").\n      // In \"always ready\" mode, cards are summoned ready.\n      ready: this.inspector.isAlwaysReady(),\n      owner,\n      slot,\n    };\n  }\n\n  /** Draw a card from the top of player's deck. */\n  drawCard(player: Player): void {\n    const { topCard, nextTopCard } =\n      this.inspector.getTopCardsInDrawPile(player);\n    if (topCard !== null) {\n      this.controller.drawCard(\n        player,\n        topCard,\n        `${this.getEngineOnly().nextHandCardId++}`,\n        nextTopCard === null ? undefined : nextTopCard\n      );\n    }\n  }\n\n  /**\n   * Add a given card to the player's hand, without modifying\n   * the draw pile.\n   */\n  addCardToHand(player: Player, card: Card): void {\n    this.controller.drawCard(\n      player,\n      card,\n      `${this.getEngineOnly().nextHandCardId++}`,\n      undefined,\n      false\n    );\n  }\n\n  /** Remove a card by index from the player's deck. */\n  removeCardIndex(player: Player, drawPileIndex: number): void {\n    const drawPile = this.inspector.getDrawPile(player);\n    this.controller.removeFromDrawPile(\n      player,\n      drawPileIndex,\n      drawPileIndex === drawPile.length - 1 &&\n        drawPile.length > 1 &&\n        this.inspector.doesPlayerHaveMastery(player, SCRY_TOP_CARD_MASTERY_ID)\n        ? drawPile[drawPile.length - 2]\n        : undefined\n    );\n  }\n\n  /** Initialize a new game. */\n  startNewGame(): void {\n    // Signal client to reset any client-only game state.\n    // This does not affect the shared game state, since this is\n    // taken care of by the override-state update on join.\n    this.controller.broadcastAndApply({\n      type: UpdateType.RESET,\n    });\n\n    const devKnobs = this.inspector.getDevKnobs();\n    const noShuffle = devKnobs.noShuffle !== undefined && devKnobs.noShuffle;\n    const shuffleDeck = (deck: string[]): void => {\n      // Fisher-Yates shuffle\n      for (let i = deck.length - 1; i >= 1; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[j], deck[i]] = [deck[i], deck[j]];\n      }\n    };\n\n    const loadouts: { [player in Player]?: LoadoutResolved } = {};\n    for (const player of [Player.P1, Player.P2]) {\n      const {\n        deckCardList,\n        priorityCard: deckPriorityCard,\n      }: {\n        deckCardList: string[];\n        priorityCard?: string;\n      } = (() => {\n        const deckOverride = this.inspector.getDeckOverride(player);\n        if (deckOverride !== null) return { deckCardList: [...deckOverride] };\n        // If all cards are available, then there's no use setting a deck.\n        if (this.inspector.isAllCardsAvailable()) return { deckCardList: [] };\n        const deckSelection = this.getEngineOnly().deckSelections[player];\n        if (deckSelection === undefined) {\n          if (this.inspector.isNoDeckAllowed()) return { deckCardList: [] };\n          throw new Error(`expect deck to be defined for ${player}`);\n        }\n        const { deck } = deckSelection;\n        return {\n          deckCardList: deckToCardList(deck),\n          priorityCard: deck.priorityCard,\n        };\n      })();\n\n      const hasPriorityCardMastery = this.inspector.doesPlayerHaveMastery(\n        player,\n        PRIORITY_CARD_MASTERY_ID\n      );\n      const priorityCard = hasPriorityCardMastery\n        ? deckPriorityCard\n        : undefined;\n      const priorityCardIndex =\n        priorityCard === undefined ? -1 : deckCardList.indexOf(priorityCard);\n      if (priorityCardIndex !== -1) deckCardList.splice(priorityCardIndex, 1);\n\n      if (!noShuffle) shuffleDeck(deckCardList);\n\n      if (priorityCardIndex !== -1) {\n        if (priorityCard === undefined)\n          throw new Error(\n            \"expect there to be a priority card if we removed one\"\n          );\n        deckCardList.push(priorityCard);\n      }\n\n      this.controller.setDrawPile(\n        player,\n        deckCardList.map((name) => ({\n          name,\n        }))\n      );\n    }\n\n    for (const spec of this.allSpecs) {\n      if (spec.beforeNewGame) {\n        spec.beforeNewGame(this.makeContext());\n      }\n    }\n\n    // Place bases.\n    const width = this.inspector.getNumColumns();\n    const height = this.inspector.getNumRows();\n    for (const player of [Player.P1, Player.P2]) {\n      const bases = this.inspector.getDefaultBases(player);\n      if (bases.length > width) {\n        throw new Error(\n          \"invalid number of bases (no more than one per column)\"\n        );\n      }\n      const baseColumns = this.inspector.getBasePositions(player, bases.length);\n      if (baseColumns.length !== bases.length) {\n        throw new Error(\n          \"the number of base positions specified does not equal the number of bases\"\n        );\n      }\n      for (let i = 0; i < bases.length; i++) {\n        const slot = {\n          row: this.inspector.getPlayerRowIndex(0, player),\n          column: baseColumns[i],\n        };\n        this.spawnPermanent(bases[i], player, slot);\n      }\n    }\n\n    // Draw initial hands.\n    for (const player of [Player.P1, Player.P2]) {\n      for (let i = 0; i < STARTING_HAND_SIZE; i++) {\n        this.drawCard(player);\n      }\n    }\n\n    this.getEngineOnly().hasGameStarted = true;\n\n    // P2 goes first.\n    this.startTurn(Player.P2);\n  }\n\n  endGame(\n    winner: Player,\n    loseReason: LoseReason,\n    solves: { [player in Player]?: boolean },\n    cardUnlocks: { [player in Player]?: string[] }\n  ): void {\n    this.controller.broadcastAndApply({\n      type: UpdateType.SET_GAME_RESULT,\n      winner,\n      loseReason,\n      solves,\n      cardUnlocks,\n      endTime: new Date().getTime(),\n    });\n    this.controller.advancePhase(GamePhase.ENDED);\n    if (this.gameSpec.afterGameEnd) {\n      this.gameSpec.afterGameEnd(winner, solves, this.makeContext());\n    }\n    const solvedTeamIds: string[] = [];\n    const cardUnlocksData: TeamCard[] = [];\n    for (const player of [Player.P1, Player.P2]) {\n      if (solves[player] ?? false) {\n        const teamId = this.gameState[player].teamData?.teamId;\n        if (teamId === undefined)\n          throw new Error(\"if puzzle is solved, expect a team to exist\");\n        solvedTeamIds.push(teamId);\n      }\n      for (const cardName of cardUnlocks[player] ?? []) {\n        const teamId = this.gameState[player].teamData?.teamId;\n        if (teamId === undefined)\n          throw new Error(\n            \"if there are cards unlocked, expect a team to exist\"\n          );\n        cardUnlocksData.push({\n          teamId,\n          cardName,\n        });\n      }\n    }\n    this.controller.notifySystem({\n      type: UpdateType.SYSTEM_ROOM_COMPLETE,\n      solvedTeamIds: solvedTeamIds,\n      cardUnlocks: cardUnlocksData,\n    });\n  }\n\n  destroyPermanent(permanent: Permanent, attacker?: Permanent): void {\n    // can't be destroyed\n    if (\n      permanent !== attacker &&\n      this.inspector.doesPermanentHaveCounterType(\n        permanent,\n        CounterType.INVULNERABLE\n      )\n    )\n      return;\n\n    this.handlePermanentEvent({\n      type: PermanentEventType.BEFORE_DESTROYED,\n      permanent,\n      attacker,\n      ctx: this.makeContext(),\n    });\n    if (attacker) {\n      this.handlePermanentEvent({\n        type: PermanentEventType.BEFORE_DESTROY_UNIT,\n        permanent: attacker,\n        defender: permanent,\n        ctx: this.makeContext(),\n      });\n    }\n    this.controller.removePermanent(permanent.id);\n    if (attacker) {\n      this.controller.broadcastAndApply({\n        type: UpdateType.MODIFY_STATS,\n        player: attacker.owner,\n        diffDestroys: 1,\n      });\n      this.handlePermanentEvent({\n        type: PermanentEventType.AFTER_DESTROY_UNIT,\n        permanent: attacker,\n        defender: permanent,\n        ctx: this.makeContext(),\n      });\n    }\n    this.handlePermanentEvent({\n      type: PermanentEventType.AFTER_DESTROYED,\n      permanent,\n      attacker,\n      ctx: this.makeContext(),\n    });\n    // Handle OTHER_UNIT_DESTROYED.\n    for (const otherPermanent of this.inspector.getAllPermanents()) {\n      if (otherPermanent.id === permanent.id) continue; // no self trigger\n      this.handlePermanentEvent({\n        type: PermanentEventType.OTHER_UNIT_DESTROYED,\n        permanent: otherPermanent,\n        destroyedPermanent: permanent,\n        attacker,\n        ctx: this.makeContext(),\n      });\n    }\n  }\n\n  /**\n   * Apply damage to permanent. The damage may optionally be attributed\n   * to an attacker, for card effects.\n   */\n  damagePermanent(\n    permanent: Permanent,\n    damage: number,\n    attacker?: Permanent,\n    /** Ignore the INVULNERABLE counter. */\n    ignoreInvulnerability?: boolean\n  ): void {\n    const effects = this.getEffects(permanent);\n    const effectsAdjust = effects.adjustDamageReceived;\n    const insteadOfDamaged = effects.insteadOfDamaged;\n\n    if (effectsAdjust) {\n      damage = effectsAdjust(permanent, damage, attacker, this.makeContext());\n    }\n\n    for (const spec of this.allSpecs) {\n      if (spec.adjustDamageReceived) {\n        damage = spec.adjustDamageReceived(\n          permanent,\n          damage,\n          attacker,\n          this.makeContext()\n        );\n      }\n    }\n\n    if (damage <= 0) {\n      // Return early if no damage is actually dealt.\n      // This is relevant for card effects.\n      return;\n    }\n\n    // can't be damaged\n    if (\n      !(ignoreInvulnerability ?? false) &&\n      this.inspector.doesPermanentHaveCounterType(\n        permanent,\n        CounterType.INVULNERABLE\n      )\n    )\n      return;\n\n    // --- AFTER THIS POINT, SOME DAMAGE WOULD BE DEALT ---\n\n    if (insteadOfDamaged) {\n      const shouldDamageAnyway = insteadOfDamaged(\n        permanent,\n        damage,\n        attacker,\n        this.makeContext()\n      );\n      if (!shouldDamageAnyway) return;\n    }\n\n    // check for divine shield\n    // divine shield pops on the first instance of damage\n    if (\n      this.inspector.doesPermanentHaveCounterType(\n        permanent,\n        CounterType.DIVINE_SHIELD\n      )\n    ) {\n      this.removeCounterType(permanent, CounterType.DIVINE_SHIELD);\n      return;\n    }\n\n    const undamagedShell = this.inspector.getUndamagedShell(permanent);\n    const maxDamageReceivable =\n      this.inspector.getHealth(permanent) + undamagedShell;\n    // Prevent a permanent's health from going negative, even\n    // instantaneously. This is necessary to prevent thorns\n    // from recursing infinitely.\n    const netDamageReceived = Math.min(damage, maxDamageReceivable);\n    const shellDamage = Math.min(netDamageReceived, undamagedShell);\n    if (shellDamage > 0) {\n      this.controller.addCounter(permanent.id, {\n        type: CounterType.SHELL_DAMAGE_TAKEN,\n        val: shellDamage,\n        explanation: `shell received ${shellDamage} damage`,\n        expiry: PermanentEventType.START_TURN,\n      });\n    }\n    const healthDamage = netDamageReceived - shellDamage;\n    if (healthDamage > 0) {\n      const isIndestructable = this.inspector.doesPermanentHaveCounterType(\n        permanent,\n        CounterType.CANNOT_BE_DESTROYED\n      );\n      const health = this.inspector.getHealth(permanent);\n      this.controller.damagePermanent(\n        permanent.id,\n        isIndestructable ? Math.min(healthDamage, health - 1) : healthDamage,\n        attacker?.id\n      );\n    }\n\n    if (attacker) {\n      this.controller.broadcastAndApply({\n        type: UpdateType.MODIFY_STATS,\n        player: attacker.owner,\n        diffDamageDealt: netDamageReceived,\n      });\n      this.handlePermanentEvent({\n        type: PermanentEventType.AFTER_DEAL_DAMAGE,\n        permanent: attacker,\n        damage: netDamageReceived,\n        defender: permanent,\n        ctx: this.makeContext(),\n      });\n    }\n    this.handlePermanentEvent({\n      type: PermanentEventType.AFTER_DAMAGED,\n      permanent,\n      damage: netDamageReceived,\n      attacker,\n      ctx: this.makeContext(),\n    });\n\n    if (!this.inspector.doesPermanentExist(permanent)) return;\n\n    if (this.inspector.getHealth(permanent) <= 0) {\n      this.destroyPermanent(permanent, attacker);\n      return;\n    }\n\n    this.controller.addCounter(permanent.id, {\n      type: CounterType.DAMAGE_TAKEN,\n      val: netDamageReceived,\n      expiry: PermanentEventType.START_TURN,\n    });\n  }\n\n  /**\n   * Remove (damage) from (permanent).\n   * (damage) must be positive.\n   * (permanent)'s health will not go above max health.\n   * On-damage effects are not triggered, but after-damage-removed is.\n   */\n  removeDamageFromPermanent(permanent: Permanent, damage: number): void {\n    // amount of damage that is actually removed, never more than current damage\n    // eg. permanent at 3/5 health, permanent.damage = 2\n    //     damage = 5, realDamage = min(2, 5) = 2\n    const realDamage = Math.min(permanent.damage, damage);\n    this.controller.damagePermanent(permanent.id, -realDamage);\n\n    this.handlePermanentEvent({\n      type: PermanentEventType.AFTER_DAMAGE_REMOVED,\n      permanent,\n      damage: realDamage,\n      ctx: this.makeContext(),\n    });\n  }\n\n  /**\n   * If it doesn't exist, add a value counter to (permanent) with (val), (explanation(val)) and (expiry).\n   * If it exists, increment the value of the existing counter by (val) and set the explanation to (explanation(new value))\n   */\n  mergeValueCounter(\n    permanent: Permanent,\n    counterType: ValueCounterType,\n    val: number,\n    explanation?: (val: number) => string,\n    expiry?: PermanentEventType\n  ): void {\n    if (!this.inspector.doesPermanentExist(permanent)) return;\n\n    for (const [idx, counter] of permanent.counters.entries()) {\n      if (counter.type === counterType && counter.expiry === expiry) {\n        this.controller.setCounter(\n          permanent.id,\n          idx,\n          counter.val + val,\n          explanation && explanation(counter.val + val)\n        );\n        return;\n      }\n    }\n\n    this.controller.addCounter(permanent.id, {\n      type: counterType,\n      val: val,\n      explanation: explanation && explanation(val),\n      expiry,\n    });\n  }\n\n  adjustPermanentStats(\n    permanent: Permanent,\n    powerDelta: number,\n    healthDelta: number\n  ): void {\n    if (powerDelta !== 0) {\n      this.mergeValueCounter(\n        permanent,\n        CounterType.POWER_ADJUSTMENT,\n        powerDelta\n      );\n    }\n    if (healthDelta !== 0) {\n      this.mergeValueCounter(\n        permanent,\n        CounterType.MAX_HEALTH_ADJUSTMENT,\n        healthDelta\n      );\n    }\n    this.handlePermanentEvent({\n      type: PermanentEventType.AFTER_STATS_CHANGED,\n      permanent,\n      powerDelta,\n      healthDelta,\n      ctx: this.makeContext(),\n    });\n  }\n\n  /**\n   * Remove the first counter of (CounterType) on (permanent).\n   * Returns whether successful.\n   */\n  removeCounterType(permanent: Permanent, counterType: CounterType): boolean {\n    for (const [idx, counter] of permanent.counters.entries()) {\n      if (counter.type === counterType) {\n        this.controller.removeCounter(permanent.id, idx);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Attack defender with attacker.\n  attack(attacker: Permanent, defender: Permanent): void {\n    const power = this.inspector.getPower(attacker);\n    this.damagePermanent(defender, power, attacker);\n  }\n\n  /** Unready a permanent as part of performing an action. */\n  unreadyPermanentForAction(permanent: Permanent): void {\n    // In \"always ready\" dev mode, don't unready after an action.\n    if (this.inspector.isAlwaysReady()) return;\n    this.controller.unreadyPermanent(permanent.id);\n  }\n\n  transformPermanent(permanent: Permanent, newCardName: string) {\n    this.controller.transformPermanent(permanent.id, newCardName);\n  }\n\n  /**\n   * Trigger all handlers in handlers listening on ev.\n   */\n  handlePermanentEventWithHandlers(\n    ev: PermanentEvent,\n    handlers: PermanentEventHandlers\n  ): PermanentEventHandlerResult {\n    switch (ev.type) {\n      case PermanentEventType.CREATED: {\n        const handler = handlers[PermanentEventType.CREATED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.BEFORE_DESTROYED: {\n        const handler = handlers[PermanentEventType.BEFORE_DESTROYED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_DESTROYED: {\n        const handler = handlers[PermanentEventType.AFTER_DESTROYED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.START_TURN: {\n        const handler = handlers[PermanentEventType.START_TURN];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.END_TURN: {\n        const handler = handlers[PermanentEventType.END_TURN];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.BEFORE_DESTROY_UNIT: {\n        const handler = handlers[PermanentEventType.BEFORE_DESTROY_UNIT];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_DESTROY_UNIT: {\n        const handler = handlers[PermanentEventType.AFTER_DESTROY_UNIT];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_DAMAGED: {\n        const handler = handlers[PermanentEventType.AFTER_DAMAGED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_DAMAGE_REMOVED: {\n        const handler = handlers[PermanentEventType.AFTER_DAMAGE_REMOVED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_STATS_CHANGED: {\n        const handler = handlers[PermanentEventType.AFTER_STATS_CHANGED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.AFTER_DEAL_DAMAGE: {\n        const handler = handlers[PermanentEventType.AFTER_DEAL_DAMAGE];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.OTHER_UNIT_DESTROYED: {\n        const handler = handlers[PermanentEventType.OTHER_UNIT_DESTROYED];\n        if (handler) return handler(ev);\n        break;\n      }\n      case PermanentEventType.OTHER_UNIT_SPAWN: {\n        const handler = handlers[PermanentEventType.OTHER_UNIT_SPAWN];\n        if (handler) return handler(ev);\n        break;\n      }\n      default: {\n        throw new Error(\"unknown permanent event type\");\n      }\n    }\n  }\n\n  /**\n   * Take care of all custom event handlers arising from ev.\n   */\n  handlePermanentEvent(ev: PermanentEvent): void {\n    const { permanent } = ev;\n\n    // Fire handlers attached to the permanent itself.\n    const handlers = this.getEffects(permanent).handlers;\n    if (handlers !== undefined) {\n      this.handlePermanentEventWithHandlers(ev, handlers);\n    }\n\n    // Fire handlers attached to counters on the permanent.\n    // Be careful since removing counters changes the index.\n    let counterIndex = 0;\n    while (this.inspector.doesPermanentExist(permanent)) {\n      const counter = permanent.counters[counterIndex];\n      if (counter === undefined) {\n        break;\n      }\n      const counterData = this.countersDB[counter.type];\n      let shouldExpire = false;\n      if (counterData !== undefined) {\n        if (counterData.handlers !== undefined) {\n          const res = this.handlePermanentEventWithHandlers(\n            {\n              ...ev,\n              counter,\n              counterIndex,\n            },\n            counterData.handlers\n          );\n          if (res && res.expire !== undefined && res.expire) {\n            shouldExpire = true;\n          }\n        }\n      }\n      if (counter.expiry && counter.expiry === ev.type) {\n        shouldExpire = true;\n      }\n      if (shouldExpire && this.inspector.doesPermanentExist(permanent)) {\n        this.controller.removeCounter(permanent.id, counterIndex);\n        // Do not increment the index!\n        continue;\n      }\n      counterIndex++;\n    }\n  }\n\n  startTurn(player: Player): void {\n    // untap!\n    this.inspector.getPermanentsOf(player).forEach((permanent) => {\n      // Don't ready frozen permanents.\n      if (\n        this.inspector.doesPermanentHaveCounterType(\n          permanent,\n          CounterType.FROZEN\n        )\n      )\n        return;\n      if (permanent.ready) return;\n      this.controller.readyPermanent(permanent.id);\n    });\n\n    // upkeep!\n    const devExtraGemsPerTurn = this.inspector.getDevKnobs().extraGemsPerTurn;\n    if (devExtraGemsPerTurn !== undefined) {\n      const extraGems = new Array(devExtraGemsPerTurn).fill(\n        ColorSymbol.RAINBOW\n      );\n      this.controller.addGems(player, extraGems);\n      this.controller.addGems(this.inspector.getOpponentOf(player), extraGems);\n    }\n\n    // draw!\n    this.drawCard(player);\n\n    for (const permanent of this.inspector.getPermanentsOf(player)) {\n      this.handlePermanentEvent({\n        type: PermanentEventType.START_TURN,\n        permanent,\n        ctx: this.makeContext(),\n      });\n    }\n\n    // first player balancing\n    if (this.gameState.turnNumber === 0) {\n      // Sometimes, the AI starts with <3 bases so it cannot pay.\n      // This is fine.\n      const payment = this.inspector.resolvePayment(player, [\n        ColorSymbol.ROCK,\n        ColorSymbol.ROCK,\n      ]);\n      if (payment !== null) {\n        this.controller.removeGems(player, payment);\n      } else if (!this.inspector.hasAI()) {\n        throw new Error(\"only AI can be exempt from first-turn handicap\");\n      }\n    }\n\n    // Inform ui and tests that we're ready to accept steps.\n    this.controller.startTurn(player);\n\n    // Run the AI turn if necessary.\n    if (this.gameSpec.hasAI && player === Player.P2) {\n      for (const spec of this.allSpecs) {\n        if (spec.aiTurn) {\n          spec.aiTurn(this.makeAIContext());\n        }\n      }\n\n      // Only end the turn if the game is still active.\n      if (this.inspector.isGameActive()) this.endTurn(Player.P2);\n      // Only start the next turn if the game is still active.\n      if (this.inspector.isGameActive()) this.startTurn(Player.P1);\n    }\n  }\n\n  endTurn(player: Player): void {\n    for (const permanent of this.inspector.getPermanentsOf(player)) {\n      this.handlePermanentEvent({\n        type: PermanentEventType.END_TURN,\n        permanent,\n        ctx: this.makeContext(),\n      });\n    }\n\n    this.inspector.getPermanentsOf(player).forEach((permanent) => {\n      if (!permanent.ready) return;\n      this.controller.unreadyPermanent(permanent.id);\n    });\n\n    if (!this.inspector.isGemClearingDisabled()) {\n      this.controller.clearGems(player);\n    }\n    if (this.inspector.isNoTurnCheck()) {\n      const otherPlayer = this.inspector.getOpponentOf(player);\n      this.controller.clearGems(otherPlayer);\n    }\n\n    // change current player and increment turn number\n    this.controller.endTurn(player);\n\n    if (this.gameSpec.afterTurnEnd) {\n      this.gameSpec.afterTurnEnd(player, this.makeContext());\n    }\n  }\n\n  //\n  // STEPS, VALIDATORS AND APPLIERS\n  // these should be paired with each other\n  //\n  // we only need to check things that the inspector doesn't already check\n  // (so the server-only checks)\n  //\n\n  applySummon(step: SummonStepResolved): void {\n    const { player, handCardId, slot, cardName, payment } = step;\n\n    // announce before executing any actions\n    this.controller.announceSummonPermanent(\n      player,\n      this.inspector.getCardDisplayName(cardName)\n    );\n\n    // deduct gem cost\n    this.controller.removeGems(player, payment);\n\n    const faction = this.gameState[player].teamData?.faction ?? null;\n    const isFactionCard = doesCardColorBelongToFaction(\n      this.inspector.getCardColor(cardName),\n      faction\n    );\n    this.controller.broadcastAndApply({\n      type: UpdateType.MODIFY_STATS,\n      player,\n      diffSummons: 1,\n      diffFactionSummons: isFactionCard ? 1 : undefined,\n    });\n\n    // place in field\n    this.spawnPermanent(cardName, player, slot, handCardId);\n  }\n\n  spawnPermanent(\n    cardName: string,\n    owner: Player,\n    slot: Slot,\n    handCardId?: string\n  ): void {\n    // TODO: Return boolean to indicate success?\n    const permanent = this.cardToPermanent({ name: cardName }, owner, slot);\n\n    this.controller.createPermanent(permanent, handCardId);\n\n    this.handlePermanentEvent({\n      type: PermanentEventType.CREATED,\n      permanent,\n      ctx: this.makeContext(),\n    });\n\n    // Handle OTHER_UNIT_SPAWN.\n    for (const otherPermanent of this.inspector.getAllPermanents()) {\n      if (otherPermanent.id === permanent.id) continue; // no self trigger\n      this.handlePermanentEvent({\n        type: PermanentEventType.OTHER_UNIT_SPAWN,\n        permanent: otherPermanent,\n        spawnedPermanent: permanent,\n        ctx: this.makeContext(),\n      });\n    }\n\n    for (const spec of this.allSpecs) {\n      if (spec.afterSummon) {\n        spec.afterSummon(permanent, this.makeContext());\n      }\n    }\n  }\n\n  applyRemove(step: RemoveStepResolved): void {\n    const { permanent } = step;\n    this.controller.removePermanent(permanent.id);\n  }\n\n  applyMove(step: MoveStepResolved): void {\n    const { permanent, slot } = step;\n    const cardData = this.inspector.getCardData(permanent);\n\n    // announce before executing any actions\n    this.controller.announceMove(permanent.owner, cardData.displayName);\n\n    this.unreadyPermanentForAction(permanent);\n    this.controller.move(permanent.id, slot);\n  }\n\n  applyAttack(step: AttackStepResolved): void {\n    const { attacker, defender, payment } = step;\n    const cardData = this.inspector.getCardData(attacker);\n    const defenderData = this.inspector.getCardData(defender);\n\n    // TODO: Don't announce the power here. The damage is already\n    // announced when the damage is applied.\n    this.controller.announceAttackCard(\n      cardData.displayName,\n      this.inspector.getPower(attacker),\n      defenderData.displayName\n    );\n\n    this.unreadyPermanentForAction(attacker);\n    this.controller.removeGems(attacker.owner, payment);\n    this.attack(attacker, defender);\n  }\n\n  applyCreateGems(step: CreateGemsStepResolved): void {\n    const { permanent, gemColors } = step;\n\n    this.unreadyPermanentForAction(permanent);\n    this.controller.addGems(permanent.owner, gemColors);\n  }\n\n  applyDraw(step: DrawStepResolved): void {\n    const { player, payment } = step;\n\n    this.controller.removeGems(player, payment);\n    this.drawCard(player);\n  }\n\n  applyActivateAbility(step: ActivateAbilityStepResolved): void {\n    const { permanent, abilityType, payment } = step;\n\n    switch (abilityType) {\n      case AbilityType.SPECIAL: {\n        this.unreadyPermanentForAction(permanent);\n        break;\n      }\n      // Flex does not unready the permanent and can be activated\n      // multiple times.\n    }\n\n    this.controller.removeGems(permanent.owner, payment);\n\n    const effects = this.getEffects(permanent);\n    const onAbility = (() => {\n      switch (abilityType) {\n        case AbilityType.FLEX: {\n          return effects.onRepeatable;\n        }\n        case AbilityType.SPECIAL: {\n          return effects.onSpecial;\n        }\n      }\n    })();\n\n    if (onAbility) {\n      onAbility(step, this.makeContext());\n    }\n  }\n\n  applyEndTurn(step: EndTurnStep): void {\n    const { player } = step;\n\n    if (this.gameSpec.hasAI && player !== Player.P1) {\n      throw new Error(\"validations should only allow P1 steps for AI games\");\n    }\n\n    this.endTurn(player);\n    // Only start the next turn if the game is still active.\n    this.startTurn(this.inspector.getOpponentOf(player));\n  }\n\n  applyAdvanceKeyframe(step: AdvanceKeyframeStepResolved): void {\n    const { keyframe, dialogOptionIndex } = step;\n    const { dialogOptions } = keyframe;\n\n    if (dialogOptions !== undefined && dialogOptions.length > 1)\n      this.cutsceneChoiceHandler(this, keyframe.id, dialogOptionIndex ?? 0);\n\n    // Returns if end game was activated.\n    const activateKeyframeEndGame = (keyframe: Keyframe): boolean => {\n      if (keyframe.endGame ?? false) {\n        this.endGame(Player.P1, LoseReason.NORMAL, { [Player.P1]: true }, {});\n        return true;\n      }\n      if (keyframe.endGameUnsolved ?? false) {\n        this.endGame(Player.P2, LoseReason.NORMAL, {}, {});\n        return true;\n      }\n      return false;\n    };\n\n    if (activateKeyframeEndGame(keyframe)) return;\n\n    // advance to next keyframe, if exists and okay:\n    if (!keyframe.endCutscene) {\n      const { nextIds, dialogOptions } = keyframe;\n      const keyframes = this.keyframes;\n\n      const getKeyframeById = (keyframeId: string) => {\n        return keyframes.find(({ id }) => id === keyframeId);\n      };\n      const getKeyframeIndexById = (keyframeId: string) => {\n        return keyframes.findIndex(({ id }) => id === keyframeId);\n      };\n\n      const nextKeyframe = ((): Keyframe | null => {\n        if (nextIds === undefined) {\n          const index = getKeyframeIndexById(keyframe.id);\n          if (index === -1)\n            throw new Error(\n              `could not find index of current keyframe ${keyframe.id}`\n            );\n          return keyframes[index + 1];\n        }\n\n        const nextId = ((): string | null => {\n          if (nextIds.length === 1) return nextIds[0];\n\n          // Don't throw as the user might have adversarially omitted\n          // a dialog option index.\n          if (dialogOptionIndex === undefined) return null;\n\n          // Don't throw as the user might have adversarially specified\n          // an invalid dialog option index.\n          const nextId = nextIds[dialogOptionIndex];\n          if (nextId === undefined) return null;\n\n          return nextId;\n        })();\n\n        if (nextId === null) return null;\n\n        const nextKeyframe = getKeyframeById(nextId);\n        if (nextKeyframe === undefined)\n          throw new Error(`could not find next keyframe ${nextId}`);\n        return nextKeyframe;\n      })();\n\n      if (nextKeyframe !== null) {\n        this.controller.setKeyframe(nextKeyframe);\n        if (\n          !(nextKeyframe.blocking ?? false) &&\n          activateKeyframeEndGame(nextKeyframe)\n        )\n          return;\n        return;\n      }\n    }\n\n    // otherwise, just clear keyframe:\n    this.controller.clearKeyframe();\n  }\n\n  // validate and apply a step\n\n  /** Checks if a step is valid, and if so, return it resolved. */\n  resolve(step: Step, role: Role): StepResolved | null {\n    const { resolved, isValid } = this.inspector.resolveAndValidate(step, role);\n    if (!isValid) {\n      return null;\n    }\n    return resolved;\n  }\n\n  /** Execute a player's step. Does not validate. */\n  execute(step: StepResolved): void {\n    for (const spec of this.allSpecs) {\n      if (spec.overrideStep) {\n        if (spec.overrideStep(step, this.makeContext())) {\n          return;\n        }\n      }\n    }\n\n    switch (step.type) {\n      // Game steps\n      case StepType.SUMMON: {\n        this.applySummon(step);\n        break;\n      }\n      case StepType.ATTACK: {\n        this.applyAttack(step);\n        break;\n      }\n      case StepType.CREATE_GEMS: {\n        this.applyCreateGems(step);\n        break;\n      }\n      case StepType.MOVE: {\n        this.applyMove(step);\n        break;\n      }\n      case StepType.DRAW: {\n        this.applyDraw(step);\n        break;\n      }\n      case StepType.ACTIVATE_ABILITY: {\n        this.applyActivateAbility(step);\n        break;\n      }\n      case StepType.END_TURN: {\n        this.applyEndTurn(step);\n        break;\n      }\n      case StepType.ADVANCE_KEYFRAME: {\n        this.applyAdvanceKeyframe(step);\n        break;\n      }\n\n      // Non-game steps\n      case StepType.REMOVE: {\n        this.applyRemove(step);\n        break;\n      }\n      case StepType.CREATE_CHECKPOINT: {\n        this.needCheckpoint.push(step.slot);\n        break;\n      }\n      default: {\n        if (this.gameSpec.applyStep) {\n          this.gameSpec.applyStep(step, this.makeContext());\n        }\n      }\n    }\n  }\n\n  /**\n   * Resolve and execute a step.\n   * Returns whether resolve was successful.\n   * AIs should use aiTryStep.\n   */\n  tryStep(step: Step, role: Role): boolean {\n    // The room may be left open after the game has ended to support\n    // checkpoint restore. However, clients cannot restore checkpoints\n    // directly with steps, so any step made by clients after the game\n    // has ended is invalid.\n    // We need to allow system steps, though, since clients may be\n    // joined to the room after the game has ended, to allow them\n    // to receive updates upon checkpoint restore.\n    if (!this.inspector.isGameActive()) {\n      return false;\n    }\n\n    if (\n      this.inspector.isTurnPending(Player.P1) &&\n      (this.inspector.getDevKnobs().instasolve ?? false)\n    ) {\n      this.endGame(Player.P1, LoseReason.NORMAL, { [Player.P1]: true }, {});\n      return true;\n    }\n\n    const stepResolved = this.resolve(step, role);\n    if (stepResolved === null) {\n      return false;\n    }\n\n    let shouldSkipExecute = false;\n    for (const spec of this.allSpecs) {\n      if (spec.beforeStep) {\n        if (!spec.beforeStep(step, this.makeContext()))\n          shouldSkipExecute = true;\n      }\n    }\n\n    if (!shouldSkipExecute) this.execute(stepResolved);\n\n    for (const spec of this.allSpecs) {\n      if (spec.afterStep) {\n        spec.afterStep(stepResolved, this.makeContext());\n      }\n    }\n\n    const player = stepToPlayer(stepResolved);\n    if (\n      player !== null &&\n      // Don't track step numbers for the AI, since there are\n      // no race conditions or syncs dependent on it.\n      !(this.inspector.hasAI() && player === Player.P2)\n    ) {\n      this.controller.broadcastAndApply({\n        type: UpdateType.SET_STEP_NUMBER,\n        player,\n        stepNumber: this.gameState[player].stepNumber + 1,\n      });\n    }\n\n    // AI steps executed after a player's end turn step may cause\n    // the game to have already ended. Exit early if so to\n    // prevent running game completion actions twice.\n    if (!this.inspector.isGameActive()) return true;\n\n    const winner = this.getWinner();\n    if (winner) {\n      const solves: { [player in Player]?: boolean } = {};\n      const cardUnlocks: { [player in Player]?: string[] } = {};\n      for (const player of [Player.P1, Player.P2]) {\n        if (!this.getIsSolved(player, winner)) continue;\n        solves[player] = true;\n        const playerCardUnlocks = this.getCardUnlocks(player);\n        if (playerCardUnlocks.length > 0)\n          cardUnlocks[player] = playerCardUnlocks;\n      }\n      this.endGame(winner, LoseReason.NORMAL, solves, cardUnlocks);\n      return true;\n    }\n\n    if (\n      this.inspector.getDevKnobs().checkpointAfterEveryStep ||\n      (this.inspector.areCheckpointsAllowed() &&\n        stepResolved.type == StepType.END_TURN)\n    )\n      this.needCheckpoint.push(0); // autosave slot\n    if (this.needCheckpoint.length) {\n      this.checkpointHandler(this, this.needCheckpoint);\n      this.needCheckpoint.length = 0;\n    }\n\n    return true;\n  }\n\n  /** Get the player state visible to its opponent. */\n  getPublicPlayerState(player: Player, gameState: FullGameState): PlayerState {\n    const playerState = gameState[player];\n    const {\n      teamData,\n      stepNumber,\n      drawPile,\n      prevTurnsTime,\n      startTurnTime,\n      stats,\n    } = playerState;\n    return {\n      teamData,\n      stepNumber,\n      // hide cards in hand\n      hand: playerState.hand.map((handCard) => ({\n        ...handCard,\n        card: { ...handCard.card, name: undefined },\n      })),\n      gems: playerState.gems,\n      drawPileSize: drawPile.length,\n      prevTurnsTime,\n      startTurnTime,\n      stats,\n    };\n  }\n\n  /** Get the player state visible to the player itself. */\n  getClientPlayerState(player: Player, gameState: FullGameState): PlayerState {\n    const playerState = gameState[player];\n    const { drawPile } = playerState;\n    const { topCard } = this.inspector.getTopCardsInDrawPile(player);\n    return {\n      ...playerState,\n      drawPile: undefined,\n      discardPile: undefined,\n      drawPileSize: drawPile.length,\n      topCard: this.inspector.doesPlayerHaveMastery(\n        player,\n        SCRY_TOP_CARD_MASTERY_ID\n      )\n        ? topCard\n        : undefined,\n    };\n  }\n\n  // Returns the client view of the game state.\n  // Note that this is not a deep copy. Any use of an\n  // OVERRIDE_STATE update should not be followed by\n  // any more basic updates, since further updates would\n  // be reflected in the state object used here.\n  getClientGameStateForRole(role: Role, gameState: FullGameState): GameState {\n    switch (role) {\n      case Role.GOD: {\n        return {\n          ...gameState,\n        };\n      }\n      case Role.P1: {\n        const { engineOnly, ...clientGameState } = {\n          ...gameState,\n          [Player.P1]: this.getClientPlayerState(Player.P1, gameState),\n          [Player.P2]: this.getPublicPlayerState(Player.P2, gameState),\n        };\n        return clientGameState;\n      }\n      case Role.P2: {\n        const { engineOnly, ...clientGameState } = {\n          ...gameState,\n          [Player.P1]: this.getPublicPlayerState(Player.P1, gameState),\n          [Player.P2]: this.getClientPlayerState(Player.P2, gameState),\n        };\n        return clientGameState;\n      }\n    }\n  }\n\n  // Respond with override state. This is only used when a client\n  // first joins.\n  respOverrideState(roomMember: RoomMember): void {\n    this.controller.respOverrideState(\n      roomMember.id,\n      this.roomId,\n      this.getClientGameStateForRole(roomMember.role, this.gameState)\n    );\n  }\n\n  // This should only be used to save and load game states.\n  broadcastOverrideState(gameState: FullGameState): void {\n    this.controller.overrideState(\n      this.roomId,\n      gameState,\n      this.getClientGameStateForRole(Role.P1, gameState),\n      this.getClientGameStateForRole(Role.P2, gameState)\n    );\n  }\n\n  /**\n   * Accept a member into the room and send it an OVERRIDE_STATE\n   * update. No updates should be sent after this call, since\n   * the state set in OVERRIDE_STATE is a reference that would\n   * get updated before it is serialized. If we ever want to\n   * add updates after the OVERRIDE_STATE (such as to show fancy\n   * animations), we can make a deep copy of the state in controller\n   * (potentially expensive), but even then only one player would\n   * get to see it if multiple players join the room at once.\n   */\n  acceptMember(roomMember: RoomMember): void {\n    this.multicaster.enableMember(roomMember);\n    this.respOverrideState(roomMember);\n  }\n\n  applySystemStep(step: SystemStep): void {\n    switch (step.type) {\n      case StepType.SYSTEM_JOIN: {\n        const { teamId, roomMember, role } = step;\n\n        this.acceptMember(roomMember);\n\n        break;\n      }\n      case StepType.SYSTEM_RESIGN: {\n        if (!this.inspector.isGameActive()) break;\n\n        this.endGame(\n          this.inspector.getOpponentOf(step.player),\n          LoseReason.RESIGN,\n          {},\n          {}\n        );\n        break;\n      }\n      case StepType.SYSTEM_TIME_OUT: {\n        if (!this.inspector.isGameActive()) break;\n\n        this.endGame(\n          this.inspector.getOpponentOf(step.player),\n          LoseReason.TIME,\n          {},\n          {}\n        );\n        break;\n      }\n      default: {\n        throw new Error(\"Invalid system step type.\");\n      }\n    }\n  }\n\n  applyStep(sender: RoomMember, step: Step): void {\n    if (this.needCheckpoint.length)\n      throw new Error(\n        \"needCheckpoint should only be used during the processing of a step, and consumed when the step is done\"\n      );\n\n    if (this.tryStep(step, sender.role)) {\n      this.controller.respSuccess(sender.id);\n    } else {\n      this.controller.respInvalidStep(sender.id);\n    }\n  }\n\n  // Utility functions for AIs.\n\n  /**\n   * Resolve and execute a step as an AI.\n   * Returns whether resolve was successful.\n   */\n  aiTryStep(step: Step): boolean {\n    return this.tryStep(step, Role.GOD);\n  }\n}\n","import { Player } from \"engine/types/game-state\";\nimport {\n  UpdateType,\n  Update,\n  Role,\n  canRoleControlPlayer,\n} from \"engine/types/updates\";\nimport { RoomMember } from \"game-server/Room\";\n\n// Any room activity with state shared between the client and server\n// should never mutate its own state directly. Instead, it should\n// formulate mutations in the form of Updates, which are both\n// applied to the server's state, as well as broadcast to clients\n// to apply to their local state. This ensures that server and client\n// state always remains in sync.\n\nexport enum UpdateBroadcastSpecType {\n  /** Update targets the game server system, rather than clients. */\n  SYSTEM = \"system\",\n  /** Only send to a specific room member ID. */\n  ROOM_MEMBER_ID = \"room_member_id\",\n  /** Send to all room members. */\n  BROADCAST = \"broadcast\",\n  /** Send to members of a given role. */\n  ROLE = \"role\",\n  /** Send to roles satisfying a given filter predicate. */\n  ROLE_FILTER = \"role_filter\",\n}\n\n/** Spec for broadcasting an update to some subset of members in a room. */\nexport type UpdateBroadcastSpec = {\n  upd: Update;\n} & (\n  | {\n      type: UpdateBroadcastSpecType.SYSTEM;\n    }\n  | {\n      type: UpdateBroadcastSpecType.ROOM_MEMBER_ID;\n      roomMemberId: string;\n    }\n  | {\n      type: UpdateBroadcastSpecType.BROADCAST;\n    }\n  | {\n      type: UpdateBroadcastSpecType.ROLE;\n      role: Role;\n    }\n  | {\n      type: UpdateBroadcastSpecType.ROLE_FILTER;\n      pred: (role: Role) => boolean;\n    }\n);\n\n/**\n * All Updates should be sent through an UpdatesMulticaster. This\n * ensures that any Updates that get applied to server state also\n * gets broadcast to clients and applied to client state.\n *\n * While a room activity is in the process of applying a step (or\n * async task), UpdatesMulticaster accumulates all requested updates\n * in an update buffer. After processing the step, the room activity\n * uses readOutUpdates to grab the accumulated updates and clear the\n * buffer.\n */\nexport class UpdatesMulticaster {\n  /**\n   * Transient buffer to accumulate updates while in the process of\n   * applying a step. It should always be empty except while the\n   * room activity is in the process of applying a step.\n   */\n  updates: UpdateBroadcastSpec[];\n  /**\n   * Function to apply an update to the server's copy of the state.\n   */\n  applyUpdateFunc?: (upd: Update) => void;\n\n  constructor() {\n    this.updates = [];\n  }\n\n  setApplyUpdateFunc(applyUpdateFunc: (upd: Update) => void): void {\n    this.applyUpdateFunc = applyUpdateFunc;\n  }\n\n  applyUpdate(upd: Update): void {\n    if (this.applyUpdateFunc === undefined) {\n      throw new Error(\"apply update func not initialized\");\n    }\n    this.applyUpdateFunc(upd);\n  }\n\n  /** Emit a system update. */\n  notifySystem(upd: Update): void {\n    this.updates.push({\n      type: UpdateBroadcastSpecType.SYSTEM,\n      upd,\n    });\n  }\n\n  /**\n   * Send an update to only a specific room member. Such updates\n   * should not affect shared state.\n   */\n  send(roomMemberId: string, upd: Update): void {\n    this.updates.push({\n      type: UpdateBroadcastSpecType.ROOM_MEMBER_ID,\n      upd,\n      roomMemberId,\n    });\n  }\n\n  broadcastAndApply(upd: Update): void {\n    // Note that since the broadcast only happens after all updates from\n    // a step is accumulated, the order of these operations doesn't\n    // actually matter.\n    this.updates.push({\n      type: UpdateBroadcastSpecType.BROADCAST,\n      upd,\n    });\n    this.applyUpdate(upd);\n  }\n\n  /**\n   * Broadcast and apply an asymmetric update.\n   * The full update `upd` is broadcast to all roles with full\n   * information about `player`, while `updHidden` is broadcast\n   * to all other roles. If `updHidden` is null, then nothing\n   * is broadcast to other roles.\n   */\n  broadcastAndApplyAsymmetric(\n    player: Player,\n    upd: Update,\n    updHidden: Update | null\n  ): void {\n    this.applyUpdate(upd);\n    this.updates.push({\n      type: UpdateBroadcastSpecType.ROLE_FILTER,\n      upd: upd,\n      pred: (role) => canRoleControlPlayer(role, player),\n    });\n    if (updHidden != null) {\n      this.updates.push({\n        type: UpdateBroadcastSpecType.ROLE_FILTER,\n        upd: updHidden,\n        pred: (role) => !canRoleControlPlayer(role, player),\n      });\n    }\n  }\n\n  /**\n   * Broadcast and apply an update that is different for every role.\n   * The GOD role update is the one applied to the server state.\n   */\n  broadcastPerRoleAndApply(upds: { [role in Role]?: Update }): void {\n    const fullUpd = upds[Role.GOD];\n    if (fullUpd === undefined) throw new Error(\"full update not provided\");\n    this.applyUpdate(fullUpd);\n    for (const [role, upd] of Object.entries(upds)) {\n      this.updates.push({\n        type: UpdateBroadcastSpecType.ROLE,\n        upd,\n        role: role as Role,\n      });\n    }\n  }\n\n  readOutUpdates(): UpdateBroadcastSpec[] {\n    const updates = this.updates;\n    // reset\n    this.updates = [];\n\n    return updates;\n  }\n\n  enableMember(roomMember: RoomMember): void {\n    this.notifySystem({\n      type: UpdateType.SYSTEM_ENABLE_MEMBER,\n      roomMember,\n    });\n  }\n}\n","import { Player } from \"engine/types/game-state\";\n\nimport { GameServer } from \"game-server/GameServer\";\nimport { BackendRoom } from \"game-server/backend-interface/BackendInterface\";\nimport {\n  BackendSyncReqPacket,\n  SyncLoopController,\n  SyncTracker,\n} from \"game-server/backend-interface/backend-sync\";\n\nexport class MiscTeamStateSyncController {\n  server: GameServer;\n  /**\n   * Team IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop.\n   */\n  seenTeamIds: Set<string>;\n  syncLoopController: SyncLoopController;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.seenTeamIds = new Set();\n    this.syncLoopController = new SyncLoopController(async () => {\n      return await this.runSyncAsync();\n    });\n  }\n\n  /**\n   * Run one iteration of the sync. Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. we have seen all\n   * the teams).\n   */\n  private async runSyncAsync(): Promise<boolean> {\n    const syncPacket: { [teamId: string]: BackendSyncReqPacket } = {};\n    for (const teamController of this.server.teamControllers.values()) {\n      if (this.seenTeamIds.has(teamController.teamId)) continue;\n      if (\n        Object.keys(syncPacket).length >=\n        this.server.config.miscTeamStateTeamsSyncLimit\n      )\n        break;\n\n      const {\n        teamId,\n        slowSyncTracking: { syncController },\n      } = teamController;\n      const snapshot = syncController.startSync();\n      if (snapshot === null) continue;\n      this.seenTeamIds.add(teamId);\n      syncPacket[teamId] = snapshot;\n    }\n    if (Object.keys(syncPacket).length === 0) {\n      // Reset the seen team IDs to try them again on the next loop.\n      this.seenTeamIds.clear();\n      return true;\n    }\n\n    this.server.recordSlowSyncPacket();\n    const didSyncSucceed = await (async () => {\n      try {\n        await this.server.syncDataThrottledAsync({\n          teamState: syncPacket,\n        });\n        return true;\n      } catch (err) {\n        console.error(err);\n        return false;\n      }\n    })();\n\n    for (const [teamId, snapshot] of Object.entries(syncPacket)) {\n      const teamController = this.server.getTeamController(teamId);\n      const { syncController } = teamController.slowSyncTracking;\n      syncController.endSync(didSyncSucceed ? snapshot : null);\n    }\n    return false;\n  }\n}\n\nexport class DecksAndMasteryTreesSyncController {\n  server: GameServer;\n  /**\n   * Team IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop.\n   */\n  seenTeamIds: Set<string>;\n  syncLoopController: SyncLoopController;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.seenTeamIds = new Set();\n    this.syncLoopController = new SyncLoopController(async () => {\n      return await this.runSyncAsync();\n    });\n  }\n\n  /**\n   * Run one iteration of the sync. Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. we have seen all\n   * the teams).\n   */\n  private async runSyncAsync(): Promise<boolean> {\n    const syncPacket: { [teamId: string]: BackendSyncReqPacket } = {};\n    for (const teamController of this.server.teamControllers.values()) {\n      if (this.seenTeamIds.has(teamController.teamId)) continue;\n      if (\n        Object.keys(syncPacket).length >=\n        this.server.config.decksAndMasteryTreesTeamsSyncLimit\n      )\n        break;\n\n      const { teamId, deckControllers, masteryTreeController } = teamController;\n      const teamSyncPacket: BackendSyncReqPacket = {};\n      for (const [slot, deckController] of deckControllers.entries()) {\n        if (deckController === null) continue;\n        const {\n          deck,\n          slowSyncTracking: { tracker },\n        } = deckController;\n        if (tracker.snapshot()) {\n          teamSyncPacket.decks ??= {};\n          teamSyncPacket.decks[slot] = { teamId, slot, deck };\n        }\n      }\n\n      const {\n        masteryTree,\n        slowSyncTracking: { tracker: masteryTreeTracker },\n      } = masteryTreeController;\n      if (masteryTreeTracker.snapshot()) {\n        teamSyncPacket.masteryTree = masteryTree;\n      }\n\n      this.seenTeamIds.add(teamId);\n      if (Object.keys(teamSyncPacket).length === 0) continue;\n      syncPacket[teamId] = teamSyncPacket;\n    }\n    if (Object.keys(syncPacket).length === 0) {\n      // Reset the seen team IDs to try them again on the next loop.\n      this.seenTeamIds.clear();\n      return true;\n    }\n\n    this.server.recordSlowSyncPacket();\n    const didSyncSucceed = await (async () => {\n      try {\n        await this.server.syncDataThrottledAsync({\n          teamState: syncPacket,\n        });\n        return true;\n      } catch (err) {\n        console.error(err);\n        return false;\n      }\n    })();\n\n    for (const [teamId, snapshot] of Object.entries(syncPacket)) {\n      const teamController = this.server.getTeamController(teamId);\n      for (const { slot, deck } of Object.values(snapshot.decks ?? {})) {\n        const { tracker } =\n          teamController.getDeckController(slot).slowSyncTracking;\n        tracker.handleSyncResult(didSyncSucceed);\n      }\n      if (snapshot.masteryTree !== undefined) {\n        const { tracker } =\n          teamController.masteryTreeController.slowSyncTracking;\n        tracker.handleSyncResult(didSyncSucceed);\n      }\n    }\n    return false;\n  }\n}\n\nexport class CheckpointsSyncController {\n  server: GameServer;\n  /**\n   * Team IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop.\n   */\n  seenTeamIds: Set<string>;\n  syncLoopController: SyncLoopController;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.seenTeamIds = new Set();\n    this.syncLoopController = new SyncLoopController(async () => {\n      return await this.runSyncAsync();\n    });\n  }\n\n  /**\n   * Run one iteration of the sync. Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. we have seen all\n   * the teams).\n   */\n  private async runSyncAsync(): Promise<boolean> {\n    const syncPacket: { [teamId: string]: BackendSyncReqPacket } = {};\n    let numCheckpointsInPacket = 0;\n    for (const teamController of this.server.teamControllers.values()) {\n      if (this.seenTeamIds.has(teamController.teamId)) continue;\n      if (numCheckpointsInPacket >= this.server.config.checkpointsSyncLimit)\n        break;\n\n      const { teamId, battleControllers } = teamController;\n      const teamSyncPacket: BackendSyncReqPacket = {};\n      for (const [puzName, battleController] of battleControllers.entries()) {\n        const { checkpoints, checkpointsSyncTracker: tracker } =\n          battleController;\n        if (tracker.snapshot()) {\n          teamSyncPacket.checkpoints ??= {};\n          teamSyncPacket.checkpoints[puzName] = checkpoints;\n          numCheckpointsInPacket += Object.keys(checkpoints).length;\n        }\n      }\n\n      this.seenTeamIds.add(teamId);\n      if (Object.keys(teamSyncPacket).length === 0) continue;\n      syncPacket[teamId] = teamSyncPacket;\n    }\n    if (Object.keys(syncPacket).length === 0) {\n      // Reset the seen team IDs to try them again on the next loop.\n      this.seenTeamIds.clear();\n      return true;\n    }\n\n    this.server.recordSlowSyncPacket();\n    const didSyncSucceed = await (async () => {\n      try {\n        await this.server.syncDataThrottledAsync({\n          teamState: syncPacket,\n        });\n        return true;\n      } catch (err) {\n        console.error(err);\n        return false;\n      }\n    })();\n\n    for (const [teamId, snapshot] of Object.entries(syncPacket)) {\n      const teamController = this.server.getTeamController(teamId);\n      for (const [puzName, checkpoints] of Object.entries(\n        snapshot.checkpoints ?? {}\n      )) {\n        const { checkpointsSyncTracker: tracker } =\n          teamController.getBattleController(puzName);\n        tracker.handleSyncResult(didSyncSucceed);\n      }\n    }\n    return false;\n  }\n}\n\nexport class ActiveRoomsSyncController {\n  server: GameServer;\n  /**\n   * Room IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop.\n   */\n  seenRoomIds: Set<string>;\n  /**\n   * Team IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop.\n   */\n  seenTeamIds: Set<string>;\n  syncLoopController: SyncLoopController;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.seenRoomIds = new Set();\n    this.seenTeamIds = new Set();\n    this.syncLoopController = new SyncLoopController(async () => {\n      return await this.runSyncAsync();\n    });\n  }\n\n  /**\n   * Run one iteration of the sync. Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. we have seen all\n   * the rooms).\n   */\n  private async runSyncAsync(): Promise<boolean> {\n    const syncPacket: { [roomId: string]: BackendRoom } = {};\n    const syncTrackers: SyncTracker[] = [];\n    for (const teamController of this.server.teamControllers.values()) {\n      const { teamId, battleControllers } = teamController;\n      if (this.seenTeamIds.has(teamId)) continue;\n      if (\n        Object.keys(syncPacket).length >=\n        this.server.config.activeRoomsSyncLimit\n      )\n        break;\n\n      let isPartialTeamSync = false;\n      for (const [puzName, battleController] of battleControllers) {\n        if (\n          Object.keys(syncPacket).length >=\n          this.server.config.activeRoomsSyncLimit\n        ) {\n          isPartialTeamSync = true;\n          break;\n        }\n        const room = battleController.getActiveRoom();\n        if (room === null) continue;\n        // If the room is inactive, then it should already have\n        // been added to slow sync, so don't sync it here.\n        if (!battleController.isRoomActive()) continue;\n        // Only sync for the primary player, so that we don't get\n        // duplicate syncs. We are guaranteed that every game room\n        // has a real team playing as P1.\n        if (battleController.getPlayer() !== Player.P1) continue;\n        const { engine, roomId, hostPuzName, createTime, tracker } = room;\n        if (this.seenRoomIds.has(roomId)) continue;\n        if (tracker.snapshot()) {\n          const { puzName, gameState } = engine;\n          const p1TeamData = gameState[Player.P1].teamData;\n          const p2TeamData = gameState[Player.P2].teamData;\n          const p1TeamId = p1TeamData?.teamId;\n          const p2TeamId = p2TeamData?.teamId;\n          this.seenRoomIds.add(roomId);\n          syncPacket[roomId] = {\n            roomId,\n            puzName,\n            hostPuzName,\n            createTime,\n            p1TeamId,\n            p2TeamId,\n            p1Faction: p1TeamData?.faction ?? undefined,\n            p2Faction: p2TeamData?.faction ?? undefined,\n            savedRoom: { gameState },\n          };\n          syncTrackers.push(tracker);\n        }\n      }\n      if (!isPartialTeamSync) this.seenTeamIds.add(teamId);\n    }\n    if (Object.keys(syncPacket).length === 0) {\n      // Reset the seen room/team IDs to try them again on the next loop.\n      this.seenRoomIds.clear();\n      this.seenTeamIds.clear();\n      return true;\n    }\n\n    const { lockedRoomIds } =\n      this.server.gameRoomsController.slowSyncTracking\n        .completedRoomsSyncController;\n    for (const roomId of Object.keys(syncPacket)) {\n      lockedRoomIds.add(roomId);\n    }\n    this.server.recordSlowSyncPacket();\n    const didSyncSucceed = await (async () => {\n      try {\n        await this.server.syncDataThrottledAsync({\n          rooms: syncPacket,\n        });\n        return true;\n      } catch (err) {\n        console.error(err);\n        return false;\n      }\n    })();\n    for (const roomId of Object.keys(syncPacket)) {\n      lockedRoomIds.delete(roomId);\n    }\n\n    if (lockedRoomIds.size !== 0) {\n      // Not a critical failure, so don't throw.\n      // This might mean that there are multiple sync loops running\n      // at once, which should not be happening.\n      console.error(\n        \"locked rooms found in active rooms sync not owned by current sync loop\"\n      );\n    }\n\n    for (const tracker of syncTrackers) {\n      tracker.handleSyncResult(didSyncSucceed);\n    }\n    return false;\n  }\n}\n\nexport class CompletedRoomsSyncController {\n  server: GameServer;\n  roomsToSync: BackendRoom[];\n  /**\n   * Room IDs that should not be synced here as they are actively being\n   * synced in a previous slow sync.\n   */\n  lockedRoomIds: Set<string>;\n  /**\n   * Room IDs that have been seen in a previous iteration of the sync,\n   * in the current sync loop. This prevents the sync loop from\n   * repeatedly retrying errored rooms if it hits an error.\n   */\n  seenRoomIds: Set<string>;\n  syncLoopController: SyncLoopController;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.roomsToSync = [];\n    this.lockedRoomIds = new Set();\n    this.seenRoomIds = new Set();\n    this.syncLoopController = new SyncLoopController(async () => {\n      return await this.runSyncAsync();\n    });\n  }\n\n  addRoom(room: BackendRoom) {\n    this.roomsToSync.push(room);\n  }\n\n  /**\n   * Run one iteration of the sync. Should only be used by the sync loop.\n   * Returns if the sync is already complete (i.e. there are no more\n   * rooms in the buffers to sync).\n   */\n  private async runSyncAsync(): Promise<boolean> {\n    const syncPacket: { [roomId: string]: BackendRoom } = {};\n    for (const room of this.roomsToSync) {\n      const { roomId } = room;\n      if (\n        Object.keys(syncPacket).length >=\n        this.server.config.completedRoomsSyncLimit\n      )\n        break;\n      // Skip locked rooms. They can be synced next iteration if\n      // their other syncs has completed by then.\n      if (this.lockedRoomIds.has(roomId)) continue;\n      if (this.seenRoomIds.has(roomId)) continue;\n      this.seenRoomIds.add(roomId);\n      syncPacket[roomId] = room;\n    }\n    if (Object.keys(syncPacket).length === 0) {\n      // Reset the seen room IDs to try them again on the next loop.\n      this.seenRoomIds.clear();\n      return true;\n    }\n    this.server.recordSlowSyncPacket();\n    const didSyncSucceed = await (async () => {\n      try {\n        await this.server.syncDataThrottledAsync({\n          rooms: syncPacket,\n        });\n        return true;\n      } catch (err) {\n        console.error(err);\n        return false;\n      }\n    })();\n    if (!didSyncSucceed) return false;\n\n    this.roomsToSync = this.roomsToSync.filter(\n      (room) => syncPacket[room.roomId] === undefined\n    );\n    return false;\n  }\n}\n","import { DeckSelection } from \"engine/types/decks\";\nimport {\n  Player,\n  DevKnobs,\n  PlayerStateTeamData,\n  MutableGameState,\n} from \"engine/types/game-state\";\nimport { PUZ_NAME_PVP } from \"engine/puzzles/puzzle-data\";\nimport { GameSpec } from \"engine/types/game-specs\";\nimport {\n  EffectsDB,\n  CountersDB,\n  getEffectsDB,\n  getCountersDB,\n} from \"engine/cards/card-effects\";\nimport { getPrimaryPuzName } from \"engine/puzzles/puzzle-data\";\nimport { FACTIONS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { PUZ_NAME_COMMON } from \"engine/game-specs/common-shared\";\nimport { getGameSpec } from \"engine/all-game-specs\";\nimport { StaticInspector } from \"engine/Inspector\";\nimport { Engine } from \"engine/Engine\";\nimport { UpdatesMulticaster } from \"game-server/UpdatesMulticaster\";\nimport { GameServer } from \"game-server/GameServer\";\nimport {\n  ActiveRoomsSyncController,\n  CompletedRoomsSyncController,\n} from \"game-server/sync-controllers\";\nimport {\n  TeamCard,\n  makeBattleSolveAnswerSubmission,\n} from \"game-server/backend-interface/BackendInterface\";\nimport {\n  SyncTracker,\n  SyncObjectType,\n} from \"game-server/backend-interface/backend-sync\";\nimport { GameRoom } from \"game-server/Room\";\nimport { DirtyStateType, ServerDirtyStateUpdate } from \"game-server/monitoring\";\n\nexport class GameRoomsController {\n  server: GameServer;\n\n  /**\n   * Map from roomId to room objects, and a refcount to ensure that\n   * the room gets cleared once it is no longer referenced by any\n   * active games.\n   */\n  rooms: Map<\n    string,\n    {\n      room: GameRoom;\n      refcount: number;\n    }\n  >;\n  /** Map from teamId and puzName to the active roomId. */\n  activeRoomIds: Map<string, Map<string, string>>;\n\n  slowSyncTracking: {\n    activeRoomsSyncController: ActiveRoomsSyncController;\n    completedRoomsSyncController: CompletedRoomsSyncController;\n  };\n\n  puzDataCache: {\n    [puzName: string]: {\n      allSpecs: ReadonlyArray<GameSpec>;\n      effectsDB: EffectsDB;\n      countersDB: CountersDB;\n      inspector: StaticInspector;\n    };\n  };\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.rooms = new Map();\n    this.activeRoomIds = new Map();\n    this.slowSyncTracking = {\n      activeRoomsSyncController: new ActiveRoomsSyncController(this.server),\n      completedRoomsSyncController: new CompletedRoomsSyncController(\n        this.server\n      ),\n    };\n    this.puzDataCache = {};\n  }\n\n  getPuzData(puzName: string) {\n    const existingPuzData = this.puzDataCache[puzName];\n    if (existingPuzData !== undefined) return existingPuzData;\n\n    const allSpecs = [PUZ_NAME_COMMON, ...puzName.split(\",\")].map((specName) =>\n      getGameSpec(specName)\n    );\n    const effectsDB = getEffectsDB(allSpecs, this.server.cardsDB);\n    const countersDB = getCountersDB(allSpecs, effectsDB);\n    const inspector = new StaticInspector(\n      allSpecs,\n      this.server.cardsDB,\n      effectsDB\n    );\n\n    const puzData = {\n      allSpecs,\n      effectsDB,\n      countersDB,\n      inspector,\n    };\n    this.puzDataCache[puzName] = puzData;\n    return puzData;\n  }\n\n  getInspector(puzName: string): StaticInspector {\n    return this.getPuzData(puzName).inspector;\n  }\n\n  createRoomWithTeamData(\n    puzName: string,\n    hostPuzName: string,\n    teamData: { [player in Player]?: PlayerStateTeamData },\n    deckSelections: { [player in Player]?: DeckSelection },\n    devKnobs?: DevKnobs,\n    gameState?: MutableGameState,\n    roomId?: string\n  ): GameRoom {\n    roomId ??= this.server.genGameRoomId();\n    const multicaster = new UpdatesMulticaster();\n    const { allSpecs, effectsDB, countersDB } = this.getPuzData(puzName);\n    const engine = new Engine(\n      multicaster,\n      puzName,\n      roomId,\n      allSpecs,\n      (player) => [],\n      this.server.cardsDB,\n      effectsDB,\n      countersDB,\n      this.server.keyframes,\n      teamData,\n      deckSelections,\n      (engine, slots) => {\n        // this should only be one team, since we are in an AI battle\n        for (const { teamId } of Object.values(teamData))\n          this.server\n            .getBattleController(teamId, hostPuzName)\n            .makeCheckpoint(engine, slots);\n      },\n      (engine, keyframeId, dialogOptionIndex) => {\n        for (const { teamId } of Object.values(teamData)) {\n          // HACK: We now depend on the cutscene choice sync to render\n          // the victory page, so this needs to be blocking. We don't\n          // need to block right here, though, since we will block\n          // later anyway to sync the final cutscene solve.\n          // No need to trigger the sync loop either, since we already\n          // trigger the fast sync loop periodically (in addition to\n          // immediately on normal fast syncs).\n          this.server.getTeamController(teamId).mergeFastSyncPacket({\n            cutsceneChoices: [\n              {\n                keyframeId,\n                dialogOptionIndex,\n              },\n            ],\n          });\n        }\n      },\n      devKnobs,\n      gameState\n    );\n    if (gameState === undefined) engine.init();\n    const room: GameRoom = {\n      engine,\n      roomId,\n      hostPuzName,\n      createTime: new Date().getTime(),\n      members: new Map(),\n      multicaster,\n      tracker: new SyncTracker(\n        this.server.config,\n        SyncObjectType.ROOM,\n        (dirtyState) => {\n          const dirtyStateUpd: ServerDirtyStateUpdate = { teams: {} };\n          // Only merge the dirty state update if the room is still\n          // active. Otherwise, the dirty state should be marked as\n          // synced and reponsibility for syncing the room state should\n          // transfer to the completed rooms sync path.\n          for (const { teamId } of Object.values(teamData)) {\n            const activeRoom = this.getActiveRoom(teamId, hostPuzName);\n            if (activeRoom === null || activeRoom.roomId !== roomId) continue;\n            const battleController = this.server.getBattleController(\n              teamId,\n              hostPuzName\n            );\n            if (!battleController.isRoomActive()) continue;\n            dirtyStateUpd.teams[teamId] = {\n              rooms: { [hostPuzName]: dirtyState },\n            };\n          }\n          this.server.dirtyStateTracker.update(dirtyStateUpd);\n        }\n      ),\n    };\n    this.server.prepareRoom(room);\n    this.rooms.set(roomId, {\n      room,\n      refcount: 0,\n    });\n    return room;\n  }\n\n  createRoomFromGameState(\n    puzName: string,\n    hostPuzName: string,\n    gameState: MutableGameState,\n    roomId?: string\n  ): GameRoom {\n    const teamData = Object.fromEntries(\n      [Player.P1, Player.P2].flatMap((player) => {\n        const playerTeamData = gameState[player].teamData;\n        if (playerTeamData === undefined) return [];\n        return [[player, playerTeamData]];\n      })\n    );\n\n    return this.server.gameRoomsController.createRoomWithTeamData(\n      puzName,\n      hostPuzName,\n      teamData,\n      gameState.engineOnly.deckSelections,\n      gameState.devKnobs,\n      gameState,\n      roomId\n    );\n  }\n\n  createRoom(\n    puzName: string,\n    hostPuzName: string,\n    teamIds: { [player in Player]?: string },\n    deckSelections: { [player in Player]?: DeckSelection },\n    devKnobs?: DevKnobs\n  ): GameRoom {\n    const teamData = Object.fromEntries(\n      Object.entries(teamIds).map(([player, teamId]) => {\n        const teamController = this.server.getTeamController(teamId);\n        return [player, teamController.makeTeamDataForBattle(puzName)];\n      })\n    );\n    return this.createRoomWithTeamData(\n      puzName,\n      hostPuzName,\n      teamData,\n      deckSelections,\n      devKnobs\n    );\n  }\n\n  getActiveRoom(teamId: string, puzName: string): GameRoom | null {\n    const teamRooms = this.activeRoomIds.get(teamId);\n    if (teamRooms === undefined) return null;\n    const roomId = teamRooms.get(puzName);\n    if (roomId === undefined) return null;\n    const roomTracker = this.rooms.get(roomId);\n    if (roomTracker === undefined)\n      throw new Error(\"expect active room to be available\");\n    return roomTracker.room;\n  }\n\n  setActiveRoom(teamId: string, puzName: string, roomId: string) {\n    const roomTracker = this.rooms.get(roomId);\n    if (roomTracker === undefined)\n      throw new Error(\"expect room to exist if setting active\");\n    roomTracker.refcount++;\n    const teamRooms = (() => {\n      const existingTeamRooms = this.activeRoomIds.get(teamId);\n      if (existingTeamRooms !== undefined) return existingTeamRooms;\n      const newTeamRooms = new Map();\n      this.activeRoomIds.set(teamId, newTeamRooms);\n      return newTeamRooms;\n    })();\n    const prevRoomId = teamRooms.get(puzName);\n    if (prevRoomId !== undefined) {\n      const prevRoomTracker = this.rooms.get(prevRoomId);\n      if (prevRoomTracker === undefined)\n        throw new Error(\"expect prev room to exist if unsetting\");\n      prevRoomTracker.refcount--;\n      if (prevRoomTracker.refcount <= 0) this.rooms.delete(prevRoomId);\n    }\n    teamRooms.set(puzName, roomId);\n  }\n\n  getNumRoomMembers(teamId: string, puzName: string) {\n    const room = this.getActiveRoom(teamId, puzName);\n    if (room === null) return 0;\n    return [...room.members.values()].filter(\n      (otherMember) => otherMember.conn.teamId === teamId\n    ).length;\n  }\n\n  handleRoomMembersUpdate(teamId: string, puzName: string) {\n    this.server.bigBoardStateTracker.updateTeam(teamId, {\n      unlocks: {\n        [puzName]: {\n          numMembers: this.getNumRoomMembers(teamId, puzName),\n        },\n      },\n    });\n  }\n\n  async handleRoomCompleteAsync(\n    room: GameRoom,\n    solvedTeamIds: string[],\n    cardUnlocks: TeamCard[]\n  ): Promise<void> {\n    const { roomId, hostPuzName, engine, createTime } = room;\n    const { inspector } = engine;\n    const { puzName: fullPuzName, gameState } = room.engine;\n    const puzName = getPrimaryPuzName(fullPuzName);\n    const isPvP = puzName === PUZ_NAME_PVP;\n    const timeNow = new Date().getTime();\n\n    // Deduplicate the teamIds so that we only report solves once.\n    const p1TeamData = gameState[Player.P1].teamData;\n    const p2TeamData = gameState[Player.P2].teamData;\n    const p1TeamId = p1TeamData?.teamId;\n    const p2TeamId = p2TeamData?.teamId;\n    const teamIds = new Set([\n      ...(p1TeamId === undefined ? [] : [p1TeamId]),\n      ...(p2TeamId === undefined ? [] : [p2TeamId]),\n    ]);\n    const teamControllers = Array.from(teamIds, (teamId) =>\n      this.server.getTeamController(teamId)\n    );\n    /**\n     * Just treat it as solved if any player solved, since it sounds like\n     * we're only ever going to have P1 solving anyway.\n     */\n    const isSolved = solvedTeamIds.length > 0;\n    const totalTime = inspector.getSpeedrunTime();\n    const speedrunPlayers = isSolved ? [Player.P1] : [];\n\n    const playerScores: { [player in Player]?: number } = {};\n    for (const player of [Player.P1, Player.P2]) {\n      let factionScore = inspector.calcFactionScore(player, isPvP, isSolved);\n      if (!isPvP) {\n        if (factionScore > gameState.engineOnly.gainedScore) {\n          factionScore -= gameState.engineOnly.gainedScore;\n          gameState.engineOnly.gainedScore += factionScore;\n        } else factionScore = 0;\n      }\n      if (factionScore !== 0) playerScores[player] = factionScore;\n    }\n\n    const { winner, loseReason } = gameState;\n    if (winner === undefined || loseReason === undefined)\n      throw new Error(\"winner/loseReason should be defined on game end\");\n\n    const roomToSync = {\n      roomId,\n      puzName,\n      hostPuzName,\n      createTime,\n      p1TeamId,\n      p2TeamId,\n      p1Faction: p1TeamData?.faction ?? undefined,\n      p2Faction: p2TeamData?.faction ?? undefined,\n      savedRoom: { gameState },\n      gameEndInfo: {\n        totalTime,\n        isSolved,\n        winner,\n        loseReason,\n        p1FactionScoreContribution: playerScores[Player.P1],\n        p2FactionScoreContribution: playerScores[Player.P2],\n      },\n    };\n\n    /**\n     * Detect immediate-retries (\"mulligans\") in AI rooms and don't\n     * bother adding those rooms to sync.\n     */\n    if (room.tracker.revNumber > 0 || !inspector.hasAI()) {\n      // Treat the room as synced, since we've transferred responsibility\n      // for syncing it to the completed rooms sync controller.\n      const teamDirtyStateUpd = {\n        rooms: {\n          [hostPuzName]: {\n            type: DirtyStateType.SYNCED,\n            lastSyncTime: Date.now(),\n          },\n        },\n      };\n      this.server.dirtyStateTracker.update({\n        teams: Object.fromEntries(\n          [...teamIds].map((teamId) => [teamId, teamDirtyStateUpd])\n        ),\n      });\n\n      const { completedRoomsSyncController } = this.slowSyncTracking;\n      this.slowSyncTracking.completedRoomsSyncController.addRoom(roomToSync);\n    }\n\n    await Promise.all(\n      Array.from(teamControllers, (teamController) =>\n        teamController.handleTeamUpdatesAsync({\n          answerSubmissionsToAdd: solvedTeamIds\n            .filter((teamId) => teamId === teamController.teamId)\n            .map((teamId) =>\n              makeBattleSolveAnswerSubmission(teamId, puzName, timeNow)\n            ),\n          cardUnlocksToAdd: cardUnlocks\n            .filter(({ teamId }) => teamId === teamController.teamId)\n            .map(({ teamId, cardName }) => ({\n              teamId,\n              puzName,\n              cardName,\n              timestamp: timeNow,\n            })),\n        })\n      )\n    );\n\n    for (const player of speedrunPlayers) {\n      const { teamData } = gameState[player];\n      if (teamData === undefined)\n        throw new Error(\"expect speedrunning players to belong to a team\");\n      const { teamId, enabledMasteries } = teamData;\n      this.server\n        .getTeamController(teamId)\n        .handleNewSpeedrunTime(puzName, totalTime);\n    }\n\n    for (const [kPlayer, score] of Object.entries(playerScores)) {\n      const player = kPlayer as Player;\n      const { teamData } = gameState[player];\n      if (teamData === undefined)\n        throw new Error(\"expect scored players to belong to teams\");\n      const { teamId, faction, enabledMasteries } = teamData;\n      const teamController = this.server.getTeamController(teamId);\n      if (!(enabledMasteries[FACTIONS_MASTERY_ID] ?? false)) continue;\n      if (faction === null) continue;\n      teamController.handleChangeFactionScoreContributions({\n        [faction]: score,\n      });\n    }\n\n    for (const teamController of teamControllers) {\n      teamController\n        .getBattleController(hostPuzName)\n        .handleRoomComplete(roomId, gameState.engineOnly.gainedScore);\n    }\n  }\n\n  async triggerSlowSyncAsync(): Promise<void> {\n    await this.slowSyncTracking.completedRoomsSyncController.syncLoopController.triggerLoopAsync();\n    await this.slowSyncTracking.activeRoomsSyncController.syncLoopController.triggerLoopAsync();\n  }\n}\n","import { Faction, makeInitFactionScores } from \"engine/types/factions\";\nimport { SOLVE_COUNTS_MASTERY_ID } from \"engine/puzzles/mastery-data\";\nimport { GameServer } from \"game-server/GameServer\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdateType,\n  GlobalStatePuzzleStats,\n  ClientSpeedrunTimeRecord,\n  SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH,\n  RankedLeaderboard,\n  TeamNameDisplayDataUpdate,\n} from \"game-server/global-updates\";\nimport {\n  TeamSummaryUpdate,\n  teamSummaryUpdateToTeamNameDisplayUpdate,\n} from \"game-server/monitoring\";\n\nexport type SpeedrunTimeRecord = {\n  teamId: string;\n  speedrunTime: number;\n};\n\nexport type SolveTimeRecord = {\n  teamId: string;\n  solveTime: number;\n};\n\nexport class StatsController {\n  server: GameServer;\n\n  /** Map from battleGroupName to the number of teams that unlocked it. */\n  unlockCounts: Map<string, number>;\n  /** Map from battleGroupName to the number of teams that solved it. */\n  solveCounts: Map<string, number>;\n  /** Total faction scores. */\n  factionScores: { [faction in Faction]: number };\n  factionHistory: { [key: string]: number };\n  factionHistoryUnsynced: { [key: string]: number };\n\n  speedrunLeaderboards: {\n    [puzName: string]: RankedLeaderboard<SpeedrunTimeRecord>;\n  };\n  solveTimeLeaderboards: {\n    [puzName: string]: RankedLeaderboard<SolveTimeRecord>;\n  };\n\n  constructor(server: GameServer) {\n    this.server = server;\n\n    this.unlockCounts = new Map(\n      Array.from(this.server.puzzlesDB.battleGroups.keys(), (puzName) => [\n        puzName,\n        0,\n      ])\n    );\n    this.solveCounts = new Map(\n      Array.from(this.server.puzzlesDB.battleGroups.keys(), (puzName) => [\n        puzName,\n        0,\n      ])\n    );\n    this.factionScores = makeInitFactionScores();\n    this.factionHistory = {};\n    this.factionHistoryUnsynced = {};\n\n    const { puzzles } = this.server.puzzlesDB;\n    // Include the dummy battles, in case we want to keep track\n    // of overall battle times too.\n    this.speedrunLeaderboards = {};\n    this.solveTimeLeaderboards = {};\n  }\n\n  getSpeedrunLeaderboard(\n    puzName: string\n  ): RankedLeaderboard<SpeedrunTimeRecord> {\n    this.speedrunLeaderboards[puzName] ??= new RankedLeaderboard(\n      (record) => record.teamId,\n      (record1, record2) => record1.speedrunTime - record2.speedrunTime\n    );\n    return this.speedrunLeaderboards[puzName];\n  }\n\n  getSolveTimeLeaderboard(puzName: string): RankedLeaderboard<SolveTimeRecord> {\n    this.solveTimeLeaderboards[puzName] ??= new RankedLeaderboard(\n      (record) => record.teamId,\n      (record1, record2) => record1.solveTime - record2.solveTime\n    );\n    return this.solveTimeLeaderboards[puzName];\n  }\n\n  getPuzzleStats(battleGroupName: string): GlobalStatePuzzleStats {\n    const unlockCount = this.unlockCounts.get(battleGroupName);\n    const solveCount = this.solveCounts.get(battleGroupName);\n    if (unlockCount === undefined || solveCount === undefined)\n      throw new Error(\"expect stats to be defined\");\n    return { unlockCount, solveCount };\n  }\n\n  getSpeedrunRank(teamId: string, puzName: string): number | null {\n    const speedrunTime = this.server\n      .getTeamController(teamId)\n      .speedrunTimes.get(puzName);\n    if (speedrunTime === undefined) return null;\n    const { sortedList } = this.getSpeedrunLeaderboard(puzName);\n    const rank = sortedList.findIndex((record) => record.teamId === teamId);\n    if (rank === undefined) {\n      console.error(\"expect team to exist in leaderboard\");\n      // This isn't a critical error; return gracefully.\n      return null;\n    }\n    return rank;\n  }\n\n  getSpeedrunLeaderboardSummary(puzName: string): ClientSpeedrunTimeRecord[] {\n    const { sortedList } = this.getSpeedrunLeaderboard(puzName);\n    return sortedList\n      .slice(0, SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH)\n      .map(({ teamId, speedrunTime }) => ({\n        teamData: this.server.getTeamController(teamId).getTeamSummaryState(),\n        speedrunTime,\n      }));\n  }\n\n  /**\n   * Update and broadcast stats/leaderboard updates when a team's\n   * stats gets updated. This should only be called after the\n   * updates have been merged into TeamController state.\n   */\n  handleTeamUpdates(\n    teamId: string,\n    opts: {\n      factionScoreChanges?: { [faction in Faction]?: number };\n      // This flag lets us distinguish between updates (which should create new\n      // history entries) and initialization (which should not).\n      updateFactionHistory?: boolean;\n      solvesToDelete?: string[];\n      unlocksToDelete?: string[];\n      solvesToAdd?: string[];\n      unlocksToAdd?: string[];\n      solveTimes?: { [puzName: string]: number | null };\n      speedrunTimes?: { [puzName: string]: number | null };\n      /** If set, force the updates even if the team is hidden. */\n      forceIfHidden?: boolean;\n    }\n  ): void {\n    const {\n      factionScoreChanges,\n      updateFactionHistory,\n      solvesToDelete,\n      unlocksToDelete,\n      solvesToAdd,\n      unlocksToAdd,\n      solveTimes,\n      speedrunTimes,\n      forceIfHidden = false,\n    } = opts;\n\n    const isHidden = this.server.getTeamController(teamId).isHidden;\n    // By default, don't update any stats if the team is hidden.\n    if (!forceIfHidden && isHidden) return;\n\n    if (factionScoreChanges !== undefined) {\n      const timeBucket = Math.floor(Date.now() / 1000 / 60 / 60);\n      const factionHistoryToBroadcast: { [key: string]: number } = {};\n      for (const [kFaction, diffFactionScore] of Object.entries(\n        factionScoreChanges ?? {}\n      )) {\n        const faction = kFaction as Faction;\n        this.factionScores[faction] += diffFactionScore;\n        if (updateFactionHistory && diffFactionScore) {\n          const key = `${kFaction}.${timeBucket}`;\n          const value = (this.factionHistory[key] ?? 0) + diffFactionScore;\n          this.factionHistory[key] = value;\n          this.factionHistoryUnsynced[key] = value;\n          factionHistoryToBroadcast[key] = value;\n        }\n      }\n      const factionScoresToUpdate = Object.fromEntries(\n        Object.entries(this.factionScores).filter(\n          ([kFaction, score]) =>\n            factionScoreChanges[kFaction as Faction] ?? 0 !== 0\n        )\n      );\n      for (const teamController of this.server.teamControllers.values()) {\n        teamController.broadcastTeamGlobalUpdate({\n          type: GlobalUpdateType.TEAM_UPDATE_STATE,\n          factionScores: factionScoresToUpdate,\n        });\n      }\n      if (Object.keys(factionHistoryToBroadcast).length) {\n        this.server.broadcastGlobalUpdate(\n          { type: GlobalUpdatesScopeType.FACTION_HISTORY },\n          {\n            type: GlobalUpdateType.FACTION_HISTORY_UPDATE_STATE,\n            factionHistory: factionHistoryToBroadcast,\n          }\n        );\n      }\n    }\n\n    // Only update the stats of the puzzles we're tracking.\n    // For example, some puzNames may be sub-battles, and we don't\n    // track stats for those.\n    for (const puzName of solvesToDelete ?? []) {\n      const solveCount = this.solveCounts.get(puzName);\n      if (solveCount === undefined) continue;\n      this.solveCounts.set(puzName, solveCount - 1);\n    }\n    for (const puzName of solvesToAdd ?? []) {\n      const solveCount = this.solveCounts.get(puzName);\n      if (solveCount === undefined) continue;\n      this.solveCounts.set(puzName, solveCount + 1);\n    }\n    for (const puzName of unlocksToDelete ?? []) {\n      const unlockCount = this.unlockCounts.get(puzName);\n      if (unlockCount === undefined) continue;\n      this.unlockCounts.set(puzName, unlockCount - 1);\n    }\n    for (const puzName of unlocksToAdd ?? []) {\n      const unlockCount = this.unlockCounts.get(puzName);\n      if (unlockCount === undefined) continue;\n      this.unlockCounts.set(puzName, unlockCount + 1);\n    }\n\n    const updatedPuzzles = new Set([\n      ...(unlocksToAdd ?? []),\n      ...(unlocksToDelete ?? []),\n      ...(solvesToAdd ?? []),\n      ...(solvesToDelete ?? []),\n    ]);\n    const stats = Object.fromEntries(\n      [...updatedPuzzles].flatMap((puzName) =>\n        this.server.puzzlesDB.battleGroups.has(puzName)\n          ? [[puzName, this.getPuzzleStats(puzName)]]\n          : []\n      )\n    );\n    for (const teamController of this.server.teamControllers.values()) {\n      if (\n        !teamController.masteryTreeController\n          .getEnabledMasteries()\n          .has(SOLVE_COUNTS_MASTERY_ID)\n      )\n        continue;\n      teamController.broadcastTeamGlobalUpdate({\n        type: GlobalUpdateType.TEAM_UPDATE_PUZZLE_STATS,\n        stats: Object.fromEntries(\n          Object.entries(stats).filter(([battleGroupName, puzStats]) =>\n            teamController.unlockTimes.has(battleGroupName)\n          )\n        ),\n      });\n    }\n\n    for (const [puzName, solveTime] of Object.entries(solveTimes ?? {})) {\n      const leaderboard = this.getSolveTimeLeaderboard(puzName);\n      if (solveTime === null) {\n        leaderboard.remove(teamId);\n        continue;\n      }\n      this.addSolveTimeRecord(teamId, puzName, solveTime);\n    }\n\n    for (const [puzName, speedrunTime] of Object.entries(speedrunTimes ?? {})) {\n      if (speedrunTime === null) this.removeSpeedrunRecord(teamId, puzName);\n      else this.addSpeedrunRecord(teamId, puzName, speedrunTime);\n    }\n  }\n\n  startSync(): { [key: string]: number } {\n    return { ...this.factionHistoryUnsynced };\n  }\n\n  endSync(snapshot: { [key: string]: number }): void {\n    for (const [key, value] of Object.entries(snapshot))\n      if (this.factionHistoryUnsynced[key] == value)\n        delete this.factionHistoryUnsynced[key];\n  }\n\n  private addSolveTimeRecord(\n    teamId: string,\n    puzName: string,\n    solveTime: number\n  ) {\n    const leaderboard = this.getSolveTimeLeaderboard(puzName);\n    leaderboard.insert({ teamId, solveTime }, false);\n  }\n\n  private addSpeedrunRecord(\n    teamId: string,\n    puzName: string,\n    speedrunTime: number\n  ) {\n    const leaderboard = this.getSpeedrunLeaderboard(puzName);\n    const { oldIndex, newIndex } = leaderboard.insert(\n      { teamId, speedrunTime },\n      true\n    );\n\n    this.broadcastSpeedrunLeaderboardUpdates(\n      puzName,\n      newIndex,\n      oldIndex === null ? leaderboard.sortedList.length : oldIndex + 1,\n      {\n        speedrunRecordsToAdd: [\n          {\n            teamData: this.server\n              .getTeamController(teamId)\n              .getTeamSummaryState(),\n            speedrunTime,\n          },\n        ],\n      }\n    );\n  }\n\n  private removeSpeedrunRecord(teamId: string, puzName: string): void {\n    const leaderboard = this.getSpeedrunLeaderboard(puzName);\n    const removeRes = leaderboard.remove(teamId);\n    if (removeRes === null) return;\n\n    const { oldIndex } = removeRes;\n    const newLast =\n      leaderboard.sortedList[SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH - 1];\n    this.broadcastSpeedrunLeaderboardUpdates(\n      puzName,\n      oldIndex,\n      leaderboard.sortedList.length,\n      {\n        speedrunRecordsToAdd:\n          newLast === undefined\n            ? undefined\n            : [\n                {\n                  teamData: this.server\n                    .getTeamController(newLast.teamId)\n                    .getTeamSummaryState(),\n                  speedrunTime: newLast.speedrunTime,\n                },\n              ],\n        speedrunRecordsToRemove: [teamId],\n      }\n    );\n  }\n\n  /**\n   * Hide the team.\n   * Warning: Not idempotent. Only call if the team was previously\n   * not hidden.\n   */\n  hideTeam(teamId: string): void {\n    const teamController = this.server.getTeamController(teamId);\n    this.handleTeamUpdates(teamId, {\n      factionScoreChanges: Object.fromEntries(\n        Object.entries(teamController.factionScoreContributions).map(\n          ([faction, contrib]) => [faction, -contrib]\n        )\n      ),\n      updateFactionHistory: true,\n      solvesToDelete: [...teamController.solveTimes.keys()],\n      unlocksToDelete: [...teamController.unlockTimes.keys()],\n      solveTimes: Object.fromEntries(\n        Array.from(teamController.solveTimes.keys(), (puzName) => [\n          puzName,\n          null,\n        ])\n      ),\n      speedrunTimes: Object.fromEntries(\n        Array.from(teamController.speedrunTimes.keys(), (puzName) => [\n          puzName,\n          null,\n        ])\n      ),\n      forceIfHidden: true,\n    });\n  }\n\n  /**\n   * Unhide the team.\n   * Warning: Not idempotent. Only call if the team was previously hidden.\n   */\n  unhideTeam(teamId: string): void {\n    const teamController = this.server.getTeamController(teamId);\n    this.handleTeamUpdates(teamId, {\n      factionScoreChanges: teamController.factionScoreContributions,\n      updateFactionHistory: true,\n      solvesToAdd: [...teamController.solveTimes.keys()],\n      unlocksToAdd: [...teamController.unlockTimes.keys()],\n      solveTimes: Object.fromEntries(teamController.solveTimes.entries()),\n      speedrunTimes: Object.fromEntries(teamController.speedrunTimes.entries()),\n      forceIfHidden: true,\n    });\n  }\n\n  /**\n   * Broadcast speedrun leaderboard updates, where the changes impact\n   * all ranks in the range [rankStart, rankEnd). The actual updates\n   * may be broadcast to more teams than the given range, if the affected\n   * range includes the summary presented to all teams.\n   */\n  private broadcastSpeedrunLeaderboardUpdates(\n    puzName: string,\n    rankStart: number,\n    rankEnd: number,\n    upds: {\n      speedrunRecordsToAdd?: ClientSpeedrunTimeRecord[];\n      speedrunRecordsToRemove?: string[];\n    }\n  ): void {\n    const leaderboard = this.getSpeedrunLeaderboard(puzName);\n    const needUpdateTopRankings =\n      rankStart < SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH;\n    const updateStart = needUpdateTopRankings ? 0 : rankStart;\n    const updateEnd = needUpdateTopRankings\n      ? leaderboard.sortedList.length\n      : Math.min(rankEnd, leaderboard.sortedList.length);\n    for (\n      let updateIndex = updateStart;\n      updateIndex < updateEnd;\n      updateIndex++\n    ) {\n      const { teamId: updateTeamId } = leaderboard.sortedList[updateIndex];\n      const teamController = this.server.getTeamController(updateTeamId);\n\n      teamController\n        .getBattleController(puzName)\n        .broadcastTeamSpeedrunLeaderboardSummaryGlobalUpdate({\n          type: GlobalUpdateType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY_UPDATE_STATE,\n          speedrunRank: updateIndex,\n          // No need to send the updates besides the rank if it\n          // doesn't affect top rankings.\n          ...(needUpdateTopRankings ? upds : undefined),\n        });\n    }\n  }\n\n  handleTeamSummaryUpdates(upds: {\n    [teamId: string]: TeamSummaryUpdate;\n  }): void {\n    for (const [puzName, leaderboard] of Object.entries(\n      this.speedrunLeaderboards\n    )) {\n      const teamNameDisplayUpds: {\n        [teamId: string]: TeamNameDisplayDataUpdate;\n      } = {};\n      for (const { teamId } of leaderboard.sortedList.slice(\n        0,\n        SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH\n      )) {\n        const teamUpd = upds[teamId];\n        if (teamUpd === undefined) continue;\n        const teamNameDisplayUpd =\n          teamSummaryUpdateToTeamNameDisplayUpdate(teamUpd);\n        if (Object.keys(teamNameDisplayUpd).length === 0) continue;\n        teamNameDisplayUpds[teamId] = teamNameDisplayUpd;\n      }\n      if (Object.keys(teamNameDisplayUpds).length === 0) continue;\n      for (const teamController of this.server.teamControllers.values()) {\n        teamController\n          .getBattleController(puzName)\n          .broadcastTeamSpeedrunLeaderboardSummaryGlobalUpdate({\n            type: GlobalUpdateType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY_UPDATE_STATE,\n            teamNameDisplayUpds,\n          });\n      }\n    }\n  }\n}\n","import {\n  CursorEventType,\n  CursorEventMove,\n  CursorEvent,\n  CursorResp,\n} from \"engine/types/presence\";\nimport { WSRespType } from \"game-server/ws\";\nimport { ClientConnection, GameServer } from \"game-server/GameServer\";\n\nexport class CursorsController {\n  server: GameServer;\n  /**\n   * The cursor groups, keyed first by teamId, then by the\n   * cursor group name (usually the roomId). A cursor group\n   * is represented as a set of client connections, keyed by connId.\n   */\n  cursorGroups: Map<string, Map<string, CursorGroup>>;\n\n  constructor(server: GameServer) {\n    this.server = server;\n    this.cursorGroups = new Map();\n  }\n\n  private getTeamCursorGroups(teamId: string) {\n    const teamCursorGroups = this.cursorGroups.get(teamId);\n    if (teamCursorGroups !== undefined) return teamCursorGroups;\n    const newTeamCursorGroups = new Map();\n    this.cursorGroups.set(teamId, newTeamCursorGroups);\n    return newTeamCursorGroups;\n  }\n\n  private getCursorGroup(teamId: string, cursorGroupName: string) {\n    const teamCursorGroups = this.getTeamCursorGroups(teamId);\n    const cursorGroup = teamCursorGroups.get(cursorGroupName);\n    if (cursorGroup !== undefined) return cursorGroup;\n    const newCursorGroup = new CursorGroup();\n    teamCursorGroups.set(cursorGroupName, newCursorGroup);\n    return newCursorGroup;\n  }\n\n  private getConnCursorGroup(conn: ClientConnection) {\n    const { teamId, cursorGroupName } = conn;\n    if (teamId === undefined) return null;\n    if (cursorGroupName === undefined) return null;\n    return this.getCursorGroup(teamId, cursorGroupName);\n  }\n\n  removeConnFromGroup(conn: ClientConnection) {\n    this.broadcastEvent(conn, {\n      type: CursorEventType.REMOVE,\n    });\n\n    const { teamId, cursorGroupName } = conn;\n    if (teamId === undefined) return;\n    if (cursorGroupName === undefined) return;\n    const teamCursorGroups = this.cursorGroups.get(teamId);\n    if (teamCursorGroups === undefined) {\n      console.error(\"expect team cursor group to exist\");\n      return;\n    }\n    const cursorGroup = teamCursorGroups.get(cursorGroupName);\n    if (cursorGroup === undefined) {\n      console.error(\"expect cursor group to exist\");\n      return;\n    }\n    cursorGroup.conns.delete(conn.connId);\n    if (cursorGroup.conns.size === 0) teamCursorGroups.delete(cursorGroupName);\n    if (teamCursorGroups.size === 0) this.cursorGroups.delete(teamId);\n    delete conn.cursorGroupName;\n  }\n\n  addConnToGroup(conn: ClientConnection, cursorGroupName: string) {\n    this.removeConnFromGroup(conn);\n    const { teamId } = conn;\n    if (teamId === undefined) return;\n    this.getCursorGroup(teamId, cursorGroupName).conns.set(conn.connId, conn);\n    conn.cursorGroupName = cursorGroupName;\n  }\n\n  async broadcastEvent(srcConn: ClientConnection, event: CursorEvent) {\n    if (srcConn.cursorGroupName === undefined) return;\n    const cursorGroup = this.getConnCursorGroup(srcConn);\n    if (cursorGroup === null) return;\n    cursorGroup.addEvent(srcConn, event);\n    if (cursorGroup.locked) return;\n    cursorGroup.locked = true;\n    await new Promise((resolve) => setTimeout(resolve, 0));\n    const queuedEvents: CursorResp[] = cursorGroup.pullEvents();\n    for (const dstConn of cursorGroup.conns.values()) {\n      const events = queuedEvents.filter(\n        ({ connId }) => dstConn.connId !== connId\n      );\n      if (events.length)\n        this.server.sendResp(dstConn, {\n          type: WSRespType.CURSOR_EVENT,\n          events,\n        });\n    }\n    cursorGroup.locked = false;\n  }\n}\n\nclass CursorGroup {\n  conns: Map<string, ClientConnection>;\n  queuedMoves: Map<string, CursorEventMove>;\n  queuedEvents: [string, CursorEvent][];\n  locked: boolean;\n\n  constructor() {\n    this.conns = new Map();\n    this.queuedMoves = new Map();\n    this.queuedEvents = [];\n    this.locked = false;\n  }\n\n  addEvent({ connId }: ClientConnection, event: CursorEvent) {\n    if (event.type == CursorEventType.MOVE) this.queuedMoves.set(connId, event);\n    else this.queuedEvents.push([connId, event]);\n  }\n\n  pullEvents(): CursorResp[] {\n    const events = [...this.queuedMoves.entries(), ...this.queuedEvents];\n    this.queuedMoves.clear();\n    this.queuedEvents.length = 0;\n    return events.map(([connId, event]) => ({ connId, event }));\n  }\n}\n","import { CursorEvent, CursorEventType } from \"engine/types/presence\";\n\nexport const safeParseCursorEvent = (\n  event: ReturnType<typeof JSON.parse>\n): CursorEvent | null => {\n  if (typeof event !== \"object\" || typeof event.type !== \"string\") return null;\n  switch (event.type) {\n    case CursorEventType.REMOVE: {\n      return event;\n    }\n    case CursorEventType.MOVE:\n    case CursorEventType.CLICK: {\n      const { rX, rY } = event;\n      if (typeof rX !== \"number\" || typeof rY !== \"number\") return null;\n      return event;\n    }\n  }\n  return null;\n};\n","import {\n  HuntJwtPayload,\n  AuthenticationInterface,\n} from \"game-server/authentication-interface/AuthenticationInterface\";\nimport {\n  WSReqType,\n  WSRespType,\n  WSReq,\n  WSResp,\n  WSError,\n  WSErrorCode,\n} from \"game-server/ws\";\nimport {\n  HuntNotificationType,\n  HuntNotification,\n} from \"game-server/notifications\";\nimport {\n  GlobalUpdatesScopeType,\n  GlobalUpdatesScope,\n  GlobalUpdateType,\n  GlobalUpdate,\n  ClientMasteryGlobalState,\n} from \"game-server/global-updates\";\nimport { NUM_DECK_SLOTS } from \"engine/types/decks\";\nimport { Player } from \"engine/types/game-state\";\nimport { StepType, Step, SystemStep } from \"engine/types/steps\";\nimport { UpdateType, Update, Role } from \"engine/types/updates\";\nimport { Keyframe } from \"engine/types/keyframes\";\nimport { CardsDB } from \"engine/cards/CardsDB\";\nimport {\n  BattleGroupData,\n  PuzzlesDB,\n  PUZ_NAME_MYOSB,\n} from \"engine/puzzles/puzzle-data\";\nimport { MasteriesDB } from \"engine/puzzles/mastery-data\";\nimport { BackendInterfaceController } from \"game-server/backend-interface/BackendInterfaceController\";\nimport {\n  BackendInterface,\n  BackendNotificationDataType,\n  BackendErratum,\n  SyncDataBackendReq,\n  GetInitTeamDataBackendResp,\n} from \"game-server/backend-interface/BackendInterface\";\nimport {\n  Room,\n  GameRoom,\n  UnjoinedRoomMember,\n  RoomMember,\n} from \"game-server/Room\";\nimport {\n  TeamController,\n  TeamBattleController,\n  DeckController,\n  TeamMasteryTreeController,\n  GameRoomsController,\n  PvPLobbyController,\n  StatsController,\n  CursorsController,\n} from \"game-server/server-controllers\";\nimport {\n  DecksAndMasteryTreesSyncController,\n  CheckpointsSyncController,\n  MiscTeamStateSyncController,\n} from \"game-server/sync-controllers\";\nimport { SyncObjectType } from \"game-server/backend-interface/backend-sync\";\nimport {\n  IntervalMetrics,\n  ServerDirtyStateTracker,\n  BigBoardStateTracker,\n  TeamListStateTracker,\n  TeamMetricsTracker,\n  TeamSummaryUpdate,\n  HEALTH_MONITORING_INTERVAL_MS,\n  CURSOR_EVENTS_MONITORING_INTERVAL_MS,\n} from \"game-server/monitoring\";\nimport { UpdateBroadcastSpecType } from \"game-server/UpdatesMulticaster\";\nimport { safeParseCursorEvent } from \"game-server/manual-validation\";\n\nexport type GameServerConfig = {\n  /**\n   * Maximum number of completed rooms to batch into one request when\n   * syncing to backend.\n   */\n  completedRoomsSyncLimit: number;\n  /**\n   * Maximum number of active rooms to batch into one request when syncing\n   * to backend.\n   */\n  activeRoomsSyncLimit: number;\n  /**\n   * Maximum number of teams to batch into one request when syncing\n   * decks and mastery trees to backend.\n   */\n  decksAndMasteryTreesTeamsSyncLimit: number;\n  /**\n   * Maximum number of teams to batch into one request when syncing\n   * checkpoints to backend.\n   */\n  checkpointsSyncLimit: number;\n  /**\n   * Maximum number of teams to batch into one request when syncing\n   * misc team state to backend.\n   */\n  miscTeamStateTeamsSyncLimit: number;\n  /** Maximum number of parallel sync backend requests. */\n  syncThrottleParallelism: number;\n  /**\n   * Amount of time to throttle the slow sync, depending on the\n   * slow sync type.\n   */\n  slowSyncThrottle: { [syncObjectType in SyncObjectType]: number };\n};\n\ntype GameServerOpts = {\n  backend: BackendInterface;\n  dumpWsMessages: boolean;\n  dumpBackendRequests: boolean;\n  periodicSyncInterval?: number;\n  authInterface: AuthenticationInterface;\n  parseWSReq: (req: object) => req is WSReq;\n  cursorsMode?: boolean;\n  /**\n   * Dev backdoor called after each step if provided; used to\n   * dump highest mem game states.\n   */\n  afterStepBackdoor?: (room: GameRoom) => void;\n  logMetrics?: (msg: string) => Promise<void>;\n  logCursorsMetrics?: (msg: string) => Promise<void>;\n  metricsDumpInterval?: number;\n  getCpuUsage?: () => {\n    user: number;\n    system: number;\n  };\n};\n\ntype ClientInterface = {\n  send: (msg: string) => void;\n  close: () => void;\n};\n\nexport type ClientConnection = {\n  connId: string;\n  client: ClientInterface;\n  // teamId only gets set once the connection is authenticated,\n  // so it can be used to check if a connection is authenticated.\n  teamId?: string;\n  spectateTeamId?: string;\n  /**\n   * Whether the connection is an admin connection. An admin can be\n   * connected as a non-admin team through impersonation.\n   */\n  isAdmin: boolean;\n  // In the current design, each connection can only control\n  // one room client at a time.\n  roomMember?: RoomMember;\n  /**\n   * The cursor group that the client is in, denoted by puzName.\n   * A client can only be part of one cursor group at a time.\n   */\n  cursorGroupName?: string;\n  /** Global updates scopes that the connection is subscribed to. */\n  subscriptions: Map<GlobalUpdatesScopeType, GlobalUpdatesScope>;\n};\n\nexport class GameServer {\n  /** Unique identifier from the backend for this instance. */\n  gameServerId: string;\n  cardsDB: CardsDB;\n  puzzlesDB: PuzzlesDB;\n  masteriesDB: MasteriesDB;\n  keyframes: Keyframe[];\n  opts: GameServerOpts;\n  /**\n   * Functions to be called once the GameServer is ready to\n   * accept connections.\n   */\n  onReadyCallbacks: (() => void)[];\n\n  // Static hunt config synced from Django on startup.\n\n  maxGuessesPerPuzzle: number;\n  huntStartTime: number;\n  huntEndTime: number;\n\n  backend: BackendInterfaceController;\n  numActiveConns: number;\n  /**\n   * Map of team ID to the client connections authenticated for it,\n   * indexed by connId.\n   */\n  teamConns: Map<string, Map<string, ClientConnection>>;\n  /** Map of team ID to team controller. */\n  teamControllers: Map<string, TeamController>;\n  gameRoomsController: GameRoomsController;\n  pvpLobbyController: PvPLobbyController;\n  statsController: StatsController;\n  cursorsController: CursorsController;\n  dirtyStateTracker: ServerDirtyStateTracker;\n  bigBoardStateTracker: BigBoardStateTracker;\n  teamListStateTracker: TeamListStateTracker;\n  teamMetricsTracker: TeamMetricsTracker;\n\n  fastSyncMetrics: IntervalMetrics;\n  slowSyncMetrics: IntervalMetrics;\n  checkAnswerMetrics: IntervalMetrics;\n  cursorEventsMetrics: IntervalMetrics;\n  numAuthsMetrics: IntervalMetrics;\n  numRequestsMetrics: IntervalMetrics;\n\n  metricsDumpTracking: {\n    lastDumpTime: number;\n    lastUserTime: number;\n    lastSystemTime: number;\n    userTimeUsage: number;\n    systemTimeUsage: number;\n  };\n\n  /**\n   * Map of connId to connections for connections subscribed to\n   * server updates.\n   */\n  subscriptions: Map<string, ClientConnection>;\n  /**\n   * Map of connId to connections for connections subscribed to\n   * team list updates.\n   */\n  teamListSubscriptions: Map<string, ClientConnection>;\n  /**\n   * Map of connId to connections for connections subscribed to\n   * faction history updates.\n   */\n  factionHistorySubscriptions: Map<string, ClientConnection>;\n  /**\n   * Map of connId to connections for connections subscribed to\n   * server health updates.\n   */\n  serverHealthSubscriptions: Map<string, ClientConnection>;\n  /**\n   * Map of connId to connections for connections subscribed to\n   * big board updates.\n   */\n  bigBoardSubscriptions: Map<string, ClientConnection>;\n\n  /** Whether a init backend request is pending. */\n  isInitPending: boolean;\n  /** Whether the server is ready to accept requests. */\n  isReady: boolean;\n  /** Whether the server has been torn down. */\n  isStopped: boolean;\n\n  /** teamIds of teams that need init. */\n  queuedTeamInits: Set<string>;\n  isTeamInitInFlight: boolean;\n\n  nextConnId: number;\n  nextRoomMemberId: number;\n  nextGameRoomId: number;\n  nextAnswerSubmissionId: number;\n\n  /** Prevent opening too many connections at a time. */\n  syncThrottle: {\n    /** Number of syncs currently in flight. */\n    numSyncsInFlight: number;\n    /**\n     * Callbacks to trigger when there's capacity,\n     * from earliest to latest.\n     */\n    queue: (() => void)[];\n  };\n\n  /**\n   * Tracking state for the periodic backend sync.\n   */\n  slowSyncTracking: {\n    isDownloadInFlight: boolean;\n    decksAndMasteryTreesSyncController: DecksAndMasteryTreesSyncController;\n    checkpointsSyncController: CheckpointsSyncController;\n    miscTeamStateSyncController: MiscTeamStateSyncController;\n    /** The notif index to start the next sync from. */\n    notifsNextIndex: number;\n  };\n\n  numActivePeriodicTasksHandlers: number;\n  periodicSyncInterval: number;\n  /** Timer handle for periodic tasks. */\n  periodicTasksTimer?: ReturnType<typeof setInterval>;\n\n  numPendingSubmissionTasks: number;\n\n  errata: { [erratumId: string]: BackendErratum };\n  unclaimedHints: number;\n\n  jwtCache: Map<string, HuntJwtPayload>;\n\n  config: GameServerConfig;\n\n  constructor(\n    puzzlesDB: PuzzlesDB,\n    cardsDB: CardsDB,\n    masteriesDB: MasteriesDB,\n    keyframes: Keyframe[],\n    opts: GameServerOpts\n  ) {\n    // Unused data to initialize the fields with.\n    // These should only be used after the game server is initialized\n    // with the first getInitData backend call.\n    // TODO: Probably wrap this in something that does the initialization\n    // and passes these in during construction, to ensure that they\n    // are only ever used after initialization.\n    this.gameServerId = \"__UNINITIALIZED__\";\n    this.maxGuessesPerPuzzle = 0;\n    this.huntStartTime = 0;\n    this.huntEndTime = 0;\n\n    this.puzzlesDB = puzzlesDB;\n    this.cardsDB = cardsDB;\n    this.masteriesDB = masteriesDB;\n    this.keyframes = keyframes;\n    this.opts = opts;\n    this.onReadyCallbacks = [];\n\n    const backendOpts = {\n      dumpBackendRequests: this.opts.dumpBackendRequests,\n    };\n    this.backend = new BackendInterfaceController({\n      backend: this.opts.backend,\n      dumpBackendRequests: this.opts.dumpBackendRequests,\n    });\n    this.numActiveConns = 0;\n    this.teamConns = new Map();\n    this.teamControllers = new Map();\n    this.gameRoomsController = new GameRoomsController(this);\n    this.pvpLobbyController = new PvPLobbyController(this);\n    this.statsController = new StatsController(this);\n    this.cursorsController = new CursorsController(this);\n    this.dirtyStateTracker = new ServerDirtyStateTracker();\n    this.bigBoardStateTracker = new BigBoardStateTracker();\n    this.teamListStateTracker = new TeamListStateTracker();\n    this.teamMetricsTracker = new TeamMetricsTracker(this);\n    this.fastSyncMetrics = new IntervalMetrics(HEALTH_MONITORING_INTERVAL_MS);\n    this.slowSyncMetrics = new IntervalMetrics(HEALTH_MONITORING_INTERVAL_MS);\n    this.checkAnswerMetrics = new IntervalMetrics(\n      HEALTH_MONITORING_INTERVAL_MS\n    );\n    this.cursorEventsMetrics = new IntervalMetrics(\n      CURSOR_EVENTS_MONITORING_INTERVAL_MS\n    );\n    this.numAuthsMetrics = new IntervalMetrics(HEALTH_MONITORING_INTERVAL_MS);\n    this.numRequestsMetrics = new IntervalMetrics(\n      HEALTH_MONITORING_INTERVAL_MS\n    );\n    this.metricsDumpTracking = {\n      lastDumpTime: 0,\n      lastUserTime: 0,\n      lastSystemTime: 0,\n      userTimeUsage: 0,\n      systemTimeUsage: 0,\n    };\n    this.subscriptions = new Map();\n    this.teamListSubscriptions = new Map();\n    this.factionHistorySubscriptions = new Map();\n    this.serverHealthSubscriptions = new Map();\n    this.bigBoardSubscriptions = new Map();\n    this.isInitPending = false;\n    this.isReady = false;\n    this.isStopped = false;\n    this.queuedTeamInits = new Set();\n    this.isTeamInitInFlight = false;\n    this.nextConnId = 0;\n    this.nextRoomMemberId = 0;\n    this.nextGameRoomId = 0;\n    this.nextAnswerSubmissionId = 0;\n    this.syncThrottle = {\n      numSyncsInFlight: 0,\n      queue: [],\n    };\n    this.slowSyncTracking = {\n      isDownloadInFlight: false,\n      decksAndMasteryTreesSyncController:\n        new DecksAndMasteryTreesSyncController(this),\n      checkpointsSyncController: new CheckpointsSyncController(this),\n      miscTeamStateSyncController: new MiscTeamStateSyncController(this),\n      notifsNextIndex: 0,\n    };\n\n    this.numActivePeriodicTasksHandlers = 0;\n    // 3 seconds by default\n    this.periodicSyncInterval = this.opts.periodicSyncInterval ?? 3000;\n    this.periodicTasksTimer = setInterval(() => {\n      this.runPeriodicTasks();\n    }, this.periodicSyncInterval);\n\n    this.numPendingSubmissionTasks = 0;\n\n    this.errata = {};\n    this.unclaimedHints = 0;\n\n    this.jwtCache = new Map();\n\n    this.config = {\n      completedRoomsSyncLimit: 10,\n      activeRoomsSyncLimit: 10,\n      decksAndMasteryTreesTeamsSyncLimit: 10,\n      checkpointsSyncLimit: 10,\n      miscTeamStateTeamsSyncLimit: 10,\n      syncThrottleParallelism: 2,\n      slowSyncThrottle: {\n        [SyncObjectType.FAST]: 0,\n        [SyncObjectType.MISC]: 0,\n        [SyncObjectType.MASTERY_TREE]: 0,\n        [SyncObjectType.DECK]: 0,\n        [SyncObjectType.ROOM]: 0,\n        [SyncObjectType.CHECKPOINTS]: 0,\n        [SyncObjectType.ANSWER]: 0,\n      },\n    };\n  }\n\n  /**\n   * TODO: This is just a test utility to remove pending tasks and\n   * allow tests to end gracefully. If this is to be used in a\n   * production server, it needs to ensure that all pending promises\n   * are responded to (e.g. onReadyCallbacks).\n   *\n   * This is now also used for the shared worker mock server. There\n   * are memory leaks with pending promises, but it should not be\n   * okay for now since users are not expected to reset repeatedly.\n   */\n  teardown(): void {\n    if (this.periodicTasksTimer !== undefined)\n      clearInterval(this.periodicTasksTimer);\n    for (const teamConnsForTeam of this.teamConns.values()) {\n      for (const conn of teamConnsForTeam.values()) {\n        conn.client.close();\n      }\n    }\n    this.isStopped = true;\n  }\n\n  genConnId() {\n    const connId = this.nextConnId;\n    this.nextConnId++;\n    return `${connId}`;\n  }\n\n  genRoomMemberId() {\n    const memberId = this.nextRoomMemberId;\n    this.nextRoomMemberId++;\n    return `${memberId}`;\n  }\n\n  genGameRoomId() {\n    const roomId = `${this.gameServerId}_room_${this.nextGameRoomId}`;\n    this.nextGameRoomId++;\n    return roomId;\n  }\n\n  getTeamController(teamId: string): TeamController {\n    const teamController = this.teamControllers.get(teamId);\n    if (teamController === undefined)\n      throw new Error(`team ${teamId} not initialized yet`);\n    return teamController;\n  }\n\n  getBattleController(teamId: string, puzName: string): TeamBattleController {\n    return this.getTeamController(teamId).getBattleController(puzName);\n  }\n\n  getDeckController(teamId: string, slot: number): DeckController {\n    return this.getTeamController(teamId).getDeckController(slot);\n  }\n\n  getMasteryTreeController(teamId: string): TeamMasteryTreeController {\n    return this.getTeamController(teamId).masteryTreeController;\n  }\n\n  isValidPuzzle(teamController: TeamController, puzName: string): boolean {\n    return (\n      this.puzzlesDB.puzzles.has(puzName) &&\n      teamController.isPuzzleUnlocked(puzName)\n    );\n  }\n\n  isValidDeckSlot(slot: number) {\n    return Number.isInteger(slot) && slot >= 0 && slot < NUM_DECK_SLOTS;\n  }\n\n  async waitForReadyAsync(): Promise<void> {\n    if (this.isReady) return;\n    await new Promise<void>((resolve, reject) => {\n      this.onReadyCallbacks.push(resolve);\n    });\n  }\n\n  async tryInitAsync(): Promise<void> {\n    if (this.isReady) return;\n    if (this.isInitPending) return;\n\n    this.isInitPending = true;\n    try {\n      const resp = await (async () => {\n        try {\n          return await this.backend.getInitData();\n        } catch (err) {\n          // If we fail, the periodic tasks handler will call this again.\n          console.error(err);\n        }\n      })();\n\n      if (resp !== undefined) {\n        const {\n          gameServerId,\n          teams,\n          factionHistory,\n          maxGuessesPerPuzzle,\n          huntStartTime,\n          huntEndTime,\n          notifsNextIndex,\n          errata,\n          unclaimedHints,\n        } = resp;\n\n        this.gameServerId = gameServerId;\n        this.maxGuessesPerPuzzle = maxGuessesPerPuzzle;\n        this.huntStartTime = huntStartTime;\n        this.huntEndTime = huntEndTime;\n        this.slowSyncTracking.notifsNextIndex = notifsNextIndex;\n        this.errata = errata;\n        this.unclaimedHints = unclaimedHints;\n        for (const [teamId, teamData] of Object.entries(teams)) {\n          await this.createTeamAsync(teamId, teamData);\n        }\n        Object.assign(this.statsController.factionHistory, factionHistory);\n\n        this.isReady = true;\n        for (const callback of this.onReadyCallbacks) {\n          callback();\n        }\n        this.onReadyCallbacks = [];\n        console.log(\"Game server init complete.\");\n      }\n    } finally {\n      this.isInitPending = false;\n    }\n  }\n\n  async initAsync(): Promise<void> {\n    if (this.isReady || this.isInitPending)\n      throw new Error(\"don't expect to request init more than once\");\n    if (this.opts.cursorsMode ?? false) {\n      this.isReady = true;\n      return;\n    }\n    await this.tryInitAsync();\n    await this.waitForReadyAsync();\n  }\n\n  /**\n   * Returns an interface for the added client, containing\n   * a function to handle received messages.\n   * For development, a particular connId may be specified\n   * to aid debugging.\n   */\n  addClient(client: ClientInterface, connId?: string) {\n    this.numActiveConns++;\n\n    const conn = {\n      connId: connId ?? this.genConnId(),\n      client: client,\n      // The connection only ever gets marked as admin after auth.\n      isAdmin: false,\n      subscriptions: new Map(),\n    };\n\n    return {\n      handleMsg: (msg: string) => {\n        (async () => {\n          try {\n            await this.handleMsg(conn, msg);\n          } catch (err) {\n            console.error(err);\n            this.sendErr(conn, { errCode: WSErrorCode.SERVER_ERROR });\n          }\n        })();\n      },\n      removeClient: () => {\n        this.removeClient(conn);\n      },\n    };\n  }\n\n  removeClient(conn: ClientConnection) {\n    this.numActiveConns--;\n\n    const { connId, teamId, roomMember, subscriptions } = conn;\n    for (const scopeType of subscriptions.keys()) {\n      this.unsubscribeFromUpdates(conn, scopeType);\n    }\n    this.cursorsController.removeConnFromGroup(conn);\n    if (roomMember !== undefined) {\n      this.kickRoomMember(roomMember);\n    }\n    if (teamId !== undefined) {\n      const teamConnsForTeam = this.teamConns.get(teamId);\n      if (teamConnsForTeam === undefined)\n        throw new Error(\"expect team conns to be defined for team\");\n      teamConnsForTeam.delete(connId);\n    }\n  }\n\n  async createTeamAsync(teamId: string, teamData: GetInitTeamDataBackendResp) {\n    // Create the team controller. This signals that the team\n    // has been initialized.\n    const teamController = new TeamController(teamId, teamData, this);\n    this.teamControllers.set(teamId, teamController);\n    teamController.initStats();\n    teamController.initRooms(teamData.rooms);\n\n    this.broadcastAdminGlobalUpdate({\n      type: GlobalUpdateType.SERVER_ADD_TEAM,\n      teamId: teamController.teamId,\n      teamAdminData: teamController.getClientAdminData(),\n    });\n    // We add the team even if it's hidden. We will filter the hidden teams\n    // downstream.\n    this.handleTeamListAddTeam(teamId);\n\n    const bigBoardState = teamController.getClientBigBoardState();\n    this.bigBoardStateTracker.addTeam(teamId, bigBoardState);\n    this.broadcastBigBoardGlobalUpdate({\n      type: GlobalUpdateType.BIG_BOARD_UPDATE_STATE,\n      addTeams: { [teamId]: bigBoardState },\n    });\n\n    // Ensure consistency between solves and unlocks, and also handle\n    // the initial unlocks.\n    await teamController.handleTeamUpdatesAsync({});\n  }\n\n  private async triggerTeamInits() {\n    if (this.isTeamInitInFlight) return;\n    this.isTeamInitInFlight = true;\n    for (const teamId of [...this.queuedTeamInits]) {\n      try {\n        await this.initTeamAsync(teamId);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    this.isTeamInitInFlight = false;\n  }\n\n  private async initTeamAsync(teamId: string) {\n    let resp: GetInitTeamDataBackendResp | null = null;\n    try {\n      resp = await this.backend.getInitTeamData(teamId);\n    } catch (err) {\n      console.error(err);\n    }\n    if (resp === null) return;\n\n    this.queuedTeamInits.delete(teamId);\n    await this.createTeamAsync(teamId, resp);\n\n    if (!(this.opts.cursorsMode ?? false)) {\n      const teamController = this.getTeamController(teamId);\n      for (let i = 0; i < (this.teamConns.get(teamId)?.size ?? 0); i++) {\n        teamController.numAuthsMetrics.record();\n        this.teamMetricsTracker.recordAuth(teamId);\n      }\n    }\n\n    // Tell all connections for the team that we're ready to\n    // accept input.\n    this.broadcastRespToTeam(teamId, {\n      type: WSRespType.AUTH_SUCCESS,\n    });\n  }\n\n  /**\n   * Room-agnostic preparation, called immediately after any\n   * room construction.\n   */\n  prepareRoom(room: Room): void {\n    // Flush out any updates generated during construction.\n    // At this point, there aren't any joined members, so\n    // we only have system updates.\n    this.broadcastUpdates(room);\n  }\n\n  completeEnterRoom(\n    { reqId, conn, role: reqRole }: UnjoinedRoomMember,\n    room: Room\n  ): void {\n    const { puzName } = room.engine;\n    const role = reqRole ?? Role.GOD;\n\n    this.sendResp(conn, {\n      type: WSRespType.ENTERED_ROOM,\n      reqId,\n      params: {\n        puzName,\n        role,\n      },\n    });\n\n    this.joinConnToRoom(conn, room, role);\n  }\n\n  joinConnToRoom(conn: ClientConnection, room: Room, role: Role): void {\n    const roomMember = {\n      id: this.genRoomMemberId(),\n      conn,\n      room,\n      role,\n      enabled: false,\n    };\n    conn.roomMember = roomMember;\n    room.members.set(roomMember.id, roomMember);\n\n    const teamId = conn.teamId;\n    if (teamId === undefined) throw new Error(\"expect client to be authed\");\n\n    this.gameRoomsController.handleRoomMembersUpdate(teamId, room.hostPuzName);\n\n    this.sendSystemStep(room, {\n      type: StepType.SYSTEM_JOIN,\n      teamId,\n      roomMember,\n      role,\n    });\n  }\n\n  kickRoomMember(roomMember: RoomMember): void {\n    const { id: memberId, room, conn } = roomMember;\n    room.members.delete(memberId);\n    delete conn.roomMember;\n\n    const teamId = conn.teamId;\n    if (teamId === undefined) throw new Error(\"expect client to be authed\");\n    this.gameRoomsController.handleRoomMembersUpdate(teamId, room.hostPuzName);\n  }\n\n  /** Get the battle group that a puzzle belongs to. */\n  tryGetBattleGroup(puzName: string): BattleGroupData | null {\n    return this.puzzlesDB.tryGetBattleGroup(puzName);\n  }\n\n  /** Get the battle group that a puzzle belongs to. */\n  getBattleGroup(puzName: string): BattleGroupData {\n    return this.puzzlesDB.getBattleGroup(puzName);\n  }\n\n  /**\n   * Returns a map of connId to connections subscribed to a given global\n   * updates scope.\n   */\n  getSubscriptions(scope: GlobalUpdatesScope): Map<string, ClientConnection> {\n    switch (scope.type) {\n      case GlobalUpdatesScopeType.SERVER:\n        return this.subscriptions;\n      case GlobalUpdatesScopeType.SERVER_HEALTH:\n        return this.serverHealthSubscriptions;\n      case GlobalUpdatesScopeType.BIG_BOARD:\n        return this.bigBoardSubscriptions;\n      case GlobalUpdatesScopeType.PVP:\n        return this.pvpLobbyController.subscriptions;\n      case GlobalUpdatesScopeType.TEAM_LIST:\n        return this.teamListSubscriptions;\n      case GlobalUpdatesScopeType.TEAM_MEMBERS:\n        return this.getTeamController(scope.teamId).membersSubscriptions;\n      case GlobalUpdatesScopeType.FACTION_HISTORY:\n        return this.factionHistorySubscriptions;\n      case GlobalUpdatesScopeType.TEAM:\n        return this.getTeamController(scope.teamId).subscriptions;\n      case GlobalUpdatesScopeType.TEAM_BATTLE:\n        return this.getTeamController(scope.teamId).getBattleController(\n          scope.puzName\n        ).subscriptions;\n      case GlobalUpdatesScopeType.TEAM_FISH_PUZZLE:\n        return this.getTeamController(scope.teamId).getFishPuzzleController(\n          scope.puzName\n        ).subscriptions;\n      case GlobalUpdatesScopeType.TEAM_DECKS:\n        return this.getTeamController(scope.teamId).decksSubscriptions;\n      case GlobalUpdatesScopeType.TEAM_MASTERY_TREE:\n        return this.getMasteryTreeController(scope.teamId).subscriptions;\n      case GlobalUpdatesScopeType.TEAM_PVP:\n        return this.getTeamController(scope.teamId).pvpController.subscriptions;\n      case GlobalUpdatesScopeType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY:\n        return this.getTeamController(scope.teamId).getBattleController(\n          scope.puzName\n        ).speedrunLeaderboardSummarySubscriptions;\n    }\n  }\n\n  unsubscribeFromUpdates(\n    conn: ClientConnection,\n    scopeType: GlobalUpdatesScopeType\n  ): void {\n    const scope = conn.subscriptions.get(scopeType);\n    if (scope === undefined) return;\n    this.getSubscriptions(scope).delete(conn.connId);\n  }\n\n  validateSubscribeToUpdates(\n    conn: ClientConnection,\n    scope: GlobalUpdatesScope\n  ): WSError | null {\n    switch (scope.type) {\n      case GlobalUpdatesScopeType.SERVER:\n      case GlobalUpdatesScopeType.SERVER_HEALTH:\n      case GlobalUpdatesScopeType.BIG_BOARD: {\n        if (!conn.isAdmin) return { errCode: WSErrorCode.PERMISSION_DENIED };\n        return null;\n      }\n      case GlobalUpdatesScopeType.PVP: {\n        // No reason to check for PvP mastery here, but if we do\n        // we must make sure to guard the subscription from the\n        // client side behind the mastery too.\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_LIST: {\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_MEMBERS: {\n        const { teamId } = scope;\n        // Any team can see any other team's members, as long as the\n        // teamId is valid.\n        const teamController = this.teamControllers.get(teamId);\n        if (teamController === undefined)\n          return { errCode: WSErrorCode.INVALID_TEAM };\n        return null;\n      }\n      case GlobalUpdatesScopeType.FACTION_HISTORY: {\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM: {\n        const { teamId } = scope;\n        if (conn.teamId !== teamId && !conn.isAdmin)\n          return { errCode: WSErrorCode.PERMISSION_DENIED };\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_FISH_PUZZLE: {\n        const { teamId, puzName } = scope;\n        if (conn.teamId !== teamId && !conn.isAdmin)\n          return { errCode: WSErrorCode.PERMISSION_DENIED };\n        const teamController = this.getTeamController(teamId);\n        if (!teamController.isValidFishPuzzle(puzName))\n          return { errCode: WSErrorCode.INVALID_PUZZLE };\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_BATTLE: {\n        const { teamId, puzName } = scope;\n        if (conn.teamId !== teamId && !conn.isAdmin)\n          return { errCode: WSErrorCode.PERMISSION_DENIED };\n        const teamController = this.getTeamController(teamId);\n        if (!teamController.isValidBattle(puzName))\n          return { errCode: WSErrorCode.INVALID_PUZZLE };\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_DECKS:\n      case GlobalUpdatesScopeType.TEAM_MASTERY_TREE:\n      case GlobalUpdatesScopeType.TEAM_PVP: {\n        const { teamId } = scope;\n        if (conn.teamId !== teamId && !conn.isAdmin)\n          return { errCode: WSErrorCode.PERMISSION_DENIED };\n        return null;\n      }\n      case GlobalUpdatesScopeType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY: {\n        const { teamId, puzName } = scope;\n        if (conn.teamId !== teamId && !conn.isAdmin)\n          return { errCode: WSErrorCode.PERMISSION_DENIED };\n        const teamController = this.getTeamController(teamId);\n        if (!teamController.isValidBattle(puzName))\n          return { errCode: WSErrorCode.INVALID_PUZZLE };\n        return null;\n      }\n      // Don't include a default case to ensure this is exhaustive.\n    }\n  }\n\n  subscribeToUpdates(conn: ClientConnection, scope: GlobalUpdatesScope): void {\n    const err = this.validateSubscribeToUpdates(conn, scope);\n    if (err !== null) return this.sendErr(conn, err);\n\n    // Connections are only allowed to maintain at most one\n    // subscription per scope type.\n    this.unsubscribeFromUpdates(conn, scope.type);\n\n    const subscriptions = this.getSubscriptions(scope);\n    subscriptions.set(conn.connId, conn);\n    conn.subscriptions.set(scope.type, scope);\n\n    // Broadcast the initial state.\n    switch (scope.type) {\n      case GlobalUpdatesScopeType.SERVER: {\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.SERVER_OVERRIDE_STATE,\n          teamAdminData: Object.fromEntries(\n            Array.from(this.teamControllers.values(), (teamController) => [\n              teamController.teamId,\n              teamController.getClientAdminData(),\n            ])\n          ),\n          puzzles: Object.fromEntries(this.puzzlesDB.puzzles.entries()),\n          battleGroups: Object.fromEntries(\n            this.puzzlesDB.battleGroups.entries()\n          ),\n          masteries: Object.fromEntries(\n            Object.values(this.masteriesDB).map(\n              ({ masteryId, displayName }) => [masteryId, { displayName }]\n            )\n          ),\n          unclaimedHints: this.unclaimedHints,\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.SERVER_HEALTH: {\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.SERVER_HEALTH_OVERRIDE_STATE,\n          state: {\n            slowSyncMetrics: this.slowSyncMetrics.getSummary(),\n            fastSyncMetrics: this.fastSyncMetrics.getSummary(),\n            checkAnswerMetrics: this.checkAnswerMetrics.getSummary(),\n            numAuthsMetrics: this.numAuthsMetrics.getSummary(),\n            numRequestsMetrics: this.numRequestsMetrics.getSummary(),\n            teamNumAuthsMetrics: this.teamMetricsTracker.numAuthsSummaries,\n            teamNumRequestsMetrics:\n              this.teamMetricsTracker.numRequestsSummaries,\n            fastSyncQueueLength: this.syncThrottle.queue.length,\n            numActivePeriodicTasksHandlers: this.numActivePeriodicTasksHandlers,\n            numPendingSubmissionTasks: this.numPendingSubmissionTasks,\n            numCompletedRoomsToSync:\n              this.gameRoomsController.slowSyncTracking\n                .completedRoomsSyncController.roomsToSync.length,\n            teamInitQueueLength: this.queuedTeamInits.size,\n            numActiveConns: this.numActiveConns,\n            userTimeUsage: this.metricsDumpTracking.userTimeUsage,\n            systemTimeUsage: this.metricsDumpTracking.systemTimeUsage,\n            dirtyState: this.dirtyStateTracker.dirtyState,\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.BIG_BOARD: {\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.BIG_BOARD_OVERRIDE_STATE,\n          state: {\n            teams: Object.fromEntries(\n              Array.from(this.teamControllers.values(), (teamController) => [\n                teamController.teamId,\n                teamController.getClientBigBoardState(),\n              ])\n            ),\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.PVP: {\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.PVP_OVERRIDE_STATE,\n          state: {\n            ring: this.pvpLobbyController.ring,\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_LIST: {\n        this.sendRespRaw(\n          conn,\n          this.teamListStateTracker.getSerializedOverrideGlobalUpdate()\n        );\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_MEMBERS: {\n        const { teamId } = scope;\n        const teamController = this.getTeamController(teamId);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_MEMBERS_OVERRIDE_STATE,\n          state: {\n            teamId,\n            members: teamController.members,\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.FACTION_HISTORY: {\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.FACTION_HISTORY_OVERRIDE_STATE,\n          factionHistory: this.statsController.factionHistory,\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM: {\n        const { teamId } = scope;\n        const teamController = this.getTeamController(teamId);\n        const {\n          displayName,\n          faction,\n          factionScoreContributions,\n          solveTimes,\n          unlockTimes,\n          cardUnlocks,\n          speedrunTimes,\n        } = teamController;\n        const enabledMasteries =\n          teamController.masteryTreeController.getEnabledMasteries();\n        const solvesDict = Object.fromEntries(\n          Array.from(solveTimes.keys(), (puzName) => [puzName, true])\n        );\n        const puzzlesDict = Object.fromEntries(\n          [...this.puzzlesDB.puzzles.keys()].flatMap((puzName) => {\n            if (!unlockTimes.has(puzName)) return [];\n            return [[puzName, teamController.getClientPuzzleState(puzName)]];\n          })\n        );\n        const battleGroupsDict = Object.fromEntries(\n          [...this.puzzlesDB.battleGroups.entries()].flatMap(\n            ([battleGroupName, battleGroup]) => {\n              if (!unlockTimes.has(battleGroupName)) return [];\n              return [\n                [\n                  battleGroupName,\n                  teamController.getClientBattleGroupState(battleGroupName),\n                ],\n              ];\n            }\n          )\n        );\n        const masteriesDict: { [masteryId: string]: ClientMasteryGlobalState } =\n          Object.fromEntries(\n            Object.values(this.masteriesDB).map(\n              ({ masteryId, order, x, y, displayName, effectText }) => {\n                const masteryData = {\n                  masteryId,\n                  order,\n                  x,\n                  y,\n                  isEnabled: enabledMasteries.has(masteryId),\n                };\n                if (teamController.solveTimes.has(masteryId))\n                  Object.assign(masteryData, { displayName, effectText });\n                return [masteryId, masteryData];\n              }\n            )\n          );\n        const { hintsTotal, hintsUsed } = teamController.backendOwned;\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_OVERRIDE_STATE,\n          state: {\n            teamId,\n            displayName,\n            faction,\n            factionScoreContributions,\n            factionScores: this.statsController.factionScores,\n            puzzles: puzzlesDict,\n            battleGroups: battleGroupsDict,\n            cardUnlocks: Object.fromEntries(\n              Array.from(cardUnlocks.entries(), ([cardName, puzName]) => [\n                cardName,\n                {\n                  cardName,\n                  puzName,\n                },\n              ])\n            ),\n            masteries: masteriesDict,\n            hintsInfo: {\n              numHintsTotal: hintsTotal,\n              numHintsUsed: hintsUsed.length,\n            },\n            huntEndTime: this.huntEndTime,\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_FISH_PUZZLE: {\n        const { teamId, puzName } = scope;\n        const teamController = this.getTeamController(teamId);\n        const fishPuzzleController =\n          teamController.getFishPuzzleController(puzName);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_FISH_PUZZLE_OVERRIDE_STATE,\n          state: {\n            teamId,\n            puzName,\n            numGuessesRemaining: fishPuzzleController.getNumGuessesRemaining(),\n            previousGuesses: fishPuzzleController.recentSubmissions.map(\n              ({ answer, timestamp }) => ({\n                submittedAnswer: answer,\n                timestamp,\n              })\n            ),\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_BATTLE: {\n        const { teamId, puzName } = scope;\n        const battleController = this.getBattleController(teamId, puzName);\n        const { masteryTreeController } = this.getTeamController(teamId);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_BATTLE_OVERRIDE_STATE,\n          state: {\n            teamId,\n            puzName,\n            selectedPuzName: battleController.selectedPuzName,\n            roomPuzName: battleController.getRoomPuzName(),\n            selectedDeckSlot: battleController.selectedDeckSlot,\n            lockedDeckSelection: battleController.getLockedDeckSelection(),\n            activeGame: battleController.getClientActiveGameState(),\n            errata: battleController.filterErrata(conn),\n            checkpointSummaries: battleController.summarizeCheckpoints(),\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_DECKS: {\n        const { teamId } = scope;\n        const { deckControllers } = this.getTeamController(teamId);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_DECKS_OVERRIDE_STATE,\n          state: {\n            teamId,\n            decks: deckControllers.map((deckController) => {\n              if (deckController === null) return null;\n              return deckController.deck;\n            }),\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_MASTERY_TREE: {\n        const { teamId } = scope;\n        const { masteryTree } = this.getMasteryTreeController(teamId);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_MASTERY_TREE_OVERRIDE_STATE,\n          state: {\n            teamId,\n            masteryTree,\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_PVP: {\n        const { teamId } = scope;\n        const pvpController = this.getTeamController(teamId).pvpController;\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_PVP_OVERRIDE_STATE,\n          state: {\n            teamId,\n            outgoingRequests: Object.fromEntries(\n              pvpController.outgoingRequests\n            ),\n            incomingRequests: Object.fromEntries(\n              pvpController.incomingRequests\n            ),\n            blockedTeams: Object.fromEntries(\n              Array.from(pvpController.blockedTeams, (k) => [k, true])\n            ),\n            blockedByTeams: Object.fromEntries(\n              [...this.teamControllers.values()]\n                .filter(({ pvpController }) =>\n                  pvpController.blockedTeams.has(teamId)\n                )\n                .map(({ teamId }) => [teamId, true])\n            ),\n          },\n        });\n        break;\n      }\n      case GlobalUpdatesScopeType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY: {\n        const { teamId, puzName } = scope;\n        const battleController = this.getBattleController(teamId, puzName);\n        this.respGlobalUpdate(conn, {\n          type: GlobalUpdateType.TEAM_SPEEDRUN_LEADERBOARD_SUMMARY_OVERRIDE_STATE,\n          state: {\n            teamId,\n            puzName,\n            speedrunRank:\n              this.statsController.getSpeedrunRank(teamId, puzName) ??\n              undefined,\n            speedrunLeaderboardSummary:\n              this.statsController.getSpeedrunLeaderboardSummary(puzName),\n          },\n        });\n        break;\n      }\n    }\n  }\n\n  sendRespRaw(conn: ClientConnection, resp: string): void {\n    if (this.opts.dumpWsMessages) {\n      console.log(\n        `${conn.connId} < ${JSON.stringify(JSON.parse(resp), null, 2)}`\n      );\n    }\n    conn.client.send(resp);\n  }\n\n  sendResp(conn: ClientConnection, resp: WSResp): void {\n    this.sendRespRaw(conn, JSON.stringify(resp));\n  }\n\n  sendRespMultiple(conns: Iterable<ClientConnection>, resp: WSResp): void {\n    const serializedResp = JSON.stringify(resp);\n    for (const conn of conns) {\n      this.sendRespRaw(conn, serializedResp);\n    }\n  }\n\n  sendEnterRoomErr({ reqId, conn }: UnjoinedRoomMember, err: WSError) {\n    this.sendResp(conn, {\n      type: WSRespType.ENTER_ROOM_ERROR,\n      reqId,\n      err,\n    });\n  }\n\n  sendErr(conn: ClientConnection, err: WSError) {\n    this.sendResp(conn, {\n      type: WSRespType.ERROR,\n      err,\n    });\n  }\n\n  respBadRequest(conn: ClientConnection) {\n    this.sendErr(conn, { errCode: WSErrorCode.BAD_REQUEST });\n  }\n\n  /**\n   * If conn is not admin, responds with PERMISSION_DENIED.\n   * Returns if conn is admin.\n   */\n  checkIsAdmin(conn: ClientConnection): boolean {\n    if (!conn.isAdmin) {\n      this.sendErr(conn, { errCode: WSErrorCode.PERMISSION_DENIED });\n      return false;\n    }\n    return true;\n  }\n\n  async handleMsg(conn: ClientConnection, msg: string) {\n    // If we are stopped, disconnect connections on auth.\n    if (this.isStopped) {\n      conn.client.close();\n      return;\n    }\n\n    this.numRequestsMetrics.record();\n\n    const req = JSON.parse(msg.toString());\n\n    if (typeof req !== \"object\" || typeof req.type !== \"string\")\n      return this.respBadRequest(conn);\n\n    if (this.opts.dumpWsMessages) {\n      console.log(`${conn.connId} > ${JSON.stringify(req, null, 2)}`);\n    }\n\n    if (req.type === WSReqType.AUTH) {\n      const { jwt } = req;\n      if (typeof jwt !== \"string\") return this.respBadRequest(conn);\n\n      this.numAuthsMetrics.record();\n      const payload =\n        this.jwtCache.get(jwt) ?? this.opts.authInterface.verify(jwt);\n      if (payload === null) {\n        this.sendErr(conn, { errCode: WSErrorCode.AUTH_ERROR });\n        return;\n      }\n      const { teamId, isAdmin = false } = payload;\n\n      conn.teamId = teamId;\n      conn.isAdmin = isAdmin;\n\n      const teamConnsForTeam = this.teamConns.get(teamId);\n      if (teamConnsForTeam === undefined) {\n        const conns: Map<string, ClientConnection> = new Map();\n        conns.set(conn.connId, conn);\n        this.teamConns.set(teamId, conns);\n      } else {\n        teamConnsForTeam.set(conn.connId, conn);\n      }\n\n      if (!(this.opts.cursorsMode ?? false)) {\n        const teamController = this.teamControllers.get(teamId);\n        if (teamController === undefined) {\n          // Delay the AUTH_SUCCESS until the team state is initialized.\n          // This needs to be awaited on to ensure that errors are\n          // properly contained.\n          if (this.queuedTeamInits.has(teamId)) return;\n          this.queuedTeamInits.add(teamId);\n          await this.triggerTeamInits();\n          return;\n        }\n        this.teamMetricsTracker.recordAuth(teamId);\n        teamController.numAuthsMetrics.record();\n      }\n\n      this.sendResp(conn, {\n        type: WSRespType.AUTH_SUCCESS,\n      });\n      return;\n    }\n\n    const teamId = conn.teamId;\n    if (teamId === undefined) {\n      // All other requests, including pings, should be rejected\n      // if the client is not yet authenticated.\n      this.sendErr(conn, { errCode: WSErrorCode.PERMISSION_DENIED });\n      conn.client.close();\n      return;\n    }\n\n    // Requests that don't depend on teamController.\n    // This special-casing is necessary since the cursors server\n    // does not set up TeamControllers.\n    //\n    // Make sure that all these cases end with a return instead of\n    // a break!\n    switch (req.type) {\n      case WSReqType.PING: {\n        this.sendResp(conn, {\n          type: WSRespType.PONG,\n        });\n        return;\n      }\n      case WSReqType.SET_CURSOR_GROUP: {\n        const { reqId, cursorGroupName } = req;\n        if (!(cursorGroupName === null || typeof cursorGroupName === \"string\"))\n          return this.respBadRequest(conn);\n        if (cursorGroupName === null)\n          this.cursorsController.removeConnFromGroup(conn);\n        else this.cursorsController.addConnToGroup(conn, cursorGroupName);\n        this.sendResp(conn, {\n          type: WSRespType.SET_CURSOR_GROUP_ACK,\n          reqId,\n        });\n        return;\n      }\n      case WSReqType.CURSOR_EVENT: {\n        const { event } = req;\n        if (typeof event !== \"object\") return this.respBadRequest(conn);\n        const parsedEvent = safeParseCursorEvent(event);\n        if (parsedEvent === null) return this.respBadRequest(conn);\n        this.cursorsController.broadcastEvent(conn, parsedEvent);\n        this.cursorEventsMetrics.record();\n        return;\n      }\n    }\n\n    const teamController = this.teamControllers.get(teamId);\n    if (teamController === undefined) {\n      // Any further requests after AUTH should be rejected until the\n      // team state is initialized. Normally, this is enforced since\n      // we delay AUTH_SUCCESS until the team state is initialized,\n      // but we may still get this from a faulty or modded client.\n      this.sendErr(conn, { errCode: WSErrorCode.PERMISSION_DENIED });\n      conn.client.close();\n      return;\n    }\n    if (teamController.isInactive && !conn.isAdmin) {\n      // If the team is inactive, block all connections\n      // (except admin impersonators).\n      this.sendErr(conn, { errCode: WSErrorCode.TEAM_INACTIVE });\n      conn.client.close();\n      return;\n    }\n    if (teamController.isTempBlocked && !conn.isAdmin) {\n      // If the team is temporarily blocked for maintenance,\n      // block all connections (except admin impersonators).\n      this.sendErr(conn, { errCode: WSErrorCode.TEAM_TEMP_BLOCKED });\n      conn.client.close();\n      return;\n    }\n    if (\n      conn.spectateTeamId !== undefined &&\n      req.type !== WSReqType.ENTER_ROOM &&\n      req.type !== WSReqType.SUBSCRIBE_TO_UPDATES\n    ) {\n      // Spectators aren't allowed to take any actions.\n      this.sendErr(conn, { errCode: WSErrorCode.SPECTATE_ACTION });\n      return;\n    }\n\n    this.teamMetricsTracker.recordRequest(teamId);\n    teamController.numRequestsMetrics.record();\n    const parseResult = this.opts.parseWSReq(req);\n    if (!parseResult) {\n      // req is a malformed WSReq\n      this.sendErr(conn, { errCode: WSErrorCode.BAD_REQUEST });\n      return;\n    }\n    await this.handleZodReq(conn, req, teamController);\n  }\n\n  async handleZodReq(\n    conn: ClientConnection,\n    req: WSReq,\n    teamController: TeamController\n  ) {\n    switch (req.type) {\n      case WSReqType.SET_FACTION: {\n        const { faction } = req;\n        teamController.handleSetFaction(conn, faction);\n        break;\n      }\n      case WSReqType.ENTER_ROOM: {\n        const { reqId, params } = req;\n        // Leave the room the connection is currently joined to, if any\n        if (conn.roomMember !== undefined) this.kickRoomMember(conn.roomMember);\n        if (params === null) {\n          // If we're not part of a room, just return silently\n          // since this might be a holdover from a previous cleanup.\n          break;\n        }\n        const unjoinedMember: UnjoinedRoomMember = {\n          reqId,\n          conn,\n          role: params.role,\n        };\n        if (params.spectateTeamId === undefined) {\n          teamController.handleEnterRoom(unjoinedMember, params);\n          break;\n        }\n        // TODO: turn this on for everyone after hunt end?\n        if (!conn.isAdmin) {\n          this.sendEnterRoomErr(unjoinedMember, {\n            errCode: WSErrorCode.PERMISSION_DENIED,\n          });\n          break;\n        }\n        const spectateTeamController = this.teamControllers.get(\n          params.spectateTeamId ?? \"\"\n        );\n        // Forbid joining with an invalid team id.\n        if (spectateTeamController === undefined) {\n          this.sendEnterRoomErr(unjoinedMember, {\n            errCode: WSErrorCode.SPECTATE_INVALID,\n          });\n          break;\n        }\n        conn.spectateTeamId = params.spectateTeamId;\n        spectateTeamController.handleEnterRoom(unjoinedMember, params);\n        break;\n      }\n      case WSReqType.STEP: {\n        const roomMember = conn.roomMember;\n        if (roomMember === undefined) {\n          this.sendErr(conn, { errCode: WSErrorCode.NO_ROOM });\n          return;\n        }\n        const { room } = roomMember;\n        room.tracker.handleModify();\n\n        this.handleStep(roomMember, room, req.step);\n        this.opts.afterStepBackdoor?.(room);\n        break;\n      }\n      case WSReqType.DECKBUILDING_STEP: {\n        const { slot, deckUpd } = req;\n        teamController.getDeckController(slot).handleDeckbuildingStep(deckUpd);\n        break;\n      }\n      case WSReqType.MASTERY_TREE_STEP: {\n        const { step } = req;\n        teamController.masteryTreeController.handleMasteryTreeStep(step);\n        break;\n      }\n      case WSReqType.NEXT_BATTLE: {\n        const roomMember = conn.roomMember;\n        if (roomMember === undefined) {\n          this.sendErr(conn, { errCode: WSErrorCode.NO_ROOM });\n          return;\n        }\n\n        const { room } = roomMember;\n        for (const destMember of room.members.values()) {\n          // Do not pull spectators along; we don't have a key for them yet\n          if (destMember.conn.spectateTeamId !== undefined) continue;\n          this.sendResp(destMember.conn, {\n            type: WSRespType.NEXT_BATTLE,\n            roomId: room.roomId,\n          });\n        }\n        break;\n      }\n      case WSReqType.SELECT_PUZZLE: {\n        const { hostPuzName, selectedPuzName } = req;\n        if (\n          !teamController.isValidBattle(hostPuzName) ||\n          !teamController.isValidBattle(selectedPuzName)\n        ) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n\n        const err = teamController\n          .getBattleController(hostPuzName)\n          .selectPuzzle(selectedPuzName);\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.SELECT_DECK_FOR_BATTLE: {\n        const { puzName, slot } = req;\n        if (!teamController.isValidBattle(puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n        if (!this.isValidDeckSlot(slot)) {\n          this.sendErr(conn, { errCode: WSErrorCode.DECK_SLOT_OUT_OF_BOUNDS });\n          return;\n        }\n\n        const err = teamController\n          .getBattleController(puzName)\n          .selectDeck(slot);\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.START_AI_BATTLE: {\n        const { puzName, slot, restart, reuseDeck, devKnobs } = req;\n        if (!teamController.isValidBattle(puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n        if (slot !== undefined && !this.isValidDeckSlot(slot)) {\n          this.sendErr(conn, { errCode: WSErrorCode.DECK_SLOT_OUT_OF_BOUNDS });\n          return;\n        }\n        teamController.startAIBattle(\n          conn,\n          puzName,\n          slot,\n          restart,\n          reuseDeck,\n          // A lot of client code has been passing in empty devKnobs\n          // for non-admin connections, rather than omitting it\n          // entirely. To reduce the possiblity of regression, just\n          // silently drop devKnobs if non-admin.\n          conn.isAdmin ? devKnobs : undefined\n        );\n        break;\n      }\n      case WSReqType.RESTORE_CHECKPOINT: {\n        const { puzName, slot } = req;\n        if (!teamController.isValidBattle(puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n        if (!this.isValidDeckSlot(slot)) {\n          this.sendErr(conn, { errCode: WSErrorCode.DECK_SLOT_OUT_OF_BOUNDS });\n          return;\n        }\n\n        teamController\n          .getBattleController(puzName)\n          .restoreCheckpoint(conn, slot);\n        break;\n      }\n      case WSReqType.RESIGN: {\n        const { player, puzName } = req;\n        if (!teamController.isValidBattle(puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n\n        const err = teamController.getBattleController(puzName).resign();\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_CLAIM_TIME_VICTORY: {\n        const err = teamController.pvpController.claimTimeVictory();\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_UNLOCK_DECK: {\n        const err = teamController.pvpController.handleUnlockDeck(conn);\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_MAKE_REQUEST: {\n        const { targetTeamId, autoAccept } = req;\n        if (autoAccept !== undefined && !this.checkIsAdmin(conn)) break;\n        const err = teamController.pvpController.handleMakePvPRequest(\n          targetTeamId,\n          autoAccept\n        );\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_CANCEL_REQUEST: {\n        const { targetTeamId } = req;\n        const err = teamController.pvpController.handleCancelPvPRequest(\n          conn,\n          targetTeamId\n        );\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_ACCEPT_REQUEST: {\n        const { targetTeamId, devKnobs } = req;\n        const err = teamController.pvpController.acceptPvPRequest(\n          targetTeamId,\n          // A lot of client code has been passing in empty devKnobs\n          // for non-admin connections, rather than omitting it\n          // entirely. To reduce the possiblity of regression, just\n          // silently drop devKnobs if non-admin.\n          conn.isAdmin ? devKnobs : undefined\n        );\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_SET_IS_BLOCKED: {\n        const { targetTeamId, isBlocked } = req;\n        const err = teamController.pvpController.setIsTeamBlocked(\n          conn,\n          targetTeamId,\n          isBlocked\n        );\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_ENTER_RING: {\n        const err = teamController.pvpController.enterRing();\n        if (err !== null) this.sendErr(conn, err);\n        break;\n      }\n      case WSReqType.PVP_LEAVE_RING: {\n        teamController.pvpController.leaveRing();\n        break;\n      }\n      case WSReqType.VIEW_PUZZLE: {\n        const { puzName } = req;\n        if (!this.isValidPuzzle(teamController, puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          return;\n        }\n        teamController.viewPuzzle(conn, puzName);\n        break;\n      }\n      case WSReqType.SUBMIT_ANSWER: {\n        const { teamId, puzName, answer } = req;\n        const teamController = this.getTeamController(teamId);\n        if (teamController.teamId !== teamId && !conn.isAdmin) {\n          this.sendErr(conn, { errCode: WSErrorCode.PERMISSION_DENIED });\n          return;\n        }\n        if (!teamController.isValidFishPuzzle(puzName)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          break;\n        }\n        await teamController\n          .getFishPuzzleController(puzName)\n          .handleSubmitAnswerAsync(conn, answer);\n        break;\n      }\n      case WSReqType.MYOSB_REQUEST: {\n        const { teamId, components } = req;\n        const teamController = this.getTeamController(teamId);\n        if (teamController.teamId !== teamId && !conn.isAdmin) {\n          this.sendErr(conn, { errCode: WSErrorCode.PERMISSION_DENIED });\n          return;\n        }\n        if (!teamController.isValidFishPuzzle(PUZ_NAME_MYOSB)) {\n          this.sendErr(conn, { errCode: WSErrorCode.INVALID_PUZZLE });\n          break;\n        }\n\n        await teamController\n          .getFishPuzzleController(PUZ_NAME_MYOSB)\n          .handleMyosbRequest(conn, components);\n        break;\n      }\n      case WSReqType.ADMIN_MODIFY: {\n        if (!this.checkIsAdmin(conn)) break;\n        for (const [teamId, teamUpds] of Object.entries(req.teams ?? {})) {\n          await this.getTeamController(teamId).adminModifyTeamAsync(teamUpds);\n        }\n        if (req.config !== undefined) Object.assign(this.config, req.config);\n        break;\n      }\n      case WSReqType.SUBSCRIBE_TO_UPDATES: {\n        this.subscribeToUpdates(conn, req.scope);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Used to wrap operations that might generate updates, to ensure that\n   * the updates are sent out afterwards.\n   */\n  useUpdatesContext(room: Room, func: () => void) {\n    if (room.multicaster.updates.length !== 0)\n      throw new Error(\"updates leakage from a previous step or async event\");\n    try {\n      func();\n    } catch (err) {\n      const { gameState } = room.engine;\n      console.error(\n        `Error in room ${room.roomId} (team ${\n          gameState[Player.P1].teamData?.teamId ?? \"unknown\"\n        }, puzzle ${gameState.puzName})`\n      );\n      throw err;\n    } finally {\n      this.broadcastUpdates(room);\n    }\n  }\n\n  handleStep(sender: RoomMember, room: Room, step: Step): void {\n    this.useUpdatesContext(room, () => {\n      room.engine.applyStep(sender, step);\n    });\n  }\n\n  sendSystemStep(room: Room, step: SystemStep): void {\n    this.useUpdatesContext(room, () => {\n      room.engine.applySystemStep(step);\n    });\n  }\n\n  handleSystemUpdate(room: Room, upd: Update): void {\n    switch (upd.type) {\n      case UpdateType.SYSTEM_ROOM_COMPLETE: {\n        const { solvedTeamIds, cardUnlocks } = upd;\n        this.gameRoomsController.handleRoomCompleteAsync(\n          room,\n          solvedTeamIds,\n          cardUnlocks\n        );\n        break;\n      }\n    }\n  }\n\n  broadcastUpdates(room: Room): void {\n    const upds = room.multicaster.readOutUpdates();\n    if (upds.length === 0) return;\n    for (const [destMemberId, destMember] of room.members) {\n      const updsToSend = [];\n      for (const updSpec of upds) {\n        const { upd } = updSpec;\n        // Only send updates after a member is enabled.\n        if (upd.type === UpdateType.SYSTEM_ENABLE_MEMBER) {\n          destMember.enabled = true;\n          continue;\n        }\n        const shouldSend =\n          destMember.enabled &&\n          (() => {\n            switch (updSpec.type) {\n              case UpdateBroadcastSpecType.SYSTEM:\n                return false;\n              case UpdateBroadcastSpecType.ROOM_MEMBER_ID:\n                return destMemberId === updSpec.roomMemberId;\n              case UpdateBroadcastSpecType.BROADCAST:\n                return true;\n              case UpdateBroadcastSpecType.ROLE:\n                return destMember.role === updSpec.role;\n              case UpdateBroadcastSpecType.ROLE_FILTER:\n                return updSpec.pred(destMember.role);\n            }\n          })();\n        if (shouldSend) {\n          updsToSend.push(upd);\n        }\n      }\n      if (updsToSend.length > 0) {\n        this.sendResp(destMember.conn, {\n          type: WSRespType.UPDATES,\n          updates: updsToSend,\n        });\n      }\n    }\n\n    // Process system updates.\n    for (const updSpec of upds) {\n      if (updSpec.type !== UpdateBroadcastSpecType.SYSTEM) continue;\n      this.handleSystemUpdate(room, updSpec.upd);\n    }\n  }\n\n  respGlobalUpdate(conn: ClientConnection, upd: GlobalUpdate): void {\n    this.sendResp(conn, {\n      type: WSRespType.GLOBAL_UPDATE,\n      upd,\n    });\n  }\n\n  broadcastGlobalUpdate(scope: GlobalUpdatesScope, upd: GlobalUpdate): void {\n    const subscriptions = this.getSubscriptions(scope);\n    const resp: WSResp = {\n      type: WSRespType.GLOBAL_UPDATE,\n      upd,\n    };\n    this.sendRespMultiple(subscriptions.values(), resp);\n  }\n\n  broadcastAdminGlobalUpdate(upd: GlobalUpdate): void {\n    return this.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.SERVER,\n      },\n      upd\n    );\n  }\n\n  broadcastServerHealthGlobalUpdate(upd: GlobalUpdate): void {\n    return this.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.SERVER_HEALTH,\n      },\n      upd\n    );\n  }\n\n  handleTeamSummaryUpdate(teamId: string, upd: TeamSummaryUpdate): void {\n    // Broadcast team list updates even for hidden teams. We will filter\n    // hidden teams downstream.\n    this.teamListStateTracker.updateTeam(teamId, upd);\n  }\n\n  handleTeamListAddTeam(teamId: string) {\n    const teamController = this.getTeamController(teamId);\n    const teamListState = teamController.getTeamSummaryState();\n    this.teamListStateTracker.addTeam(teamId, teamListState);\n    this.broadcastTeamListGlobalUpdate({\n      type: GlobalUpdateType.TEAM_LIST_UPDATE_STATE,\n      addTeams: { [teamId]: teamListState },\n    });\n  }\n\n  handleTeamListRemoveTeam(teamId: string) {\n    this.teamListStateTracker.removeTeam(teamId);\n    this.broadcastTeamListGlobalUpdate({\n      type: GlobalUpdateType.TEAM_LIST_UPDATE_STATE,\n      removeTeams: { [teamId]: true },\n    });\n  }\n\n  private broadcastTeamListGlobalUpdate(upd: GlobalUpdate): void {\n    return this.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.TEAM_LIST,\n      },\n      upd\n    );\n  }\n\n  private broadcastAndCommitTeamSummaryUpdates() {\n    const { pendingUpds } = this.teamListStateTracker;\n    if (Object.keys(pendingUpds).length <= 0) return;\n    this.broadcastTeamListGlobalUpdate({\n      type: GlobalUpdateType.TEAM_LIST_UPDATE_STATE,\n      updTeams: pendingUpds,\n    });\n    this.statsController.handleTeamSummaryUpdates(pendingUpds);\n    this.teamListStateTracker.commitUpds();\n  }\n\n  broadcastBigBoardGlobalUpdate(upd: GlobalUpdate): void {\n    return this.broadcastGlobalUpdate(\n      {\n        type: GlobalUpdatesScopeType.BIG_BOARD,\n      },\n      upd\n    );\n  }\n\n  broadcastRespToTeam(teamId: string, resp: WSResp): void {\n    const teamConnsForTeam = this.teamConns.get(teamId);\n    if (teamConnsForTeam === undefined) return;\n\n    this.sendRespMultiple(teamConnsForTeam.values(), resp);\n  }\n\n  broadcastNotifToTeam(teamId: string, notif: HuntNotification) {\n    this.broadcastRespToTeam(teamId, {\n      type: WSRespType.NOTIFICATION,\n      notif,\n    });\n  }\n\n  processFastSyncQueue(): void {\n    while (\n      this.syncThrottle.numSyncsInFlight < this.config.syncThrottleParallelism\n    ) {\n      const task = this.syncThrottle.queue.shift();\n      if (task === undefined) break;\n      this.syncThrottle.numSyncsInFlight++;\n      task();\n    }\n  }\n\n  private async waitSyncThrottleAsync() {\n    await new Promise<void>((resolve, reject) => {\n      this.syncThrottle.queue.push(resolve);\n      this.processFastSyncQueue();\n    });\n  }\n\n  private signalSyncThrotleAsync() {\n    this.syncThrottle.numSyncsInFlight--;\n    this.processFastSyncQueue();\n  }\n\n  async runWithSyncThrottleAsync<T>(funcAsync: () => Promise<T>): Promise<T> {\n    let needRelease = false;\n    try {\n      await this.waitSyncThrottleAsync();\n      needRelease = true;\n      return await funcAsync();\n    } finally {\n      // Release the lock, but propagate the error.\n      if (needRelease) this.signalSyncThrotleAsync();\n    }\n  }\n\n  async syncDataThrottledAsync(req: SyncDataBackendReq) {\n    return await this.runWithSyncThrottleAsync(async () => {\n      return await this.backend.syncData(req);\n    });\n  }\n\n  async triggerSlowSyncDownloadAsync(): Promise<void> {\n    if (this.slowSyncTracking.isDownloadInFlight) return;\n    const factionHistorySnapshot = this.statsController.startSync();\n\n    const syncDataReq = {\n      factionHistory: factionHistorySnapshot,\n      // The presence of this field in general indicates that this is\n      // a slow, periodic update, and is used for things like getting\n      // notifications and updating hint counts\n      notifsStartIndex: this.slowSyncTracking.notifsNextIndex,\n    };\n\n    this.slowSyncTracking.isDownloadInFlight = true;\n    const resp = await (async () => {\n      try {\n        return await this.syncDataThrottledAsync(syncDataReq);\n      } catch (err) {\n        // If we encounter an error, just log and try again later.\n        console.error(err);\n      } finally {\n        this.slowSyncTracking.isDownloadInFlight = false;\n      }\n    })();\n\n    if (resp === undefined) return;\n\n    const { notifs, notifsNextIndex } = resp;\n\n    this.statsController.endSync(factionHistorySnapshot);\n\n    if (notifsNextIndex !== undefined)\n      this.slowSyncTracking.notifsNextIndex = notifsNextIndex;\n    for (const data of notifs ?? []) {\n      try {\n        switch (data.type) {\n          case BackendNotificationDataType.HINT_ANSWERED: {\n            // Translate the backend notif into a client notif.\n            const { teamId, puzName } = data;\n            this.broadcastNotifToTeam(teamId, {\n              type: HuntNotificationType.HINT_ANSWERED,\n              puzName,\n            });\n            break;\n          }\n          case BackendNotificationDataType.TEAM_MEMBERS: {\n            const { teamId, members } = data;\n            this.teamControllers.get(teamId)?.handleSetMembers(members);\n            break;\n          }\n          case BackendNotificationDataType.ERRATUM: {\n            const { erratumId, puzzle, published } = data;\n            const newlyPublished =\n              published && !this.errata[erratumId]?.published;\n            this.errata[erratumId] = data;\n            for (const [teamId, team] of this.teamControllers) {\n              // Imperfectly replicate Django logic for when errata are\n              // visible. Hopefully it's close enough.\n              if (newlyPublished && (!puzzle || team.unlockTimes.has(puzzle)))\n                this.broadcastNotifToTeam(teamId, {\n                  type: HuntNotificationType.ERRATUM,\n                });\n              for (const [puzName, battle] of team.battleControllers)\n                battle.broadcastErrataGlobalUpdate({});\n            }\n            break;\n          }\n        }\n      } catch (err) {\n        // Isolate errors to individual notifications.\n        console.error(err);\n      }\n    }\n\n    if (\n      resp.unclaimedHints !== undefined &&\n      resp.unclaimedHints !== this.unclaimedHints\n    ) {\n      this.unclaimedHints = resp.unclaimedHints;\n      this.broadcastAdminGlobalUpdate({\n        type: GlobalUpdateType.SERVER_UNCLAIMED_HINTS,\n        unclaimedHints: resp.unclaimedHints,\n      });\n    }\n\n    // Update hint counts and extra guesses if changed\n    const { teams } = resp;\n    for (const [teamId, teamUpdate] of Object.entries(teams ?? {})) {\n      try {\n        const teamController = this.teamControllers.get(teamId);\n        // If we don't have the team initialized yet, drop the update\n        // as we should get it with the init later.\n        if (teamController === undefined) continue;\n\n        // Check to see if number of hints changed\n        const { hintsTotal, hintsUsed } = teamUpdate;\n        if (\n          teamController.backendOwned.hintsTotal !== hintsTotal ||\n          teamController.backendOwned.hintsUsed.length !== hintsUsed.length\n        ) {\n          teamController.backendOwned = teamUpdate;\n\n          teamController.broadcastTeamGlobalUpdate({\n            type: GlobalUpdateType.TEAM_UPDATE_STATE,\n            hintsInfo: {\n              numHintsTotal: hintsTotal,\n              numHintsUsed: hintsUsed.length,\n            },\n          });\n        }\n        // Note that we shouldn't put this in the above diff since\n        // the hint used allocation may change even if the total\n        // number of hitns used stays the same.\n        const hintsUsedMap = teamController.getHintsUsedMap();\n        this.bigBoardStateTracker.updateTeam(teamId, {\n          numHintsTotal: hintsTotal,\n          unlocks: Object.fromEntries(\n            Object.entries(hintsUsedMap).map(([puzName, numHintsUsed]) => [\n              puzName,\n              { numHintsUsed },\n            ])\n          ),\n        });\n\n        // Check to see if number of guesses per puzzle has changed. This will\n        // not catch cases in which a guess grant for a puzzle has completely\n        // been removed, i.e the number of extra guesses is amended to 0.\n        const { extraGuesses } = teamUpdate;\n        for (const [puzName, numExtraGuesses] of Object.entries(\n          extraGuesses ?? {}\n        )) {\n          const fishPuzzleController =\n            teamController.getFishPuzzleController(puzName);\n          if (fishPuzzleController.numExtraGuesses !== numExtraGuesses) {\n            fishPuzzleController.numExtraGuesses = numExtraGuesses;\n            fishPuzzleController.handleUpdateNumGuessesRemaining();\n          }\n        }\n      } catch (err) {\n        // Isolate errors to the team being synced.\n        console.error(err);\n      }\n    }\n\n    // Check to see if any extra guesses have gone down to 0\n    for (const teamController of this.teamControllers.values()) {\n      try {\n        const teamUpdate = teams ? teams[teamController.teamId] : undefined;\n        const extraGuesses = teamUpdate ? teamUpdate.extraGuesses : {};\n        for (const fishPuzzleController of teamController.fishPuzzleControllers.values()) {\n          const newExtraGuesses =\n            extraGuesses[fishPuzzleController.puzName] ?? 0;\n          if (fishPuzzleController.numExtraGuesses !== newExtraGuesses) {\n            fishPuzzleController.numExtraGuesses = newExtraGuesses;\n            fishPuzzleController.handleUpdateNumGuessesRemaining();\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  async triggerSlowSyncUpload(): Promise<void> {\n    await this.gameRoomsController.triggerSlowSyncAsync();\n    await this.slowSyncTracking.decksAndMasteryTreesSyncController.syncLoopController.triggerLoopAsync();\n    await this.slowSyncTracking.checkpointsSyncController.syncLoopController.triggerLoopAsync();\n    await this.slowSyncTracking.miscTeamStateSyncController.syncLoopController.triggerLoopAsync();\n  }\n\n  private async runPeriodicSyncTasks(): Promise<void> {\n    // If a fast sync fails, the periodic task handler is responsible\n    // for kicking it off again after a while.\n    for (const [teamId, teamController] of this.teamControllers) {\n      try {\n        await teamController.fastSyncTracking.syncLoopController.triggerLoopAsync();\n      } catch (err) {\n        // Isolate fast sync problems to within individual teams.\n        console.error(err);\n      }\n    }\n\n    try {\n      await this.triggerSlowSyncUpload();\n    } catch (err) {\n      // Isolate errors for the slow sync upload.\n      console.error(err);\n    }\n\n    try {\n      await this.triggerSlowSyncDownloadAsync();\n    } catch (err) {\n      // Isolate errors for the slow sync download.\n      console.error(err);\n    }\n  }\n\n  runPeriodicTasks(): void {\n    // Allow multiple periodic tasks runners to run at once,\n    // so that if any gets stuck, future ones may pick up where\n    // earlier ones left off.\n    (async () => {\n      if (!this.isReady) {\n        // If init failed, try again.\n        await this.tryInitAsync();\n        return;\n      }\n\n      try {\n        const nowTime = Date.now();\n        const { lastDumpTime, lastUserTime, lastSystemTime } =\n          this.metricsDumpTracking;\n        // default interval of 30s\n        if (\n          nowTime >\n          lastDumpTime + (this.opts.metricsDumpInterval ?? 30 * 1000)\n        ) {\n          const { user: userTime, system: systemTime } =\n            this.opts.getCpuUsage?.() ?? { user: 0, system: 0 };\n          const userTimeUsage =\n            (userTime - lastUserTime) / 1000 / (nowTime - lastDumpTime);\n          const systemTimeUsage =\n            (systemTime - lastSystemTime) / 1000 / (nowTime - lastDumpTime);\n          this.metricsDumpTracking = {\n            lastDumpTime: nowTime,\n            lastUserTime: userTime,\n            lastSystemTime: systemTime,\n            userTimeUsage,\n            systemTimeUsage,\n          };\n          this.opts.logMetrics?.(\n            `[${nowTime}] Metrics: ${JSON.stringify([\n              0, // version\n              this.fastSyncMetrics.getSummary().totNumEvents,\n              this.slowSyncMetrics.getSummary().totNumEvents,\n              this.checkAnswerMetrics.getSummary().totNumEvents,\n              this.numAuthsMetrics.getSummary().totNumEvents,\n              this.numRequestsMetrics.getSummary().totNumEvents,\n              this.syncThrottle.queue.length,\n              this.numActivePeriodicTasksHandlers,\n              this.numPendingSubmissionTasks,\n              this.gameRoomsController.slowSyncTracking\n                .completedRoomsSyncController.roomsToSync.length,\n              this.queuedTeamInits.size,\n              userTime,\n              systemTime,\n            ])}`\n          );\n        }\n      } catch (err) {\n        console.error(err);\n      }\n\n      this.numActivePeriodicTasksHandlers++;\n      try {\n        if (this.cursorEventsMetrics.prevNumEvents > 0) {\n          this.opts.logCursorsMetrics?.(\n            `[${new Date().toLocaleString()}] Cursor events: ${this.cursorEventsMetrics.getSummaryString()}`\n          );\n        }\n      } catch (err) {\n        console.error(err);\n      }\n\n      if (!(this.opts.cursorsMode ?? false)) {\n        try {\n          this.broadcastServerHealthGlobalUpdate({\n            type: GlobalUpdateType.SERVER_HEALTH_UPDATE_STATE,\n            slowSyncMetrics: this.slowSyncMetrics.getSummary(),\n            fastSyncMetrics: this.fastSyncMetrics.getSummary(),\n            checkAnswerMetrics: this.checkAnswerMetrics.getSummary(),\n            numAuthsMetrics: this.numAuthsMetrics.getSummary(),\n            numRequestsMetrics: this.numRequestsMetrics.getSummary(),\n            ...this.teamMetricsTracker.getAndCommitUpds(),\n            fastSyncQueueLength: this.syncThrottle.queue.length,\n            numActivePeriodicTasksHandlers: this.numActivePeriodicTasksHandlers,\n            numPendingSubmissionTasks: this.numPendingSubmissionTasks,\n            numCompletedRoomsToSync:\n              this.gameRoomsController.slowSyncTracking\n                .completedRoomsSyncController.roomsToSync.length,\n            teamInitQueueLength: this.queuedTeamInits.size,\n            numActiveConns: this.numActiveConns,\n            userTimeUsage: this.metricsDumpTracking.userTimeUsage,\n            systemTimeUsage: this.metricsDumpTracking.systemTimeUsage,\n            dirtyStateUpd: this.dirtyStateTracker.pendingDirtyStateUpd,\n          });\n          this.dirtyStateTracker.commitUpds();\n        } catch (err) {\n          // Isolate problems with server health reporting.\n          console.error(err);\n        }\n\n        try {\n          this.broadcastAndCommitTeamSummaryUpdates();\n        } catch (err) {\n          // Isolate problems with team list reporting.\n          console.error(err);\n        }\n\n        try {\n          const { pendingUpds } = this.bigBoardStateTracker;\n          if (Object.keys(pendingUpds).length > 0) {\n            this.broadcastBigBoardGlobalUpdate({\n              type: GlobalUpdateType.BIG_BOARD_UPDATE_STATE,\n              updTeams: pendingUpds,\n            });\n            this.bigBoardStateTracker.commitUpds();\n          }\n        } catch (err) {\n          // Isolate problems with big board reporting.\n          console.error(err);\n        }\n\n        await this.runPeriodicSyncTasks();\n\n        try {\n          // This involves checking all PvP requests for expiry.\n          // While this can theoretically grow as large as quadratic\n          // in the number of teams, realisitically it is very\n          // unlikely for us to reach that since requests are\n          // short-lived.\n          for (const teamController of this.teamControllers.values()) {\n            teamController.pvpController.unlockDeckIfUnneeded();\n          }\n        } catch (err) {\n          // Isolate problems with auto-unlocking decks.\n          console.error(err);\n        }\n      }\n      this.numActivePeriodicTasksHandlers--;\n    })();\n  }\n\n  recordSlowSyncPacket(): void {\n    this.slowSyncMetrics.record();\n  }\n}\n","import {\n  HuntJwtPayload,\n  AuthenticationInterface,\n} from \"./AuthenticationInterface\";\n\nexport class MockAuthenticationInterface implements AuthenticationInterface {\n  verify(jwt: string): HuntJwtPayload | null {\n    // In mock authentication, just use the payload directly as the JWT.\n    return JSON.parse(jwt) as HuntJwtPayload;\n  }\n}\n","import localforage from \"localforage\";\nimport ALL_PUZZLES from \"engine/puzzles/all-puzzles-client\";\nimport ALL_CARDS from \"engine/cards/all-cards-client\";\nimport ALL_MASTERIES from \"engine/puzzles/all-masteries-client\";\nimport ALL_KEYFRAMES from \"engine/puzzles/all-keyframes-client\";\nimport { PuzzlesDB } from \"engine/puzzles/puzzle-data\";\nimport { makeCardsDB } from \"engine/cards/CardsDB\";\nimport { makeMasteriesDB } from \"engine/puzzles/mastery-data\";\nimport { GameServer } from \"game-server/GameServer\";\nimport { MockBackendInterface } from \"game-server/backend-interface/MockBackendInterface\";\nimport { MockAuthenticationInterface } from \"game-server/authentication-interface/MockAuthenticationInterface\";\n\nexport type MockServerOpts = {\n  dumpBackendRequests?: boolean;\n};\n\n/** The key that the mock DB is stored into in local storage. */\nconst LOCAL_FORAGE_KEY = \"__game_mockdb\";\n\nlet gameServer: GameServer | undefined = undefined;\nlet isForceResetPending = false;\n\nconst makeMockServer = async (\n  opts: MockServerOpts,\n  forceReset?: boolean\n): Promise<GameServer> => {\n  forceReset ??= false;\n\n  if (gameServer === undefined || (forceReset && !isForceResetPending)) {\n    // No localStorage in worker context, so we use IndexedDB.\n    localforage.config({\n      driver: localforage.INDEXEDDB,\n    });\n\n    if (forceReset) {\n      isForceResetPending = true;\n      await localforage.clear();\n    }\n\n    const prevGameServer = gameServer;\n\n    const puzzlesDB = new PuzzlesDB(ALL_PUZZLES);\n    const cardsDB = makeCardsDB(ALL_CARDS);\n    const masteriesDB = makeMasteriesDB(ALL_MASTERIES);\n    gameServer = new GameServer(\n      puzzlesDB,\n      cardsDB,\n      masteriesDB,\n      ALL_KEYFRAMES,\n      {\n        backend: new MockBackendInterface(\n          puzzlesDB,\n          cardsDB,\n          masteriesDB,\n          await localforage.getItem(LOCAL_FORAGE_KEY),\n          async (db) => {\n            await localforage.setItem(LOCAL_FORAGE_KEY, db);\n          },\n          !forceReset\n        ),\n        // We'll be dumping WS messages from the client side,\n        // so don't dump them from the server side.\n        dumpWsMessages: false,\n        dumpBackendRequests: opts.dumpBackendRequests ?? false,\n        periodicSyncInterval: 200, // 0.2s\n        authInterface: new MockAuthenticationInterface(),\n        // @ts-expect-error: Pretend all WSReqs are valid to skip typia\n        // in offline mode.\n        parseWSReq: (req) => true,\n      }\n    );\n    await gameServer.initAsync();\n\n    if (prevGameServer !== undefined) {\n      prevGameServer.teardown();\n    }\n\n    if (forceReset) isForceResetPending = false;\n  }\n  return gameServer;\n};\nexport default makeMockServer;\n","import { MockServerInterface } from \"game-server/server-interface/MockServerInterface\";\nimport {\n  ServerInterface,\n  ServerInterfaceType,\n} from \"game-server/server-interface/ServerInterface\";\nimport { mockServerOpts } from \"settings\";\nimport makeMockServer from \"makeMockServer\";\n\nconst makeClientMockServerInterface = async (\n  type: ServerInterfaceType\n): Promise<ServerInterface> => {\n  return new MockServerInterface(await makeMockServer(mockServerOpts));\n};\nexport default makeClientMockServerInterface;\n"],"names":["MockServerInterface","gameServer","connUid","__publicField","msg","callbacks","onOpen","onResp","afterDisconnect","handleMsg","removeClient","f","module","e","t","n","r","s","o","a","require","i","l","_dereq_","exports","global","Mutation","scheduleDrain","called","observer","nextTick","element","channel","scriptEl","draining","queue","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","safelyResolveThenable","onRejected","onFulfilled","promise","unwrap","QueueItem","value","func","returnValue","self","result","tryCatch","getThen","thenable","error","obj","then","onError","onSuccess","tryToUnwrap","out","resolve","reject","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","_classCallCheck","instance","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","parts","properties","Builder","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","length","buf","arr","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","ex","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","options","initPromises","ignoreErrors","j","k","getItem","transaction","store","req","iterate","iterator","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","advanced","keys","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","str","deserialize","type","blobType","matcher","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","args","results","getItem$1","iterate$1","rows","item","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js","allKeyframesJson","ALL_KEYFRAMES","BackendInterfaceController","opts","resp","teamId","isCorrect","BackendSyncReqController","serverConfig","syncType","onDirtyStateChange","SyncTracker","isInactive","isHidden","displayName","faction","factionScoreContributions","decks","masteryTree","answerSubmissions","unlocks","cardUnlocks","viewTimes","preferredDecks","puzzleSelections","checkpoints","blockedTeams","isInRing","cutsceneChoices","puzName","puzSubmissions","_a","_b","kFaction","factionScoreContribution","slot","pendingPuzSubmissions","answer","submissions","unlock","pendingUnlock","cardUnlock","pendingCardUnlock","pendingSlot","selection","pendingSelection","states","pendingStates","state","pendingState","isBlocked","pendingIsBlocked","snapshot","SyncLoopController","runSyncAsync","numCallbacks","isLoopComplete","SyncObjectType","timeNow","DirtyStateType","success","TeamBattleController","selectedPuzName","selectedDeckSlot","server","dirtyState","puzzle","conn","errata","erratumId","text","timestamp","published","upd","subscriptions","GlobalUpdatesScopeType","WSRespType","GlobalUpdateType","room","GlobalStateBattleRoomStatus","gameState","GamePhase","playerCandidates","Player","player","teamData","membersToKick","roomMember","spectateTeamId","players","reuseDeck","allowInvalidDecks","inspector","deckPlayers","deckSelection","deckSelections","role","prevMembers","prevRole","Role","enabledMasteries","roomStatus","PUZ_NAME_PVP","turnNumber","roomId","engine","slots","checkpoint","serialized","isCheckpointSlotValid","WSErrorCode","serializedCheckpoint","deck","deckSlot","isSamePuzzle","newRoom","oldRoomId","gainedScore","StepType","unjoinedMember","defaultRole","restoring","BATTLE_GROUP_NAME_INSTANCER","puzData","battleGroupData","isInstanceable","failedChecks","cloneDeck","roomEntry","hostPuzName","savedRoom","existingRoomTracker","PVP_REQUEST_EXPIRY_TIME_MS","isPvPRequestExpired","pvpReq","expiryTime","TeamPvPController","opponent","opponentOf","startTurnTime","PVP_TURN_TIME_LIMIT","PVP_MASTERY_ID","targetTeamId","targetTeamController","battleController","targetController","existingReq","commitDeckSelectionErr","HuntNotificationType","autoAccept","makePvPRequestErr","acceptPvPRequestErr","existingOutgoingReq","existingIncomingReq","ring","indexInRing","devKnobs","forceP1","targetBattleController","selfDeckSelection","oppDeckSelection","isP1","broadcast","fromTeamId","toTeamId","fromController","toController","PvPLobbyController","TeamFishPuzzleController","numWrongGuesses","numExtraGuesses","onDone","CheckAnswerBackendRespType","submittedAnswer","submission","components","ansString","possible","MYOSB_DATA","letter","poss","PUZ_NAME_MYOSB","DeckController","deckUpdCards","deckUpd","cardName","val","applyDeckUpdate","isDeckUpdateValid","TeamMasteryTreeController","getMasteriesFromMasteryTree","masteryId","masteryTreeUpd","teamController","origMasteries","applyMasteryTreeUpdate","newMasteries","masteriesToEnable","masteriesToDisable","makeBattleSolveAnswerSubmission","PUZ_NAME_MASTERY_TREE_PROMPT","changedMasteries","REPUTATION_BOOST_MASTERY_ID","hasReputationBoost","hasPvP","pvpController","SOLVE_COUNTS_MASTERY_ID","enabledMasteriesDiff","step","puzzlesDB","availableAnswers","battleGroupName","PUZ_NAME_MASTERY_TREE","normalizeAnswer","isMasteryTreeStepValid","masteryTreeStepToUpdate","TeamController","initTeamData","userId","members","views","unlockTimes","solveTimes","speedrunTimes","backendOwned","NUM_DECK_SLOTS","IntervalMetrics","HEALTH_MONITORING_INTERVAL_MS","numWrongGuessesForPuzzle","numExtraGuessesForPuzzle","rooms","existingController","createNewDeck","deckController","numPuzzles","isInstancer","controller","unlockTime","order","puzState","mapPos","isLegendary","preBattleDialogue","postBattleDialogue","isCutscene","battleGroupState","isUsedForSolveCount","isTempBlocked","hintsUsedMap","solveTime","PUZ_NAME_POST_FINAL_BATTLE","masteryTreeController","restart","teamIds","params","syncController","packet","didSyncSucceed","submissionSolves","correctSubmission","answers","battleGroupUnlocks","solve","puzzlesToLock","instancers","firstSubpuzzle","instancerPuzName","allUnlocks","mastery","effectText","puzzles","battleGroups","syncLoopController","solvesToDeleteSet","unlocksToDeleteSet","firstPacket","answerSubmission","genPacket","combinedSolves","addBattleSolve","solveTriggersPerBattleGroup","triggersBattleGroupSolve","numSolveTriggers","solveReq","combinedUnlocks","addUnlock","BATTLE_GROUP_NAME_TUTORIAL","combinedCardUnlocks","progressPerUnlockGroup","cardUnlockGroups","unlockMult","dstUnlockGroupId","cardUnlockGroupId","unlockReq","srcUnlockGroupId","cardData","existingUnlock","PUZ_NAME_FIRST_ANSWER","PUZ_NAME_FIRST_LEGENDARY","PUZ_NAME_PRE_FINAL_BATTLE","overrideSolved","overrideUnlocked","overrideCardUnlocked","overrideMasteriesList","overrideDecks","overrideMasteryTree","isSolved","isUnlocked","teamConns","FACTIONS_MASTERY_ID","changes","change","changedContributions","contribution","teamFaction","speedrunTime","prevBestTime","times","isUsedForGlobalSpeedrunTime","time","acc","cur","thornsHandler","ev","permanent","attacker","ctx","buffPermanent","target","buff","source","power","health","msgParts","buffAdjacentHandler","condition","adjacentPermanent","COMMON_COUNTER_DATA","CounterType","PermanentEventType","event","counter","ColorSymbol","counterIndex","newVal","extractOptPermanent","index","opt","EffectOptType","extractOptSlot","extractOptChoiceString","onAbilityAttack","COMMON_CARD_EFFECTS","destroyedPermanent","CardType","attackTarget","moveTarget","damage","_attacker","maxIgnore","currentIgnored","ignoredDiff","reflectedSlot","color","defender","played","owner","SCRY_N","topN","playedName","card","destroyTarget","victim","targets","oppPermanent","permanent1","permanent2","slot1","slot2","terrain1","terrain2","targetName","beforePermanents","clone","newPermanents","_permanent","attackerColor","target1","target2","base","behindTargets","creature","swapTarget","_","PUZZLE_51_CARDS","mergeEffectsDB","effectsDB","auxEffectsDB","auxEffects","getEffectsDB","allSpecs","cardsDB","spec","getCountersDB","countersDB","effects","counterType","counterData","CommonSpec","RadlandsSpec","RobotSpec","ai","column","row","AbilityType","Tutorial1Spec","enemyUnit","enemyUnits","playerUnit","winner","solves","Tutorial2Spec","hog","hamlet","keyframe","Tutorial3Spec","ext","areSlotsEqual","camp","aiCreatures","playerCreatures","Tutorial4Spec","Tutorial5Spec","turnVal","rowPref","colPref","cardPlayed","c","Tutorial6Spec","aiCamps","reflectSlot","reflectPermanent","areReflectionsEqual","reflection","reflectOpt","effectOpt","permanentId","newPermanent","reflectOptResolved","isDefenderAboutToDie","isAlreadyDead","UNITS_WITH_ATTACK_EFFECTS","Puzzle4Spec","doesPlayerHaveBases","bases","baseColumns","tryStep","sm","StepMaker","handCardId","spawnCardName","handCard","reflectedPermanent","attackerId","defenderId","reflectAttacker","reflectDefender","isSuccess","abilityType","effectOpts","firstOpt","reflectedEffectOpts","silentSpawn","permToCopy","reportCopyFailed","newAttacker","newDefender","isDefenderReflectedAttacker","tempAttacker","effectOptsResolved","newEffectOpts","permanents","DAMAGE_MAPS","mintCreatures","Puzzle8Spec","name","weaknesses","defenderColor","mints","mint","numToSpawn","mintsRandom","spawned","creatureNameRandom","creatures","moved","UNIT_NAME_WHITE_PIECE","UNIT_NAME_B","UNIT_NAME_P","UNIT_NAME_Q","UNIT_NAME_R","unitAI","unit","here","unitAttacked","Puzzle9Spec","units","unitAIFunc","col","ourKeep","dr","dc","adjSlot","blocker","foundAttacker","specialThreatened","Speaker","N","slotToIndex","WALLS","WALL_NAME","SokobanUpdateType","SokobanUpdateType2","SokobanState","actors","locations","perm","maxPower","rowDiff","colDiff","nextSlot","startSlot","currSlot","allSlots","currWeight","canMove","thingToAttemptToPush","newWeight","allUpdates","newSlot","CARD_EFFECTS_BASE","initWallCounters","FIGHTER_ALLY_NAME","initFriendlyUnitCounters","EXPLOSIVES_NAME","ZAP_PUSHER_NAME","ARMORED_CAMP_NAME","ARMORED_FIGHTER_ENEMY_NAME","pusherName","ALL_PUSHERS","initPusherCounters","GAME_SPEC_BASE","playerUnitsInOrder","ALL_AUTO_BATTLERS","targetUnits","potentialTarget","BOX_NAME","pusher","oldSlot","updates","update","Puzzle22Specs","LEVEL_INDICES","LEVEL_INITERS","GAMES","BLACK_NAME","WHITE_NAME","COW_NAME","cowQuery","isCow","transformCows","cows","cow","getAttacks","level","game","getKillableSlot","move","shovePermanent","emptySlots","attacks","spawnCows","char","blockingPermanent","cowName","moveCows","moves","cowsToMove","from","to","tries","cowToMove","Puzzle28Spec","killableSlot","killableCow","barn","gamesArr","gameIndex","Puzzle31Spec","aiBase","healed","mirrorSpawns","slimeSpawnOrder","dotSlimes","dashSlimes","slimeAttackAI","dotSlimeAI","dashSlimeAI","directions","idx","dir","slimeHandler","child","spawnSlot","emptySlot","slime","namePrefix","Puzzle44Spec","curr","poison","unitName","slimeKilledOrder","correctOrder","BASE_SPEC","isBargle","isSwargle","morgles","morgle","spawnAt","Puzzle46Spec_1","Puzzle46Spec_2","Puzzle46Spec_3","Puzzle46Spec_4","Puzzle46Spec_5","Puzzle50CommonSpec","failed","Check","extraState","timer","globalConstraints","clues","showSolution","turn","playerBase","id","failedPermanents","grid","convertToGrid","splitComponents","getCheckerMakerId","ok","globalCheckerMakers","permanentToColor","localCheckerMakers","correct","isInBounds","cell","isCellEqual","b","hasEqualCell","splitComponentsMaker","neighborsOf","colorOf","unseenCells","cells","add","unseen","neighbor","count","connected","up","down","left","right","numOnes","CanalView","Cave","Kurodoko","Kurotto","LightAndShadow","Minesweeper","Mochikoro","Nurikabe","Slitherlink","Snake","Tasquare","YinYang","Neighbors","RowColumn","Visions","Areas","Single","Ones","Rectangles","Squares","TwoSnakes","TouchingPaths","ConnectedVision","RectangleAreas","Final","shuffle","makePuzzle50Spec","INFO","isInvulnerable","puzzleId","makePuzzle50FinalSpec","Puzzle50_1Spec","Puzzle50_2Spec","Puzzle50_3Spec","Puzzle50_4Spec","Puzzle50_5Spec","Puzzle50_6Spec","Puzzle50_7Spec","Puzzle50_8Spec","Puzzle50_9Spec","Puzzle50_10Spec","Puzzle50_11Spec","Puzzle50_12Spec","Puzzle50_13Spec","Puzzle50_14Spec","Puzzle50_15Spec","Puzzle50_16Spec","Puzzle50_17Spec","Puzzle50_18Spec","Puzzle50_19Spec","Puzzle50_20Spec","Puzzle50_21Spec","Puzzle50_22Spec","Puzzle50_23Spec","Puzzle50_24Spec","Puzzle50_FinalSpec","OLYMPIC_WINTER_SPORTS","FIRST_151_POKEMON","COLORS","FRUITS","DAY_OF_WEEK_ABBREVIATIONS","IATA_AIRPORT_CODES_FLORIDA","NFL_TEAM_NAMES","CURRENCY_CODES","SYNONYMS_FOR_TRICKED","ONES_DIGITS","TENS_DIGITS","STANDALONE_NUMBERS","WEAPONS","OPTICAL_COMPONENTS","KENTUCKY_DERBY_WINNERS","SUMMER_OLYMPIC_SPORTS","LEAGUE_OF_LEGENDS_CHAMPIONS","US_STATES","MONTHS","TREES","AI_BASE_ID","BEEHIVE_ID","LARVA_ID","NUM_STARTING_GEMS","AI_CARD_IDS","NUMBERS","getAllStrings","cols","res","string","containsOneOf","shouldContain","allStringsBeforeAnyDespawns","substring","beeOrLarvaHandlers","cardEffects","newPermanentId","Puzzle51Spec","amt","aiTurnNumber","bearhive","bearResults","completeBear","isHappy","bearName","despawnAndUpdateCounters","cardId","category","cardToDespawn","allStrings","minimumValue","number","isSatisfied","allStrings2","maximumValue","generatedNumbers","tensDigit","tensValue","onesDigit","onesValue","showHint","hintDialogue","noSadBears","DINOSAUR_TAIL_TURNS","BOAR_TUSKS_TURNS","DRYAD_HORNS_TURNS","COW_UDDER_TURNS","BEE_WINGS_TURNS","KERO_TURNS","announceDoom","dialogue","turnsLeft","summonDoomHandler","turns","endTurnDoomHandler","doomValue","cowLegEffects","Puzzle76Spec","me","sharedExt","udder","UpdateType","doomUnit","turnsToDoom","manhattanDistance","puzzleLength","a1color","damageFuncs","_me","makeGostakHandler","gostakName","Puzzle80Specs","damages","announceAsteroidLand","plural","announceAsteroidTime","Puzzle82_1Spec","loseCheck","ASTEROID_1_NAME","makeDecrementer","asteroidExplanation","perms","asteroidWithDoom","asteroid","Puzzle82_2Spec","ASTEROID_2_NAME","Puzzle82_3Spec","ASTEROID_3_NAME","startingHealth","adjustment","currentHealth","healthToRemove","explanation","ALL_CARDS","NUM_UNITS","OUR_DESTINATION","ENEMY_DESTINATION","toSlot","BASE_EFFECT","Puzzle90Spec","stillAlive","cards","dest","destination","Puzzle98RampSpec","maxHealth","Puzzle98ShadowSpec","totalPower","Puzzle98SplitterSpec","spawnedPermanent","toSpawn","Puzzle98YinYangSpec","Puzzle98VultureSpec","Puzzle53Spec","yurt","getSlotsEuclideanDistance","round1Specs","spawnHogsAndLogs","performAttacksOrHogMoves","round2Specs","getAIBases","spawnStacks","round4Specs","stacktory","round3Specs","aiUnitsInOrder","unitToSpawn","getFactoryOutput","slotToSpawn","emptyAiSlotsInOrder","Puzzle101Specs","hogAttackAI","attackableUnits","colDelta","logAttackAI","attackAI","BASES","slotsInPreferenceOrder","baseCols","mustPlayHog","mustPlayLog","Puzzle109Spec","BASE1","otherP","BOAR","boar","boarAtk","hasTrain","BASE2","farms","farm","tryFreeMove","attackableWithoutMovingUnit","TestBattleSpec","makeSimpleCutsceneSpec","firstKeyframe","ALL_SERVER_ONLY_GAME_SPECS","PUZ_NAME_COMMON","Puzzle93Spec","getGameSpec","sharedGameSpec","ALL_SHARED_GAME_SPECS","gameSpec","Controller","multicaster","roomMemberId","phase","drawPile","gems","newCardName","permanent1Id","permanent2Id","nextTopCard","shouldPopDrawPile","fullUpd","drawPileIndex","discard","counterVal","message","fullState","p1State","p2State","updHidden","STARTING_HAND_SIZE","Engine","getCardUnlocks","keyframes","checkpointHandler","cutsceneChoiceHandler","gameStateOpt","makeInitGameState","kPlayer","playerTeamData","Inspector","reducer","Reducer","HooksEngineAPI","HooksAIAPI","HooksOutOfTurnAIAPI","engineOnly","isLoser","topCard","SCRY_TOP_CARD_MASTERY_ID","noShuffle","shuffleDeck","deckCardList","deckPriorityCard","deckOverride","deckToCardList","priorityCard","PRIORITY_CARD_MASTERY_ID","priorityCardIndex","width","loseReason","solvedTeamIds","cardUnlocksData","otherPermanent","ignoreInvulnerability","effectsAdjust","insteadOfDamaged","undamagedShell","maxDamageReceivable","netDamageReceived","shellDamage","healthDamage","isIndestructable","realDamage","expiry","powerDelta","healthDelta","handler","shouldExpire","devExtraGemsPerTurn","extraGems","payment","otherPlayer","isFactionCard","doesCardColorBelongToFaction","defenderData","gemColors","onAbility","dialogOptionIndex","dialogOptions","activateKeyframeEndGame","LoseReason","nextIds","getKeyframeById","keyframeId","getKeyframeIndexById","nextKeyframe","nextId","isValid","stepResolved","shouldSkipExecute","stepToPlayer","playerCardUnlocks","playerState","stepNumber","prevTurnsTime","stats","clientGameState","sender","UpdateBroadcastSpecType","UpdatesMulticaster","applyUpdateFunc","canRoleControlPlayer","upds","MiscTeamStateSyncController","syncPacket","DecksAndMasteryTreesSyncController","deckControllers","teamSyncPacket","tracker","masteryTreeTracker","CheckpointsSyncController","numCheckpointsInPacket","battleControllers","ActiveRoomsSyncController","syncTrackers","isPartialTeamSync","createTime","p1TeamData","p2TeamData","p1TeamId","p2TeamId","lockedRoomIds","CompletedRoomsSyncController","GameRoomsController","existingPuzData","specName","StaticInspector","dirtyStateUpd","activeRoom","teamRooms","roomTracker","existingTeamRooms","newTeamRooms","prevRoomId","prevRoomTracker","otherMember","fullPuzName","getPrimaryPuzName","isPvP","teamControllers","totalTime","speedrunPlayers","playerScores","factionScore","roomToSync","teamDirtyStateUpd","score","StatsController","makeInitFactionScores","RankedLeaderboard","record","record1","record2","unlockCount","solveCount","sortedList","rank","SPEEDRUN_LEADERBOARD_SUMMARY_LENGTH","factionScoreChanges","updateFactionHistory","solvesToDelete","unlocksToDelete","solvesToAdd","unlocksToAdd","forceIfHidden","timeBucket","factionHistoryToBroadcast","diffFactionScore","factionScoresToUpdate","updatedPuzzles","puzStats","leaderboard","oldIndex","newIndex","removeRes","newLast","contrib","rankStart","rankEnd","needUpdateTopRankings","updateStart","updateEnd","updateIndex","updateTeamId","teamNameDisplayUpds","teamUpd","teamNameDisplayUpd","teamSummaryUpdateToTeamNameDisplayUpdate","CursorsController","teamCursorGroups","newTeamCursorGroups","cursorGroupName","cursorGroup","newCursorGroup","CursorGroup","CursorEventType","srcConn","queuedEvents","dstConn","events","connId","safeParseCursorEvent","rX","rY","GameServer","masteriesDB","ServerDirtyStateTracker","BigBoardStateTracker","TeamListStateTracker","TeamMetricsTracker","CURSOR_EVENTS_MONITORING_INTERVAL_MS","teamConnsForTeam","memberId","gameServerId","teams","factionHistory","maxGuessesPerPuzzle","huntStartTime","huntEndTime","notifsNextIndex","unclaimedHints","client","scopeType","bigBoardState","reqId","reqRole","scope","puzzlesDict","battleGroupsDict","battleGroup","masteriesDict","masteryData","hintsTotal","hintsUsed","fishPuzzleController","conns","serializedResp","WSReqType","jwt","payload","isAdmin","parsedEvent","spectateTeamController","destMember","teamUpds","destMemberId","updsToSend","updSpec","teamListState","pendingUpds","notif","funcAsync","needRelease","factionHistorySnapshot","syncDataReq","notifs","data","BackendNotificationDataType","newlyPublished","team","battle","teamUpdate","numHintsUsed","extraGuesses","newExtraGuesses","nowTime","lastDumpTime","lastUserTime","lastSystemTime","userTime","systemTime","userTimeUsage","systemTimeUsage","_d","_c","_f","_e","MockAuthenticationInterface","LOCAL_FORAGE_KEY","isForceResetPending","makeMockServer","forceReset","localforage","prevGameServer","PuzzlesDB","ALL_PUZZLES","makeCardsDB","makeMasteriesDB","ALL_MASTERIES","MockBackendInterface","makeClientMockServerInterface","mockServerOpts"],"mappings":"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iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,EAAK,CACH,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,gCACX,EACA,GAAM,CACJ,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCACT,QAAS,iCA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GAAkBpB,GAAiBX,GAAO,GAAO,EAAI,EAGrDgC,GAAkBrB,GAAiBV,GAAQ,GAAO,EAAI,EACtDgC,GAAkBtB,GAAiBT,GAAM,GAAO,EAAI,EAEpDgC,GAAkBvB,GAAiBR,GAAY,GAAO,EAAI,EAG1DgC,GAAkBxB,GAAiBP,GAAS,GAAO,EAAI,EACvDgC,GAAkBzB,GAAiBN,GAAW,GAAO,EAAI,EAGzDgC,GAAkB1B,GAAiBL,GAAe,GAAO,EAAK,EAC9DgC,GAAkB3B,GAAiBJ,GAAiB,GAAO,EAAK,EAChEgC,GAAkB5B,GAAiBH,GAAgB,GAAO,EAAK,EAG/DgC,GAAqBzB,GAAsBN,GAAO,GAAO,EAAK,EC/J9DgC,OAA4B,IAAI,CAC3C,WACA,UACA,UACA,OACA,SACA,UACA,WACA,QACF,CAAC,EAEYC,OAAwB,IAAI,CACvC,UACA,WACA,WACA,WACA,UACA,SACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,OACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,WACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,KACF,CAAC,EAEYC,OAAa,IAAI,CAC5B,OACA,WACA,SACA,SACA,QACA,WACA,UACA,OACA,WACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,OACA,SACA,QACA,OACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,SACA,SACA,SACA,WACA,SACA,QACA,WACA,OACA,QACA,UACA,OACA,WACA,QACA,SACA,QACA,OACA,WACA,WACA,UACA,WACA,OACA,SACA,WACA,OACA,OACA,QACA,OACA,QACA,UACA,UACA,UACA,WACA,OACA,OACA,QACA,WACA,WACA,UACA,WACA,SACA,QACA,UACA,MACA,UACA,UACA,SACA,QACA,OACA,OACA,OACA,WACA,QACA,UACA,QACA,OACA,QACA,OACA,QACA,QACA,UACA,WACA,WACA,QACA,UACA,WACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,OACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,QACA,WACA,OACA,WACA,OACA,UACA,QACA,OACA,UACA,SACA,QACA,MACA,SACA,SACA,OACA,QACA,OACA,SACA,SACA,OACA,UACA,OACA,SACA,OACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,OACA,QACA,UACA,SACA,SACA,MACA,QACA,QACA,OACA,QACA,UACA,SACA,SACA,QACA,UACA,WACA,SACA,WACA,OACA,QACA,QACA,OACA,WACA,SACA,UACA,WACA,SACA,SACA,MACF,CAAC,EAEYC,OAAa,IAAI,CAC5B,OACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,QACA,OACA,UACA,SACA,WACA,UACA,QACA,WACA,SACA,WACA,SACA,UACA,WACA,UACA,SACA,OACA,SACA,WACA,WACA,SACA,MACA,WACA,QACA,QACA,WACA,WACA,WACA,SACA,SACA,SACA,UACA,WACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,MACA,SACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,UACA,SACA,WACA,SACA,UACA,WACA,SACA,UACA,OACA,UACF,CAAC,EAEYC,OAAgC,IAAI,CAC/C,MACA,MACA,MACA,MACA,MACA,MACA,KACF,CAAC,EAEYC,OAAiC,IAAI,CAChD,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACF,CAAC,EAEYC,OAAqB,IAAI,CACpC,QACA,WACA,WACA,OACA,SACA,UACA,SACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,QACA,UACA,UACA,UACA,WACA,SACA,OACA,UACF,CAAC,EAEYC,OAAqB,IAAI,CACpkC,CAC7C,CAAC,MAAO,CAAC,EACT,CAAC,MAAO,CAAC,EACT,CAAC,QAAS,CAAC,EACX,CAAC,OAAQ,CAAC,EACV,CAAC,OAAQ,CAAC,EACV,CAAC,MAAO,CAAC,EACT,CAAC,QAAS,CAAC,EACX,CAAC,QAAS,CAAC,EACX,CAAC,OAAQ,CAAC,CACZ,EAEaC,GAAkC,CAC7C,CAAC,SAAU,EAAE,EACb,CAAC,SAAU,EAAE,EACb,CAAC,QAAS,EAAE,EACZ,CAAC,QAAS,EAAE,EACZ,CAAC,QAAS,EAAE,EACZ,CAAC,UAAW,EAAE,EACd,CAAC,SAAU,EAAE,EACb,CAAC,SAAU,EAAE,CACf,EAEaC,GAAyC,CACpD,CAAC,OAAQ,CAAC,EACV,CAAC,MAAO,EAAE,EACV,CAAC,SAAU,EAAE,EACb,CAAC,SAAU,EAAE,EACb,CAAC,WAAY,EAAE,EACf,CAAC,WAAY,EAAE,EACf,CAAC,UAAW,EAAE,EACd,CAAC,UAAW,EAAE,EACd,CAAC,YAAa,EAAE,EAChB,CAAC,WAAY,EAAE,EACf,CAAC,WAAY,EAAE,EAEf,CAAC,UAAW,GAAG,EACf,CAAC,WAAY,GAAI,EACjB,CAAC,UAAW,GAAO,EACnB,CAAC,UAAW,GAAU,EACtB,CAAC,WAAY,IAAa,CAC5B,EAEaC,OAAc,IAAI,CAC7B,OACA,WACA,OACA,UACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,WACA,QACA,UACA,OACA,WACA,SACA,MACA,UACA,SACA,SACA,SACA,MACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,WACA,WACA,QACA,UACA,OACA,UACA,SACA,OACA,UACA,QACA,SACA,WACA,WACA,WACA,KACA,UACA,UACA,SACA,OACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,QACA,QACA,WACA,UACA,OACA,UACA,UACA,WACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,MACA,OACA,MACA,OACA,UACA,UACA,OACA,WACA,SACA,UACA,SACA,UACA,SACA,MACA,SACA,OACA,UACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,MACA,UACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,OACA,KACA,SACA,MACA,WACA,SACA,QACA,MACA,SACA,QACA,UACA,SACA,QACA,UACA,WACA,MACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,OACA,SACA,MACA,QACA,OACA,SACA,OACA,SACA,UACA,SACA,SACA,UACA,SACA,KACA,KACA,QACA,UACA,SACA,QACA,OACA,WACA,WACA,OACA,UACA,UACA,SACA,SACA,QACA,SACA,UACA,WACA,SACA,WACA,UACA,SACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,QACA,QACA,UACA,QACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,OACA,UACA,SACA,SACA,SACA,UACA,WACA,SACA,OACA,UACA,OACA,SACA,OACA,UACA,UACA,UACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,WACA,SACA,OACA,UACA,UACA,SACA,QACA,OACA,UACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,MACA,QACA,UACA,OACA,WACA,UACA,UACA,SACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,UACA,WACA,WACA,SACA,OACA,OACA,QACA,SACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,WACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,QACA,QACA,UACA,MACA,UACA,SACA,SACA,UACA,WACA,UACA,UACA,QACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,UACA,UACA,WACA,SACA,OACA,OACA,UACA,QACA,WACA,OACA,SACA,QACA,UACA,WACA,QACA,OACA,SACA,UACA,WACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,SACA,QACA,QACA,WACA,WACA,WACA,QACA,UACA,QACA,SACA,WACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,UACA,UACA,WACA,UACA,OACA,OACA,UACA,WACA,MACA,QACA,QACA,MACA,UACA,WACA,SACA,QACA,SACA,OACA,QACA,UACA,SACA,QACA,SACA,QACA,OACA,UACA,SACA,UACA,UACF,CAAC,EAEYC,OAAyB,IAAI,CACxC,UACA,SACA,WACA,SACA,SACA,QACA,QACA,UACA,QACA,WACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,WACA,QACF,CAAC,EAEYC,OAA6B,IAAI,CAC5C,OACA,UACA,UACA,MACA,WACA,UACA,UACA,WACA,UACA,UACA,WACA,QACA,WACA,UACA,SACA,UACA,QACA,WACA,WACA,SACA,WACA,WACA,UACA,SACA,UACA,UACA,SACA,QACA,WACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,WACA,UACA,QACA,SACA,UACF,CAAC,EAEYC,OAA4B,IAAI,CAC3C,UACA,WACA,WACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,WACA,OACA,WACA,SACA,OACA,SACA,SACA,QACA,UACA,WACA,UACA,WACA,QACF,CAAC,EAEYC,OAAkC,IAAI,CACjD,SACA,OACA,QACA,SACA,UACA,QACA,QACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,OACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,SACA,QACA,QACA,MACA,QACA,OACA,OACA,QACA,UACA,QACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,SACA,QACA,SACA,SACA,OACA,MACA,WACA,WACA,SACA,QACA,UACA,UACA,OACA,QACA,WACA,QACA,UACA,QACA,WACA,OACA,UACA,OACA,WACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,WACA,SACA,QACA,SACA,OACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,SACA,OACA,UACA,OACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,MACA,KACA,WACA,WACA,UACA,SACA,QACA,SACA,UACA,QACA,OACA,SACA,QACA,MACA,MACA,OACA,QACA,SACA,MACA,MACF,CAAC,EAEYC,OAAgB,IAAI,CAC/B,UACA,SACA,UACA,WACA,aACA,WACA,cACA,WACA,UACA,UACA,SACA,QACA,WACA,UACA,OACA,SACA,WACA,YACA,QACA,WACA,gBACA,WACA,YACA,cACA,WACA,UACA,WACA,SACA,eACA,YACA,YACA,UACA,gBACA,cACA,OACA,WACA,SACA,eACA,cACA,gBACA,cACA,YACA,QACA,OACA,UACA,WACA,aACA,eACA,YACA,SACF,CAAC,EAEYC,OAAa,IAAI,CAC5B,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,UACF,CAAC,EAEYC,OAAY,IAAI,CAC3B,SACA,QACA,SACA,QACA,UACA,UACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,SACA,SACA,WACA,MACA,WACA,QACA,QACA,SACA,UACA,QACA,UACA,UACA,QACA,QACA,SACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,UACA,OACA,UACA,SACA,QACA,MACA,WACA,WACA,MACA,MACA,WACA,SACA,QACA,SACA,YACA,WACA,QACA,UACA,UACA,QACA,WACA,MACA,WACA,YACA,SACA,SACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,OACA,SACA,SACA,WACA,QACA,WACA,QACA,WACA,QACA,OACA,UACA,WACA,QACA,SACA,QACA,OACA,SACA,MACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,QACA,UACA,YACA,OACA,YACA,QACA,OACA,SACA,UACA,OACA,QACA,SACA,SACA,MACA,QACA,YACA,UACA,QACA,UACA,SACA,UACA,OACA,QACA,WACA,WACA,WACA,MACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,MACA,OACF,CAAC,ECpoDKC,GAAa,WACbC,GAAa,UACbC,GAAW,QACXC,GAAoB,GACpBC,EAAc,CAClB,YACA,eACA,aACA,cACA,WACA,WACA,aACA,gBACA,WACA,aACA,gBACA,YACA,aACA,eACA,eACA,WACA,gBACA,eACA,aACF,EACMC,GAAUhB,GAAY,OAAOC,EAAW,EAAE,OAAOC,EAAkB,EAezE,SAASe,GAAczpB,EAAmC,SAClD,MAA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","x_google_ignoreList":[1]}